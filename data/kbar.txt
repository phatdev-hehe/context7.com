TITLE: Initializing KBarProvider in React
DESCRIPTION: Basic setup of the KBarProvider component to wrap the application

LANGUAGE: tsx
CODE:
// app.tsx
import { KBarProvider } from "kbar";

function MyApp() {
  return (
    <KBarProvider>
      // ...
    </KBarProvider>
  );
}

----------------------------------------

TITLE: Configuring kbar Actions
DESCRIPTION: Defining action objects for the command palette with shortcuts and keywords

LANGUAGE: tsx
CODE:
  const actions = [
    {
      id: "blog",
      name: "Blog",
      shortcut: ["b"],
      keywords: "writing words",
      perform: () => (window.location.pathname = "blog"),
    },
    {
      id: "contact",
      name: "Contact",
      shortcut: ["c"],
      keywords: "email",
      perform: () => (window.location.pathname = "contact"),
    },
  ]

  return (
    <KBarProvider actions={actions}>
      // ...
    </KBarProvider>
  );

----------------------------------------

TITLE: Setting up kbar UI Components
DESCRIPTION: Implementation of the core UI components including portal, positioner, animator, and search

LANGUAGE: tsx
CODE:
// app.tsx
import {
  KBarProvider,
  KBarPortal,
  KBarPositioner,
  KBarAnimator,
  KBarSearch,
  useMatches,
  NO_GROUP
} from "kbar";

// ...
  return (
    <KBarProvider actions={actions}>
      <KBarPortal> // Renders the content outside the root node
        <KBarPositioner> // Centers the content
          <KBarAnimator> // Handles the show/hide and height animations
            <KBarSearch /> // Search input
          </KBarAnimator>
        </KBarPositioner>
      </KBarPortal>
      <MyApp />
    </KBarProvider>;
  );
}

----------------------------------------

TITLE: Implementing kbar Results Rendering
DESCRIPTION: Creating a custom results renderer using useMatches hook and KBarResults component

LANGUAGE: tsx
CODE:
import {
  // ...
  KBarResults,
  useMatches,
  NO_GROUP,
} from "kbar";

// ...
// <KBarAnimator>
//   <KBarSearch />
<RenderResults />;
// ...

function RenderResults() {
  const { results } = useMatches();

  return (
    <KBarResults
      items={results}
      onRender={({ item, active }) =>
        typeof item === "string" ? (
          <div>{item}</div>
        ) : (
          <div
            style={{
              background: active ? "#eee" : "transparent",
            }}
          >
            {item.name}
          </div>
        )
      }
    />
  );
}

----------------------------------------

TITLE: Installing kbar Package
DESCRIPTION: NPM installation command for adding kbar to a project

LANGUAGE: bash
CODE:
npm install kbar