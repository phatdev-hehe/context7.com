TITLE: PlatformIO Configuration for Patch Application
DESCRIPTION: PlatformIO project configuration file specifying the build environment and pre-build script.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
board = uno
framework = arduino
extra_scripts = pre:apply_patches.py

----------------------------------------

TITLE: Customizing Board Options in PlatformIO INI Configuration
DESCRIPTION: This snippet demonstrates how to override default board options in a PlatformIO project configuration file. It includes examples for customizing CPU frequency, flash settings, and program size limits.

LANGUAGE: ini
CODE:
[env:custom_board_options]
; Custom CPU Frequency
board_build.f_cpu = 160000000L

; Custom FLASH Frequency
board_build.f_flash = 80000000L

; Custom FLASH Mode
board_build.flash_mode = qio

; Custom linker script
board_build.ldscript = /path/to/ldscript.ld

; Custom maximum program size
board_upload.maximum_size = 1310720

----------------------------------------

TITLE: Enabling MISRA checks in PlatformIO project
DESCRIPTION: This configuration snippet shows how to enable MISRA checks in a PlatformIO project by specifying the MISRA addon JSON file in the check_flags option.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = cppcheck
check_flags =
  cppcheck: --addon=misra.json

----------------------------------------

TITLE: Creating Command Shortcut Targets
DESCRIPTION: Example showing how to create custom command shortcut targets that execute system commands or multiple actions.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
...
extra_scripts = extra_script.py

LANGUAGE: python
CODE:
Import("env")

# Single action/command per 1 target
env.AddCustomTarget("sysenv", None, 'python -c "import os; print(os.environ)"')

# Multiple actions
env.AddCustomTarget(
    name="pioenv",
    dependencies=None,
    actions=[
        "pio --version",
        "python --version"
    ],
    title="Core Env",
    description="Show PlatformIO Core and Python versions"
)

----------------------------------------

TITLE: Running Package Commands with PIO CLI
DESCRIPTION: Examples of using the new package exec command to run tools like JLink, esptool, and avr-objdump.

LANGUAGE: bash
CODE:
pio pkg exec --package=tool-jlink -- JLinkGDBServer -singlerun -if JTAG -select USB -jtagconf -1,-1 -device EFR32BG22CxxxF512 -port 2331

pio pkg exec -- esptool.py erase_flash

pio pkg exec -- avr-objdump -d -m avr2 .pio/build/uno/firmware.elf

----------------------------------------

TITLE: ESP32 BLE Example
DESCRIPTION: Implementation of a BLE server on ESP32 that creates a characteristic with read/write properties and handles value changes

LANGUAGE: cpp
CODE:
#include <Arduino.h>
#include <BLEDevice.h>
#include <BLEUtils.h>
#include <BLEServer.h>

#define SERVICE_UUID        "4fafc201-1fb5-459e-8fcc-c5c9c331914b"
#define CHARACTERISTIC_UUID "beb5483e-36e1-4688-b7f5-ea07361b26a8"

class MyCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *pCharacteristic) {
      std::string value = pCharacteristic->getValue();
      if (value.length() > 0) {
        Serial.print("\r\nNew value: ");
        for (int i = 0; i < value.length(); i++)
          Serial.print(value[i]);
        Serial.println();
      }
    }
};

void setup() {
  Serial.begin(9600);

  BLEDevice::init("ESP32 BLE example");
  BLEServer *pServer = BLEDevice::createServer();
  BLEService *pService = pServer->createService(SERVICE_UUID);
  BLECharacteristic *pCharacteristic = pService->createCharacteristic(
                                         CHARACTERISTIC_UUID,
                                         BLECharacteristic::PROPERTY_READ |
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  pCharacteristic->setCallbacks(new MyCallbacks());

  pCharacteristic->setValue("Hello World");
  pService->start();

  BLEAdvertising *pAdvertising = pServer->getAdvertising();
  pAdvertising->start();
}

void loop() {
  delay(2000);
}

----------------------------------------

TITLE: Configuring Proxy Settings for PlatformIO Core in Bash
DESCRIPTION: This snippet demonstrates how to set up proxy configurations for PlatformIO Core using environment variables. It includes examples for disabling proxy server certificate verification and setting up various types of proxy servers.

LANGUAGE: bash
CODE:
# Disable proxy server certificate verification
$ pio settings set enable_proxy_strict_ssl false

# or using global environment variable
$ export PLATFORMIO_SETTING_ENABLE_PROXY_STRICT_SSL="false"

#
# Configure proxy server
#

# Unix
$ export HTTP_PROXY="HTTP_PROXY=http://user:pass@10.10.1.10:3128/"
# without authentication
$ export HTTPS_PROXY="http://10.10.1.10:1080"
$ export ALL_PROXY="socks5://10.10.1.10:3434"

# Windows
set HTTP_PROXY=http://user:pass@10.10.1.10:3128/

----------------------------------------

TITLE: Setting PlatformIO Configuration with 'pio settings set'
DESCRIPTION: This command sets a new value for a specified PlatformIO setting. It requires the setting name and the new value as arguments.

LANGUAGE: bash
CODE:
pio settings set NAME VALUE

----------------------------------------

TITLE: Declaring Common and Specific Dependencies in PlatformIO Configuration
DESCRIPTION: This snippet demonstrates how to declare common dependencies for all environments and specific dependencies for named environments in a PlatformIO project configuration file. It shows the use of interpolation to merge common and custom dependencies.

LANGUAGE: ini
CODE:
; Common dependencies declared in the common "[env]" section
[env]
platform = ...
board = ...
framework = ...
lib_deps =
  dep_1
  dep_2

[env:release]
build_flags = -D RELEASE=1

; Specific dependencies that extend the common dependencies
[env:debug]
lib_deps =
  ${env.lib_deps}
  dep_3

----------------------------------------

TITLE: Configuring Data Directory in PlatformIO INI File
DESCRIPTION: Specifies the 'data_dir' option in a PlatformIO configuration file. This option sets the directory for storing project data and is used for filesystem uploads on Espressif platforms. The default value is 'data' in the project root, but can be customized or set via the PLATFORMIO_DATA_DIR environment variable.

LANGUAGE: ini
CODE:
data_dir = <Project>/data

----------------------------------------

TITLE: Basic PlatformIO Check Command Usage
DESCRIPTION: The basic syntax for running the PlatformIO check command with optional parameters. The command performs static analysis on project source files using Cppcheck by default.

LANGUAGE: bash
CODE:
pio check [OPTIONS]

----------------------------------------

TITLE: Basic PIO Package Install Usage
DESCRIPTION: Shows the basic command syntax for installing PlatformIO packages.

LANGUAGE: bash
CODE:
pio pkg install [OPTIONS]

----------------------------------------

TITLE: Initializing PlatformIO Project for Multiple Boards
DESCRIPTION: Command to initialize a new PlatformIO project for Arduino Uno, NodeMCU v2, and Teensy 3.1 boards. This sets up the project structure and configuration file.

LANGUAGE: bash
CODE:
pio project init --board uno --board nodemcuv2 --board teensy31

----------------------------------------

TITLE: Structuring Library Files for PlatformIO
DESCRIPTION: Demonstrates the recommended file structure for a PlatformIO library, including examples, include, and src folders, along with the library.json manifest file.

LANGUAGE: plaintext
CODE:
├── examples
│   └── echo
├── include
│   └── HelloWorld.h
├── library.json
└── src
    └── HelloWorld.cpp

----------------------------------------

TITLE: Running PlatformIO Test Command
DESCRIPTION: Basic usage of the 'pio test' command for running unit tests in PlatformIO projects. This command executes project tests on the local machine using PlatformIO's unit testing framework.

LANGUAGE: bash
CODE:
pio test [OPTIONS]

----------------------------------------

TITLE: PlatformIO CI Exclude Path Example
DESCRIPTION: Demonstrates how to exclude specific directories and files from the build process using the --exclude option. Shows excluding an examples directory and .h files from a foo folder.

LANGUAGE: bash
CODE:
pio ci --exclude=src/examples --exclude=src/foo/*.h [SRC]

----------------------------------------

TITLE: Configuring GitHub Actions Workflow for PlatformIO using pio run
DESCRIPTION: This YAML configuration sets up a GitHub Actions workflow to build a PlatformIO project using the 'pio run' command. It includes steps for checking out the code, caching dependencies, setting up Python, installing PlatformIO Core, and running the build.

LANGUAGE: yaml
CODE:
name: PlatformIO CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build PlatformIO Project
        run: pio run

----------------------------------------

TITLE: Basic Arduino Serial Output Program
DESCRIPTION: Simple Arduino program that prints 'Hello world!' to serial monitor every second

LANGUAGE: cpp
CODE:
#include <Arduino.h>

void setup()
{
    Serial.begin(9600);
}

void loop()
{
    Serial.println("Hello world!");
    delay(1000);
}

----------------------------------------

TITLE: Defining Platform Manifest in JSON
DESCRIPTION: Example of a platform.json manifest file for a custom PlatformIO development platform. It defines platform metadata, dependencies, and package requirements.

LANGUAGE: json
CODE:
{
  "name": "myplatform",
  "title": "My Platform",
  "description": "My custom development platform",
  "homepage": "https://mycompany.com",
  "license": "Apache-2.0",
  "keywords": ["keyword_1", "keyword_N"],
  "repository": {
    "type": "git",
    "url": "https://github.com/platformio/platform-myplatform.git"
  },
  "version": "0.0.0",
  "frameworks": {
    "%FRAMEWORK_NAME_1%": {
      "package": "framework-%FRAMEWORK_NAME_1%",
      "script": "builder/frameworks/%FRAMEWORK_NAME_1%.py"
    },
    "%FRAMEWORK_NAME_N%": {
      "package": "framework-%FRAMEWORK_NAME_N%",
      "script": "builder/frameworks/%FRAMEWORK_NAME_N%.py"
    }
  },
  "packages": {
    "toolchain-gccarmnoneeabi": {
      "type": "toolchain",
      "owner": "platformio",
      "version": ">=1.40803.0,<1.40805.0"
    },
    "framework-%FRAMEWORK_NAME_1%": {
      "type": "framework",
      "optional": true,
      "version": "~1.10607.0"
    },
    "framework-%FRAMEWORK_NAME_N%": {
      "type": "framework",
      "optional": true,
      "version": "~1.117.0"
    },
    "tool-direct-vcs-url": {
      "type": "uploader",
      "optional": true,
      "version": "https://github.com/user/repo.git"
    }
  }
}

----------------------------------------

TITLE: Configuring Debug Options in platformio.ini
DESCRIPTION: Debug options can be configured in the project's platformio.ini file

LANGUAGE: INI
CODE:
[env:myenv]
debug_tool = jlink
debug_init_break = tbreak setup

----------------------------------------

TITLE: Configuring PlatformIO for Nordic nRF52-DK Debugging
DESCRIPTION: PlatformIO configuration in platformio.ini to set up the project for the Nordic nRF52-DK board, using the Arduino framework and enabling JLink debugging.

LANGUAGE: ini
CODE:
[env:nrf52_dk]
platform = nordicnrf52
board = nrf52_dk
framework = arduino
debug_tool = jlink

----------------------------------------

TITLE: Implementing Pre and Post Actions in Python
DESCRIPTION: This Python script demonstrates various ways to add pre and post actions to the PlatformIO build process. It includes examples for adding actions to program building, uploading, and specific file operations.

LANGUAGE: python
CODE:
Import("env")

print("Current CLI targets", COMMAND_LINE_TARGETS)
print("Current Build targets", BUILD_TARGETS)

def post_program_action(source, target, env):
    print("Program has been built!")
    program_path = target[0].get_abspath()
    print("Program path", program_path)
    # Use case: sign a firmware, do any manipulations with ELF, etc
    # env.Execute(f"sign --elf {program_path}")

env.AddPostAction("$PROGPATH", post_program_action)

#
# Upload actions
#

def before_upload(source, target, env):
    print("before_upload")
    # do some actions

    # call Node.JS or other script
    env.Execute("node --version")


def after_upload(source, target, env):
    print("after_upload")
    # do some actions

env.AddPreAction("upload", before_upload)
env.AddPostAction("upload", after_upload)

#
# Custom actions when building program/firmware
#

env.AddPreAction("buildprog", callback...)
env.AddPostAction("buildprog", callback...)

#
# Custom actions for specific files/objects
#

env.AddPreAction("$PROGPATH", callback...)
env.AddPreAction("$BUILD_DIR/${PROGNAME}.elf", [callback1, callback2,...])
env.AddPostAction("$BUILD_DIR/${PROGNAME}.hex", callback...)

# custom action before building SPIFFS image. For example, compress HTML, etc.
env.AddPreAction("$BUILD_DIR/spiffs.bin", callback...)

# custom action for project's main.cpp
env.AddPostAction("$BUILD_DIR/src/main.cpp.o", callback...)

# Custom HEX from ELF
env.AddPostAction(
    "$BUILD_DIR/${PROGNAME}.elf",
    env.VerboseAction(" ".join([
        "$OBJCOPY", "-O", "ihex", "-R", ".eeprom",
        "$BUILD_DIR/${PROGNAME}.elf", "$BUILD_DIR/${PROGNAME}.hex"
    ]), "Building $BUILD_DIR/${PROGNAME}.hex")
)

----------------------------------------

TITLE: Implementing Blink Example in Arduino Framework
DESCRIPTION: Source code for a simple "Blink" example using the Arduino framework. This code toggles the built-in LED on and off with a one-second interval.

LANGUAGE: cpp
CODE:
/**
 * Blink
 *
 * Turns on an LED on for one second,
 * then off for one second, repeatedly.
 */
#include "Arduino.h"

#ifndef LED_BUILTIN
#define LED_BUILTIN 13
#endif

void setup()
{
  // initialize LED digital pin as an output.
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop()
{
  // turn the LED on (HIGH is the voltage level)
  digitalWrite(LED_BUILTIN, HIGH);

  // wait for a second
  delay(1000);

  // turn the LED off by making the voltage LOW
  digitalWrite(LED_BUILTIN, LOW);

   // wait for a second
  delay(1000);
}

----------------------------------------

TITLE: Processing Specific Environments with pio run
DESCRIPTION: Example of running the 'pio run' command for specific environments (nodemcu and teensy31). This demonstrates how to selectively process certain environments in a project.

LANGUAGE: bash
CODE:
> pio run -e nodemcu -e teensy31

----------------------------------------

TITLE: Listing Boards with PlatformIO CLI
DESCRIPTION: Basic usage of the 'pio boards' command to list all available pre-configured embedded boards. This command displays board information including ID, MCU, frequency, flash size, RAM size, and name.

LANGUAGE: bash
CODE:
pio boards

----------------------------------------

TITLE: Defining Custom Board Configuration in PlatformIO JSON
DESCRIPTION: Example JSON structure for defining a custom board in PlatformIO. Includes build settings, framework compatibility, platform specifications, and upload parameters. The configuration allows for custom MCU settings, clock speeds, and hardware identifiers.

LANGUAGE: json
CODE:
{
  "build": {
    "extra_flags": "-DHELLO_PLATFORMIO",
    "f_cpu": "16000000L",
    "hwids": [
      [
        "0x1234",
        "0x0013"
      ],
      [
        "0x4567",
        "0x0013"
      ]
    ],
    "mcu": "%MCU_TYPE_HERE%"
  },
  "frameworks": ["%LIST_WITH_SUPPORTED_FRAMEWORKS%"],
  "platforms": ["%LIST_WITH_COMPATIBLE_PLATFORMS%"],
  "name": "My Test Board",
  "upload": {
    "maximum_ram_size": 2048,
    "maximum_size": 32256
  },
  "url": "http://example.com",
  "vendor": "MyCompany"
}

----------------------------------------

TITLE: Setting debug_test Option in PlatformIO Configuration
DESCRIPTION: This snippet demonstrates how to set the 'debug_test' option in a PlatformIO project's configuration file (platformio.ini). It specifies a named test 'test_calculator' to be debugged.

LANGUAGE: ini
CODE:
[env:debug_a_test]
...

debug_test = test_calculator

----------------------------------------

TITLE: Retrieving PlatformIO Settings with 'pio settings get'
DESCRIPTION: This command retrieves existing PlatformIO settings. It can list all settings or show a specific setting's value and description.

LANGUAGE: bash
CODE:
pio settings get [NAME]

----------------------------------------

TITLE: Configuring Project Dependencies in INI
DESCRIPTION: Examples of bad and good practices for declaring project dependencies in platformio.ini, showing proper semantic versioning and package specification syntax.

LANGUAGE: ini
CODE:
[env:myenv]
platform = platformio/espressif32

lib_deps =
  OneWire
  me-no-dev/AsyncTCP
  https://github.com/username/HelloWorld.git

LANGUAGE: ini
CODE:
[env:myenv]
platform = platformio/espressif32 @ ^4

lib_deps =
  bblanchon/ArduinoJson @ ^6.19.4
  me-no-dev/AsyncTCP @ 1.1.1
  https://github.com/username/HelloWorld.git#v2.13

----------------------------------------

TITLE: Advanced Dependencies Configuration in PlatformIO Library Manifest (JavaScript)
DESCRIPTION: This snippet shows a more advanced configuration for library dependencies in the PlatformIO library.json manifest. It uses an array of objects to provide detailed specifications for each dependency, including owner, name, version, and platform restrictions.

LANGUAGE: javascript
CODE:
"dependencies":
[
    {
        "owner": "bblanchon",
        "name": "ArduinoJson",
        "version": "^6.16.1"
    },
    {
        "owner": "me-no-dev",
        "name": "AsyncTCP",
        "version": "*",
        "platforms": ["espressif32"]
    },
    {
        "name": "external-repo",
        "version": "https://github.com/user/package.git#1.2.3"
    },
    {
        "name": "external-zip",
        "version": "https://github.com/me-no-dev/AsyncTCP/archive/master.zip"
    }
]

----------------------------------------

TITLE: Bad Practices for Declaring Dependencies in PlatformIO
DESCRIPTION: This snippet showcases practices to avoid when declaring dependencies in a PlatformIO project. It includes examples of omitting package owners, depending on unspecified versions, and using development branches, which can lead to conflicts and instability.

LANGUAGE: ini
CODE:
[env:myenv]
lib_deps =
  ; Omit library package owner (<owner>/<name>) and depend on the library by name.
  ; Lead to the conflicts when there are multiple libraries with the same name
  OneWire

  ; Depend on ANY/Latest version of the development platform
  ; allowing breaking changes
  me-no-dev/AsyncTCP

  ; Depend on the development branch of the Git repository,
  ; allow breaking changes, and untested commits
  https://github.com/username/HelloWorld.git

----------------------------------------

TITLE: Python Pre-build Patch Application Script
DESCRIPTION: Python script that applies patches to framework files before the build process, including checks to prevent duplicate patching.

LANGUAGE: python
CODE:
from os.path import join, isfile

Import("env")

FRAMEWORK_DIR = env.PioPlatform().get_package_dir("framework-arduinoavr")
patchflag_path = join(FRAMEWORK_DIR, ".patching-done")

# patch file only if we didn't do it before
if not isfile(join(FRAMEWORK_DIR, ".patching-done")):
    original_file = join(FRAMEWORK_DIR, "variants", "standard", "pins_arduino.h")
    patched_file = join("patches", "1-framework-arduinoavr-add-pin-a8.patch")

    assert isfile(original_file) and isfile(patched_file)

    env.Execute("patch %s %s" % (original_file, patched_file))
    # env.Execute("touch " + patchflag_path)


    def _touch(path):
        with open(path, "w") as fp:
            fp.write("")

    env.Execute(lambda *args, **kwargs: _touch(patchflag_path))

----------------------------------------

TITLE: Configuring PlatformIO for ESP32 Development in INI
DESCRIPTION: This INI configuration sets up the PlatformIO environment for ESP32 development using the ESP-IDF framework. It specifies the board, framework, monitor speed, and debug tool.

LANGUAGE: INI
CODE:
[env:esp32dev]
platform = espressif32
board = esp32dev
framework = espidf
monitor_speed = 115200
debug_tool = olimex-arm-usb-ocd-h

----------------------------------------

TITLE: Configuring PlatformIO Project for NodeMCU and STM32 in INI
DESCRIPTION: This snippet demonstrates a comprehensive platformio.ini configuration for a project targeting both NodeMCU (ESP8266) and STM32 platforms. It includes common build flags, library dependencies, and environment-specific settings for each target.

LANGUAGE: ini
CODE:
[platformio]
default_envs = nodemcuv2

; custom common options
[common]
build_flags =
    -D VERSION=1.2.3
    -D DEBUG=1
lib_deps_builtin =
    SPI
    Wire
lib_deps_external =
    bblanchon/ArduinoJson @ ~5.6,!=5.4
    https://github.com/gioblu/PJON.git#v2.0
    IRremoteESP8266=https://github.com/markszabo/IRremoteESP8266/archive/master.zip

[env:nodemcuv2]
platform = espressif8266
framework = arduino
board = nodemcuv2

; Build options
build_flags =
    ${common.build_flags}
    -DSSID_NAME=HELLO
    -DSSID_PASWORD=WORLD

; Library options
lib_deps =
    ${common.lib_deps_builtin}
    ${common.lib_deps_external}
    https://github.com/me-no-dev/ESPAsyncTCP.git
    knolleary/PubSubClient@^2.8
    paulstoffregen/OneWire

; Serial Monitor options
monitor_speed = 115200
monitor_flags =
    --encoding
    hexlify

; Unit Testing options
test_ignore = test_desktop

[env:bluepill_f103c8]
platform = ststm32
framework = arduino
board = bluepill_f103c8

; Library options
lib_deps = ${common.lib_deps_external}

; Debug options
debug_tool = custom
debug_server =
    ${platformio.packages_dir}/tool-jlink/JLinkGDBServer
    -singlerun
    -if
    SWD
    -select
    USB
    -port
    2331
    -device
    STM32F103C8

; Unit Testing options
test_ignore = test_desktop

----------------------------------------

TITLE: Configuring PlatformIO Project for Multiple Boards
DESCRIPTION: Example platformio.ini configuration file for a project targeting Arduino Uno, NodeMCU v2, and Teensy 3.1 boards. Specifies the platform, framework, and board for each environment.

LANGUAGE: ini
CODE:
; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/en/latest/projectconf/index.html

[env:uno]
platform = atmelavr
framework = arduino
board = uno

[env:nodemcuv2]
platform = espressif8266
framework = arduino
board = nodemcuv2

[env:teensy31]
platform = teensy
framework = arduino
board = teensy31

----------------------------------------

TITLE: Configuring Clang-Tidy with Custom Checks and Fix Option
DESCRIPTION: Advanced configuration for Clang-Tidy, enabling specific check groups and the automatic fix option.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = clangtidy
check_flags =
  clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix

----------------------------------------

TITLE: Configuring Extra Scripts in PlatformIO INI
DESCRIPTION: Example configuration showing how to specify PRE and POST script execution in platformio.ini environment settings. Demonstrates default POST behavior and explicit launch type prefixes.

LANGUAGE: ini
CODE:
[env:my_env_1]
platform = ...
; Defaults to POST script since no prefix is used
extra_scripts = post_extra_script.py

[env:my_env_2]
platform = ...
extra_scripts =
  pre:pre_extra_script.py
  post:post_extra_script1.py
  post_extra_script2.py

----------------------------------------

TITLE: Configuring GitLab CI for PlatformIO Library Projects
DESCRIPTION: This YAML configuration sets up a GitLab CI pipeline for PlatformIO library projects. It uses a Python 3.11 image, caches dependencies, and runs the 'pio ci' command with specified boards and source files.

LANGUAGE: yaml
CODE:
image: python:3.11

variables:  
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PLATFORMIO_CACHE_DIR: "$CI_PROJECT_DIR/.cache/platformio"

cache:
  paths:
    - .cache/pip
    - .cache/platformio

stages:
 - test

before_script:
  - "pip install -U platformio"

job:
  stage: test
  script: "pio ci --board=<ID_1> --board=<ID_2> --board=<ID_N>"
  variables: {PLATFORMIO_CI_SRC: "path/to/test/file.c"}

----------------------------------------

TITLE: Configuring Static Analysis with Cppcheck in PlatformIO
DESCRIPTION: Example configuration for enabling Cppcheck static analysis tool in a PlatformIO project environment. Shows how to specify the analysis tool and its version using platform packages.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = cppcheck
platform_packages = tool-cppcheck@1.260.0

----------------------------------------

TITLE: Implementing Wi-Fi SoftAP in C for ESP32
DESCRIPTION: This code snippet demonstrates how to set up a Wi-Fi SoftAP (Access Point) using the ESP-IDF framework. It initializes the Wi-Fi system, configures the AP settings, and handles connection events.

LANGUAGE: C
CODE:
#include <string.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_mac.h"
#include "esp_wifi.h"
#include "esp_event.h"
#include "esp_log.h"
#include "nvs_flash.h"

#include "lwip/err.h"
#include "lwip/sys.h"

#define EXAMPLE_ESP_WIFI_SSID      "mywifissid"
#define EXAMPLE_ESP_WIFI_PASS      "mywifipass"
#define EXAMPLE_ESP_WIFI_CHANNEL   1
#define EXAMPLE_MAX_STA_CONN       4

static const char *TAG = "wifi softAP";

static void wifi_event_handler(void* arg, esp_event_base_t event_base,
                                    int32_t event_id, void* event_data)
{
    if (event_id == WIFI_EVENT_AP_STACONNECTED) {
        wifi_event_ap_staconnected_t* event = (wifi_event_ap_staconnected_t*) event_data;
        ESP_LOGI(TAG, "station "MACSTR" join, AID=%d",
                 MAC2STR(event->mac), event->aid);
    } else if (event_id == WIFI_EVENT_AP_STADISCONNECTED) {
        wifi_event_ap_stadisconnected_t* event = (wifi_event_ap_stadisconnected_t*) event_data;
        ESP_LOGI(TAG, "station "MACSTR" leave, AID=%d",
                 MAC2STR(event->mac), event->aid);
    }
}

void wifi_init_softap(void)
{
    ESP_ERROR_CHECK(esp_netif_init());
    ESP_ERROR_CHECK(esp_event_loop_create_default());
    esp_netif_create_default_wifi_ap();

    wifi_init_config_t cfg = WIFI_INIT_CONFIG_DEFAULT();
    ESP_ERROR_CHECK(esp_wifi_init(&cfg));

    ESP_ERROR_CHECK(esp_event_handler_instance_register(WIFI_EVENT,
                                                        ESP_EVENT_ANY_ID,
                                                        &wifi_event_handler,
                                                        NULL,
                                                        NULL));

    wifi_config_t wifi_config = {
        .ap = {
            .ssid = EXAMPLE_ESP_WIFI_SSID,
            .ssid_len = strlen(EXAMPLE_ESP_WIFI_SSID),
            .channel = EXAMPLE_ESP_WIFI_CHANNEL,
            .password = EXAMPLE_ESP_WIFI_PASS,
            .max_connection = EXAMPLE_MAX_STA_CONN,
            .authmode = WIFI_AUTH_WPA_WPA2_PSK,
            .pmf_cfg = {
                    .required = false,
            },
        },
    };
    if (strlen(EXAMPLE_ESP_WIFI_PASS) == 0) {
        wifi_config.ap.authmode = WIFI_AUTH_OPEN;
    }

    ESP_ERROR_CHECK(esp_wifi_set_mode(WIFI_MODE_AP));
    ESP_ERROR_CHECK(esp_wifi_set_config(WIFI_IF_AP, &wifi_config));
    ESP_ERROR_CHECK(esp_wifi_start());

    ESP_LOGI(TAG, "wifi_init_softap finished. SSID:%s password:%s channel:%d",
             EXAMPLE_ESP_WIFI_SSID, EXAMPLE_ESP_WIFI_PASS, EXAMPLE_ESP_WIFI_CHANNEL);
}

void app_main(void)
{
    //Initialize NVS
    esp_err_t ret = nvs_flash_init();
    if (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND) {
      ESP_ERROR_CHECK(nvs_flash_erase());
      ret = nvs_flash_init();
    }
    ESP_ERROR_CHECK(ret);

    ESP_LOGI(TAG, "ESP_WIFI_MODE_AP");
    wifi_init_softap();
}

----------------------------------------

TITLE: Basic Travis CI Configuration for PlatformIO Run Command
DESCRIPTION: This YAML configuration sets up a basic Travis CI build for a PlatformIO project using the 'pio run' command. It specifies the Python environment, caches PlatformIO packages, installs PlatformIO, and runs builds for multiple environments.

LANGUAGE: yaml
CODE:
language: python
python:
    - "3.11"

# Cache PlatformIO packages using Travis CI container-based infrastructure
sudo: false
cache:
    directories:
        - "~/.platformio"
        - $HOME/.cache/pip

install:
    - pip install -U platformio
    - pio update

script:
    - pio run -e <ID_1> -e <ID_2> -e <ID_N>

----------------------------------------

TITLE: Installing PlatformIO Development Version
DESCRIPTION: Command to install the latest development version of PlatformIO directly from the GitHub develop branch using pip.

LANGUAGE: bash
CODE:
python -m pip install -U https://github.com/platformio/platformio-core/archive/develop.zip

----------------------------------------

TITLE: Custom Build Script Implementation in Python
DESCRIPTION: Python script that customizes the build process by managing environment flags, source filters, and post-build actions for both library and project environments.

LANGUAGE: python
CODE:
Import('env')
from os.path import join, realpath

#
# Private flags (only for the current "SomeLib" source files)
#
for item in env.get("CPPDEFINES", []):
    if isinstance(item, tuple) and item[0] == "HAL":
        env.Append(CPPPATH=[realpath(join("hal", item[1]))])
        env.Replace(SRC_FILTER=["+<*>", "-<hal*>", "+<hal/%s>" % item[1]])
        break

#
# Pass flags to the other Project Dependencies (libraries)
#
for lb in env.GetLibBuilders():
    lb.env.Append(CPPDEFINES=[("TEST_LIBDEPS", 1)])
    if lb.name == "OneWire":
        lb.env.Append(CPPDEFINES=[("OW_PIN", 13)])


# Operate with the project environment (files located in the `src` folder)
Import("projenv")
# add (prepend) to the beginning of list
projenv.Prepend(CPPPATH=["some/path"])
# remove specified flags
projenv.ProcessUnFlags("-fno-rtti")

# Pass flags to the Global environment (project `src` files, frameworks)
global_env = DefaultEnvironment()
global_env.Append(CPPDEFINES=[("TEST_GLOBAL", 1)])

# Attach post action to the global environment

def post_program_action(source, target, env):
    print("Program has been built!")
    program_path = target[0].get_abspath()
    print("Program path", program_path)
    # Use case: sign a firmware, do any manipulations with ELF, etc
    # env.Execute(f"sign --elf {program_path}")

global_env.AddPostAction("$PROGPATH", post_program_action)

----------------------------------------

TITLE: Configuring Library Dependencies in PlatformIO INI File
DESCRIPTION: This snippet demonstrates various ways to specify library dependencies in a PlatformIO project configuration file. It includes examples of name-based, owner-based, SemVer-based, Git-based, and custom-named dependencies.

LANGUAGE: ini
CODE:
[env:myenv]
lib_deps =
  ; name-based (built-in library in framework)
  SPI

  ; owner-based declaration
  knolleary/PubSubClient

  ; SemVer specification
  bblanchon/ArduinoJson @ ~5.6,!=5.4

  ; external Git resource
  https://github.com/gioblu/PJON.git#v2.0

  ; custom name
  IRremoteESP8266=https://github.com/markszabo/IRremoteESP8266/archive/master.zip

----------------------------------------

TITLE: URL Access Configuration for PlatformIO Home
DESCRIPTION: Default URL configuration for accessing PlatformIO Home web interface when running through PlatformIO Core.

LANGUAGE: text
CODE:
http://127.0.0.1:8008

----------------------------------------

TITLE: Using the PlatformIO Upgrade Command in Bash
DESCRIPTION: This command checks for and upgrades PlatformIO Core to the latest version. It can be run with or without the '--dev' option to use the development branch.

LANGUAGE: bash
CODE:
pio upgrade

----------------------------------------

TITLE: Implementing Bluetooth Beacon in C with Zephyr
DESCRIPTION: Main application code implementing a Bluetooth beacon that broadcasts using the Eddystone protocol. Initializes Bluetooth subsystem and configures advertisement data.

LANGUAGE: c
CODE:
#include <zephyr/types.h>
#include <stddef.h>
#include <sys/printk.h>
#include <sys/util.h>

#include <bluetooth/bluetooth.h>
#include <bluetooth/hci.h>

#define DEVICE_NAME CONFIG_BT_DEVICE_NAME
#define DEVICE_NAME_LEN (sizeof(DEVICE_NAME) - 1)

static const struct bt_data ad[] = {
    BT_DATA_BYTES(BT_DATA_FLAGS, BT_LE_AD_NO_BREDR),
    BT_DATA_BYTES(BT_DATA_UUID16_ALL, 0xaa, 0xfe),
    BT_DATA_BYTES(BT_DATA_SVC_DATA16,
                  0xaa, 0xfe,
                  0x10,
                  0x00,
                  0x00,
                  'z', 'e', 'p', 'h', 'y', 'r',
                  'p', 'r', 'o', 'j', 'e', 'c', 't',
                  0x08)
};

static const struct bt_data sd[] = {
    BT_DATA(BT_DATA_NAME_COMPLETE, DEVICE_NAME, DEVICE_NAME_LEN),
};

static void bt_ready(int err)
{
  if (err)
  {
    printk("Bluetooth init failed (err %d)\n", err);
    return;
  }

  printk("Bluetooth initialized\n");

  err = bt_le_adv_start(BT_LE_ADV_NCONN, ad, ARRAY_SIZE(ad),
                        sd, ARRAY_SIZE(sd));
  if (err)
  {
    printk("Advertising failed to start (err %d)\n", err);
    return;
  }

  printk("Beacon started\n");
}

void main(void)
{
  int err;

  printk("Starting Beacon Demo\n");

  err = bt_enable(bt_ready);
  if (err)
  {
    printk("Bluetooth init failed (err %d)\n", err);
  }
}

----------------------------------------

TITLE: Makefile Wrapper for PlatformIO Commands in Vim
DESCRIPTION: Makefile that provides targets for common PlatformIO operations, including build, upload, clean, program, uploadfs, and update. This wrapper simplifies running PlatformIO commands from within Vim.

LANGUAGE: make
CODE:
# Uncomment lines below if you have problems with $PATH
#SHELL := /bin/bash
#PATH := /usr/local/bin:$(PATH)

all:
        pio -f -c vim run

upload:
        pio -f -c vim run --target upload

clean:
        pio -f -c vim run --target clean

program:
        pio -f -c vim run --target program

uploadfs:
        pio -f -c vim run --target uploadfs

update:
        pio -f -c vim update

----------------------------------------

TITLE: Adding Extra Build Script in PlatformIO Library Configuration
DESCRIPTION: This example demonstrates how to extend the PlatformIO Build System with a custom Python script for additional build tasks.

LANGUAGE: javascript
CODE:
"build": {
    "extraScript": "generate_headers.py"
}

----------------------------------------

TITLE: Example Output of PlatformIO Platform List Command
DESCRIPTION: This snippet shows an example of the output produced by the 'pio platform list' command. It displays information about installed platforms including Atmel AVR, Atmel SAM, and Espressif 8266, showing their descriptions, home URLs, associated packages, and versions.

LANGUAGE: text
CODE:
> pio platform list

atmelavr ~ Atmel AVR
====================
Atmel AVR 8- and 32-bit MCUs deliver a unique combination of performance, power efficiency and design flexibility. Optimized to speed time to market-and easily adapt to new ones-they are based on the industrys most code-efficient architecture for C and assembly programming.

Home: https://platformio.org/platforms/atmelavr
Packages: toolchain-atmelavr, framework-simba
Version: 0.0.0

atmelsam ~ Atmel SAM
====================
Atmel | SMART offers Flash- based ARM products based on the ARM Cortex-M0+, Cortex-M3 and Cortex-M4 architectures, ranging from 8KB to 2MB of Flash including a rich peripheral and feature mix.

Home: https://platformio.org/platforms/atmelsam
Packages: framework-arduinosam, framework-mbed, framework-simba, toolchain-gccarmnoneeabi, tool-bossac
Version: 0.0.0

espressif8266 ~ Espressif 8266
==============================
Espressif Systems is a privately held fabless semiconductor company. They provide wireless communications and Wi-Fi chips which are widely used in mobile devices and the Internet of Things applications.

Home: https://platformio.org/platforms/espressif8266
Packages: framework-simba, tool-esptool, framework-arduinoespressif8266, sdk-esp8266, toolchain-xtensa
Version: 0.0.0
...

----------------------------------------

TITLE: Travis CI Configuration with Custom Build Flags
DESCRIPTION: This YAML configuration shows how to specify custom build flags for PlatformIO in Travis CI using the PLATFORMIO_BUILD_FLAGS environment variable. It allows setting both global and test-specific build flags.

LANGUAGE: yaml
CODE:
env:
    - PLATFORMIO_CI_SRC=path/to/test/file.c PLATFORMIO_BUILD_FLAGS="-D SPECIFIC_MACROS_PER_TEST_ENV -I/extra/inc"
    - PLATFORMIO_CI_SRC=examples/file.ino
    - PLATFORMIO_CI_SRC=path/to/test/directory

install:
    - pip install -U platformio
    - export PLATFORMIO_BUILD_FLAGS="-D GLOBAL_MACROS_FOR_ALL_TEST_ENV"

----------------------------------------

TITLE: Using PlatformIO Built-in Library Command
DESCRIPTION: Command syntax for listing built-in libraries in PlatformIO. Supports options for specifying storage locations and JSON output format.

LANGUAGE: bash
CODE:
pio lib builtin [OPTIONS]

----------------------------------------

TITLE: Configuring OTA Updates for ESP8266 in PlatformIO
DESCRIPTION: Examples of configuring OTA updates using upload_protocol and upload_port options in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
platform = espressif8266
board = nodemcuv2
framework = arduino
upload_protocol = espota
upload_port = 192.168.0.255

----------------------------------------

TITLE: Configuring GitLab CI for Native PlatformIO Projects
DESCRIPTION: This YAML configuration sets up a GitLab CI pipeline for native PlatformIO projects. It uses a Python 3.11 image, caches dependencies, and runs the 'pio run' command for specified environments.

LANGUAGE: yaml
CODE:
image: python:3.11

variables:  
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PLATFORMIO_CACHE_DIR: "$CI_PROJECT_DIR/.cache/platformio"

cache:
  paths:
    - .cache/pip
    - .cache/platformio

stages:
 - test

before_script:
  - "pip install -U platformio"

job:
  stage: test
  script: "pio run -e <ID_1> -e <ID_2> -e <ID_N>"

----------------------------------------

TITLE: Implementing Custom Build Middlewares in Python
DESCRIPTION: Example implementations of build middlewares including HTTP configuration customization, file replacement, and assembly file exclusion patterns.

LANGUAGE: python
CODE:
Import("env")

# --- Add custom macros for the ALL files which name contains "http"
def extra_http_configuration(env, node):
    """
    `node.name` - a name of File System Node
    `node.get_path()` - a relative path
    `node.get_abspath()` - an absolute path
    """

    # do not modify node if file name does not contain "http"
    if "http" not in node.name:
        return node

    return env.Object(
        node,
        CPPDEFINES=env["CPPDEFINES"] + [("HTTP_HOST", "device.local"), ("HTTP_PORT", 8080)],
        CCFLAGS=env["CCFLAGS"] + ["-fno-builtin-printf"]
    )

env.AddBuildMiddleware(extra_http_configuration)

# --- Replace some file from a build process with another
def replace_node_with_another(env, node):
    return env.File("path/to/patched/RtosTimer.cpp")

env.AddBuildMiddleware(
    replace_node_with_another,
    "framework-mbed/rtos/RtosTimer.cpp"
)

# --- Skip assembly *.S files from build process
def skip_asm_from_build(env, node):
    # to ignore file from a build process, just return None
    return None

env.AddBuildMiddleware(skip_asm_from_build, "*.S")

----------------------------------------

TITLE: Demonstrating Interpolation in PlatformIO Configuration
DESCRIPTION: This snippet showcases the use of interpolation in a PlatformIO configuration file. It includes common options, custom options, and environment-specific configurations with various interpolation techniques.

LANGUAGE: ini
CODE:
; COMMON options
; Each "[env:***]" extends this "[env]" by default
[env]
framework = arduino
build_flags = -D VERSION=1.2.3

; CUSTOM options
; You need manually inject these options into a section
; using ${extra.<name_of_option>} (see below)
[extra]
lib_deps_builtin =
  SPI
  Wire
lib_deps_external =
  bblanchon/ArduinoJson@>5.6.0

[env:uno]
platform = atmelavr
board = uno
lib_deps =
  ${extra.lib_deps_builtin}
  ${extra.lib_deps_external}
platform_packages =
  platformio/tool-simavr
test_speed = 9600
test_testing_command =
  ${platformio.packages_dir}/tool-simavr/bin/simavr
  -m
  atmega328p
  -f
  16000000L
  ${platformio.build_dir}/${this.__env__}/firmware.elf

[env:esp32dev]
platform = platformio/espressif32
board = esp32dev
build_flags = ${env.build_flags} -Wall
lib_deps =
  ${extra.lib_deps_builtin}
  ${extra.lib_deps_external}
  knolleary/PubSubClient @ ~2.6
  paulstoffregen/OneWire @ ^2.3.5

; Keep sensitive data in environment variables
;
; Unix
; export WIFI_SSID='\"my\ ssid\ name\"'
; export WIFI_PASS='\"my\ password\"'
;
; Windows
; set WIFI_SSID='"my ssid name"'
; set WIFI_PASS='"my password"'

----------------------------------------

TITLE: Configuring Multiple Check Tools in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to specify multiple code analysis tools (cppcheck and clang-tidy) in a PlatformIO project configuration file. The check_tool option is used to list the desired tools.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = cppcheck, clangtidy

----------------------------------------

TITLE: Arduino LED Blink Unit Tests Implementation
DESCRIPTION: Unity framework-based unit tests for Arduino LED functionality, including pin validation and state testing with setup/teardown handlers.

LANGUAGE: cpp
CODE:
#include <Arduino.h>
#include <unity.h>

void setUp(void)
{
  // set stuff up here
}

void tearDown(void)
{
  // clean stuff up here
}

void test_led_builtin_pin_number(void)
{
  TEST_ASSERT_EQUAL(13, LED_BUILTIN);
}

void test_led_state_high(void)
{
  digitalWrite(LED_BUILTIN, HIGH);
  TEST_ASSERT_EQUAL(HIGH, digitalRead(LED_BUILTIN));
}

void test_led_state_low(void)
{
  digitalWrite(LED_BUILTIN, LOW);
  TEST_ASSERT_EQUAL(LOW, digitalRead(LED_BUILTIN));
}

void setup()
{
  // NOTE!!! Wait for >2 secs
  // if board doesn't support software reset via Serial.DTR/RTS
  delay(2000);

  pinMode(LED_BUILTIN, OUTPUT);

  UNITY_BEGIN(); // IMPORTANT LINE!
  RUN_TEST(test_led_builtin_pin_number);
}

uint8_t i = 0;
uint8_t max_blinks = 5;

void loop()
{
  if (i < max_blinks)
  {
    RUN_TEST(test_led_state_high);
    delay(500);
    RUN_TEST(test_led_state_low);
    delay(500);
    i++;
  }
  else if (i == max_blinks)
  {
    UNITY_END(); // stop unit testing
  }
}

----------------------------------------

TITLE: Configuring Development Platforms in PlatformIO INI Files
DESCRIPTION: These examples demonstrate different ways to specify the 'platform' option in a PlatformIO project configuration file. They show how to pin versions, allow for updates, use Git sources, and specify exact commits.

LANGUAGE: ini
CODE:
[env:recommended_specification]
; allow backwards-compatible new functionality and bug-fixes
platform = platformio/espressif32@^6.1.0

[env:allow_only_bug_fixes]
platform = platformio/espressif32@~6.1.0

[env:exact_version]
platform = platformio/espressif32@6.1.0

[env:latest_version]
; not recommended as it does not ensure that
; - builds are repeatable
; - all developers who checkout the project will build against the same platform version
platform = platformio/espressif32

[env:development_verion_by_git]
platform = https://github.com/platformio/platform-espressif32.git

[env:custom_git_branch]
platform = https://github.com/platformio/platform-espressif32.git#master

[env:specific_git_commit]
platform = https://github.com/platformio/platform-espressif32.git#f8340a2081a31c2ac8ed2b16907f2a21dc8897d4

----------------------------------------

TITLE: Search Trending Libraries Example
DESCRIPTION: Example showing how to search for trending libraries in the PlatformIO Registry with output format.

LANGUAGE: bash
CODE:
> pio pkg search "type:library" --sort trending

Found 12374 packages (page 1 of 1238)

adafruit/Adafruit Unified Sensor
Library • 1.1.5 • Published on Mon Mar  7 21:09:03 2022
Required for all Adafruit Unified Sensor based libraries. A unified sensor abstraction layer used by many Adafruit sensor libraries.

stm32duino/STM32duino FreeRTOS
Library • 10.3.1 • Published on Mon Feb 28 15:46:45 2022
Real Time Operating System implemented for STM32
...

----------------------------------------

TITLE: PlatformIO Library Statistics Command with JSON Output
DESCRIPTION: Demonstrates how to use the 'pio lib stats' command with the --json-output option to return the output in JSON format.

LANGUAGE: bash
CODE:
pio lib stats --json-output

----------------------------------------

TITLE: Basic Platform Update Command Usage
DESCRIPTION: Shows the basic syntax for updating platforms, including options for updating specific platform versions using Semantic Versioning.

LANGUAGE: bash
CODE:
pio platform update [OPTIONS] [PLATFORM...]

# update specific platform version using Semantic Versioning
pio platform update PLATFORM@X.Y.Z

----------------------------------------

TITLE: Configuring Library Compatibility Mode in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set the 'lib_compat_mode' option in a PlatformIO project configuration file. It sets the mode to 'strict', which checks for compatibility with both frameworks and development platforms.

LANGUAGE: ini
CODE:
[env:myenv]
; Checks for the compatibility with frameworks and dev/platforms
lib_compat_mode = strict

----------------------------------------

TITLE: Configuring GDB Debug Commands in PlatformIO
DESCRIPTION: Example configuration showing custom initial debug commands for GDB in a PlatformIO project environment. The commands include remote target connection, breakpoint initialization, monitor controls, and load commands.

LANGUAGE: ini
CODE:
[env:debug]
platform = ...
board = ...
debug_init_cmds =
  target extended-remote $DEBUG_PORT
  $INIT_BREAK
  monitor reset halt
  $LOAD_CMDS
  monitor init
  monitor reset halt

----------------------------------------

TITLE: Implementing Build Script in Python for PlatformIO
DESCRIPTION: Example of a main.py build script for a custom PlatformIO development platform. It sets up the build environment, defines compiler flags, and creates build targets.

LANGUAGE: python
CODE:
from os.path import join
from SCons.Script import AlwaysBuild, Builder, Default, DefaultEnvironment

env = DefaultEnvironment()

# A full list with the available variables
# http://www.scons.org/doc/production/HTML/scons-user.html#app-variables
env.Replace(
    AR="ar",
    AS="gcc",
    CC="gcc",
    CXX="g++",
    OBJCOPY="objcopy",
    RANLIB="ranlib",

    UPLOADER=join("$PIOPACKAGES_DIR", "tool-bar", "uploader"),
    UPLOADCMD="$UPLOADER $SOURCES"
)

env.Append(
    ARFLAGS=["..."],

    ASFLAGS=["flag1", "flag2", "flagN"],
    CCFLAGS=["flag1", "flag2", "flagN"],
    CXXFLAGS=["flag1", "flag2", "flagN"],
    LINKFLAGS=["flag1", "flag2", "flagN"],

    CPPDEFINES=["DEFINE_1", "DEFINE=2", "DEFINE_N"],

    LIBS=["additional", "libs", "here"],

    BUILDERS=dict(
        ElfToBin=Builder(
            action=" ".join([
                "$OBJCOPY",
                "-O",
                "binary",
                "$SOURCES",
                "$TARGET"]),
            suffix=".bin"
        )
    )
)

# The source code of "platformio-build-tool" is here
# https://github.com/platformio/platformio-core/blob/develop/platformio/builder/tools/platformio.py

#
# Target: Build executable and linkable firmware
#
target_elf = env.BuildProgram()

#
# Target: Build the .bin file
#
target_bin = env.ElfToBin(join("$BUILD_DIR", "firmware"), target_elf)

#
# Target: Upload firmware
#
upload = env.Alias(["upload"], target_bin, "$UPLOADCMD")
AlwaysBuild(upload)

#
# Target: Define targets
#
Default(target_bin)

----------------------------------------

TITLE: Setting Include and Library Paths in PlatformIO Configuration
DESCRIPTION: Demonstrates how to add include directories and library paths using build_flags in platformio.ini. This includes handling paths with spaces and using PlatformIO variables.

LANGUAGE: ini
CODE:
[env:specific_inclibs]
build_flags =
  -I/opt/include
  -I"relative/path with space"
  -I"C:\windows\dir"
  -I"${platformio.packages_dir}/framework-foo/include"
  -L/opt/lib
  -lfoo

----------------------------------------

TITLE: Configuring QEMU Debugging Tool in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure QEMU as the debugging tool in a PlatformIO project configuration file. It sets the debug_tool option to 'qemu' within an environment section.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = qemu

----------------------------------------

TITLE: Configuring Atmel-ICE Debugging Tool in platformio.ini
DESCRIPTION: Example configuration for enabling Atmel-ICE as the debugging tool in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = atmel-ice

----------------------------------------

TITLE: Configuring PlatformIO Environment with LDF Options
DESCRIPTION: Example configuration in platformio.ini showing how to set the LDF mode and define project version flags.

LANGUAGE: ini
CODE:
[env:myenv]
lib_ldf_mode = chain+
build_flags = -D MY_PROJECT_VERSION=13

----------------------------------------

TITLE: Launching GDB Instance with PlatformIO Debug
DESCRIPTION: Shows how to launch a GDB instance and load initial configuration for a project using the 'pio debug' command. It demonstrates the use of the '--interface=gdb' option and passing additional GDB options.

LANGUAGE: bash
CODE:
> pio debug --interface=gdb -- -x .pioinit

...
Loading section .text, size 0x2c98 lma 0x4000
Loading section .ramfunc, size 0x60 lma 0x6c98
Loading section .data, size 0x100 lma 0x6cf8
Start address 0x47b0, load size 11768
Transfer rate: 4 KB/sec, 3922 bytes/write.
target halted due to debug-request, current mode: Thread
xPSR: 0x81000000 pc: 0x000028f4 msp: 0x20002c00
target halted due to debug-request, current mode: Thread
xPSR: 0x81000000 pc: 0x000028f4 msp: 0x20002c00
Breakpoint 2 at 0x413a: file src/main.cpp, line 26.

----------------------------------------

TITLE: Basic Configuration Inheritance in PlatformIO
DESCRIPTION: Demonstrates how to extend base configurations and strict library dependency settings in a PlatformIO project configuration. Shows inheritance for both release and debug environments.

LANGUAGE: ini
CODE:
[strict_ldf]
lib_ldf_mode = chain+
lib_compat_mode = strict

[espressi32_base]
platform = platformio/espressif32
framework = arduino

[env:release]
extends = espressi32_base, strict_ldf
board = esp32dev
build_flags = -D RELEASE

[env:debug]
extends = env:release
build_type = debug
build_flags = -D DEBUG

----------------------------------------

TITLE: Basic Arduino Blink Example in PlatformIO
DESCRIPTION: A basic example that demonstrates blinking an LED using Arduino framework. The code initializes the built-in LED pin as output and toggles it on/off with 1-second intervals.

LANGUAGE: cpp
CODE:
/**
 * Blink
 *
 * Turns on an LED on for one second,
 * then off for one second, repeatedly.
 */
#include "Arduino.h"

// Set LED_BUILTIN if it is not defined by Arduino framework
// #define LED_BUILTIN 13

void setup()
{
  // initialize LED digital pin as an output.
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop()
{
  // turn the LED on (HIGH is the voltage level)
  digitalWrite(LED_BUILTIN, HIGH);

  // wait for a second
  delay(1000);

  // turn the LED off by making the voltage LOW
  digitalWrite(LED_BUILTIN, LOW);

   // wait for a second
  delay(1000);
}

----------------------------------------

TITLE: Configuring PlatformIO.ini for SimAVR Testing
DESCRIPTION: Configuration settings for enabling SimAVR simulator with an Arduino Uno board. Includes platform package requirements, test speed settings, and testing command configuration.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
framework = arduino
board = uno

platform_packages =
    platformio/tool-simavr
test_speed = 9600
test_testing_command =
    ${platformio.packages_dir}/tool-simavr/bin/simavr
    -m
    atmega328p
    -f
    16000000L
    ${platformio.build_dir}/${this.__env__}/firmware.elf

----------------------------------------

TITLE: Uninstalling a Library from GitHub in PlatformIO
DESCRIPTION: This example demonstrates how to uninstall a library directly from a GitHub repository using the 'pio pkg uninstall' command.

LANGUAGE: bash
CODE:
pio pkg uninstall --library https://github.com/Makuna/NeoPixelBus.git

----------------------------------------

TITLE: Defining Custom Options in platformio.ini
DESCRIPTION: Example of how to define custom configuration options in platformio.ini file. Shows the structure for custom options that must start with 'custom_' or 'board_' prefix.

LANGUAGE: ini
CODE:
[universe]
hello = world

[env:my_env]
platform = ...
extra_scripts = extra_script.py

custom_option1 = value1
custom_option2 = value2

----------------------------------------

TITLE: Configuring Olimex ARM-USB-TINY-H Debug Tool in platformio.ini
DESCRIPTION: Example configuration for using the Olimex ARM-USB-TINY-H as a debugging tool in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = olimex-arm-usb-tiny-h

----------------------------------------

TITLE: PlatformIO Build System Configuration for Cloud9
DESCRIPTION: Custom build system configuration for C/C++/H/INO/PDE files in Cloud9

LANGUAGE: javascript
CODE:
{
    "cmd" : ["pio", "run", "-d", "$file"],
    "info" : "Building $project_path/$file_name",
    "selector": "^.*\\.(cpp|c|h|hpp|S|ini|ino|pde)$"
}

----------------------------------------

TITLE: Combining Environment and Target with pio run
DESCRIPTION: Example of using the 'pio run' command to process a specific environment (uno) with a specific target (upload). This builds and uploads the firmware for the Arduino Uno board.

LANGUAGE: bash
CODE:
> pio run -e uno -t upload

----------------------------------------

TITLE: Arduino Blink Example in C++
DESCRIPTION: Basic Arduino sketch that demonstrates blinking an LED by turning it on and off with 1-second intervals. Shows how to configure pin modes and use digital output controls.

LANGUAGE: cpp
CODE:
/**
 * Blink
 *
 * Turns on an LED on for one second,
 * then off for one second, repeatedly.
 */
#include "Arduino.h"

// Set LED_BUILTIN if it is not defined by Arduino framework
// #define LED_BUILTIN 13

void setup()
{
  // initialize LED digital pin as an output.
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop()
{
  // turn the LED on (HIGH is the voltage level)
  digitalWrite(LED_BUILTIN, HIGH);

  // wait for a second
  delay(1000);

  // turn the LED off by making the voltage LOW
  digitalWrite(LED_BUILTIN, LOW);

   // wait for a second
  delay(1000);
}

----------------------------------------

TITLE: Executing PlatformIO System Prune with Example Output
DESCRIPTION: This code block shows an example execution of the 'pio system prune' command, including user prompts and the output displaying the amount of space reclaimed from various sources.

LANGUAGE: bash
CODE:
> pio system prune

Prune cached data:
 - cached API requests
 - cached package downloads
 - temporary data
Do you want to continue? [y/N]: y
Space on disk: 2.34MB

Prune unnecessary core packages:
Calculating...
Do you want to continue? [y/N]: y
Space on disk: 0B

Prune unnecessary development platform packages:
Calculating...
Package                                 Version       Size
--------------------------------------  ------------  --------
platformio/framework-stm32cube          2.0.200813    458.88MB
platformio/framework-arduinosam         4.4.191002    290.35MB
platformio/framework-arduino-samd       1.8.9         17.59MB
platformio/framework-arduinonordicnrf5  1.600.190830  4.70MB
Do you want to continue? [y/N]: y
Tool Manager: Removing framework-arduino-samd @ 1.8.9
Tool Manager: framework-arduino-samd @ 1.8.9 has been removed!
Tool Manager: Removing framework-arduinonordicnrf5 @ 1.600.190830
Tool Manager: framework-arduinonordicnrf5 @ 1.600.190830 has been removed!
Tool Manager: Removing framework-arduinosam @ 4.4.191002
Tool Manager: framework-arduinosam @ 4.4.191002 has been removed!
Tool Manager: Removing framework-stm32cube @ 2.0.200813
Tool Manager: framework-stm32cube @ 2.0.200813 has been removed!
Space on disk: 771.52MB

Total reclaimed space: 773.86MB

----------------------------------------

TITLE: Creating Configurable Targets with Options
DESCRIPTION: Example showing how to create a custom target that uses configuration options from platformio.ini and implements a callback function.

LANGUAGE: ini
CODE:
[env:env_custom_target]
platform = ...
...
extra_scripts = extra_script.py
custom_ping_host = google.com

LANGUAGE: python
CODE:
Import("env")

host = env.GetProjectOption("custom_ping_host")

def mytarget_callback(*args, **kwargs):
    print("Hello PlatformIO!")
    env.Execute("ping " + host)


env.AddCustomTarget("ping", None, mytarget_callback)

----------------------------------------

TITLE: Embedding Binary Data in ESP32 Firmware with PlatformIO
DESCRIPTION: Demonstrates how to embed binary or text files into the ESP32 firmware using the board_build.embed_txtfiles option in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:myenv]
platform = platformio/espressif32
board = ...
board_build.embed_txtfiles =
  src/private.pem.key
  src/certificate.pem.crt
  src/aws-root-ca.pem

----------------------------------------

TITLE: Configuring Platform Packages in PlatformIO.ini
DESCRIPTION: Examples of configuring custom platform packages in PlatformIO build environments. Shows how to override default toolchains, use specific framework versions from Git, and include external packages from the PlatformIO Registry.

LANGUAGE: ini
CODE:
[env:override_default_toolchain]
platform = atmelavr
platform_packages =
  ; use GCC AVR 5.0+
  toolchain-gccarmnoneeabi@>1.50000.0

[env:override_framework]
platform = espressif8266
platform_packages =
  ; use upstream Git version
  framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git

[env:external_package]
platform = ststm32
platform_packages =
  ; latest openOCD from PlatformIO Package Registry
  tool-openocd

  ; source code of ST-Link
  tool-stlink-source @ https://github.com/texane/stlink.git

----------------------------------------

TITLE: Starting a PlatformIO Remote Agent
DESCRIPTION: This command starts a PlatformIO Remote Agent, allowing remote work with devices. It can be run as a daemon or added to the OS autostart list. Options include setting a custom name, sharing with other developers, and specifying a working directory.

LANGUAGE: bash
CODE:
pio remote agent start [OPTIONS]

----------------------------------------

TITLE: Installing PlatformIO Platforms using Command Line
DESCRIPTION: This snippet demonstrates the basic usage of the 'pio platform install' command, including various forms of specifying platforms and versions.

LANGUAGE: bash
CODE:
pio platform install [OPTIONS] [PLATFORM...]

# [PLATFORM...] forms
pio platform install <name>
pio platform install <name>@<version>
pio platform install <name>@<version range>
pio platform install <ownername>@<version>
pio platform install <ownername>@<version range>
pio platform install <zip or tarball url>
pio platform install file://<zip or tarball file>
pio platform install file://<folder>
pio platform install <repository>
pio platform install <name=repository> (name it should have locally)
pio platform install <repository#tag> ("tag" can be commit, branch or tag)

----------------------------------------

TITLE: Uninstalling a Global Library with PlatformIO CLI
DESCRIPTION: This example shows how to uninstall a global library named 'AsyncMqttClient' using the PlatformIO CLI. It demonstrates the output of a successful uninstallation.

LANGUAGE: bash
CODE:
> pio lib -g uninstall AsyncMqttClient

Library Storage: /storage/dir/...
Uninstalling AsyncMqttClient @ 0.2.0:   [OK]

----------------------------------------

TITLE: Configuring GoogleTest in platformio.ini
DESCRIPTION: Sets up the test framework and environments for native and ESP32 testing using GoogleTest.

LANGUAGE: ini
CODE:
[env]
test_framework = googletest

[env:native]
platform = native

[env:esp32dev]
platform = espressif32
framework = arduino
test_framework = googletest

----------------------------------------

TITLE: Configuring J-Link as Debugger and Uploader in PlatformIO
DESCRIPTION: INI configuration for using Segger J-Link probe as both debugger and uploader for a custom board in PlatformIO. Includes debug tool setup, upload protocol, and custom debug server commands.

LANGUAGE: ini
CODE:
[env:jlink_debug_and_upload]
platform = teensy
framework = arduino
board = teensy31
extra_scripts = extra_script.py
upload_protocol = custom
debug_tool = jlink
debug_server =
  /full/path/to/JLinkGDBServerCL
  -singlerun
  -if
  SWD
  -select
  USB
  -port
  2331
  -device
  MK20DX256xxx7

----------------------------------------

TITLE: Configuring CircleCI for PlatformIO Library Projects
DESCRIPTION: CircleCI configuration for library projects using the 'pio ci' command. It allows specifying multiple source files or directories and supports building for multiple boards.

LANGUAGE: yaml
CODE:
version: 2.1
orbs:
  python: circleci/python@1.4.0

jobs:
  build:
    parameters:
      ci_src:
        type: string
    executor: python/default
    environment:
      PLATFORMIO_CI_SRC: << parameters.ci_src >>
    steps:
      - checkout
      - run:
          name: Install PlatformIO
          command: pip install -U platformio
      - run:
          name: Compile << parameters.ci_src >>
          command: pio ci --board=<ID_1> --board=<ID_2> --board=<ID_N>

workflows:
  main:
    jobs:
      - build:
          matrix:
            parameters:
              ci_src: ["path/to/test/file.c", "examples/file.ino", "path/to/test/directory"]

----------------------------------------

TITLE: Configuring Multiple Check Tools in PlatformIO
DESCRIPTION: Example showing how to configure multiple static analysis tools (cppcheck and clang-tidy) for a PlatformIO project environment. The check_tool setting accepts a comma-separated list of tool names.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = cppcheck, clangtidy

----------------------------------------

TITLE: Configuring Upload Protocol with Raspberry Pi SWD
DESCRIPTION: Configuration for using Raspberry Pi SWD as both debugging tool and firmware upload protocol.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = raspberrypi-swd
upload_protocol = raspberrypi-swd

----------------------------------------

TITLE: Processing PlatformIO Project with CLI Commands
DESCRIPTION: Examples of PlatformIO CLI commands for building, uploading, and cleaning the project. These commands demonstrate how to process specific environments and perform various project tasks.

LANGUAGE: bash
CODE:
pio run
pio run --target upload
pio run --target clean
pio run -e uno
pio run -e uno -t upload

----------------------------------------

TITLE: Configuring Custom Partition Table for ESP32 in PlatformIO
DESCRIPTION: Shows how to use a custom partition table CSV file or switch between built-in tables using the board_build.partitions option in the PlatformIO configuration.

LANGUAGE: ini
CODE:
; 1) A "partitions_custom.csv" in the root of project directory
[env:custom_table]
board_build.partitions = partitions_custom.csv

; 2) Switch between built-in tables
; https://github.com/espressif/arduino-esp32/tree/master/tools/partitions
; https://github.com/espressif/esp-idf/tree/master/components/partition_table
[env:custom_builtin_table]
board_build.partitions = no_ota.csv

----------------------------------------

TITLE: Installing PlatformIO via Python pip
DESCRIPTION: Command to install or upgrade PlatformIO Core using Python's pip package manager. This installs the latest stable version system-wide.

LANGUAGE: bash
CODE:
python3 -m pip install -U platformio

----------------------------------------

TITLE: Defining Dependencies in PlatformIO Library Manifest (JavaScript)
DESCRIPTION: This snippet demonstrates how to specify library dependencies in the PlatformIO library.json manifest file. It shows a simple object-based format for listing dependencies with version requirements and external sources.

LANGUAGE: javascript
CODE:
"dependencies":
{
    "bblanchon/ArduinoJson": "^6.16.1",
    "me-no-dev/AsyncTCP": "*",
    "external-repo": "https://github.com/user/package.git#1.2.3",
    "external-zip": "https://github.com/me-no-dev/AsyncTCP/archive/master.zip"
}

----------------------------------------

TITLE: Configuring simavr debugging tool in platformio.ini
DESCRIPTION: Example configuration for enabling simavr as the debugging tool in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = simavr

----------------------------------------

TITLE: Framework-Specific Library Search
DESCRIPTION: Example showing how to search for libraries compatible with a specific framework (Arduino) and technology (I2C)

LANGUAGE: bash
CODE:
> pio lib search "i2c" --framework="arduino"

----------------------------------------

TITLE: Listing mbed-enabled Boards
DESCRIPTION: Demonstrates how to use the 'pio boards' command to filter and display only mbed-enabled boards across different platforms like freescalekinetis, nordicnrf51, nxplpc, and ststm32.

LANGUAGE: bash
CODE:
pio boards mbed

----------------------------------------

TITLE: Implementing Custom Unity Test Runner in Python
DESCRIPTION: This code defines a custom test runner class that extends PlatformIO's UnityTestRunner. It ignores the default Unity package and skips adding it to the build process.

LANGUAGE: python
CODE:
from platformio.public import UnityTestRunner

class CustomTestRunner(UnityTestRunner):

    # Ignore "throwtheswitch/Unity" package
    EXTRA_LIB_DEPS = None

    # Do not add default Unity to the build process
    def configure_build_env(self, env):
        pass

----------------------------------------

TITLE: Configuring PlatformIO Project for Renode Testing
DESCRIPTION: Configuration example showing how to set up a PlatformIO project for the HiFive1 RevB board using Renode simulator. Includes platform package configuration and test command settings.

LANGUAGE: ini
CODE:
[env:hifive1-revb]
platform = sifive
framework = zephyr
board = hifive1-revb

platform_packages =
    platformio/tool-renode
test_testing_command =
    ${platformio.packages_dir}/tool-renode/renode
    --disable-xwt
    -e include @scripts/single-node/sifive_fe310.resc
    -e showAnalyzer uart1
    -e sysbus LoadELF @${platformio.build_dir}/${this.__env__}/firmware.elf
    -e start

----------------------------------------

TITLE: Including Top-Level Source Files in PlatformIO Library Build
DESCRIPTION: This snippet shows how to configure the build process to include C, C++, and header files from the top level of the library directory.

LANGUAGE: javascript
CODE:
"build": {
    "srcFilter": [
        "+<*.c>",
        "+<*.cpp>",
        "+<*.h>"
    ]
}

----------------------------------------

TITLE: Configuring Build Types in PlatformIO INI
DESCRIPTION: Example configuration demonstrating how to set up multiple build environments including a debug environment. Shows common configuration inheritance and environment-specific settings.

LANGUAGE: ini
CODE:
[env]
platform = ...
board = ...
framework = ...
... other common configuration

[env:myrelease]
some_extra_options = ...

[env:mydebug]
build_type = debug
some_extra_options = ...

----------------------------------------

TITLE: Complete GitHub Actions Workflow for USB_Host_Shield_2.0 Project
DESCRIPTION: This YAML configuration provides a complete GitHub Actions workflow for the USB_Host_Shield_2.0 project. It includes a matrix strategy for multiple operating systems and examples, downloads an external library, and runs PlatformIO CI with multiple boards.

LANGUAGE: yaml
CODE:
name: PlatformIO CI

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        example: [examples/Bluetooth/PS3SPP/PS3SPP.ino, examples/pl2303/pl2303_gps/pl2303_gps.ino]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Download external library
        run: |
          wget https://github.com/xxxajk/spi4teensy3/archive/master.zip -O /tmp/spi4teensy3.zip
          unzip /tmp/spi4teensy3.zip -d /tmp

      - name: Run PlatformIO
        run: pio ci --lib="." --lib="/tmp/spi4teensy3-master" --board=uno --board=teensy31 --board=due
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.example }}

----------------------------------------

TITLE: Accessing Custom Options in Python Script
DESCRIPTION: Demonstrates how to access custom configuration options using the ProjectConfig API and environment shortcuts in a Python script

LANGUAGE: python
CODE:
# "env.GetProjectOption" shortcut for the active environment
value1 = env.GetProjectOption("custom_option1")
value2 = env.GetProjectOption("custom_option2")

# Read value from other environments
config = env.GetProjectConfig()
world = config.get("universe", "hello")

----------------------------------------

TITLE: Defining MCU Frequency with board_build.f_cpu in PlatformIO INI Configuration
DESCRIPTION: The board_build.f_cpu option is used to specify the MCU frequency in Hertz. It accepts a C-like long integer value with an 'L' suffix. For example, 16 MHz is represented as 16000000L. This setting is crucial for configuring software to match the target's clock frequency.

LANGUAGE: ini
CODE:
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Installing PlatformIO Core using wget (macOS/Linux)
DESCRIPTION: This snippet shows an alternative method to download and run the PlatformIO Core installer script using wget on macOS or Linux systems. It downloads the script from GitHub and executes it with Python 3.

LANGUAGE: bash
CODE:
wget -O get-platformio.py https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py
python3 get-platformio.py

----------------------------------------

TITLE: Setting Upload and Monitor Targets in PlatformIO Config
DESCRIPTION: Demonstrates how to configure multiple targets in a PlatformIO environment to automatically upload firmware and launch the serial monitor after building.

LANGUAGE: ini
CODE:
[env:upload_and_monitor]
targets = upload, monitor

----------------------------------------

TITLE: Basic PlatformIO System Info Command
DESCRIPTION: Command to display system-wide information about PlatformIO installation including core version, Python version, system details, and platform statistics.

LANGUAGE: bash
CODE:
pio system info

----------------------------------------

TITLE: Configuring Debug Initial Breakpoint in PlatformIO INI
DESCRIPTION: Examples of how to set the debug_init_break option in a PlatformIO project configuration file. This option allows specifying an initial breakpoint for debugging, with various possibilities including disabling the initial breakpoint, setting temporary breakpoints, or specifying file and line number breakpoints.

LANGUAGE: ini
CODE:
[env:debug]
platform = ...
board = ...

; Examples 1: disable initial breakpoint
debug_init_break =

; Examples 2: temporary stop at ``void loop()`` function
debug_init_break = tbreak loop

; Examples 3: stop in main.cpp at line 13
debug_init_break = break main.cpp:13

; Examples 4: temporary stop at ``void Reset_Handler(void)``
debug_init_break = tbreak Reset_Handler

----------------------------------------

TITLE: Configuring Olimex ARM-USB-TINY Debug Tool in PlatformIO
DESCRIPTION: Example configuration for using the Olimex ARM-USB-TINY debug tool in a PlatformIO project's platformio.ini file. Sets the debug_tool option and optionally the upload_protocol.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = olimex-jtag-tiny

# Optional: Set upload protocol
upload_protocol = olimex-jtag-tiny

----------------------------------------

TITLE: Installing PlatformIO Core using Python Installer Script
DESCRIPTION: This command runs the Installer Script to install PlatformIO Core into a virtual environment. It can be customized with options for verbose output, development version installation, or ignoring specific Python paths.

LANGUAGE: bash
CODE:
python get-platformio.py

----------------------------------------

TITLE: Filtering Arduino-based Boards
DESCRIPTION: Example of using the 'pio boards' command with a filter to show only Arduino-based boards. This filters the output to display boards related to Arduino platforms.

LANGUAGE: bash
CODE:
pio boards arduino

----------------------------------------

TITLE: Basic PlatformIO Library Installation Commands
DESCRIPTION: Core command syntax variations for installing libraries in PlatformIO, including project dependencies, specific environments, and storage options.

LANGUAGE: bash
CODE:
pio lib [STORAGE_OPTIONS] install [OPTIONS] [LIBRARY...]

# RECOMMENDED
# install all project dependencies declared via "lib_deps"
# (run it from a project root where is located "platformio.ini")
pio lib install [OPTIONS]

# install project dependent library
# (run it from a project root where is located "platformio.ini")
pio lib install [OPTIONS] [LIBRARY...]

# install dependencies for the specific project environment
# (run it from a project root where is located "platformio.ini")
pio lib -e myenv install [OPTIONS] [LIBRARY...]
pio lib -d /path/to/platformio/project -e myenv install [OPTIONS] [LIBRARY...]

----------------------------------------

TITLE: Enabling External RAM (PSRAM) for ESP32 with Arduino Framework
DESCRIPTION: Demonstrates how to enable external RAM support for ESP32 using Arduino framework by adding specific build flags in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:myenv]
platform = platformio/espressif32
framework = arduino
board = ...
build_flags =
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue

----------------------------------------

TITLE: Configuring Upstream Nordic nRF51 Platform
DESCRIPTION: Configuration example for using the latest upstream development version of the Nordic nRF51 platform.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-nordicnrf51.git
board = ...

----------------------------------------

TITLE: Specifying Build Flags in library.json
DESCRIPTION: Configuration option for specifying build flags in library.json manifest files. Supports both string and array formats. Used to control preprocessing, compilation, assembly and linking. Include paths must be relative to library.json location.

LANGUAGE: text
CODE:
flags

----------------------------------------

TITLE: Monitor Configuration in platformio.ini
DESCRIPTION: Example of configuring monitor filters in the project configuration file.

LANGUAGE: ini
CODE:
[env:log_output_to_file]
...
platform = ...
monitor_filters = default, log2file

----------------------------------------

TITLE: Accessing PlatformIO Project Help Commands
DESCRIPTION: Commands to display help information for the PlatformIO project manager CLI. Shows how to access general project help and command-specific help documentation.

LANGUAGE: bash
CODE:
pio project --help
pio project COMMAND --help

----------------------------------------

TITLE: Setting C/C++ Compiler Flags Using Python in PlatformIO
DESCRIPTION: This Python script demonstrates how to set separate compiler flags for C and C++ in PlatformIO. It uses the env.Append() method to add flags for general compilation (CCFLAGS), C-specific compilation (CFLAGS), and C++-specific compilation (CXXFLAGS).

LANGUAGE: python
CODE:
Import("env")

# General options that are passed to the C and C++ compilers
env.Append(CCFLAGS=["flag1", "flag2"])

# General options that are passed to the C compiler (C only; not C++).
env.Append(CFLAGS=["flag1", "flag2"])

# General options that are passed to the C++ compiler
env.Append(CXXFLAGS=["flag1", "flag2"])

----------------------------------------

TITLE: Defining Keywords for PlatformIO Library
DESCRIPTION: Specifies the format and requirements for the 'keywords' field in a PlatformIO library manifest. Keywords are used for search functionality and must follow specific formatting rules. They can be provided as a comma-separated string or an array.

LANGUAGE: plaintext
CODE:
"keywords"
------------

**Required** | Type: ``String`` or ``Array`` | Max. Length: 255

Used for search by keyword. Helps to make your library easier to discover
without people needing to know its name.

The keyword should be in lowercase and can consist of lowercase letters (a-z),
digits, periods, underscores, plus symbols, and dashes. However,
it should not start or end with a dot, underscore, plus symbol, or dash.
You can provide a list of keywords by separating them with commas (``,``)
or by declaring them as an array.

----------------------------------------

TITLE: Configuring Hybrid Unit Testing
DESCRIPTION: Example of configuring multiple test environments using different testing frameworks for native and embedded targets.

LANGUAGE: ini
CODE:
[env:native]
platform = native
test_framework = googletest
test_filter =
  common/*
  native/*

[env:embedded]
platform = ...
framework = ...
test_framework = unity
test_filter =
  common/*
  embedded/*

----------------------------------------

TITLE: Implementing Unit Tests for Arduino String Class on Nordic nRF52-DK
DESCRIPTION: Unit tests for the Arduino String class, including tests for concatenation, substring extraction, index finding, case-insensitive comparison, upper-case conversion, and character replacement.

LANGUAGE: cpp
CODE:
#include <Arduino.h>
#include <unity.h>

String STR_TO_TEST;

void setUp(void)
{
  // set stuff up here
  STR_TO_TEST = "Hello, world!";
}

void tearDown(void)
{
  // clean stuff up here
  STR_TO_TEST = "";
}

void test_string_concat(void)
{
  String hello = "Hello, ";
  String world = "world!";
  TEST_ASSERT_EQUAL_STRING(STR_TO_TEST.c_str(), (hello + world).c_str());
}

void test_string_substring(void)
{
  TEST_ASSERT_EQUAL_STRING("Hello", STR_TO_TEST.substring(0, 5).c_str());
}

void test_string_index_of(void)
{
  TEST_ASSERT_EQUAL(7, STR_TO_TEST.indexOf('w'));
}

void test_string_equal_ignore_case(void)
{
  TEST_ASSERT_TRUE(STR_TO_TEST.equalsIgnoreCase("HELLO, WORLD!"));
}

void test_string_to_upper_case(void)
{
  STR_TO_TEST.toUpperCase();
  TEST_ASSERT_EQUAL_STRING("HELLO, WORLD!", STR_TO_TEST.c_str());
}

void test_string_replace(void)
{
  STR_TO_TEST.replace('!', '?');
  TEST_ASSERT_EQUAL_STRING("Hello, world?", STR_TO_TEST.c_str());
}

void setup()
{
  delay(2000); // service delay
  UNITY_BEGIN();

  RUN_TEST(test_string_concat);
  RUN_TEST(test_string_substring);
  RUN_TEST(test_string_index_of);
  RUN_TEST(test_string_equal_ignore_case);
  RUN_TEST(test_string_to_upper_case);
  RUN_TEST(test_string_replace);

  UNITY_END(); // stop unit testing
}

void loop()
{
}

----------------------------------------

TITLE: Initializing Project with Custom Environment and Options
DESCRIPTION: Example of initializing a new PlatformIO project with a specified environment name and custom project options. This shows how to set up a project with specific platform and build flags.

LANGUAGE: bash
CODE:
> pio project init --environment native --project-option="platform=native" --project-option="build_flags=-DRELEASE=1"

The current working directory *** will be used for the new project.
...

----------------------------------------

TITLE: Implementing main() for Doctest in C++
DESCRIPTION: Implementation of the main() function required for Doctest, including necessary configuration options for PlatformIO compatibility. This sets up the Doctest context and applies command line arguments.

LANGUAGE: cpp
CODE:
#define DOCTEST_CONFIG_IMPLEMENT  // REQUIRED: Enable custom main()
#include <doctest.h>

// TEST_CASE ...
// TEST_SUITE ...

int main(int argc, char **argv)
{
  doctest::Context context;

  // BEGIN:: PLATFORMIO REQUIRED OPTIONS
  context.setOption("success", true);     // Report successful tests
  context.setOption("no-exitcode", true); // Do not return non-zero code on failed test case
  // END:: PLATFORMIO REQUIRED OPTIONS

  // YOUR CUSTOM DOCTEST OPTIONS

  context.applyCommandLine(argc, argv);
  return context.run();
}

----------------------------------------

TITLE: Configuring Doctest with Extra Identifiers
DESCRIPTION: Example of configuring Doctest using build flags to set additional identifiers. This enables super fast asserts and disables comparison warning suppression.

LANGUAGE: ini
CODE:
[env:extra_doctest_identifiers]
platform = native
test_framework = doctest
build_flags =
    -D DOCTEST_CONFIG_SUPER_FAST_ASSERTS
    -D DOCTEST_CONFIG_NO_COMPARISON_WARNING_SUPPRESSION

----------------------------------------

TITLE: Enabling CERT checks in PlatformIO project
DESCRIPTION: This configuration demonstrates how to enable CERT standard checks in a PlatformIO project by adding the CERT addon to the check_flags option.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = cppcheck
check_flags =
  cppcheck: --addon=cert.py

----------------------------------------

TITLE: Using PlatformIO Update Command in Bash
DESCRIPTION: This code snippet demonstrates the usage of the 'pio update' command in a bash terminal. It shows the basic syntax and available options for updating PlatformIO packages.

LANGUAGE: bash
CODE:
pio update [OPTIONS]

----------------------------------------

TITLE: Running PlatformIO Tests with QEMU
DESCRIPTION: Example command output showing how to run unit tests using QEMU emulator without firmware uploading stage.

LANGUAGE: text
CODE:
> pio test --without-uploading

Verbose mode can be enabled via `-v, --verbose` option
Collected 1 tests

Processing test_dummy in hifive1 environment
--------------------------------------------
Building...
Testing...
test/test_dummy/main.c:18: dummy_test	[PASSED]
---------------------- hifive1:test_dummy [PASSED] Took 2.05 seconds ----------------------

======================================= SUMMARY =======================================
Environment    Test        Status    Duration
-------------  ----------  --------  ------------
hifive1        test_dummy  PASSED    00:00:02.055
====================== 1 test cases: 1 succeeded in 00:00:02.055 ======================

----------------------------------------

TITLE: Using 'pio pkg exec' Command in PlatformIO
DESCRIPTION: This snippet demonstrates various usage patterns for the 'pio pkg exec' command in PlatformIO. It shows how to execute commands from PlatformIO packages, including specifying packages and passing arguments.

LANGUAGE: bash
CODE:
pio pkg exec [OPTIONS] [ARGS]
pio pkg exec -- <CMD> [ARGS]
pio pkg exec --package <SPECIFICATION> -- <CMD> [ARGS]
pio pkg exec --call '<cmd> [args]'

----------------------------------------

TITLE: Configuring TUMPA Debug Tool in platformio.ini
DESCRIPTION: Example configuration for using TUMPA as the debugging tool in the project's platformio.ini file. Also shows how to set it as the upload protocol.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = tumpa

# Optional: Set as upload protocol
upload_protocol = tumpa

----------------------------------------

TITLE: Configuring Build Middleware in platformio.ini
DESCRIPTION: Basic configuration to enable build middleware using an external Python script.

LANGUAGE: ini
CODE:
[env:build_middleware]
extra_scripts = pre:extra_script.py

----------------------------------------

TITLE: Configuring Default Environments in PlatformIO
DESCRIPTION: Example configuration showing how to specify default build environments using default_envs in platformio.ini. Demonstrates setting up multiple environments including Arduino boards like Uno, NodeMCU, Teensy and MSP430.

LANGUAGE: ini
CODE:
[platformio]
default_envs = uno, nodemcu

[env:uno]
platform = atmelavr
framework = arduino
board = uno

[env:nodemcu]
platform = espressif8266
framework = arduino
board = nodemcu

[env:teensy31]
platform = teensy
framework = arduino
board = teensy31

[env:lpmsp430g2553]
platform = timsp430
framework = arduino
board = lpmsp430g2553
build_flags = -D LED_BUILTIN=RED_LED

----------------------------------------

TITLE: Arduino Blink Example in C++
DESCRIPTION: A simple Arduino sketch that blinks the built-in LED. This code demonstrates basic Arduino functions like pinMode, digitalWrite, and delay.

LANGUAGE: cpp
CODE:
#include "Arduino.h"

void setup()
{
  pinMode(LED_BUILTIN, OUTPUT);  // set pin as output
}

void loop()
{
  digitalWrite(LED_BUILTIN, HIGH);  // set the LED on
  delay(1000);               // wait for a second
  digitalWrite(LED_BUILTIN, LOW);   // set the LED off
  delay(1000);               // wait for a second
}

----------------------------------------

TITLE: Accessing and Modifying DefaultEnvironment in Pre-Build Script (Python)
DESCRIPTION: This script demonstrates how to import the default construction environment, dump its contents for debugging, and append extra flags to the global build environment. These flags will be used for building project source code, frameworks, and dependent libraries.

LANGUAGE: python
CODE:
# Import the current working construction
# environment to the `env` variable.
# alias of `env = DefaultEnvironment()`
Import("env")

# Dump construction environment (for debug purpose)
print(env.Dump())

# append extra flags to global build environment
# which later will be used to build:
# - project source code
# - frameworks
# - dependent libraries
env.Append(CPPDEFINES=[
  "MACRO_1_NAME",
  ("MACRO_2_NAME", "MACRO_2_VALUE")
])

----------------------------------------

TITLE: Integration Check in PlatformIO Python Scripts
DESCRIPTION: Python script example showing how to prevent execution during IDE integration dumps. Includes environment modification example with CPPDEFINES.

LANGUAGE: python
CODE:
Import("env")

if env.IsIntegrationDump():
   # stop the current script execution
   Return()

# code below runs for the "build" and other targets
env.Append(CPPDEFINES=["MACRO_NAME"])

----------------------------------------

TITLE: Configuring PlatformIO Build System in Sublime Text
DESCRIPTION: JSON configuration for creating a custom PlatformIO build system in Sublime Text. It defines commands for building, cleaning, and uploading projects.

LANGUAGE: json
CODE:
{
    "cmd": ["platformio", "-f", "-c", "sublimetext", "run"],
    "working_dir": "${project_path:${folder}}",
    "variants":
    [
        {
            "name": "Clean",
            "cmd": ["platformio", "-f", "-c", "sublimetext", "run", "--target", "clean"]
        },
        {
            "name": "Upload",
            "cmd": ["platformio", "-f", "-c", "sublimetext", "run", "--target", "upload"]
        }
    ]
}

----------------------------------------

TITLE: Library Update Examples in Bash
DESCRIPTION: Demonstrates practical examples of using the library update command to update all installed libraries in global storage and updating specific libraries.

LANGUAGE: bash
CODE:
> pio lib -g update

Library Storage: /storage/dir/...
Updating ESP8266_SSD1306 @ 3.2.3:   [Up-to-date]
Updating EngduinoMagnetometer @ 3.1.0:  [Up-to-date]
Updating IRremote @ 2.2.1:  [Up-to-date]
Updating Json @ 5.4.0:  [Out-of-date]
LibraryManager: Installing id=64 @ 5.6.4
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
Json @ 5.6.4 has been successfully installed!

----------------------------------------

TITLE: Implementing TestCase Class in Python for PlatformIO Test Runner
DESCRIPTION: The TestCase class represents a single test case with attributes for name, status, message, stdout, duration, exception, and source.

LANGUAGE: python
CODE:
class TestCase:
    name = ...
    status = ...
    message = ...
    stdout = ...
    duration = ...
    exception = ...
    source = ...

----------------------------------------

TITLE: Setting Reset Method for ESP8266 in PlatformIO
DESCRIPTION: Example of setting a custom reset method using the upload_resetmethod option in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
upload_resetmethod = ck

----------------------------------------

TITLE: Configuring Multiple Authors in PlatformIO Library JSON
DESCRIPTION: Example of configuring multiple authors' contact information in library.json. Shows how to specify maintainer status and includes name, email, and URL fields for each author.

LANGUAGE: javascript
CODE:
"authors":
[
    {
        "name": "John Smith",
        "email": "me@john-smith.com",
        "url": "https://www.john-smith/contact"
    },
    {
        "name": "Andrew Smith",
        "email": "me@andrew-smith.com",
        "url": "https://www.andrew-smith/contact",
        "maintainer": true
    }
]

----------------------------------------

TITLE: Zephyr Bluetooth Configuration
DESCRIPTION: Project configuration file enabling Bluetooth functionality and debug logging

LANGUAGE: ini
CODE:
CONFIG_BT=y
CONFIG_BT_DEBUG_LOG=y
CONFIG_BT_DEVICE_NAME="Test beacon"

----------------------------------------

TITLE: Storage Option Examples for Library Installation
DESCRIPTION: Examples showing how to install libraries to global and custom storage locations.

LANGUAGE: bash
CODE:
# install to global storage (NOT RECOMMENDED)
pio lib --global install [OPTIONS] [LIBRARY...]
pio lib -g install [OPTIONS] [LIBRARY...]

# install to custom storage
pio lib --storage-dir /path/to/dir install [OPTIONS] [LIBRARY...]
pio lib -d /path/to/dir1 -d /path/to/dir2 install [OPTIONS] [LIBRARY...]

----------------------------------------

TITLE: Installing udev Rules via curl
DESCRIPTION: Downloads and installs the PlatformIO udev rules file directly to the system using curl

LANGUAGE: bash
CODE:
curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/system/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules

----------------------------------------

TITLE: Configuring Stable Intel ARC32 Platform in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the stable version of the Intel ARC32 platform in a PlatformIO project. It includes examples for using the latest stable version and a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = intel_arc32
board = ...

; Specific version
[env:custom_stable]
platform = intel_arc32@x.y.z
board = ...

----------------------------------------

TITLE: Listing Remote Devices in PlatformIO
DESCRIPTION: This command lists Serial Ports on remote machines where the PlatformIO remote agent is running. It can list devices from specific agents using the --agent option.

LANGUAGE: bash
CODE:
pio remote device list [OPTIONS]

# List devices from the specified agents. Multiple agents are allowed.
pio remote --agent NAME device list [OPTIONS]

----------------------------------------

TITLE: Using PlatformIO System Prune Command in Bash
DESCRIPTION: This snippet demonstrates the basic usage of the 'pio system prune' command in PlatformIO. It removes unused data including cached API requests, package downloads, temporary data, and unnecessary packages.

LANGUAGE: bash
CODE:
pio system prune

----------------------------------------

TITLE: Configuring PlatformIO Cache Directory Setting
DESCRIPTION: Defines the directory path where PlatformIO Core stores its cache data including downloaded packages and registry requests. The default location is within the core directory's cache folder. Can be overridden using the PLATFORMIO_CACHE_DIR environment variable.

LANGUAGE: ini
CODE:
cache_dir = /path/to/cache

----------------------------------------

TITLE: Exporting PATH in Bash Shell Configuration
DESCRIPTION: This code snippet adds the user's local bin directory to the PATH environmental variable in Bash shell configuration files.

LANGUAGE: shell
CODE:
export PATH=$PATH:$HOME/.local/bin

----------------------------------------

TITLE: Defining TestCaseSource Class in Python for PlatformIO Test Runner
DESCRIPTION: The TestCaseSource class contains details about the source file and line number of a test case.

LANGUAGE: python
CODE:
class TestCaseSource:
    file = ...
    line = ...

----------------------------------------

TITLE: Setting CPU Frequency for ESP8266 in PlatformIO
DESCRIPTION: Example of setting the CPU frequency to 160MHz using the board_build.f_cpu option in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
; set frequency to 160MHz
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Checking Outdated Packages for ESPHome Project in PlatformIO
DESCRIPTION: This example demonstrates how to use the 'pio pkg outdated' command to check for outdated packages in an ESPHome project, specifically for the esp8266-arduino environment. It shows the output format, including package names, current versions, wanted versions, and latest versions.

LANGUAGE: bash
CODE:
> pio pkg outdated -e esp8266-arduino
Checking  [####################################]  100%

Semantic Versioning color legend:
<Major Update>  backward-incompatible updates
<Minor Update>  backward-compatible features
<Patch Update>  backward-compatible bug fixes

Package      Current    Wanted    Latest    Type     Environments
-----------  ---------  --------  --------  -------  ---------------
ArduinoJson  6.18.5     6.18.5    6.19.1    Library  esp8266-arduino
FastLED      3.3.2      3.3.2     3.5.0     Library  esp8266-arduino
TinyGPSPlus  1.0.2      1.0.2     1.0.3     Library  esp8266-arduino

----------------------------------------

TITLE: Using PlatformIO Team List Command in Bash
DESCRIPTION: This snippet demonstrates the basic usage of the 'pio team list' command. It lists teams and their members, optionally for a specific organization.

LANGUAGE: bash
CODE:
pio team list [OPTIONS] [ORGNAME]

----------------------------------------

TITLE: Using PlatformIO Library Show Command
DESCRIPTION: Command syntax for displaying detailed information about a library. The command accepts either a Library ID or Library Name as an argument, with an optional --json-output flag for JSON formatted output.

LANGUAGE: bash
CODE:
pio lib show [LIBRARY]

----------------------------------------

TITLE: Configuring Debug Extra Commands in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to use the 'debug_extra_cmds' option in a PlatformIO project configuration file. It shows how to set breakpoints and load a custom .gdbinit file for GDB debugging.

LANGUAGE: ini
CODE:
[env:debug]
platform = ...
board = ...
debug_extra_cmds =
  break main.cpp:13
  break foo.cpp:100
  source .gdbinit

----------------------------------------

TITLE: Installing Latest Development ATmega AVR Platform from Git
DESCRIPTION: This example shows how to install the latest development version of the ATmega AVR platform directly from its Git repository.

LANGUAGE: bash
CODE:
> pio platform install https://github.com/platformio/platform-atmelavr.git

PlatformManager: Installing platform-atmelavr
git version 2.7.4 (Apple Git-66)
Cloning into '/Volumes/MEDIA/tmp/pio3_test_projects/arduino-digihead-master/home_dir/platforms/installing-U3ucN0-package'...
remote: Counting objects: 176, done.
remote: Compressing objects: 100% (55/55), done.
remote: Total 176 (delta 114), reused 164 (delta 109), pack-reused 0
Receiving objects: 100% (176/176), 38.86 KiB | 0 bytes/s, done.
Resolving deltas: 100% (114/114), done.
Checking connectivity... done.
Submodule 'examples/arduino-external-libs/lib/OneWire' (https://github.com/PaulStoffregen/OneWire.git) registered for path 'examples/arduino-external-libs/lib/OneWire'
Cloning into 'examples/arduino-external-libs/lib/OneWire'...
remote: Counting objects: 91, done.
remote: Total 91 (delta 0), reused 0 (delta 0), pack-reused 91
Unpacking objects: 100% (91/91), done.
Checking connectivity... done.
Submodule path 'examples/arduino-external-libs/lib/OneWire': checked out '57c18c6de80c13429275f70875c7c341f1719201'
atmelavr @ 0.0.0 has been successfully installed!
PackageManager: Installing tool-scons @ >=2.3.0,<2.6.0
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
tool-scons @ 2.4.1 has been successfully installed!
PackageManager: Installing toolchain-atmelavr @ ~1.40801.0
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
toolchain-atmelavr @ 1.40801.0 has been successfully installed!
The platform 'https://github.com/platformio/platform-atmelavr.git' has been successfully installed!
The rest of packages will be installed automatically depending on your build environment.

----------------------------------------

TITLE: Using 'pio pkg outdated' Command in PlatformIO
DESCRIPTION: This command checks for outdated project packages and lists version information for all dependencies. It displays the currently installed version, desired version based on Semantic Versioning, and the latest available version.

LANGUAGE: bash
CODE:
pio pkg outdated [OPTIONS]

----------------------------------------

TITLE: Implementing GoogleTest Main Function in C++
DESCRIPTION: Demonstrates how to set up the main function for GoogleTest, including conditional compilation for Arduino environments.

LANGUAGE: cpp
CODE:
#include <gtest/gtest.h>
// uncomment line below if you plan to use GMock
// #include <gmock/gmock.h>

// TEST(...)
// TEST_F(...)

#if defined(ARDUINO)
#include <Arduino.h>

void setup()
{
    // should be the same value as for the `test_speed` option in "platformio.ini"
    // default value is test_speed=115200
    Serial.begin(115200);

    ::testing::InitGoogleTest();
    // if you plan to use GMock, replace the line above with
    // ::testing::InitGoogleMock();
}

void loop()
{
  // Run tests
  if (RUN_ALL_TESTS())
  ;

  // sleep for 1 sec
  delay(1000);
}

#else
int main(int argc, char **argv)
{
    ::testing::InitGoogleTest(&argc, argv);
    // if you plan to use GMock, replace the line above with
    // ::testing::InitGoogleMock(&argc, argv);

    if (RUN_ALL_TESTS())
    ;

    // Always return zero-code and allow PlatformIO to parse results
    return 0;
}
#endif

----------------------------------------

TITLE: Defining TestStatus Class in Python for PlatformIO Test Runner
DESCRIPTION: The TestStatus class defines constants for test result statuses including PASSED, FAILED, SKIPPED, and ERRORED.

LANGUAGE: python
CODE:
class TestStatus:
    PASSED = ...
    FAILED = ...
    SKIPPED = ...
    ERRORED = ...

----------------------------------------

TITLE: Running PlatformIO Core installer script on Windows
DESCRIPTION: This snippet shows how to run the PlatformIO Core installer script specifically on Windows systems. It includes instructions for changing to the directory containing the script and executing it with the Python executable.

LANGUAGE: bash
CODE:
# change directory to the folder where is located downloaded "get-platformio.py"
cd C:/path-to-dir/where/get-platformio.py/is-located

# run it
python.exe get-platformio.py

----------------------------------------

TITLE: Initializing Project for Teensy 3.1 with mbed Framework
DESCRIPTION: Example of initializing a PlatformIO project for Teensy 3.1 board with a custom mbed framework. This demonstrates how to specify both the board and additional project options like the framework.

LANGUAGE: bash
CODE:
> pio project init --board teensy31 --project-option "framework=mbed"

The current working directory *** will be used for the new project.
You can specify another project directory via
`pio project init -d %PATH_TO_THE_PROJECT_DIR%` command.

...

----------------------------------------

TITLE: Configuring Upstream Platform Version in platformio.ini
DESCRIPTION: Example of how to use the latest upstream development version of the Atmel megaAVR platform from GitHub in the project's platformio.ini file.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-atmelmegaavr.git
board = ...

----------------------------------------

TITLE: Configuring CircleCI for PlatformIO Native Projects
DESCRIPTION: Basic CircleCI configuration for compiling a native PlatformIO project using the 'pio run' command. It sets up a Python environment, installs PlatformIO, and runs the build process.

LANGUAGE: yaml
CODE:
version: 2.1
orbs:
  python: circleci/python@1.4.0

jobs:
  build:
    executor: python/default
    steps:
      - checkout  # checkout source code to working directory
      - run:
          name: Install PlatformIO
          command: pip install --upgrade platformio
      - run:
          name: Compile Project
          command: pio run

workflows:
  main:
    jobs:
      - build

----------------------------------------

TITLE: Searching for TI Development Platforms
DESCRIPTION: This example demonstrates how to search for Texas Instruments (TI) development platforms using the 'pio platform search' command.

LANGUAGE: bash
CODE:
> pio platform search texas

----------------------------------------

TITLE: Configuring upload_resetmethod in PlatformIO
DESCRIPTION: Configuration option that specifies the reset method used by the upload tool. This setting is primarily used with the Espressif8266 platform and controls how the device is reset during firmware upload.

LANGUAGE: ini
CODE:
upload_resetmethod = value

----------------------------------------

TITLE: Organizing Libraries in PlatformIO Project Structure
DESCRIPTION: Demonstrates the recommended directory structure for organizing libraries in a PlatformIO project. Shows how to arrange multiple libraries (Foo and Bar) in the lib directory.

LANGUAGE: plaintext
CODE:
|--lib
|  |--Bar
|  |  |--docs
|  |  |--examples
|  |  |--src
|  |     |- Bar.c
|  |     |- Bar.h
|  |--Foo
|  |  |- Foo.c
|  |  |- Foo.h
|- platformio.ini
|--src
   |- main.c

----------------------------------------

TITLE: Installing PlatformIO via Homebrew on macOS
DESCRIPTION: This command uses Homebrew to install the latest stable version of PlatformIO on macOS. Homebrew must be installed on the system for this command to work.

LANGUAGE: bash
CODE:
brew install platformio

----------------------------------------

TITLE: Configuring ESP8266 Non-OS SDK Framework in PlatformIO
DESCRIPTION: Framework configuration setting for ESP8266 Non-OS SDK in PlatformIO's project configuration file. This enables the Non-OS SDK for ESP8266 development.

LANGUAGE: rst
CODE:
:ref:`projectconf_env_framework` = "esp8266-nonos-sdk"

----------------------------------------

TITLE: Using 'pio team create' Command in Bash
DESCRIPTION: This snippet demonstrates the usage of the 'pio team create' command in PlatformIO. It shows the basic syntax for creating a new team within an organization, including an optional description parameter.

LANGUAGE: bash
CODE:
pio team create [OPTIONS] ORGNAME:TEAMNAME

----------------------------------------

TITLE: Creating a Team with Description in PlatformIO
DESCRIPTION: This example shows how to create a new team named 'dev' in the 'platformio' organization with a description. It demonstrates the use of the '--description' option to provide additional information about the team.

LANGUAGE: bash
CODE:
> pio team create platformio:dev --description "Developers team"
The team "dev" has been successfully created.

----------------------------------------

TITLE: Specifying Debug Port in PlatformIO Configuration
DESCRIPTION: The 'debug_port' option is used to set the debugging port for a remote target in PlatformIO projects. It can be a serial device or network address. If not specified, PlatformIO attempts to detect it automatically.

LANGUAGE: ini
CODE:
debug_port = /dev/ttyUSB0

LANGUAGE: ini
CODE:
debug_port = COM3

LANGUAGE: ini
CODE:
debug_port = localhost:3333

----------------------------------------

TITLE: Configuring Test Framework in PlatformIO INI File
DESCRIPTION: Sets the Unit Testing framework for a PlatformIO project. The default value is 'unity', but can be changed to other supported frameworks. This setting is a string type and does not allow multiple values.

LANGUAGE: ini
CODE:
test_framework = unity

----------------------------------------

TITLE: Reverting to Stable PlatformIO Version
DESCRIPTION: Commands to uninstall the development version and install the latest stable version of PlatformIO.

LANGUAGE: bash
CODE:
python -m pip uninstall platformio
python -m pip install -U platformio

----------------------------------------

TITLE: Enabling PVS-Studio in PlatformIO Configuration
DESCRIPTION: Basic configuration to enable PVS-Studio tool in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = pvs-studio

----------------------------------------

TITLE: Installing Library Dependencies in CircleCI for PlatformIO
DESCRIPTION: Examples of how to install library dependencies in a CircleCI configuration for PlatformIO projects. It shows two methods: using the Library Manager and manually downloading a library.

LANGUAGE: yaml
CODE:
- run:
    name: Install library
    command: pio lib -g install 1

LANGUAGE: yaml
CODE:
- run:
    name: Install library
    command: |
      wget https://github.com/PaulStoffregen/OneWire/archive/master.zip -O /tmp/onewire_source.zip
      unzip /tmp/onewire_source.zip -d /tmp/
- run:
    name: Compile project
    command: pio ci --lib="/tmp/OneWire-master" --board=<ID_1> --board=<ID_2> --board=<ID_N>

----------------------------------------

TITLE: Implementing User Input Prompt in Python for PlatformIO
DESCRIPTION: This Python script demonstrates how to prompt the user for input, specifically asking for a user name. It checks if it's running in an integration dump, prompts for input if not, and sets the input as a macro in the PlatformIO environment.

LANGUAGE: python
CODE:
Import("env")

# Do not run a script when external applications, such as IDEs,
# dump integration data. Otherwise, input() will block the process
# waiting for the user input
if env.IsIntegrationDump():
    # stop the current script execution
    Return()

# Ask user name
print("Enter your name:")
user_name = input()
env.Append(
    CPPDEFINES=[("USER_NAME",  env.StringifyMacro(user_name))],
)

----------------------------------------

TITLE: Configuring Custom Upload Command with ST-Link in PlatformIO (INI)
DESCRIPTION: This snippet demonstrates how to configure a custom upload command for an STM32 microcontroller using ST-Link. It uses the st-flash tool to write the firmware to a specific memory address.

LANGUAGE: ini
CODE:
[env:custom_st_flash]
platform = ststm32
framework = stm32cube
board = bluepill_f103c6
upload_protocol = custom
upload_command = ${platformio.packages_dir}/tool-stlink/st-flash write $SOURCE 0x8000000

----------------------------------------

TITLE: Example Platform Show Output
DESCRIPTION: Example output showing platform details for the Atmel AVR platform, including version information, frameworks, and associated packages.

LANGUAGE: text
CODE:
> pio platform show atmelavr

atmelavr ~ Atmel AVR
====================
Atmel AVR 8- and 32-bit MCUs deliver a unique combination of performance, power efficiency and design flexibility. Optimized to speed time to market-and easily adapt to new ones-they are based on the industrys most code-efficient architecture for C and assembly programming.

Version: 1.2.1
Home: https://platformio.org/platforms/atmelavr
License: Apache-2.0
Frameworks: simba, arduino

Package toolchain-atmelavr
--------------------------
Type: toolchain
Requirements: ~1.40902.0
Installed: Yes
Description: avr-gcc
Url: http://www.atmel.com/products/microcontrollers/avr/32-bitavruc3.aspx?tab=tools
Version: 1.40902.0 (4.9.2)

Package framework-arduinoavr
----------------------------
Type: framework
Requirements: ~1.10612.1
Installed: Yes
Url: https://www.arduino.cc/en/Main/Software
Version: 1.10612.1 (1.6.12)
Description: Arduino Wiring-based Framework (AVR Core, 1.6)

Package framework-simba
-----------------------
Type: framework
Requirements: >=7.0.0
Installed: Yes
Url: https://github.com/eerimoq/simba
Version: 11.0.0
Description: Simba Embedded Programming Platform

Package tool-avrdude
--------------------
Type: uploader
Requirements: ~1.60300.0
Installed: Yes
Description: AVRDUDE
Url: http://www.nongnu.org/avrdude/
Version: 1.60300.0 (6.3.0)

Package tool-micronucleus
-------------------------
Type: uploader
Requirements: ~1.200.0
Installed: No (optional)

----------------------------------------

TITLE: Configuring Upstream RISC-V GAP Platform Version
DESCRIPTION: INI configuration for using the latest upstream development version of the RISC-V GAP platform directly from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-riscv_gap.git
board = ...

----------------------------------------

TITLE: Generating PlatformIO Project for NetBeans IDE
DESCRIPTION: This command initializes a PlatformIO project configured for NetBeans IDE. It uses the PlatformIO Core CLI to generate the project structure and configuration files for a specified board.

LANGUAGE: shell
CODE:
pio project init --ide netbeans --board <ID>

# For example, generate project for Arduino UNO
pio project init --ide netbeans --board uno

----------------------------------------

TITLE: Specifying Multiple Compatible Platforms in PlatformIO - JavaScript
DESCRIPTION: Example showing how to specify an array of compatible development platforms for a PlatformIO library. In this case, the library is compatible with atmelavr and espressif8266 platforms.

LANGUAGE: javascript
CODE:
"platforms": ["atmelavr", "espressif8266"]

----------------------------------------

TITLE: Executing PlatformIO Account Update Command in Bash
DESCRIPTION: This command is used to update a PlatformIO account profile. It can be run with various options to specify account details, or these can be entered later in an update wizard.

LANGUAGE: bash
CODE:
pio account update [OPTIONS]

----------------------------------------

TITLE: Installing PlatformIO Core in Codeanywhere
DESCRIPTION: This command installs PlatformIO Core in the Codeanywhere container using Python and curl.

LANGUAGE: bash
CODE:
sudo python -c "$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/develop/scripts/get-platformio.py)"

----------------------------------------

TITLE: Platform Update Example Output
DESCRIPTION: Demonstrates the typical output when running the platform update command, showing the status of various platform components and packages.

LANGUAGE: bash
CODE:
> pio platform update

Platform atmelavr
--------
Updating atmelavr @ 0.0.0:  [Up-to-date]
Updating framework-arduinoavr @ 1.10608.1:  [Up-to-date]
Updating tool-avrdude @ 1.60001.1:  [Up-to-date]
Updating toolchain-atmelavr @ 1.40801.0:    [Up-to-date]
Updating tool-scons @ 2.4.1:    [Up-to-date]

Platform espressif8266
--------
Updating espressif @ 0.0.0:     [Up-to-date]
Updating tool-scons @ 2.4.1:    [Up-to-date]
Updating toolchain-xtensa @ 1.40802.0:  [Up-to-date]
Updating tool-esptool @ 1.409.0:    [Up-to-date]
Updating tool-mkspiffs @ 1.102.0:   [Up-to-date]
Updating framework-arduinoespressif8266 @ 1.20300.0:    [Up-to-date]
Updating sdk-esp8266 @ 1.10502.0:   [Up-to-date]

Platform teensy
--------
Updating teensy @ 0.0.0:    [Up-to-date]
Updating framework-arduinoteensy @ 1.128.0:     [Up-to-date]
Updating tool-teensy @ 1.1.0:   [Up-to-date]
Updating framework-mbed @ 1.121.0:  [Up-to-date]
Updating tool-scons @ 2.4.1:    [Up-to-date]
Updating toolchain-atmelavr @ 1.40801.0:    [Up-to-date]
Updating toolchain-gccarmnoneeabi @ 1.40804.0:  [Up-to-date]

----------------------------------------

TITLE: Original Arduino INO Sketch Example
DESCRIPTION: Example of a basic Arduino sketch file showing setup, loop, and a custom function without required C++ includes and declarations.

LANGUAGE: cpp
CODE:
void setup () {
    someFunction(13);
}

void loop() {
    delay(1000);
}

void someFunction(int num) {
}

----------------------------------------

TITLE: Basic Package Search Command
DESCRIPTION: Basic command syntax for searching packages in PlatformIO Registry with optional parameters for pagination and sorting.

LANGUAGE: bash
CODE:
pio pkg search [OPTIONS] [QUERY]

----------------------------------------

TITLE: Configuring PlatformIO Include Directory
DESCRIPTION: Defines the path for project header files with type DirPath. Default path is '<Project>/include'. This directory is added to CPPPATH build environment variable. Additional include paths can be specified using build_flags with -I option.

LANGUAGE: plaintext
CODE:
include_dir

----------------------------------------

TITLE: Basic PlatformIO Device List Command Usage
DESCRIPTION: Shows the basic command syntax for listing devices with optional parameters.

LANGUAGE: bash
CODE:
pio device list [OPTIONS]

----------------------------------------

TITLE: Setting Debug Level for ESP8266 in PlatformIO
DESCRIPTION: Examples of setting various debug levels using build flags in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
framework = arduino

;;;;; Possible options ;;;;;;

; SSL
build_flags = -DDEBUG_ESP_SSL

; TLS_MEM
build_flags = -DDEBUG_ESP_TLS_MEM

; HTTP_CLIENT
build_flags = -DDEBUG_ESP_HTTP_CLIENT

; HTTP_SERVER
build_flags = -DDEBUG_ESP_HTTP_SERVER

; SSL+TLS_MEM
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_TLS_MEM

; SSL+HTTP_CLIENT
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_HTTP_CLIENT

; SSL+HTTP_SERVER
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_HTTP_SERVER

; TLS_MEM+HTTP_CLIENT
build_flags =
  -DDEBUG_ESP_TLS_MEM
  -DDEBUG_ESP_HTTP_CLIENT

; TLS_MEM+HTTP_SERVER
build_flags =
  -DDEBUG_ESP_TLS_MEM
  -DDEBUG_ESP_HTTP_SERVER

; HTTP_CLIENT+HTTP_SERVER
build_flags =
  -DDEBUG_ESP_HTTP_CLIENT
  -DDEBUG_ESP_HTTP_SERVER

; SSL+TLS_MEM+HTTP_CLIENT
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_TLS_MEM
  -DDEBUG_ESP_HTTP_CLIENT

; SSL+TLS_MEM+HTTP_SERVER
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_TLS_MEM
  -DDEBUG_ESP_HTTP_SERVER

; SSL+HTTP_CLIENT+HTTP_SERVER
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_HTTP_CLIENT
  -DDEBUG_ESP_HTTP_SERVER

; TLS_MEM+HTTP_CLIENT+HTTP_SERVER
build_flags =
  -DDEBUG_ESP_TLS_MEM
  -DDEBUG_ESP_HTTP_CLIENT
  -DDEBUG_ESP_HTTP_SERVER

; SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_TLS_MEM
  -DDEBUG_ESP_HTTP_CLIENT
  -DDEBUG_ESP_HTTP_SERVER

; CORE
build_flags = -DDEBUG_ESP_CORE

; WIFI
build_flags = -DDEBUG_ESP_WIFI

; HTTP_UPDATE
build_flags = -DDEBUG_ESP_HTTP_UPDATE

; UPDATER
build_flags = -DDEBUG_ESP_UPDATER

; OTA
build_flags = -DDEBUG_ESP_OTA

; OOM
build_flags =
  -DDEBUG_ESP_OOM
  -include "umm_malloc/umm_malloc_cfg.h"

; CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM
build_flags =
  -DDEBUG_ESP_CORE
  -DDEBUG_ESP_WIFI
  -DDEBUG_ESP_HTTP_UPDATE
  -DDEBUG_ESP_UPDATER
  -DDEBUG_ESP_OTA
  -DDEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"

; SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER+CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM
build_flags =
  -DDEBUG_ESP_SSL
  -DDEBUG_ESP_TLS_MEM
  -DDEBUG_ESP_HTTP_CLIENT
  -DDEBUG_ESP_HTTP_SERVER
  -DDEBUG_ESP_CORE
  -DDEBUG_ESP_WIFI
  -DDEBUG_ESP_HTTP_UPDATE
  -DDEBUG_ESP_UPDATER
  -DDEBUG_ESP_OTA
  -DDEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"

; NoAssert-NDEBUG
build_flags = -DNDEBUG

----------------------------------------

TITLE: Initializing Project in Current Directory
DESCRIPTION: Example of initializing a new PlatformIO project in the current working directory. This creates the necessary project structure including configuration files and directories for source code, libraries, and tests.

LANGUAGE: bash
CODE:
> pio project init

The current working directory *** will be used for the new project.
You can specify another project directory via
`pio project init -d %PATH_TO_THE_PROJECT_DIR%` command.

The following files/directories will be created in ***
platformio.ini - Project Configuration File. |-> PLEASE EDIT ME <-|
src - Put your source files here
lib - Put here project specific (private) libraries
Project has been successfully initialized!
Useful commands:
`pio run` - process/build project from the current directory
`pio run --target upload` or `pio run -t upload` - upload firmware to embedded board
`pio run --target clean` - clean project (remove compiled files)

----------------------------------------

TITLE: Customizing Doctest Context in C++
DESCRIPTION: Example of customizing the Doctest context in the main() function. This includes setting PlatformIO required options and additional custom options like aborting after a certain number of failed assertions and sorting test cases by name.

LANGUAGE: cpp
CODE:
int main(int argc, char **argv)
{
  doctest::Context context;

  // BEGIN:: PLATFORMIO REQUIRED OPTIONS
  context.setOption("success", true);     // Reports successful tests
  context.setOption("no-exitcode", true); // Do not return non-zero code on failed test case
  // END:: PLATFORMIO REQUIRED OPTIONS

  // YOUR CUSTOM DOCTEST OPTIONS
  context.setOption("abort-after", 5);    // stop test execution after 5 failed assertions
  context.setOption("order-by", "name");  // sort the test cases by their name

  context.applyCommandLine(argc, argv);
  return context.run();
}

----------------------------------------

TITLE: Configuring Build Directory Path in PlatformIO
DESCRIPTION: Configuration option for specifying the build directory path where PlatformIO stores compiled objects, libraries, and cached data. Default location is within the workspace directory. The directory can be safely deleted and will be recreated on next build.

LANGUAGE: ini
CODE:
build_dir = workspace/build

----------------------------------------

TITLE: Configuring Debug Speed in PlatformIO INI File
DESCRIPTION: Demonstrates various ways to set the debug_speed option in a PlatformIO project configuration file. Examples include setting a fixed speed in kHz, automatic speed for J-Link, and adaptive clocking for J-Link.

LANGUAGE: ini
CODE:
[env:custom_debug_speed_examples]
...

; fixed speed in kHz
debug_speed = 500

; automatic speed (only J-Link)
debug_speed = auto

; adaptive clocking instead of fixed JTAG speed (only J-Link)
debug_speed = adaptive

----------------------------------------

TITLE: Library List Output Example
DESCRIPTION: Example output showing the format of library information displayed when using the list command, including library names, versions, compatibility, and other metadata.

LANGUAGE: text
CODE:
> pio lib -g list

Library Storage: /storage/dir/...

Adafruit Unified Sensor
=======================
#ID: 31
Required for all Adafruit Unified Sensor based libraries.

Version: 1.0.2
Keywords: sensors
Compatible frameworks: arduino
Compatible platforms: atmelavr, atmelsam, espressif8266, intel_arc32, microchippic32, nordicnrf51, teensy, timsp430
Authors: Adafruit

----------------------------------------

TITLE: Extending PlatformIO Config with Additional Environments
DESCRIPTION: Extra configuration file defining additional ESP32 board environments with custom build flags.

LANGUAGE: ini
CODE:
[env:esp32dev]
board = esp32dev
build_flags = ${common.lib_flags} ${common.debug_flags}

[env:lolin32]
platform = platformio/espressif32
framework = espidf
board = lolin32
build_flags = ${common.debug_flags}

----------------------------------------

TITLE: Arduino String Class Unit Tests
DESCRIPTION: Unit tests for Arduino String class methods including concatenation, substring, case conversion and character replacement

LANGUAGE: cpp
CODE:
#include <Arduino.h>
#include <unity.h>

String STR_TO_TEST;

void setUp(void) {
    // set stuff up here
    STR_TO_TEST = "Hello, world!";
}

void tearDown(void) {
    // clean stuff up here
    STR_TO_TEST = "";
}

void test_string_concat(void) {
    String hello = "Hello, ";
    String world = "world!";
    TEST_ASSERT_EQUAL_STRING(STR_TO_TEST.c_str(), (hello + world).c_str());
}

void test_string_substring(void) {
    TEST_ASSERT_EQUAL_STRING("Hello", STR_TO_TEST.substring(0, 5).c_str());
}

void test_string_index_of(void) {
    TEST_ASSERT_EQUAL(7, STR_TO_TEST.indexOf('w'));
}

void test_string_equal_ignore_case(void) {
    TEST_ASSERT_TRUE(STR_TO_TEST.equalsIgnoreCase("HELLO, WORLD!"));
}

void test_string_to_upper_case(void) {
    STR_TO_TEST.toUpperCase();
    TEST_ASSERT_EQUAL_STRING("HELLO, WORLD!", STR_TO_TEST.c_str());
}

void test_string_replace(void) {
    STR_TO_TEST.replace('!', '?');
    TEST_ASSERT_EQUAL_STRING("Hello, world?", STR_TO_TEST.c_str());
}

void setup()
{
    delay(2000); // service delay
    UNITY_BEGIN();

    RUN_TEST(test_string_concat);
    RUN_TEST(test_string_substring);
    RUN_TEST(test_string_index_of);
    RUN_TEST(test_string_equal_ignore_case);
    RUN_TEST(test_string_to_upper_case);
    RUN_TEST(test_string_replace);

    UNITY_END(); // stop unit testing
}

void loop()
{
}

----------------------------------------

TITLE: Configuring Base PlatformIO INI File
DESCRIPTION: Base configuration file showing how to include multiple extra config files and define global environment settings for ESP32 development.

LANGUAGE: ini
CODE:
[platformio]
extra_configs =
  extra_envs.ini
  extra_debug.ini

; Global data for all [env:***]
[env]
platform = platformio/espressif32
framework = espidf

; Custom data group
; can be use in [env:***] via ${common.***}
[common]
debug_flags = -D RELEASE
lib_flags = -lc -lm

[env:esp-wrover-kit]
board = esp-wrover-kit
build_flags = ${common.debug_flags}

----------------------------------------

TITLE: Passing Arguments to PlatformIO Test Program
DESCRIPTION: Example of using the '--program-arg' option to pass extra arguments to the testing program in PlatformIO. This allows specifying additional parameters for the test execution.

LANGUAGE: bash
CODE:
> pio test --program-arg "--abort-after=1" --program-arg="-s"
# or short format
> pio test -a "-aa=1" -a "-s"

----------------------------------------

TITLE: Configuring Debugging Tool in platformio.ini
DESCRIPTION: Configuration example for enabling CMSIS-DAP debugging tool in project configuration file

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = cmsis-dap

----------------------------------------

TITLE: Enabling Clang-Tidy in PlatformIO Configuration
DESCRIPTION: Basic configuration to enable Clang-Tidy as the check tool in a PlatformIO project's environment.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = clangtidy

----------------------------------------

TITLE: Configuring Unity Options in PlatformIO.ini
DESCRIPTION: Example of setting Unity configuration options using build flags in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:extra_unity_options]
platform = native
build_flags =
    -D UNITY_INT_WIDTH=16
    -D UNITY_FLOAT_TYPE=float16_t

----------------------------------------

TITLE: Implementing Dependent Build Targets
DESCRIPTION: Example demonstrating how to create a custom target that depends on build artifacts like firmware files.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
...
extra_scripts = extra_script.py

LANGUAGE: python
CODE:
Import("env")

env.AddCustomTarget(
    "ota",
    "$BUILD_DIR/${PROGNAME}.elf",
    "ota_script --firmware-path $SOURCE"
)

----------------------------------------

TITLE: Example PlatformIO System Info Output
DESCRIPTION: Sample output showing system information including PlatformIO Core version, Python version, system type, platform details, file system encoding, and installation statistics.

LANGUAGE: text
CODE:
PlatformIO Core             5.0.0
Python                      3.8.5-final.0
System Type                 darwin_x86_64
Platform                    macOS-10.15.6
File System Encoding        utf-8
Locale Encoding             UTF-8
PlatformIO Core Directory   /Users/freedom/.platformio
PlatformIO Core Executable  /Users/freedom/.platformio/penv/bin/platformio
Python Executable           /Users/freedom/.platformio/penv/bin/python
Global Libraries            0
Development Platforms       37
Tools & Toolchains          79

----------------------------------------

TITLE: Setting Custom Build Flags in GitHub Actions for PlatformIO
DESCRIPTION: This YAML snippet demonstrates how to set custom build flags for a PlatformIO CI build using the PLATFORMIO_BUILD_FLAGS environment variable in a GitHub Actions workflow.

LANGUAGE: yaml
CODE:
- name: Run PlatformIO
  run: pio ci path/to/test/file.c --board=<ID_1> --board=<ID_2> --board=<ID_N>
  env:
    PLATFORMIO_BUILD_FLAGS: -D SPECIFIC_MACRO -I/extra/inc

----------------------------------------

TITLE: Updating Platform Packages in PlatformIO
DESCRIPTION: Examples of updating specific platform packages using version constraints and Git repositories.

LANGUAGE: shell
CODE:
pio pkg update -p "aceinna/aceinna_imu@^1.3.8" -p "platformio/atmelavr"
pio pkg update --platform "https://github.com/platformio/platform-sifive.git"

----------------------------------------

TITLE: Using PlatformIO Platform Show Command
DESCRIPTION: Command syntax for showing details about a specific platform. This command has been deprecated in favor of 'pkg show'.

LANGUAGE: bash
CODE:
pio platform show PLATFORM

----------------------------------------

TITLE: Listing Boards by Platform
DESCRIPTION: Example of using the 'pio boards' command to show boards for a specific platform, in this case, the TI MSP430 platform. This lists all boards available for the timsp430 platform.

LANGUAGE: bash
CODE:
pio boards timsp430

----------------------------------------

TITLE: Remote Run Example Output
DESCRIPTION: Demonstrates a complete remote run process including local building and remote upload for an Arduino Uno project, showing compilation, linking and uploading steps.

LANGUAGE: bash
CODE:
> pio remote run --environment uno --target upload

Building project locally
[Wed Oct 26 16:35:09 2016] Processing uno (platform: atmelavr, board: uno, framework: arduino)
--------------------------------------------------------------------------------
Verbose mode can be enabled via `-v, --verbose` option
Collected 25 compatible libraries
Looking for dependencies...
Project does not have dependencies
Compiling .pio/build/uno/src/main.o
Archiving .pio/build/uno/libFrameworkArduinoVariant.a
Indexing .pio/build/uno/libFrameworkArduinoVariant.a
[...]
Environment uno         [SUCCESS]
========================= [SUCCESS] Took 3.04 seconds ========================

----------------------------------------

TITLE: Basic PlatformIO CI Command Usage
DESCRIPTION: Shows the basic command syntax for running PlatformIO CI builds. The command accepts options and source file/directory paths.

LANGUAGE: bash
CODE:
pio ci [OPTIONS] [SRC]

----------------------------------------

TITLE: Using Arduino Framework Staging Version for ESP8266 in PlatformIO
DESCRIPTION: Example of using the staging version of Arduino framework by specifying the GitHub repository in platformio.ini

LANGUAGE: ini
CODE:
[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2
framework = arduino
platform_packages =
    platformio/framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git

----------------------------------------

TITLE: Adding External Sources to PlatformIO Build in Python
DESCRIPTION: This Python script demonstrates how to add external source files to the PlatformIO build process. It uses the BuildSources method to include files from an external directory in the project build.

LANGUAGE: python
CODE:
import os

Import("env")

env.BuildSources(
    os.path.join("$BUILD_DIR", "external", "build"),
    os.path.join("$PROJECT_DIR", "external", "sources")
)

----------------------------------------

TITLE: Customizing Compilation Database Generation with Python
DESCRIPTION: Python script that customizes the compilation database generation by enabling toolchain includes and specifying a custom output path in the build directory.

LANGUAGE: python
CODE:
import os
Import("env")

# include toolchain paths
env.Replace(COMPILATIONDB_INCLUDE_TOOLCHAIN=True)

# override compilation DB path
env.Replace(COMPILATIONDB_PATH=os.path.join("$BUILD_DIR", "compile_commands.json"))

----------------------------------------

TITLE: Arduino Sketch for Serial Communication
DESCRIPTION: This C++ code demonstrates a basic Arduino sketch that prints a counter and echoes serial input. It's intended to be saved as main.cpp in the project's src folder.

LANGUAGE: c
CODE:
#include <Arduino.h>

int i = 0;

void setup() {
    Serial.begin(9600);
    Serial.println("Hello Codeanywhere!");
}

void loop() {
    /*  serial echo */
    while (Serial.available()) {
        Serial.write(Serial.read());
    }

    i++;
    Serial.println(i);
    delay(100);
}

----------------------------------------

TITLE: Uploading Firmware Remotely with PlatformIO
DESCRIPTION: This command remotely uploads firmware to devices visible to the PlatformIO Remote Agent.

LANGUAGE: bash
CODE:
pio remote run -t upload

----------------------------------------

TITLE: Configuring Espressif 32 Platform Version in PlatformIO
DESCRIPTION: This snippet shows how to specify the platform version for Espressif 32 projects in platformio.ini. It demonstrates using the latest stable version, a specific version, and the upstream development version.

LANGUAGE: INI
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = espressif32
board = ...

; Specific version
[env:custom_stable]
platform = espressif32@x.y.z
board = ...

[env:upstream_develop]
platform = https://github.com/platformio/platform-espressif32.git
board = ...

----------------------------------------

TITLE: Setting Custom Build Variant for BSP
DESCRIPTION: Example of selecting specific target macros for Board Support Package components.

LANGUAGE: ini
CODE:
[env:nucleo_g474re]
platform = ststm32
framework = stm32cube
board = nucleo_g474re
board_build.stm32cube.variant = STM32G4xx_Nucleo

----------------------------------------

TITLE: Using PlatformIO Library List Command
DESCRIPTION: Examples of using the 'pio lib list' command to display installed libraries from different storage locations including project-specific, global, and custom storage directories.

LANGUAGE: bash
CODE:
pio lib [STORAGE_OPTIONS] list [OPTIONS]

# list project dependent libraries
# (run it from a project root where is located "platformio.ini")
pio lib list [OPTIONS]

# list libraries from global storage
pio lib --global list [OPTIONS]
pio lib -g list [OPTIONS]

# list libraries from custom storage
pio lib --storage-dir /path/to/dir list [OPTIONS]
pio lib -d /path/to/dir list [OPTIONS]

----------------------------------------

TITLE: Implementing Custom Target API in Python
DESCRIPTION: Core API for adding custom build targets in PlatformIO. Demonstrates the AddCustomTarget method with its arguments including name, dependencies, actions, title, description and build flags.

LANGUAGE: python
CODE:
Import("env")

env.AddCustomTarget(
    name,
    dependencies,
    actions,
    title=None,
    description=None,
    always_build=True
)

----------------------------------------

TITLE: Using 'pio project config' Command in PlatformIO
DESCRIPTION: This command shows the computed project configuration based on the project configuration file. It expands extra configuration files and dynamic variables, helping developers understand how PlatformIO processes the configuration.

LANGUAGE: bash
CODE:
pio project config [OPTIONS]

----------------------------------------

TITLE: Defining Preprocessor Macros in PlatformIO Configuration
DESCRIPTION: Example of setting preprocessor macros using build_flags in platformio.ini. This shows how to define simple and complex macros, including environment variables and float values.

LANGUAGE: ini
CODE:
[env:specific_defines]
build_flags =
  -DFOO -DBAR=1
  -D BUILD_ENV_NAME=$PIOENV
  -D CURRENT_TIME=$UNIX_TIME
  -DFLOAT_VALUE=1.23457e+07

----------------------------------------

TITLE: Listing All Supported Frameworks
DESCRIPTION: Example command output showing the list of supported frameworks with their descriptions and home URLs, including Arduino, ARTIK SDK, CMSIS, ESP-IDF, and others.

LANGUAGE: bash
CODE:
> pio platform frameworks

----------------------------------------

TITLE: Remote Update Command Example Output
DESCRIPTION: Demonstrates the typical output of running the remote update command, showing status checks for various platforms and libraries.

LANGUAGE: text
CODE:
> pio remote update

Platform Manager
================
Platform timsp430
--------
Updating timsp430 @ 0.0.0:  [Up-to-date]
Updating toolchain-timsp430 @ 1.40603.0:    [Up-to-date]
Updating framework-energiamsp430 @ 1.17.0:  [Up-to-date]
Updating framework-arduinomsp430 @ 1.10601.0:   [Up-to-date]
Updating tool-scons @ 2.4.1:    [Up-to-date]
...

----------------------------------------

TITLE: Filtering Test Suites in PlatformIO
DESCRIPTION: Example of using the '--filter' option to process specific test suites in PlatformIO. This allows running only test suites whose path matches the specified pattern relative to the project's test directory.

LANGUAGE: bash
CODE:
pio test --filter "test_common" -f "native/*"

----------------------------------------

TITLE: Configuring Debug Load Commands in PlatformIO
DESCRIPTION: Example configuration showing how to set up debug_load_cmds to erase flash sectors before loading firmware. The commands are executed sequentially, first erasing sectors 0-11, then loading the program.

LANGUAGE: ini
CODE:
[env:debug]
platform = ...
board = ...
debug_load_cmds =
  monitor flash erase_sector 0 0 11
  load

----------------------------------------

TITLE: Creating Library Manifest JSON for PlatformIO
DESCRIPTION: Example of a library.json manifest file for PlatformIO, including metadata such as name, version, description, authors, dependencies, and compatibility information.

LANGUAGE: javascript
CODE:
{
  "name": "HelloWorld",
  "version": "1.0.0",
  "description": "A \"Hello world\" program is a computer program that outputs \"Hello World\" (or some variant) on a display device",
  "keywords": "planet, happiness, people",
  "repository":
  {
    "type": "git",
    "url": "https://github.com/username/hello-world.git"
  },
  "authors":
  [
    {
      "name": "John Smith",
      "email": "me@john-smith.com",
      "url": "https://www.john-smith/contact"
    },
    {
      "name": "Andrew Smith",
      "email": "me@andrew-smith.com",
      "url": "https://www.andrew-smith/contact",
      "maintainer": true
    }
  ],
  "license": "MIT",
  "homepage": "https://www.helloworld.org/",
  "dependencies": {
    "ownername/print": "~1.3.0"
  },
  "frameworks": "*",
  "platforms": "*"
}

----------------------------------------

TITLE: Configuring Flash Running Mode without Bridge for GAPuino in PlatformIO
DESCRIPTION: Shows the configuration for running a program from Flash on a GAPuino board without bridge interaction. This setup modifies the boot mode and upload commands in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:gapuino]
platform = riscv_gap
board = gapuino
framework = ...
board_upload.boot_mode = jtag_hyper
board_upload.commands = start

----------------------------------------

TITLE: Configuring Black Magic Probe in platformio.ini
DESCRIPTION: Example configuration for using Black Magic Probe as a debugging tool in PlatformIO's project configuration file. Specifies the debug tool and port.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = blackmagic
debug_port = <CONFIGURE GDB PORT>

; 
; Debug Port Examples
;

; Linux
debug_port = /dev/ttyACM0

; Windows for COM1-COM9
debug_port = COM3
; Windows for COM10-XXX
debug_port = \\.\COM13

; macOS
debug_port = /dev/cu.usbmodemE2C0C4C6

----------------------------------------

TITLE: Writing Unit Tests for Calculator Library in C
DESCRIPTION: This code demonstrates how to write unit tests for the calculator library using the Unity testing framework. It includes test cases for each arithmetic operation.

LANGUAGE: C
CODE:
#include <calculator.h>
#include <unity.h>

void setUp(void)
{
  // set stuff up here
}

void tearDown(void)
{
  // clean stuff up here
}

void test_function_calculator_addition(void)
{
  TEST_ASSERT_EQUAL(32, addition(25, 7));
}

void test_function_calculator_subtraction(void)
{
  TEST_ASSERT_EQUAL(20, subtraction(23, 3));
}

void test_function_calculator_multiplication(void)
{
  TEST_ASSERT_EQUAL(50, multiplication(25, 2));
}

void test_function_calculator_division(void)
{
  TEST_ASSERT_EQUAL(32, division(100, 3));
}

void app_main()
{
  UNITY_BEGIN();

  RUN_TEST(test_function_calculator_addition);
  RUN_TEST(test_function_calculator_subtraction);
  RUN_TEST(test_function_calculator_multiplication);
  RUN_TEST(test_function_calculator_division);

  UNITY_END();
}

----------------------------------------

TITLE: Using PlatformIO Framework List Command
DESCRIPTION: Command syntax for listing supported frameworks with optional JSON output format. This command is deprecated and will be replaced by the unified pkg command.

LANGUAGE: bash
CODE:
pio platform frameworks QUERY [OPTIONS]

----------------------------------------

TITLE: ULP Coprocessor CMake Configuration
DESCRIPTION: CMake configuration for ULP (Ultra Low Power) coprocessor programming, including source file registration and binary embedding.

LANGUAGE: cmake
CODE:
idf_component_register(SRCS "ulp_adc_example_main.c")

set(ulp_app_name ulp_main)
set(ulp_s_sources "../ulp/adc.S")
set(ulp_exp_dep_srcs "ulp_adc_example_main.c")
ulp_embed_binary(${ulp_app_name} ${ulp_s_sources} ${ulp_exp_dep_srcs})

----------------------------------------

TITLE: Running PlatformIO Commands
DESCRIPTION: Commands to force PlatformIO to install dependencies and upload firmware. These commands should be run from the system terminal when experiencing access denied errors.

LANGUAGE: bash
CODE:
# Change directory to PlatformIO Project where is located "platformio.ini"
cd path/to/platformio/project

# Force PlatformIO to install PlatformIO Home dependencies
pio home

# Force PlatformIO to install toolchains
pio run --target upload

----------------------------------------

TITLE: Installing Python Packages Script
DESCRIPTION: Python script that demonstrates how to install additional Python packages into the PlatformIO environment. Includes package listing, direct installation from PyPI, and conditional installation based on import availability.

LANGUAGE: python
CODE:
Import("env")

# List installed packages
env.Execute("$PYTHONEXE -m pip list")

# Install custom packages from the PyPi registry
env.Execute("$PYTHONEXE -m pip install pkg1 pkg2")

# Install missed package
try:
	import some_package
except ImportError:
	env.Execute("$PYTHONEXE -m pip install some_package")

----------------------------------------

TITLE: Custom Monitor Filter Implementation
DESCRIPTION: Example implementation of a custom device monitor filter in Python that extends the DeviceMonitorFilterBase class.

LANGUAGE: python
CODE:
from platformio.public import DeviceMonitorFilterBase

class Demo(DeviceMonitorFilterBase):
    NAME = "demo"

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        print("Demo filter is loaded")

    def rx(self, text):
        return f"Received: {text}\n"

    def tx(self, text):
        print(f"Sent: {text}\n")
        return text

----------------------------------------

TITLE: Complex PlatformIO CI Setup in Drone for USB Host Shield Project
DESCRIPTION: This snippet demonstrates a more complex setup for PlatformIO CI in Drone, using the USB Host Shield project as an example. It includes setting environment variables, installing dependencies, and running tests for multiple boards.

LANGUAGE: bash
CODE:
PLATFORMIO_CI_SRC=examples/Bluetooth/PS3SPP/PS3SPP.ino
PLATFORMIO_CI_SRC=examples/pl2303/pl2303_gps/pl2303_gps.ino

LANGUAGE: bash
CODE:
pip install -U platformio
wget https://github.com/xxxajk/spi4teensy3/archive/master.zip -O /tmp/spi4teensy3.zip
unzip /tmp/spi4teensy3.zip -d /tmp
pio ci --lib="." --lib="/tmp/spi4teensy3-master" --board=uno --board=teensy31 --board=due

----------------------------------------

TITLE: Setting Upload Speed for ESP8266 in PlatformIO
DESCRIPTION: Example of setting a custom upload speed using the upload_speed option in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
upload_speed = 9600

----------------------------------------

TITLE: Configuring Custom DSP Library Usage
DESCRIPTION: Configuration to use custom DSP library implementation instead of the default one provided by STM32Cube.

LANGUAGE: ini
CODE:
[env:nucleo_f401re]
platform = ststm32
framework = stm32cube
board = nucleo_f401re
board_build.stm32cube.custom_dsp_library = yes

----------------------------------------

TITLE: Cleaning Project with pio run
DESCRIPTION: Example of using the 'pio run' command with the clean target to remove build artifacts from all environments in a project.

LANGUAGE: bash
CODE:
> pio run -t clean

----------------------------------------

TITLE: Usage of PlatformIO Package Publish Command
DESCRIPTION: Demonstrates the basic usage syntax for the 'pio pkg publish' command, which is used to publish a package to the PlatformIO Registry. The command can optionally take a source directory, tar.gz, or zip file as an argument, followed by various options.

LANGUAGE: bash
CODE:
pio pkg publish [<source directory, tar.gz or zip>] [OPTIONS]

----------------------------------------

TITLE: Configuring ST-Util Debugging in PlatformIO
DESCRIPTION: INI configuration for using on-board ST-Link V2/V2-1 with ST-Util GDB Server in PlatformIO. Includes debug tool setup, port configuration, and custom debug server commands.

LANGUAGE: ini
CODE:
[env:debug]
platform = ststm32
framework = mbed
board = ...
debug_tool = custom
debug_port = :4242
debug_server = $PLATFORMIO_CORE_DIR/packages/tool-stlink/bin/st-util
debug_init_cmds =
  define pio_reset_halt_target
      monitor reset
      monitor halt
  end
  define pio_reset_run_target
      monitor reset
  end
  target extended-remote $DEBUG_PORT
  $LOAD_CMDS
  pio_reset_halt_target
  $INIT_BREAK

----------------------------------------

TITLE: Listing Project Structure for Multi-Project Workspace in Eclipse Che
DESCRIPTION: Demonstrates the recommended folder structure for managing multiple PlatformIO projects within a single Eclipse Che workspace. This structure helps organize source files, libraries, and configuration for each project separately.

LANGUAGE: bash
CODE:
├── project-A
│   ├── lib
│   │   └── README
│   ├── platformio.ini
│   └── src
│       └── main.ino
└── project-B
    ├── lib
    │   └── README
    ├── platformio.ini
    └── src
        ├── main.cpp
        └── main.h

----------------------------------------

TITLE: Customizing ESP32 Board Parameters
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:vintlabs-devkit-v1]
platform = espressif32
board = vintlabs-devkit-v1

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Updating Tool Packages in PlatformIO
DESCRIPTION: Examples of updating specific tool packages using package name and Git repository.

LANGUAGE: shell
CODE:
pio pkg update -t "platformio/tool-openocd"
pio pkg update --tool https://github.com/platformio/platform-sifive.git

----------------------------------------

TITLE: Configuring build_src_filter in PlatformIO INI file
DESCRIPTION: This snippet demonstrates how to use the build_src_filter option to include .c and .cpp files while excluding .S and .asm files from the build process. It uses GLOB patterns to recursively select files.

LANGUAGE: ini
CODE:
[env:myenv]
build_src_filter =
  +<**/*.c>
  +<**/*.cpp>
  -<**/*.S>
  -<**/*.asm>

----------------------------------------

TITLE: Resetting PlatformIO Settings with 'pio settings reset'
DESCRIPTION: This command resets all PlatformIO settings to their default values. It does not require any additional arguments.

LANGUAGE: bash
CODE:
pio settings reset

----------------------------------------

TITLE: Defining Library Name in PlatformIO Manifest
DESCRIPTION: Specifies the required 'name' field for a PlatformIO library manifest. The name must be unique in the PlatformIO Registry, follow slug-style formatting, and adhere to specific character and length constraints.

LANGUAGE: plaintext
CODE:
"name"
--------

**Required** | Type: ``String`` | Max. Length: 50

A name of a library.

* Must be unique in the `PlatformIO Registry <https://registry.platformio.org>`__
* Should be slug style for simplicity, consistency, and compatibility.
  Example: *HelloWorld*
* Can contain a-z, digits, and dashes (but not start/end with them)
* Consecutive dashes and [:;/,@<>] chars are not allowed.

----------------------------------------

TITLE: Configuring test_build_src in PlatformIO project (INI)
DESCRIPTION: This snippet demonstrates how to set the test_build_src option to 'yes' in a PlatformIO project's configuration file. When enabled, it forces the unit testing engine to build the main source code alongside the test code.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
test_build_src = yes

----------------------------------------

TITLE: Configuring Raw Device Monitor Output in PlatformIO
DESCRIPTION: The monitor_raw option is a boolean setting that, when enabled, disables encodings, transformations, and filters applied to device output during monitoring. It corresponds to the --raw flag in the 'pio device monitor' command.

LANGUAGE: INI
CODE:
monitor_raw = yes

----------------------------------------

TITLE: Displaying Help for PlatformIO Access Command
DESCRIPTION: These commands display help information for the 'pio access' command and its subcommands. They show all available options and usage instructions.

LANGUAGE: bash
CODE:
pio access --help
pio access COMMAND --help

----------------------------------------

TITLE: Installing ATmega AVR Platform with Specific Package
DESCRIPTION: This example demonstrates how to install the ATmega AVR platform with only the 'uploader' utility, skipping default packages.

LANGUAGE: bash
CODE:
> pio platform install atmelavr --skip-default-package --with-package=uploader

PlatformManager: Installing atmelavr
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
atmelavr @ 0.0.0 has been successfully installed!
PackageManager: Installing tool-micronucleus @ ~1.200.0
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
tool-micronucleus @ 1.200.0 has been successfully installed!
PackageManager: Installing tool-avrdude @ ~1.60001.0
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
tool-avrdude @ 1.60001.1 has been successfully installed!
The platform 'atmelavr' has been successfully installed!
The rest of packages will be installed automatically depending on your build environment.

----------------------------------------

TITLE: Accessing and Modifying Multiple Environments in Post-Build Script (Python)
DESCRIPTION: This script shows how to import both the global and project-specific construction environments, dump their contents for debugging, and append extra flags to each environment separately. It demonstrates the difference between modifying the global environment and the project-specific environment.

LANGUAGE: python
CODE:
Import("env", "projenv")

# Dump global construction environment (for debug purpose)
print(env.Dump())

# Dump project construction environment (for debug purpose)
print(projenv.Dump())

# append extra flags to global build environment
# which later will be used to build:
# - frameworks
# - dependent libraries
env.Append(CPPDEFINES=[
  "MACRO_1_NAME",
  ("MACRO_2_NAME", "MACRO_2_VALUE")
])

# append extra flags to only project build environment
projenv.Append(CPPDEFINES=[
  "PROJECT_EXTRA_MACRO_1_NAME",
  ("ROJECT_EXTRA_MACRO_2_NAME", "ROJECT_EXTRA_MACRO_2_VALUE")
])

----------------------------------------

TITLE: Using PlatformIO Platform Search Command
DESCRIPTION: This snippet demonstrates the basic usage of the 'pio platform search' command. It allows searching for development platforms with an optional query and JSON output option.

LANGUAGE: bash
CODE:
pio platform search QUERY [OPTIONS]

----------------------------------------

TITLE: Configuring Custom Upload Command with AVR ISP in PlatformIO (INI)
DESCRIPTION: This snippet demonstrates how to override the default upload command for an ATmega328p microcontroller using AVR ISP. It sets custom upload flags and specifies a custom upload command using avrdude.

LANGUAGE: ini
CODE:
[env:program_via_AVR_ISP]
platform = atmelavr
framework = arduino
board = uno
upload_protocol = custom
upload_flags =
    -C
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    atmega328p
    -P
    $UPLOAD_PORT
    -b
    115200
    -c
    stk500v1
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

----------------------------------------

TITLE: Configuring Single Header in PlatformIO
DESCRIPTION: Example showing how to specify a single header file that can be included in project source files. This configuration allows the header to be included using angle bracket notation.

LANGUAGE: javascript
CODE:
"headers": "MyLibrary.h"

----------------------------------------

TITLE: Implementing CustomTestRunner Class in Python for PlatformIO
DESCRIPTION: The CustomTestRunner class provides methods for setting up, tearing down, building, uploading, and running tests, as well as configuring the build environment and handling test output.

LANGUAGE: python
CODE:
class CustomTestRunner:
    def setup(self):
        ...

    def teardown(self):
        ...

    def stage_building(self):
        ...

    def stage_uploading(self):
        ...

    def stage_testing(self):
        ...

    def configure_build_env(self):
        ...

    def on_testing_data_output(self, data):
        ...

    def on_testing_line_output(self, line):
        ...

----------------------------------------

TITLE: Calculator Library Implementation
DESCRIPTION: Simple calculator library with basic arithmetic operations for unit testing demonstration

LANGUAGE: c
CODE:
#include "calculator.h"

int add(int a, int b)
{
    return a + b;
}

int sub(int a, int b)
{
    return a - b;
}

int mul(int a, int b)
{
    return a * b;
}

----------------------------------------

TITLE: Using PlatformIO org Command Help
DESCRIPTION: Commands to display help information for the PlatformIO organization management functionality. Shows both general org command help and specific command help options.

LANGUAGE: bash
CODE:
pio org --help
pio org COMMAND --help

----------------------------------------

TITLE: Setting Custom Monitor Speed in PlatformIO INI Configuration
DESCRIPTION: Example showing how to configure a custom baud rate (115200) for serial monitor communication in a PlatformIO project configuration file. The monitor_speed parameter specifies the communication speed for serial monitoring.

LANGUAGE: ini
CODE:
[env:custom_monitor_speedrate]
...
monitor_speed = 115200

----------------------------------------

TITLE: Adding Extra Include Paths in PlatformIO Library Configuration
DESCRIPTION: This example shows how to specify additional include paths for the C preprocessor in a PlatformIO library build configuration.

LANGUAGE: javascript
CODE:
"build": {
    "flags": [
        "-I inc",
        "-I inc/target_x13"
    ]
}

----------------------------------------

TITLE: Setting Custom Flash Size for ESP8266 in PlatformIO
DESCRIPTION: Example of setting a custom flash size using the board_build.ldscript option in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
board_build.ldscript = eagle.flash.4m.ld

----------------------------------------

TITLE: Installing and Running JLink GDB Server in PlatformIO
DESCRIPTION: This example shows how to install the JLink package and run the GDB server using the 'pio pkg exec' command. It demonstrates the usage of the '--package' option to specify the JLink tool and execute the JLinkGDBServer with various configuration options.

LANGUAGE: bash
CODE:
> pio pkg exec -p tool-jlink -- JLinkGDBServer -singlerun -if JTAG -select USB -jtagconf -1,-1 -device EFR32BG22CxxxF512 -port 2331

----------------------------------------

TITLE: Dumping PlatformIO Core Installation State in Python
DESCRIPTION: This command runs the Installer Script to check the PlatformIO Core installation state and dump the information into a JSON file. It provides detailed installation data for further processing.

LANGUAGE: bash
CODE:
get-platformio.py check core --dump-state tmpdir/pioinstaller-state.json

----------------------------------------

TITLE: Configuring Basic Board Settings for ESP32-S2
DESCRIPTION: Basic configuration for setting up an Adafruit Feather ESP32-S2 project environment in PlatformIO.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2]
platform = espressif32
board = adafruit_feather_esp32s2

----------------------------------------

TITLE: Filtering Boards by MCU
DESCRIPTION: Shows how to use the 'pio boards' command to filter boards based on a specific MCU, in this case, ATmega168. This displays all boards using the ATmega168 microcontroller.

LANGUAGE: bash
CODE:
pio boards atmega168

----------------------------------------

TITLE: Basic PlatformIO Package List Command Usage
DESCRIPTION: Basic command syntax for listing installed packages in PlatformIO. Shows packages and dependencies in a tree structure based on project configuration.

LANGUAGE: bash
CODE:
pio pkg list [OPTIONS]

----------------------------------------

TITLE: Example of Making a Package Publicly Accessible in PlatformIO
DESCRIPTION: This example demonstrates how to use the 'pio access public' command to make a specific package (identified by its URN) publicly accessible in the PlatformIO registry.

LANGUAGE: bash
CODE:
> pio access public prn:reg:pkg:8036:platform
The resource "prn:reg:pkg:8036:platform" has been successfully updated.

----------------------------------------

TITLE: Defining Framework in PlatformIO Project Configuration
DESCRIPTION: The 'framework' option is used to specify one or more frameworks for a PlatformIO project environment. It accepts a string value and can be used multiple times for multiple frameworks.

LANGUAGE: ini
CODE:
framework = arduino

----------------------------------------

TITLE: Travis CI Configuration with Library Dependencies
DESCRIPTION: This YAML configuration demonstrates how to include library dependencies in a Travis CI build for PlatformIO. It shows two methods: installing libraries from the PlatformIO Library Registry and manually downloading libraries.

LANGUAGE: yaml
CODE:
install:
    - pip install -U platformio

    #
    # Libraries from PlatformIO Library Registry:
    #
    # https://platformio.org/lib/show/1/OneWire
    - pio lib -g install 1

# Manually download library
install:
    - pip install -U platformio

    # download library to the temporary directory
    - wget https://github.com/PaulStoffregen/OneWire/archive/master.zip -O /tmp/onewire_source.zip
    - unzip /tmp/onewire_source.zip -d /tmp/

script:
    - pio ci --lib="/tmp/OneWire-master" --board=<ID_1> --board=<ID_2> --board=<ID_N>

----------------------------------------

TITLE: Using PlatformIO Package Management Help Commands
DESCRIPTION: Commands to display help information for the PlatformIO package manager CLI, showing all available commands and their options.

LANGUAGE: bash
CODE:
pio pkg --help
pio pkg COMMAND --help

----------------------------------------

TITLE: Advanced CircleCI Configuration for PlatformIO Projects
DESCRIPTION: Example of an advanced CircleCI configuration for a PlatformIO project (USB_Host_Shield_2.0). It demonstrates multiple build environments, caching, and matrix builds.

LANGUAGE: yaml
CODE:
version: 2.1
orbs:
  python: circleci/python@1.4.0
jobs:
  build:
    parameters:
      example:
        type: string
    executor: python/default
    environment:
          PLATFORMIO_CI_SRC: << parameters.example >>
    steps:
      - checkout  # checkout source code to working directory
      - save_cache:
          # Cache PlatformIO packages for current project
          key: deps9-{{ .Branch }}-{{ arch }}
          paths:
            - "~/.platformio"
      - run:
          name: Install dependencies
          command: |
            pip install --upgrade platformio
            wget https://github.com/xxxajk/spi4teensy3/archive/master.zip -O /tmp/spi4teensy3.zip
            unzip /tmp/spi4teensy3.zip -d /tmp
      - run:
          name: Run PlatformIO
          command: pio ci --lib="." --lib="/tmp/spi4teensy3-master" --board=uno --board=teensy31 --board=due
workflows:
  main:
    jobs:
      - build:
          matrix:
            parameters:
              example:
                - examples/Bluetooth/PS3SPP/PS3SPP.ino
                - examples/pl2303/pl2303_gps/pl2303_gps.ino

----------------------------------------

TITLE: Configuring Over-the-Air (OTA) Updates for ESP32 in PlatformIO
DESCRIPTION: Shows how to configure OTA updates for ESP32 by setting the upload protocol and port in the PlatformIO configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = platformio/espressif32
board = esp32dev
framework = arduino
upload_protocol = espota
upload_port = 192.168.0.255

----------------------------------------

TITLE: Running PlatformIO Core installer script (macOS/Linux/Windows)
DESCRIPTION: This snippet demonstrates how to run the PlatformIO Core installer script after downloading it manually. It includes instructions for changing to the directory containing the script and executing it with Python.

LANGUAGE: bash
CODE:
# change directory to the folder where is located downloaded "get-platformio.py"
cd /path-to-dir/where/get-platformio.py/is-located

# run it
python get-platformio.py

----------------------------------------

TITLE: Configuring Stable ESP8266 Platform Version
DESCRIPTION: Configuration examples for using stable releases of the Espressif 8266 platform in PlatformIO projects.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = espressif8266
board = ...

; Specific version
[env:custom_stable]
platform = espressif8266@x.y.z
board = ...

----------------------------------------

TITLE: Configuring Debug Tool in PlatformIO INI
DESCRIPTION: Basic configuration for enabling Raspberry Pi SWD debugging tool in PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = raspberrypi-swd

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-S3
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3]
platform = espressif32
board = adafruit_feather_esp32s3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Hardware Simulation Testing
DESCRIPTION: Example of integrating the Renode simulator for hardware-less testing in a SiFive project.

LANGUAGE: ini
CODE:
[env:hifive1-revb]
platform = sifive
framework = zephyr
board = hifive1-revb

platform_packages =
    platformio/tool-renode
test_testing_command =
    ${platformio.packages_dir}/tool-renode/renode
    --disable-xwt
    -e include @scripts/single-node/sifive_fe310.resc
    -e showAnalyzer uart1
    -e sysbus LoadELF @${platformio.build_dir}/${this.__env__}/firmware.elf
    -e start

----------------------------------------

TITLE: Library Dependency Graph Output Example
DESCRIPTION: Example build output showing the dependency graph generated by PlatformIO's Library Dependency Finder, demonstrating how libraries are referenced by name.

LANGUAGE: text
CODE:
Library Dependency Finder -> https://bit.ly/configure-pio-ldf
LDF MODES: FINDER(chain+) COMPATIBILITY(soft)
Collected 54 compatible libraries
Scanning dependencies...
Dependency Graph
|-- <Hash> v1.0
|-- <AsyncMqttClient> v0.8.2
|   |-- <ESPAsyncTCP> v1.1.3
|-- <ESP8266WiFi> v1.0
|-- <ESP Async WebServer> v1.1.1
|   |-- <ESPAsyncTCP> v1.1.3
|   |-- <ESP8266WiFi> v1.0
|   |-- <Hash> v1.0
|   |-- <ArduinoJson> v5.13.1
|-- <ArduinoJson> v5.13.1
|-- <DNSServer> v1.1.0
|   |-- <ESP8266WiFi> v1.0
|-- <Ticker> v1.0

----------------------------------------

TITLE: Configuring Library Archiving in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to disable library archiving in a PlatformIO environment configuration. Setting 'lib_archive' to 'no' instructs PlatformIO to link object files directly instead of creating a static library archive.

LANGUAGE: ini
CODE:
[env:myenv]
lib_archive = no

----------------------------------------

TITLE: Example of Uninstalling PlatformIO Platform in Bash
DESCRIPTION: Shows an example of uninstalling the 'atmelavr' platform using the 'pio platform uninstall' command. The output displays the uninstallation process of the platform and its associated packages.

LANGUAGE: bash
CODE:
> pio platform uninstall atmelavr
Uninstalling platform atmelavr @ 0.0.0:    [OK]
Uninstalling package tool-scons @ 2.4.1:    [OK]
Uninstalling package toolchain-atmelavr @ 1.40801.0:    [OK]
The platform 'atmelavr' has been successfully uninstalled!

----------------------------------------

TITLE: Embedding Files Configuration
DESCRIPTION: PlatformIO configuration for embedding files at compile time, such as certificates for secure connections

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
framework = zephyr
board_build.embed_files =
    # files to be embedded
    src/apps-cert.der
    src/apps-key.der

----------------------------------------

TITLE: Extending Unity Test Runner with Custom Testing Stage
DESCRIPTION: Example showing how to override the testing stage of the Unity test framework. Demonstrates adding test cases with different statuses, durations, and source information.

LANGUAGE: python
CODE:
from platformio.public import TestCase, TestCaseSource, TestStatus, UnityTestRunner


class CustomTestRunner(UnityTestRunner):
    def stage_testing(self):
        # 1. Gather test results from Serial, HTTP, Socket, or other sources
        # 2. Report test results (add cases)

        # Example: Report succeed result with duration (optional)
        self.test_suite.add_case(
            TestCase(name="test_connectivity", status=TestStatus.PASSED, duration=1.34)
        )

        # Example: Report failed result with source file
        self.test_suite.add_case(
            TestCase(
                name="test_calculator_division",
                status=TestStatus.FAILED,
                message="Expected 32 Was 33",
                stdout="test/test_desktop/test_calculator.cpp:43:test_calculator_division:FAIL: Expected 32 Was 33",
                duration=0.44,
                source=TestCaseSource(
                    filename="test/test_desktop/test_calculator.cpp", line=43
                ),
            )
        )

----------------------------------------

TITLE: Configuring Library Include Paths in library.json
DESCRIPTION: Example configuration showing how to override the default include directory and specify additional include paths using build flags. Sets the base include path to the library root and adds multiple custom include directories.

LANGUAGE: javascript
CODE:
{
    "name": "SomeLib",
    "version": "0.0.0",
    "build": {
      "includeDir": ".",
      "flags": [
        "-I include",
        "-I extra",
        "-I drivers"
      ]
    }
  }

----------------------------------------

TITLE: Search Official Platform for STM32F405RG
DESCRIPTION: Example demonstrating combined search using type, tier and MCU filters.

LANGUAGE: bash
CODE:
> pio pkg search "type:platform tier:official STM32F405RG"

Found 1 packages (page 1 of 1)

aceinna/aceinna_imu
Official Platform • 1.3.8 • Published on Mon Oct 25 16:39:27 2021
Open-source, embedded development platform for Aceinna IMU hardware. Run custom algorithms and navigation code on Aceinna IMU/INS hardware.

----------------------------------------

TITLE: STM32Duino Core Configuration Example
DESCRIPTION: Configuration example for STM32Duino core with USB CDC support, float printf support, and USB high speed mode in full speed mode.

LANGUAGE: ini
CODE:
[env:nucleo_f401re]
platform = ststm32
framework = arduino
board = nucleo_f401re
build_flags =
  -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
  -D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
  -D PIO_FRAMEWORK_ARDUINO_USB_HIGHSPEED_FULLMODE

----------------------------------------

TITLE: Configuring PlatformIO for External Sources in INI
DESCRIPTION: This snippet shows how to configure the platformio.ini file to use an extra script for including external sources in the build process. It specifies the environment and points to the extra script file.

LANGUAGE: ini
CODE:
[env:my_env]
platform = ...
extra_scripts = pre:extra_script.py

----------------------------------------

TITLE: Installing PlatformIO Core using curl (macOS/Linux)
DESCRIPTION: This snippet demonstrates how to download and run the PlatformIO Core installer script using curl on macOS or Linux systems. It fetches the script from GitHub and executes it using Python 3.

LANGUAGE: bash
CODE:
curl -fsSL -o get-platformio.py https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py
python3 get-platformio.py

----------------------------------------

TITLE: Equivalent Environment-Specific Configuration in PlatformIO
DESCRIPTION: Shows the expanded version of the configuration where common settings are duplicated in each specific environment, demonstrating the equivalent setup without using the common [env] section.

LANGUAGE: ini
CODE:
[env:release]
platform = ststm32
framework = stm32cube
board = nucleo_l152re
build_flags = -D RELEASE
lib_deps = Dep1, Dep2, Dep3

[env:debug]
platform = ststm32
framework = stm32cube
board = nucleo_l152re
build_type = debug
build_flags = -D DEBUG
lib_deps = DepCustom

----------------------------------------

TITLE: Example Output of PlatformIO Update Command
DESCRIPTION: This code block shows an example of the output produced when running the 'pio update' command. It displays the update status for various platforms and libraries managed by PlatformIO.

LANGUAGE: bash
CODE:
> pio update

Platform Manager
================
Platform timsp430
--------
Updating timsp430 @ 0.0.0:  [Up-to-date]
Updating toolchain-timsp430 @ 1.40603.0:    [Up-to-date]
Updating framework-energiamsp430 @ 1.17.0:  [Up-to-date]
Updating tool-scons @ 2.4.1:    [Up-to-date]

Platform freescalekinetis
--------
Updating freescalekinetis @ 0.0.0:  [Up-to-date]
Updating framework-mbed @ 1.121.1:  [Up-to-date]
Updating toolchain-gccarmnoneeabi @ 1.40804.0:  [Up-to-date]
Updating tool-scons @ 2.4.1:    [Up-to-date]

// ... (truncated for brevity) ...

Library Manager
===============
Updating Adafruit-GFX @ 334e815bc1:     [Up-to-date]
Updating Adafruit-ST7735 @ d53d4bf03a:  [Up-to-date]
Updating Adafruit-DHT @ 09344416d2:     [Up-to-date]
Updating Adafruit-Unified-Sensor @ f2af6f4efc:  [Up-to-date]
Updating ESP8266_SSD1306 @ 3.2.3:   [Up-to-date]
Updating EngduinoMagnetometer @ 3.1.0:  [Up-to-date]
Updating IRremote @ 2.2.1:  [Up-to-date]
Updating Json @ 5.6.4:  [Up-to-date]
Updating MODSERIAL @ d8422efe47:    [Up-to-date]
Updating PJON @ 1fb26fd:    [Checking]
git version 2.7.4 (Apple Git-66)
Already up-to-date.
Updating Servo @ 36b69a7ced07:  [Checking]
Mercurial Distributed SCM (version 3.8.4)
(see https://mercurial-scm.org for more information)

Copyright (C) 2005-2016 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
pulling from https://developer.mbed.org/users/simon/code/Servo/
searching for changes
no changes found
Updating TextLCD @ 308d188a2d3a:    [Checking]
Mercurial Distributed SCM (version 3.8.4)
(see https://mercurial-scm.org for more information)

Copyright (C) 2005-2016 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
pulling from https://developer.mbed.org/users/simon/code/TextLCD/
searching for changes
no changes found

----------------------------------------

TITLE: Search Libraries by Keyword Example
DESCRIPTION: Example demonstrating how to search for libraries using specific keywords with filtering

LANGUAGE: bash
CODE:
> pio lib search "1-wire"

----------------------------------------

TITLE: Configuring Post-Install Python Script
DESCRIPTION: Example configuration showing how to run a Python script after package installation. The script is located in the package's 'scripts' folder and does not require explicit Python interpreter specification.

LANGUAGE: javascript
CODE:
"scripts": {
    "postinstall": "scripts/after_install.py"
}

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-GATEWAY
DESCRIPTION: Configuration example for specifying the upload protocol for the ESP32-GATEWAY board.

LANGUAGE: ini
CODE:
[env:esp32-gateway]
platform = espressif32
board = esp32-gateway

upload_protocol = esptool

----------------------------------------

TITLE: RST Documentation Structure for PlatformIO Installation
DESCRIPTION: ReStructuredText markup defining the documentation structure for PlatformIO Core installation, including copyright notice, document sections, and navigation tree.

LANGUAGE: rst
CODE:
..  Copyright (c) 2014-present PlatformIO <contact@platformio.org>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

.. |PIOCore| replace:: **PlatformIO Core**

.. _core_installation:

Installation
============

.. note::

    You do not need to install |PIOCore| if you are going to use :ref:`pioide`.
    |PIOCore| is built into PlatformIO IDE and you will be able to use it
    within PlatformIO IDE Terminal. See instructions on how to open
    :ref:`PlatformIO Core CLI in PlatformIO IDE for VSCode <ide_vscode_pio_core_cli>`.

    If you need |PIOCore| outside PlatformIO IDE, please :ref:`piocore_install_shell_commands`.

.. toctree::
    :maxdepth: 2

    requirements
    methods/index
    development-version
    shell-commands
    udev-rules
    integration
    proxy-configuration
    troubleshooting
    uninstall

----------------------------------------

TITLE: Example Library Information Output
DESCRIPTION: Example output showing detailed information about the 'OneWire' library, including its ID, version, manifest location, author details, compatibility information, and usage statistics.

LANGUAGE: text
CODE:
> pio lib show OneWire

PubSubClient
============
#ID: 89
A client library for MQTT messaging. MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1...

Version: 2.6, released 10 months ago
Manifest: https://raw.githubusercontent.com/ivankravets/pubsubclient/patch-2/library.json
Homepage: http://pubsubclient.knolleary.net
Repository: https://github.com/knolleary/pubsubclient.git

----------------------------------------

TITLE: Creating a Simple Blink Program in C for Arduino
DESCRIPTION: Example C code for a basic Arduino program that blinks an LED. This file should be saved as 'main.c' in the 'src' directory of the PlatformIO project.

LANGUAGE: c
CODE:
#include "Arduino.h"
#define WLED    13  // Most Arduino boards already have an LED attached to pin 13 on the board itself

void setup()
{
  pinMode(WLED, OUTPUT);  // set pin as output
}

void loop()
{
  digitalWrite(WLED, HIGH);  // set the LED on
  delay(1000);               // wait for a second
  digitalWrite(WLED, LOW);   // set the LED off
  delay(1000);               // wait for a second
}

----------------------------------------

TITLE: Configuring DTR Line State for PlatformIO Serial Monitor
DESCRIPTION: The monitor_dtr option sets the initial DTR (Data Terminal Ready) line state for the serial monitor. It accepts a value of 0 or 1 and cannot be specified multiple times. This option corresponds to the --dtr flag in the 'pio device monitor' command.

LANGUAGE: ini
CODE:
monitor_dtr = 1

----------------------------------------

TITLE: Accessing PlatformIO Team Command Help in Bash
DESCRIPTION: These commands display help information for the 'pio org' command and its subcommands. The first command shows general help, while the second provides help for a specific subcommand.

LANGUAGE: bash
CODE:
pio org --help
pio org COMMAND --help

----------------------------------------

TITLE: Configuring Stable Platform Version
DESCRIPTION: Examples of platform version configuration in platformio.ini file, showing how to use the latest stable release or pin to a specific version

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = atmelsam
board = ...

; Specific version
[env:custom_stable]
platform = atmelsam@x.y.z
board = ...

----------------------------------------

TITLE: Displaying PlatformIO Account Information via CLI
DESCRIPTION: Command to show detailed information about a PlatformIO account including active subscriptions and available packages/services. Can output in JSON format using the --json-output flag.

LANGUAGE: bash
CODE:
pio account show

----------------------------------------

TITLE: Configuring Single Author in PlatformIO Library JSON
DESCRIPTION: Example of configuring a single author's contact information in library.json. Includes name (required), email, and URL fields.

LANGUAGE: javascript
CODE:
"authors":
{
    "name": "John Smith",
    "email": "me@john-smith.com",
    "url": "https://www.john-smith/contact"
}

----------------------------------------

TITLE: Configuring monitor_encoding in PlatformIO
DESCRIPTION: The monitor_encoding option is a string that specifies the encoding for the serial port in PlatformIO projects. It defaults to UTF-8 if not explicitly set. This option corresponds to the --encoding flag in the 'pio device monitor' command.

LANGUAGE: INI
CODE:
monitor_encoding = UTF-8

----------------------------------------

TITLE: Displaying Device Manager CLI Help in PlatformIO (Bash)
DESCRIPTION: These commands display help information for the Device Manager CLI in PlatformIO. The first command shows general help, while the second shows help for a specific command.

LANGUAGE: bash
CODE:
pio device --help

LANGUAGE: bash
CODE:
pio device COMMAND --help

----------------------------------------

TITLE: Configuring Stable OpenHW Platform Version
DESCRIPTION: Configuration examples for using stable releases of the OpenHW platform, showing both latest stable and specific version pinning options.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = openhw
board = ...

; Specific version
[env:custom_stable]
platform = openhw@x.y.z
board = ...

----------------------------------------

TITLE: Basic PlatformIO Home Launch Command
DESCRIPTION: Simple command to launch the PlatformIO Home web server with default settings (port 8008, host 127.0.0.1).

LANGUAGE: bash
CODE:
pio home

----------------------------------------

TITLE: Installing Multiple Platform Packages
DESCRIPTION: Example of installing specific platform packages with version constraints.

LANGUAGE: shell
CODE:
pio pkg install -p "aceinna/aceinna_imu@^1.3.8" -p "platformio/atmelavr"

LANGUAGE: shell
CODE:
pio pkg install --platform "https://github.com/platformio/platform-sifive.git"

----------------------------------------

TITLE: Configuring build_src_flags in PlatformIO INI
DESCRIPTION: The build_src_flags option is used to set build flags that apply only to project source files in the specified source directory. It can be set multiple times and is also configurable via an environment variable.

LANGUAGE: INI
CODE:
build_src_flags = -D DEBUG -Wall

----------------------------------------

TITLE: Configuring Common Environment Settings in PlatformIO
DESCRIPTION: Demonstrates how to set up common environment settings that are shared between multiple specific environments using the [env] section. Shows configuration for an STM32 project with release and debug environments.

LANGUAGE: ini
CODE:
[env]
platform = ststm32
framework = stm32cube
board = nucleo_l152re
lib_deps = Dep1, Dep2

[env:release]
build_flags = -D RELEASE
lib_deps =
    ${env.lib_deps}
    Dep3

[env:debug]
build_type = debug
build_flags = -D DEBUG
lib_deps = DepCustom

----------------------------------------

TITLE: Configuring Upstream Renesas RA Platform Version in PlatformIO
DESCRIPTION: Demonstrates how to use the latest upstream development version of the Renesas RA platform by specifying the Git repository URL in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-renesas-ra.git
board = ...

----------------------------------------

TITLE: Configuring Symbolic Link Library Dependencies in PlatformIO
DESCRIPTION: Demonstrates the recommended approach for using external local libraries through symbolic links after lib_extra_dirs deprecation.

LANGUAGE: ini
CODE:
[env:myenv]
lib_deps =
    FooLib=symlink://../../shared-libraries/FooLib

----------------------------------------

TITLE: Configuring PlatformIO for BLE on Nordic nRF52-DK
DESCRIPTION: PlatformIO configuration to enable Bluetooth Low Energy (BLE) functionality on the Nordic nRF52-DK board, including SoftDevice version and required library.

LANGUAGE: ini
CODE:
[env:nrf52_dk]
platform = nordicnrf52
board = nrf52_dk
framework = arduino
debug_tool = jlink
; SoftDevice version
build_flags = -DNRF52_S132
lib_deps =
  BLEPeripheral

----------------------------------------

TITLE: Configuring Stable Release of Raspberry Pi Platform in PlatformIO
DESCRIPTION: INI configuration for using the latest stable release or a specific version of the Raspberry Pi platform in PlatformIO projects.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = raspberrypi
board = ...

; Specific version
[env:custom_stable]
platform = raspberrypi@x.y.z
board = ...

----------------------------------------

TITLE: Configuring pyOCD Debugging in PlatformIO
DESCRIPTION: INI configuration for using pyOCD with CMSIS-DAP based boards in PlatformIO. Includes debug tool setup and custom debug server command.

LANGUAGE: ini
CODE:
[env:debug]
platform = ...
board = ...
framework = mbed
debug_tool = custom
debug_server = pyocd-gdbserver

----------------------------------------

TITLE: Configuring Stable Teensy Platform Version in platformio.ini
DESCRIPTION: This snippet demonstrates how to configure a specific stable version of the Teensy platform in the platformio.ini file. It includes examples for using the latest stable version and pinning to a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = teensy
board = ...

; Specific version
[env:custom_stable]
platform = teensy@x.y.z
board = ...

----------------------------------------

TITLE: Displaying PlatformIO Project Configuration
DESCRIPTION: This example demonstrates the output of the 'pio project config' command, showing the computed configuration for a Tasmota Project. It includes settings for platformio, common build flags, and script defaults.

LANGUAGE: bash
CODE:
> pio project config
Computed project configuration for Tasmota Project

platformio
----------
src_dir          =  tasmota
build_dir        =  .pioenvs
build_cache_dir  =  .cache
extra_configs    =  platformio_tasmota_env.ini
                    platformio_override.ini
default_envs     =  tasmota

common
------
framework               =  arduino
board                   =  esp01_1m
board_build.flash_mode  =  dout
platform                =  espressif8266
build_flags             =  -D NDEBUG
                           -mtarget-align
                           -Wl,-Map,firmware.map
                           -Wl,-Teagle.flash.1m.ld
                           -DBEARSSL_SSL_BASIC
                           -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
                           -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
                           -DVTABLES_IN_FLASH
                           -fno-exceptions
                           -lstdc++
build_unflags           =  -Wall
board_build.f_cpu       =  80000000L
monitor_speed           =  115200
upload_speed            =  115200
upload_resetmethod      =  nodemcu
upload_port             =  COM5
extra_scripts           =  pio/strip-floats.py
                           pio/name-firmware.py

scripts_defaults
----------------
extra_scripts  =  pio/strip-floats.py
                  pio/name-firmware.py

...

----------------------------------------

TITLE: Custom MCU Configuration for KB32-FT
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:kb32-ft]
platform = espressif32
board = kb32-ft

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Generating PlatformIO Project for Arduino UNO
DESCRIPTION: Example shell command to generate a PlatformIO project for Arduino UNO board, configured for use with Eclipse IDE.

LANGUAGE: shell
CODE:
pio project init --ide eclipse --board uno

----------------------------------------

TITLE: Example Built-in Library List Output
DESCRIPTION: Example output showing built-in libraries across different frameworks including Arduino AVR, SAM, ESP32, and others. Shows library metadata like versions, descriptions, and compatibility.

LANGUAGE: text
CODE:
> pio lib builtin

framework-arduinoavr
********************

Bridge
======
Enables the communication between the Linux processor and the microcontroller. For Arduino/Genuino Yún, Yún Shield and TRE only.

----------------------------------------

TITLE: Configuring PlatformIO Environment for WEMOS LOLIN D32
DESCRIPTION: Basic PlatformIO configuration for the WEMOS LOLIN D32 board using the Espressif32 platform. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:lolin_d32]
platform = espressif32
board = lolin_d32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Using 'pio org create' Command in PlatformIO CLI
DESCRIPTION: This command creates a new organization in PlatformIO. It requires an organization name and accepts optional parameters for email and display name. The command returns a success message upon creation.

LANGUAGE: bash
CODE:
pio org create [OPTIONS] ORGNAME

LANGUAGE: bash
CODE:
pio org create platformio --email contact@platformio.org --displayname PlatformIO

----------------------------------------

TITLE: Creating System-wide Symlinks for PlatformIO Commands
DESCRIPTION: This shell script creates system-wide symbolic links for PlatformIO executables, making them accessible to all users. This method may require administrator access.

LANGUAGE: shell
CODE:
mkdir -p /usr/local/bin
ln -s ~/.platformio/penv/bin/platformio /usr/local/bin/platformio
ln -s ~/.platformio/penv/bin/pio /usr/local/bin/pio
ln -s ~/.platformio/penv/bin/piodebuggdb /usr/local/bin/piodebuggdb

----------------------------------------

TITLE: Custom Target Board Definition
DESCRIPTION: JSON configuration for defining a custom target board (NUCLEO-F401RE example) including core settings, labels, macros and device capabilities

LANGUAGE: json
CODE:
{
  "NUCLEO_F401RE": {
    "inherits": [
        "MCU_STM32"
    ],
    "supported_form_factors": [
        "ARDUINO",
        "MORPHO"
    ],
    "core": "Cortex-M4F",
    "extra_labels_add": [
        "STM32F4",
        "STM32F401xE"
    ],
    "macros_add": [
        "STM32F401xE"
    ],
    "config": {
        "clock_source": {
            "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
            "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
            "macro_name": "CLOCK_SOURCE"
        }
    },
    "detect_code": [
        "0720"
    ],
    "device_has_add": [
        "SERIAL_ASYNCH",
        "FLASH",
        "MPU"
    ],
    "device_name": "STM32F401RE"
  }
}

----------------------------------------

TITLE: Configuring Maple Core for STM32
DESCRIPTION: Example configuration for using the Maple Arduino core with an HY-TinySTM103TB board in PlatformIO.

LANGUAGE: ini
CODE:
[env:hy_tinystm103tb]
platform = ststm32
framework = arduino
board = hy_tinystm103tb
board_build.core = maple

----------------------------------------

TITLE: Configuring Whisper Debug Tool in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Whisper debugging tool in a PlatformIO project's configuration file. It sets the debug_tool option to 'whisper' within an environment section.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = whisper

----------------------------------------

TITLE: Accessing PlatformIO Account Help Documentation
DESCRIPTION: Commands to display help information about PlatformIO account management functionality. Shows both general account command help and specific command help options.

LANGUAGE: bash
CODE:
pio account --help
pio account COMMAND --help

----------------------------------------

TITLE: Configuring Build Cache Directory in PlatformIO.ini
DESCRIPTION: Example configuration demonstrating how to set up build cache directory for multiple STM32 environments. The cache directory stores compiled objects that can be shared between builds using the same platform and framework.

LANGUAGE: ini
CODE:
[platformio]
; Set a path to a cache folder
build_cache_dir =

; Examples:
; (Unix) build_cache_dir = /path/to/cache/folder
; (Windows) build_cache_dir = C:/path/to/cache/folder

[env:bluepill_f103c6]
platform = ststm32
framework = stm32cube
board = bluepill_f103c6

[env:nucleo_f411re]
platform = ststm32
framework = stm32cube
board = nucleo_f411re

----------------------------------------

TITLE: Configuring Stable PIC32 Platform Version
DESCRIPTION: Example platformio.ini configuration for using stable releases of the Microchip PIC32 development platform.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = microchippic32
board = ...

; Specific version
[env:custom_stable]
platform = microchippic32@x.y.z
board = ...

----------------------------------------

TITLE: Using 'pio pkg pack' Command in Bash
DESCRIPTION: This command creates a tarball from a package. If no arguments are provided, it packs the current package folder. Options include specifying an output destination.

LANGUAGE: bash
CODE:
pio pkg pack [<source directory, tar.gz or zip>] [OPTIONS]

----------------------------------------

TITLE: Configuring Extra Scripts in platformio.ini
DESCRIPTION: This snippet shows how to configure an extra Python script to be executed after the build process in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:pre_and_post_hooks]
extra_scripts = post:extra_script.py

----------------------------------------

TITLE: Configuring Library Version in PlatformIO Manifest (JavaScript)
DESCRIPTION: Demonstrates how to specify the 'version' field in a PlatformIO library.json manifest file. The version should be Semantic Versioning compatible and can contain a-z, digits, dots, or dashes. It is a required field with a maximum length of 20 characters.

LANGUAGE: javascript
CODE:
"name": "Bar",
"version": "1.0.0",
"repository":
{
    "type": "git",
    "url": "https://github.com/foo/bar.git"
}

----------------------------------------

TITLE: Component Registration in CMakeLists
DESCRIPTION: Minimal component registration for ESP-IDF build system using idf_component_register.

LANGUAGE: cmake
CODE:
idf_component_register(SRCS "foo.c" "bar.c")

----------------------------------------

TITLE: Configuring Stable Platform Version in PlatformIO
DESCRIPTION: Configuration examples for using stable releases of the Freescale Kinetis platform

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = freescalekinetis
board = ...

; Specific version
[env:custom_stable]
platform = freescalekinetis@x.y.z
board = ...

----------------------------------------

TITLE: Python Script for J-Link Upload in PlatformIO
DESCRIPTION: Python script to generate J-Link command script for uploading firmware. This script is used in conjunction with the J-Link debugger and uploader configuration.

LANGUAGE: python
CODE:
from os import makedirs
from os.path import isdir, join
Import('env')

def _jlink_cmd_script(env, source):
    build_dir = env.subst("$BUILD_DIR")
    if not isdir(build_dir):
        makedirs(build_dir)
    script_path = join(build_dir, "upload.jlink")
    commands = ["h", "loadbin %s,0x0" % source, "r", "q"]
    with open(script_path, "w") as fp:
        fp.write("\n".join(commands))
    return script_path

env.Replace(
    __jlink_cmd_script=_jlink_cmd_script,
    UPLOADER="/full/path/to/JLink",
    UPLOADERFLAGS=[
        "-device", "MK20DX256xxx7",
        "-speed", "4000",
        "-if", "swd",
        "-autoconnect", "1"
    ],
    UPLOADCMD='"$UPLOADER" $UPLOADERFLAGS -CommanderScript ${__jlink_cmd_script(__env__, SOURCE)}'
)

----------------------------------------

TITLE: PlatformIO CI Command Configuration for AppVeyor
DESCRIPTION: AppVeyor configuration using 'pio ci' command for library projects. Allows specifying source files, extra libraries and boards through command line interface.

LANGUAGE: yaml
CODE:
build: off
environment:

  matrix:
    - PLATFORMIO_CI_SRC: "path\\to\\source\\file.c"
    - PLATFORMIO_CI_SRC: "path\\to\\source\\file.ino"
    - PLATFORMIO_CI_SRC: "path\\to\\source\\directory"

install:
    - cmd: git submodule update --init --recursive
    - cmd: SET PATH=%PATH%;C:\Python27\Scripts
    - cmd: pip install -U platformio

test_script:
    - cmd: pio ci --board=<ID_1> --board=<ID_2> --board=<ID_N>

----------------------------------------

TITLE: Defining build_type in PlatformIO Configuration
DESCRIPTION: The build_type setting is a string option that determines the build configuration for a PlatformIO project. It accepts a single value and defaults to 'release' if not specified. This setting is crucial for controlling how the project is compiled and optimized.

LANGUAGE: ini
CODE:
build_type = release

----------------------------------------

TITLE: Initializing AVR-Stub in Arduino Sketch
DESCRIPTION: This code snippet demonstrates how to initialize the GDB stub in an Arduino sketch. It includes the necessary headers and shows where to place the debug_init() function call.

LANGUAGE: cpp
CODE:
#include "Arduino.h"
#include "avr8-stub.h"
#include "app_api.h" // only needed with flash breakpoints

void setup()
{
  // initialize GDB stub
  debug_init();
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop()
{
  digitalWrite(LED_BUILTIN, HIGH);
  delay(1000);
  digitalWrite(LED_BUILTIN, LOW);
  delay(1000);
}

----------------------------------------

TITLE: Checking Device Permissions
DESCRIPTION: Command to check the file permissions of a serial port device

LANGUAGE: bash
CODE:
ls -l /dev/ttyACM0

----------------------------------------

TITLE: Configuring Stable TI MSP430 Platform Version
DESCRIPTION: PlatformIO configuration for using stable versions of the TI MSP430 development platform. Shows how to pin to specific versions or use the latest stable release.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = timsp430
board = ...

; Specific version
[env:custom_stable]
platform = timsp430@x.y.z
board = ...

----------------------------------------

TITLE: Configuring PlatformIO to Build Main Source Code with Tests
DESCRIPTION: This INI configuration snippet demonstrates how to set up PlatformIO to build the main source code from the src directory alongside test code. This approach is not recommended as the primary method for handling shared code.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
test_build_src = true

----------------------------------------

TITLE: Configuring J-Link Debugging for ST Nucleo in PlatformIO
DESCRIPTION: INI configuration for using Segger J-Link probe with ST Nucleo F446RE board and J-Link GDB Server in PlatformIO. Includes debug tool setup, port configuration, and custom debug server commands.

LANGUAGE: ini
CODE:
[env:debug_jlink]
platform = ststm32
framework = mbed
board = nucleo_f446re

debug_tool = custom
debug_port = :2331

debug_server =
  /full/path/to/JLinkGDBServerCL
  -singlerun
  -if
  SWD
  -select
  USB
  -port
  2331
  -device
  STM32F446RE

debug_init_cmds =
  define pio_reset_halt_target
      monitor reset
      monitor halt
  end
  define pio_reset_run_target
      monitor clrbp
      monitor reset
      monitor go
  end
  target extended-remote $DEBUG_PORT
  monitor clrbp
  monitor speed auto
  pio_reset_halt_target
  $LOAD_CMDS
  $INIT_BREAK

----------------------------------------

TITLE: Configuring HONEYLemon Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the HONEYLemon board in the PlatformIO project configuration file. It sets the platform to espressif32 and the board to honeylemon.

LANGUAGE: ini
CODE:
[env:honeylemon]
platform = espressif32
board = honeylemon

----------------------------------------

TITLE: Configuring PlatformIO.ini for QEMU Testing on HiFive1 Board
DESCRIPTION: Example configuration for integrating QEMU with a SiFive HiFive1 board. Includes platform package definition and test command configuration for RISC-V emulation.

LANGUAGE: ini
CODE:
[env:hifive1]
platform = sifive
framework = freedom-e-sdk
board = hifive1

platform_packages =
    platformio/tool-qemu-riscv
test_testing_command =
    ${platformio.packages_dir}/tool-qemu-riscv/bin/qemu-system-riscv32
    -nographic
    -machine
    sifive_e
    -kernel
    ${platformio.build_dir}/${this.__env__}/firmware.elf

----------------------------------------

TITLE: Installing Library Dependencies
DESCRIPTION: Example of installing multiple library dependencies with version specifications.

LANGUAGE: shell
CODE:
pio pkg install -l "bblanchon/ArduinoJson@^6.19.2" -l "milesburton/DallasTemperature@^3.9.1"
pio pkg install --library https://github.com/Makuna/NeoPixelBus.git

----------------------------------------

TITLE: PlatformIO Core Installation State JSON Example
DESCRIPTION: This JSON snippet shows an example of the installation state file generated by the Installer Script. It includes paths, versions, and system information related to the PlatformIO Core installation.

LANGUAGE: json
CODE:
{
  "cache_dir": "/Users/Freedom/.platformio/.cache",
  "core_dir": "/Users/Freedom/.platformio",
  "core_version": "4.3.1",
  "installer_version": "0.2.0",
  "is_develop_core": false,
  "penv_bin_dir": "/Users/Freedom/.platformio/penv/bin",
  "penv_dir": "/Users/Freedom/.platformio/penv",
  "platformio_exe": "/Users/Freedom/.platformio/penv/bin/platformio",
  "python_exe": "/Users/Freedom/.platformio/penv/bin/python",
  "system": "darwin_x86_64"
}

----------------------------------------

TITLE: Configuring Flash Frequency for ESP32 in PlatformIO
DESCRIPTION: Shows how to set the flash frequency to 80MHz using the board_build.f_flash option in the PlatformIO configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
; set frequency to 80MHz
board_build.f_flash = 80000000L

----------------------------------------

TITLE: Configuring FTDI Chip as Debugging Tool in PlatformIO INI
DESCRIPTION: This snippet shows how to configure FTDI Chip as the debugging tool in a PlatformIO project configuration file. It sets the debug_tool option to 'ftdi'.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = ftdi

----------------------------------------

TITLE: Using the PlatformIO Package Uninstall Command
DESCRIPTION: This snippet shows the basic usage of the 'pio pkg uninstall' command. It is used to uninstall project dependencies or custom packages from the PlatformIO Registry or external sources.

LANGUAGE: bash
CODE:
pio pkg uninstall [OPTIONS]

----------------------------------------

TITLE: Configuring Upstream Version of Silicon Labs EFM32 Platform in platformio.ini
DESCRIPTION: Demonstrates how to configure the upstream development version of the Silicon Labs EFM32 platform in the platformio.ini project configuration file by specifying the Git repository URL.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-siliconlabsefm32.git
board = ...

----------------------------------------

TITLE: Adding Extra Linker Flags in PlatformIO (Python)
DESCRIPTION: This Python script modifies the build environment to add extra linker flags without the '-Wl,' prefix. It appends static linking flags to LINKFLAGS.

LANGUAGE: python
CODE:
Import("env")

#
# Dump build environment (for debug)
# print(env.Dump())
#

env.Append(
  LINKFLAGS=[
      "-static",
      "-static-libgcc",
      "-static-libstdc++"
  ]
)

----------------------------------------

TITLE: Configuring Custom Header in STM32Cube Project
DESCRIPTION: Example of enabling custom configuration header file for STM32Cube project using board_build.stm32cube.custom_config_header option.

LANGUAGE: ini
CODE:
[env:nucleo_f401re]
platform = ststm32
framework = stm32cube
board = nucleo_f401re
board_build.stm32cube.custom_config_header = yes

----------------------------------------

TITLE: Using PlatformIO Account Login Command in Bash
DESCRIPTION: This command is used to log in to a PlatformIO account. It can be run with optional username and password parameters, or these can be entered through a login wizard. The command also supports using an authentication token via the PLATFORMIO_AUTH_TOKEN environment variable.

LANGUAGE: bash
CODE:
pio account login [OPTIONS]

----------------------------------------

TITLE: Specifying Custom Startup File
DESCRIPTION: Configuration for manually specifying the startup file when automatic selection fails.

LANGUAGE: ini
CODE:
[env:custom_board_name]
platform = ststm32
framework = stm32cube
board = custom_board_name
board_build.stm32cube.startup_file = startup_stm32l152xca.s

----------------------------------------

TITLE: Configuring PlatformIO Environment with Extra Script
DESCRIPTION: This snippet shows how to set up a PlatformIO environment in platformio.ini to use an extra Python script for custom build configurations.

LANGUAGE: ini
CODE:
[env:my_env]
platform = ...
extra_scripts = extra_script.py

----------------------------------------

TITLE: List mDNS Services and Logical Devices
DESCRIPTION: Example showing how to list both mDNS services and logical devices using additional command options.

LANGUAGE: bash
CODE:
> pio device list --mdns --logical
Multicast DNS Services
======================

PlatformIO._bttremote._tcp.local.
------------------------------
Type: _bttremote._tcp.local.
IP: ...
Port: 62941
Properties: ...

Time for PlatformIO._adisk._tcp.local.
---------------------------------
Type: _adisk._tcp.local.
IP: 192.168.0.1
Port: 9
Properties: ...

PlatformIO._ssh._tcp.local.
------------------------
Type: _ssh._tcp.local.
IP: ...
Port: 22

PlatformIO._sftp-ssh._tcp.local.
-----------------------------
Type: _sftp-ssh._tcp.local.
IP: ...
Port: 22


Logical Devices
===============
/
-
Name:

/Volumes/PIO
-------------
Name: PIO

/Volumes/PLUS
--------------
Name: PLUS

----------------------------------------

TITLE: Configuring Test Filters in platformio.ini
DESCRIPTION: Example of using test_filter and test_ignore options in platformio.ini to control which test suites are executed. This configuration will run tests in the 'embedded' folder except those in the 'components' subfolder.

LANGUAGE: ini
CODE:
[env:myenv]
test_filter = embedded/*
test_ignore = embedded/components/*

----------------------------------------

TITLE: Displaying PlatformIO System Command Help in Bash
DESCRIPTION: These commands show how to access help information for PlatformIO system commands. The first command displays general help for the 'pio system' command, while the second shows help for a specific subcommand.

LANGUAGE: bash
CODE:
pio system --help

LANGUAGE: bash
CODE:
pio system COMMAND --help

----------------------------------------

TITLE: Configuring Stable NXP LPC Platform Version in platformio.ini
DESCRIPTION: Example configurations for using stable releases of the NXP LPC platform in a PlatformIO project. Shows how to use the latest stable version or pin to a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = nxplpc
board = ...

; Specific version
[env:custom_stable]
platform = nxplpc@x.y.z
board = ...

----------------------------------------

TITLE: Checking PlatformIO Core Installation in Python
DESCRIPTION: This snippet demonstrates how to check if PlatformIO Core is installed using the Installer Script. It returns a 0 exit code if PlatformIO Core is ready for use.

LANGUAGE: bash
CODE:
python get-platformio.py check core

----------------------------------------

TITLE: Accessing Remote Serial Monitor with PlatformIO
DESCRIPTION: This command opens the remote serial port monitor for devices connected to the host machine running the PlatformIO Remote Agent.

LANGUAGE: bash
CODE:
pio remote device monitor

----------------------------------------

TITLE: Granting Admin Access to Team in PlatformIO
DESCRIPTION: Demonstrates how to grant 'admin' level access to a team named 'developers' in the 'platformio' organization for a specific resource in PlatformIO. This gives the team full administrative privileges for the resource.

LANGUAGE: bash
CODE:
> pio access grant admin platformio:developers prn:reg:pkg:8036:platform
Access for resource "prn:reg:pkg:8036:platform" has been granted for "platformio:developers"

----------------------------------------

TITLE: Complex GitLab CI Configuration for ArduinoJson Library
DESCRIPTION: This YAML configuration sets up a GitLab CI pipeline for the ArduinoJson library. It defines multiple jobs for different examples, using a template for common configurations and specifying unique source files and arguments for each job.

LANGUAGE: yaml
CODE:
image: python:3.11

variables:  
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PLATFORMIO_CACHE_DIR: "$CI_PROJECT_DIR/.cache/platformio"

cache:
  paths:
    - .cache/pip
    - .cache/platformio

stages:
 - test

.job_template: &pio_run
  script:
    - "pio ci --lib='.' --board=uno --board=teensy31 --board=nodemcuv2 $PLATFORMIO_CI_EXTRA_ARGS"

before_script:
  - "pip install -U platformio"

JsonGeneratorExample:
  <<: *pio_run
  variables:
    PLATFORMIO_CI_EXTRA_ARGS: "--board=due"
    PLATFORMIO_CI_SRC: examples/JsonGeneratorExample

JsonHttpClient:
  <<: *pio_run
  variables:
    PLATFORMIO_CI_SRC: examples/JsonHttpClient

JsonParserExample:
  <<: *pio_run
  variables:
    PLATFORMIO_CI_SRC: examples/JsonParserExample

JsonServer:
  <<: *pio_run
  variables:
    PLATFORMIO_CI_SRC: examples/JsonServer

JsonUdpBeacon:
  <<: *pio_run
  variables:
    PLATFORMIO_CI_SRC: examples/JsonUdpBeacon

ProgmemExample:
  stage: test
  <<: *pio_run
  variables:
    PLATFORMIO_CI_SRC: examples/ProgmemExample

StringExample:
  stage: test
  <<: *pio_run
  variables:
    PLATFORMIO_CI_SRC: examples/StringExample

----------------------------------------

TITLE: Configuring Stable Linux ARM Platform in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the stable version of the Linux ARM platform in a PlatformIO project. It shows two options: using the latest stable version and specifying a custom stable version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = linux_arm

; Specific version
[env:custom_stable]
platform = linux_arm@x.y.z

----------------------------------------

TITLE: Configuring Stable Platform Version
DESCRIPTION: Example showing how to configure a stable version of the Nordic nRF52 platform in platformio.ini

LANGUAGE: ini
CODE:
; Latest stable version
[env:latest_stable]
platform = nordicnrf52
board = ...

; Specific version
[env:custom_stable]
platform = nordicnrf52@x.y.z
board = ...

----------------------------------------

TITLE: Configuring FreeRTOS and SystemView in PlatformIO
DESCRIPTION: This example shows how to modify heap settings and enable the SystemView feature in a PlatformIO project configuration. It sets the heap model to 'heap_1' and enables SystemView for the SiFive HiFive1 Rev B board.

LANGUAGE: ini
CODE:
[env:sifive-hifive1-revb]
platform = sifive
framework = freedom-e-sdk, freertos
board = hifive1-revb
monitor_speed = 115200
; Configure stack size
board_build.freedom-e-sdk.heap_size = 0x400
; Configure heap model and enable SystemView
board_build.freertos.heap_model = heap_1
board_build.freertos.systemview = enable

----------------------------------------

TITLE: Executing PlatformIO Commands for Multi-Project Workspace in Eclipse Che
DESCRIPTION: Shows how to use the --project-dir option with PlatformIO CLI commands to build and upload firmware for specific projects within a multi-project workspace. This allows for managing multiple projects in the same Eclipse Che environment.

LANGUAGE: bash
CODE:
pio remote run --project-dir project-A -t upload
pio remote run --project-dir project-A -t upload
pio remote run -d project-B -t upload

----------------------------------------

TITLE: Basic PlatformIO Configuration for Deneyap Kart 1A
DESCRIPTION: Basic board configuration for Deneyap Kart 1A in platformio.ini file.

LANGUAGE: ini
CODE:
[env:deneyapkart1A]
platform = espressif32
board = deneyapkart1A

----------------------------------------

TITLE: Manual udev Rules Installation
DESCRIPTION: Manually copies the downloaded udev rules file to the system directory

LANGUAGE: bash
CODE:
sudo cp 99-platformio-udev.rules /etc/udev/rules.d/99-platformio-udev.rules

----------------------------------------

TITLE: Granting Maintainer Access to User in PlatformIO
DESCRIPTION: Shows an example of granting 'maintainer' level access to a user named 'bob' for a specific resource in PlatformIO. This allows the user read-write access to the resource.

LANGUAGE: bash
CODE:
> pio access grant maintainer bob prn:reg:pkg:8036:platform
Access for resource "prn:reg:pkg:8036:platform" has been granted for "bob"

----------------------------------------

TITLE: Setting Environment Variables in Different Operating Systems
DESCRIPTION: Examples of how to set environment variables in Windows and Unix-based systems (bash, zsh, and fish shells)

LANGUAGE: bash
CODE:
# Windows
set VARIABLE_NAME=VALUE

# Unix (bash, zsh)
export VARIABLE_NAME=VALUE

# Unix (fish)
set -x VARIABLE_NAME VALUE

----------------------------------------

TITLE: Configuring Stable NXP i.MX RT Platform in platformio.ini
DESCRIPTION: Example INI configuration for using the stable release of the NXP i.MX RT platform in a PlatformIO project. Shows how to specify the latest stable version or pin to a specific version.

LANGUAGE: INI
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = nxpimxrt
board = ...

; Specific version
[env:custom_stable]
platform = nxpimxrt@x.y.z
board = ...

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Override
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:deneyapkart1A]
platform = espressif32
board = deneyapkart1A

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Library JSON Schema Example
DESCRIPTION: Example of a library.json manifest file using the schema property along with basic library metadata.

LANGUAGE: javascript
CODE:
{
  "$schema": "https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/schema/library.json",
  "name": "Foo",
  "version": "1.0.0"
}

----------------------------------------

TITLE: Configuring pymcuprog Upload Settings
DESCRIPTION: PlatformIO configuration for using pymcuprog to upload firmware to an ATmega3209 device

LANGUAGE: ini
CODE:
[env:ATmega3209_pymcuprog_upload]
platform = atmelmegaavr
framework = arduino
board = ATmega3209
upload_speed = 115200
upload_flags =
    --tool
    uart
    --device
    atmega3209
    --uart
    $UPLOAD_PORT
    --clk
    $UPLOAD_SPEED
upload_command = pymcuprog write --erase $UPLOAD_FLAGS --filename $SOURCE

----------------------------------------

TITLE: Customizing Nucleo G070RB Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:nucleo_g070rb]
platform = ststm32
board = nucleo_g070rb

; change microcontroller
board_build.mcu = stm32g070rbt6

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Extra Scripts in PlatformIO
DESCRIPTION: The 'extra_scripts' option allows specifying PRE and POST build scripts for PlatformIO projects. It accepts multiple file paths relative to the project folder. These scripts can be used for custom build processes and automation.

LANGUAGE: ini
CODE:
extra_scripts = path/to/pre_script.py
               path/to/post_script.py

----------------------------------------

TITLE: Good Practices for Declaring Dependencies in PlatformIO
DESCRIPTION: This snippet illustrates recommended practices for declaring dependencies in a PlatformIO project. It shows how to specify version constraints, use exact versions, and reference specific tags in Git repositories.

LANGUAGE: ini
CODE:
[env:myenv]
lib_deps =
  ; Depend on the latest 6.x stable version of ArduinoJson.
  ; The minimum required version is 6.19.4.
  ; New functionality (backward-compatible) and bug-fixed are allowed
  bblanchon/ArduinoJson @ ^6.19.4

  ; Depend on the exact 1.1.1 version
  ; No new functionality (backward-compatible) or bug fixes.
  ; Recommended for safety-critical projects
  me-no-dev/AsyncTCP @ 1.1.1

  ; Depend on the particular tag (v2.13) of a Git repository
  https://github.com/username/HelloWorld.git#v2.13

----------------------------------------

TITLE: Adding Team Member Example - PlatformIO CLI
DESCRIPTION: Practical example of adding a user named 'bob' to the 'developers' team in the 'platformio' organization.

LANGUAGE: bash
CODE:
> pio team add platformio:developers bob
The new member "bob" has been successfully added to the "developers" team.

----------------------------------------

TITLE: Configuring Source Directory Path in PlatformIO
DESCRIPTION: The src_dir setting specifies the directory containing project source code. By default, it points to the 'src' directory in the project root. This can be customized using the PLATFORMIO_SRC_DIR environment variable or project configuration.

LANGUAGE: plaintext
CODE:
src_dir

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to use the LOLIN C3 Mini board in a PlatformIO project

LANGUAGE: ini
CODE:
[env:lolin_c3_mini]
platform = espressif32
board = lolin_c3_mini

----------------------------------------

TITLE: Using 'pio account forgot' Command in Bash
DESCRIPTION: This command initiates the password reset process for a PlatformIO account. It can be used with or without the --username option. If omitted, the user will be prompted to enter their username or email in the Forgot Wizard.

LANGUAGE: bash
CODE:
pio account forgot [OPTIONS]

----------------------------------------

TITLE: PlatformIO Account Registration Command
DESCRIPTION: Command line syntax for registering a new PlatformIO account. Includes optional parameters for username, email, password, and name details that can be provided directly or entered later through the Registration Wizard.

LANGUAGE: bash
CODE:
pio account register [OPTIONS]

----------------------------------------

TITLE: Configuring Upstream Platform Version
DESCRIPTION: Example of configuring the platform to use the latest upstream development version from GitHub

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-atmelsam.git
board = ...

----------------------------------------

TITLE: Library Installation Usage Examples
DESCRIPTION: Real-world examples of installing libraries using different methods and options, including version specifications and dependencies.

LANGUAGE: bash
CODE:
> pio lib -g install 4

Library Storage: /storage/dir/...
LibraryManager: Installing id=4
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
IRremote @ 2.2.1 has been successfully installed!

> pio lib -g install ArduinoJson@5.6.7

Library Storage: /storage/dir/...
Looking for ArduinoJson library in registry
Found: https://platformio.org/lib/show/64/ArduinoJson
LibraryManager: Installing id=64 @ 5.6.7
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
ArduinoJson @ 5.6.7 has been successfully installed!

----------------------------------------

TITLE: LED Pin Definitions Header File
DESCRIPTION: Header file containing LED pin and GPIO port definitions for STM32 HAL configuration.

LANGUAGE: cpp
CODE:
#ifndef MAIN_H
#define MAIN_H

#include "stm32f4xx_hal.h"

#define LED_PIN                                GPIO_PIN_5
#define LED_GPIO_PORT                          GPIOA
#define LED_GPIO_CLK_ENABLE()                  __HAL_RCC_GPIOA_CLK_ENABLE()

#endif // MAIN_H

----------------------------------------

TITLE: Configuring Upstream Platform Version
DESCRIPTION: Configuration for using the latest upstream development version from GitHub

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-intel_mcs51.git
board = ...

----------------------------------------

TITLE: Configuring build_unflags in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to use the build_unflags option to remove specific compiler flags and set new ones. It removes the -Os optimization flag and C++11 standard flag, then adds an -O2 optimization flag.

LANGUAGE: ini
CODE:
[env:unflags]
build_unflags = -Os -std=gnu++11
build_flags = -O2

----------------------------------------

TITLE: Root CMakeLists Configuration for ESP-IDF
DESCRIPTION: Basic CMake configuration required for ESP-IDF projects, including minimum version and project setup.

LANGUAGE: cmake
CODE:
cmake_minimum_required(VERSION 3.16.0)

include($ENV{IDF_PATH}/tools/cmake/project.cmake)
project(project-name)

----------------------------------------

TITLE: Configuring Custom Firmware Name in platformio.ini
DESCRIPTION: This snippet shows how to set up a PlatformIO environment with custom build flags and an extra script to modify the firmware name. It includes a custom project option for version numbering.

LANGUAGE: ini
CODE:
[env:env_custom_prog_name]
platform = platformio/espressif32
framework = arduino
board = esp32dev
build_flags =
    -DVERSION=${this.custom_prog_version}
extra_scripts = pre:extra_script.py
custom_prog_version = 1.2.3

----------------------------------------

TITLE: Adding MSYS2 Paths to Windows Environment Variables
DESCRIPTION: These paths need to be added to the PATH system environment variable in Windows to use MSYS2 for native development in PlatformIO.

LANGUAGE: plaintext
CODE:
C:\msys64\mingw64\bin
C:\msys64\ucrt64\bin
C:\msys64\usr\bin

----------------------------------------

TITLE: Setting Upload Protocol for Deneyap Mini
DESCRIPTION: Configuration example for changing the upload protocol for the Deneyap Mini board. This snippet sets the upload protocol to 'esptool', which is the default for this board.

LANGUAGE: ini
CODE:
[env:deneyapmini]
platform = espressif32
board = deneyapmini

upload_protocol = esptool

----------------------------------------

TITLE: Searching for Platforms with Mbed Framework
DESCRIPTION: This example shows how to search for development platforms that support the Mbed framework using the 'pio platform search' command.

LANGUAGE: bash
CODE:
> pio platform search framework-mbed

----------------------------------------

TITLE: Initializing Project for Arduino Uno
DESCRIPTION: Example of initializing a PlatformIO project specifically for the Arduino Uno board. This automatically sets up the project with the correct platform and framework settings for Arduino Uno.

LANGUAGE: bash
CODE:
> pio project init --board uno

The current working directory *** will be used for the new project.
You can specify another project directory via
`pio project init -d %PATH_TO_THE_PROJECT_DIR%` command.
...

----------------------------------------

TITLE: Search STM32F405RG MCU Support
DESCRIPTION: Example showing how to search for packages supporting specific microcontroller.

LANGUAGE: bash
CODE:
> pio pkg search "STM32F405RG"

Found 4 packages (page 1 of 1)

aceinna/aceinna_imu
Official Platform • 1.3.8 • Published on Mon Oct 25 16:39:27 2021
Open-source, embedded development ...

twilio/Breakout Arduino Library
Library • 0.1.0 • Published on Tue Oct 23 16:22:19 2018
Arduino library for the Twilio ...

platformio/ststm32
Platform • 15.2.0 • Published on Fri Jan 28 13:21:03 2022
The STM32 family of 32-bit Flash MCUs ...

platformio/framework-arduinoststm32
Tool • 4.20200.220204 • Published on Mon Feb  7 09:47:31 2022
Arduino Wiring-based Framework for ST STM32 microcontrollers

----------------------------------------

TITLE: Basic PlatformIO CLI Usage in Bash
DESCRIPTION: Demonstrates the basic syntax for using the PlatformIO CLI. The command 'pio' is followed by optional parameters and a specific command.

LANGUAGE: bash
CODE:
pio [OPTIONS] COMMAND

----------------------------------------

TITLE: Listing Accessible Resources by Specific Owner in PlatformIO
DESCRIPTION: This example demonstrates how to list all accessible resources owned by a specific user (in this case, 'platformio') using the 'pio access list' command. The output shows the resources, their URNs, and access levels for the specified owner.

LANGUAGE: bash
CODE:
> pio access list platformio

...

tool-scons
----------
URN:              prn:reg:pkg:8192:tool
Owner:            platformio
Access level(s):  Admin

tool-simavr
-----------
URN:              prn:reg:pkg:8193:tool
Owner:            platformio
Access level(s):  Admin

...

----------------------------------------

TITLE: Implementing Conditional Library Includes in C/C++
DESCRIPTION: Example header file demonstrating conditional include directives based on project version definitions that LDF can parse and evaluate.

LANGUAGE: c
CODE:
#ifdef MY_PROJECT_VERSION
// include common file for the project
#include "my_common.h"
#endif

#if MY_PROJECT_VERSION < 10
// this include will be ignored because does not satisfy condition above
#include "my_old.h"
#endif

----------------------------------------

TITLE: Configuring Energia Framework in PlatformIO
DESCRIPTION: Configuration snippet showing how to enable the Energia framework in a PlatformIO project's environment configuration.

LANGUAGE: RST
CODE:
:ref:`projectconf_env_framework` = ``energia``

----------------------------------------

TITLE: Configuring Verilator Debug Tool in PlatformIO
DESCRIPTION: Configuration example for enabling Verilator debugging tool in a PlatformIO project's configuration file. Sets up the basic debug environment with Verilator.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = verilator

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit pyCamera S3
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Adafruit pyCamera S3 board in a PlatformIO project configuration. The default protocol is 'esptool', but this can be changed as shown.

LANGUAGE: ini
CODE:
[env:adafruit_camera_esp32s3]
platform = espressif32
board = adafruit_camera_esp32s3

upload_protocol = esptool

----------------------------------------

TITLE: Setting CPU Frequency for ESP32 in PlatformIO
DESCRIPTION: Demonstrates how to set the CPU frequency to 160MHz using the board_build.f_cpu option in the PlatformIO configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
; set frequency to 160MHz
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Destroying PlatformIO Organization using CLI
DESCRIPTION: Command to destroy an organization and all its associated teams in PlatformIO. Takes an organization name as a required parameter. This action is permanent and cannot be undone.

LANGUAGE: bash
CODE:
pio org destroy ORGNAME

----------------------------------------

TITLE: Running PlatformIO Targets via Command Line
DESCRIPTION: Shows how to execute specific build targets using the PlatformIO CLI, including cleaning the project and dumping environment information.

LANGUAGE: bash
CODE:
# clean project
pio run -t clean

# dump current build environment
pio run --target envdump

----------------------------------------

TITLE: Configuring ESP USB Bridge for Firmware Upload in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the ESP USB Bridge for both debugging and firmware uploading in a PlatformIO project. It sets both the debug_tool and upload_protocol options to esp-usb-bridge.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = esp-usb-bridge
upload_protocol = esp-usb-bridge

----------------------------------------

TITLE: Using pio run Command in Bash
DESCRIPTION: Basic usage syntax for the 'pio run' command in PlatformIO. This command is used to run project targets over environments declared in the project configuration.

LANGUAGE: bash
CODE:
pio run [OPTIONS]

----------------------------------------

TITLE: Uninstalling a Platform from GitHub in PlatformIO
DESCRIPTION: This example shows how to uninstall a development platform directly from a GitHub repository using the 'pio pkg uninstall' command.

LANGUAGE: bash
CODE:
pio pkg uninstall --platform "https://github.com/platformio/platform-sifive.git"

----------------------------------------

TITLE: Configuring GitHub Actions Workflow for PlatformIO using pio ci
DESCRIPTION: This YAML configuration sets up a GitHub Actions workflow to build PlatformIO examples or libraries using the 'pio ci' command. It includes a matrix strategy for testing multiple examples and supports specifying additional boards and libraries.

LANGUAGE: yaml
CODE:
name: PlatformIO CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [path/to/test/file.c, examples/file.ino, path/to/test/directory]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build PlatformIO examples
        run: pio ci --board=<ID_1> --board=<ID_2> --board=<ID_N>
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.example }}

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:heltec_wireless_stick_lite]
platform = espressif32
board = heltec_wireless_stick_lite

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Modifying Firmware Name with Python Script
DESCRIPTION: This Python script uses the PlatformIO scripting API to replace the default program name with a custom name that includes the version number defined in the project configuration.

LANGUAGE: python
CODE:
Import("env")

env.Replace(PROGNAME="firmware_%s" % env.GetProjectOption("custom_prog_version"))

----------------------------------------

TITLE: PlatformIO Project Configuration for Arduino Uno
DESCRIPTION: Sample platformio.ini configuration file for an Arduino Uno project. It specifies the platform, framework, and board settings.

LANGUAGE: ini
CODE:
; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/en/latest/projectconf/index.html

[env:arduino_uno]
platform = atmelavr
framework = arduino
board = uno

----------------------------------------

TITLE: Configuring Defect Severity Levels in PlatformIO INI
DESCRIPTION: Configuration example showing how to set up PlatformIO to detect only medium and high severity defects during code analysis. The check_severity parameter filters which types of issues will be reported by the check tools.

LANGUAGE: ini
CODE:
[env:detect_only_medium_or_high_defects]
platform = ...
board = ...
check_severity = medium, high

----------------------------------------

TITLE: Installing Build Essential Tools on Linux
DESCRIPTION: These shell commands update the package list and install essential build tools on Linux systems for native development in PlatformIO.

LANGUAGE: shell
CODE:
sudo apt update
sudo apt install build-essential

----------------------------------------

TITLE: Uninstalling PlatformIO Core
DESCRIPTION: Commands to uninstall standalone PlatformIO Core from a system using pip or brew package managers.

LANGUAGE: bash
CODE:
pip uninstall platformio
python -m pip uninstall platformio

# if you used macOS "brew"
brew uninstall platformio

----------------------------------------

TITLE: Restarting udev Service
DESCRIPTION: Commands to restart the udev service and apply the new rules

LANGUAGE: bash
CODE:
sudo service udev restart

# or

sudo udevadm control --reload-rules
sudo udevadm trigger

----------------------------------------

TITLE: Configuring libArchive in library.json for PlatformIO
DESCRIPTION: The 'libArchive' option in library.json controls how the library is linked into the firmware. When true (default), it creates a static archive. When false, object files are linked directly, which can be useful for overriding weak symbols.

LANGUAGE: json
CODE:
{
  "libArchive": true
}

LANGUAGE: json
CODE:
{
  "libArchive": false
}

----------------------------------------

TITLE: Unit Tests for Calculator Library
DESCRIPTION: Unity framework-based unit tests for the calculator library functions

LANGUAGE: c
CODE:
#include <calculator.h>
#include <unity.h>

void setUp(void)
{
  // set stuff up here
}

void tearDown(void)
{
  // clean stuff up here
}

void test_function_calculator_addition(void)
{
  TEST_ASSERT_EQUAL(32, add(25, 7));
}

void test_function_calculator_subtraction(void)
{
  TEST_ASSERT_EQUAL(20, sub(23, 3));
}

void test_function_calculator_multiplication(void)
{
  TEST_ASSERT_EQUAL(50, mul(25, 2));
}

void test_function_calculator_division(void)
{
  TEST_ASSERT_EQUAL(32, div(100, 3));
}

void main()
{
  UNITY_BEGIN();

  RUN_TEST(test_function_calculator_addition);
  RUN_TEST(test_function_calculator_subtraction);
  RUN_TEST(test_function_calculator_multiplication);
  RUN_TEST(test_function_calculator_division);

  UNITY_END();
}

----------------------------------------

TITLE: Executing PlatformIO Account Destruction Command in Bash
DESCRIPTION: This command is used to permanently remove a PlatformIO account and all related data, including organizations, teams, and resources. It's important to note that this action cannot be undone.

LANGUAGE: bash
CODE:
pio account destroy [OPTIONS]

----------------------------------------

TITLE: Using PlatformIO Access List Command in Bash
DESCRIPTION: This snippet demonstrates the basic usage of the 'pio access list' command. It can be used to show all resources a user or team can access, along with their access levels. The command can be run with or without specifying an owner.

LANGUAGE: bash
CODE:
pio access list [OPTIONS] [OWNER]

----------------------------------------

TITLE: Configuring Upstream NXP LPC Platform Version in platformio.ini
DESCRIPTION: Example configuration for using the latest upstream development version of the NXP LPC platform from GitHub in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-nxplpc.git
board = ...

----------------------------------------

TITLE: Selecting Filesystem for ESP8266 in PlatformIO
DESCRIPTION: Example of selecting LittleFS as the filesystem using the board_build.filesystem option in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
platform = espressif8266
framework = arduino
board = ...
board_build.filesystem = littlefs

----------------------------------------

TITLE: Listing All Accessible Resources with PlatformIO
DESCRIPTION: This example shows how to list all accessible resources using the 'pio access list' command. The output includes the resource name, URN, owner, and access level(s) for each resource.

LANGUAGE: bash
CODE:
> pio access list

...

atmelsam
--------
URN:              prn:reg:pkg:8007:platform
Owner:            platformio
Access level(s):  Admin

espressif8266
-------------
URN:              prn:reg:pkg:8008:platform
Owner:            platformio
Access level(s):  Admin

chipsalliance
-------------
URN:              prn:reg:pkg:8036:platform
Owner:            platformio
Access level(s):  Admin

contrib-piohome
---------------
URN:              prn:reg:pkg:8037:tool
Owner:            platformio
Access level(s):  Admin

...

----------------------------------------

TITLE: Configuring upload_port in PlatformIO
DESCRIPTION: Example configuration showing how to specify upload ports in PlatformIO's configuration file. Demonstrates pattern matching for USB ports and COM ports on different operating systems.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
framework = arduino
; any port that starts with /dev/ttyUSB
upload_port = /dev/ttyUSB*

; COM1 or COM3
upload_port = COM[13]

----------------------------------------

TITLE: Executing PlatformIO Team List Command with JSON Output
DESCRIPTION: This example shows how to use the 'pio team list' command to list teams and their members. The output is displayed in a human-readable format.

LANGUAGE: bash
CODE:
> pio team list

platformio:dev
------------------------
Description:  Developers team
Members:      alice, bob

----------------------------------------

TITLE: Creating Symlinks for PlatformIO Commands in User's Local Bin
DESCRIPTION: This shell script creates symbolic links for PlatformIO executables in the user's local bin directory, making them accessible from any terminal.

LANGUAGE: shell
CODE:
ln -s ~/.platformio/penv/bin/platformio ~/.local/bin/platformio
ln -s ~/.platformio/penv/bin/pio ~/.local/bin/pio
ln -s ~/.platformio/penv/bin/piodebuggdb ~/.local/bin/piodebuggdb

----------------------------------------

TITLE: Configuring PlatformIO for Blinker WiFiduino32S3
DESCRIPTION: Basic PlatformIO configuration for the Blinker WiFiduino32S3 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:wifiduino32s3]
platform = espressif32
board = wifiduino32s3

----------------------------------------

TITLE: Updating Library Packages in PlatformIO
DESCRIPTION: Examples of updating specific libraries with version constraints and from Git repositories.

LANGUAGE: shell
CODE:
pio pkg update -l "bblanchon/ArduinoJson@^6.19.2" -l "milesburton/DallasTemperature@^3.9.1"
pio pkg update --library https://github.com/Makuna/NeoPixelBus.git

----------------------------------------

TITLE: Customizing BPI-Leaf-S3 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. This snippet demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:bpi_leaf_s3]
platform = espressif32
board = bpi_leaf_s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Travis CI Configuration for PlatformIO CI Command
DESCRIPTION: This YAML configuration sets up Travis CI for a PlatformIO project using the 'pio ci' command. It's suitable for library projects with examples or test code, allowing specification of extra libraries and boards via command line.

LANGUAGE: yaml
CODE:
language: python
python:
    - "3.11"

# Cache PlatformIO packages using Travis CI container-based infrastructure
sudo: false
cache:
    directories:
        - "~/.platformio"
        - $HOME/.cache/pip

env:
    - PLATFORMIO_CI_SRC=path/to/test/file.c
    - PLATFORMIO_CI_SRC=examples/file.ino
    - PLATFORMIO_CI_SRC=path/to/test/directory

install:
    - pip install -U platformio
    - pio update

script:
    - pio ci --board=<ID_1> --board=<ID_2> --board=<ID_N>

----------------------------------------

TITLE: Basic PlatformIO Run Configuration for AppVeyor CI
DESCRIPTION: Basic AppVeyor configuration using 'pio run' command for native PlatformIO projects. Sets up Python environment and runs PlatformIO builds for specified environments.

LANGUAGE: yaml
CODE:
build: off
environment:

install:
    - cmd: git submodule update --init --recursive
    - cmd: SET PATH=%PATH%;C:\Python27\Scripts
    - cmd: pip install -U platformio

test_script:
    - cmd: pio run -e <ID_1> -e <ID_2> -e <ID_N>

----------------------------------------

TITLE: Customizing Blinker WiFiduino32S3 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:wifiduino32s3]
platform = espressif32
board = wifiduino32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upgrading PlatformIO Development Version
DESCRIPTION: Alternative command to upgrade to the latest development version using the PlatformIO CLI.

LANGUAGE: bash
CODE:
pio upgrade --dev

----------------------------------------

TITLE: Configuring Custom Renode Upload Settings in PlatformIO INI
DESCRIPTION: This snippet demonstrates how to override default Renode upload settings in a PlatformIO project. It includes custom commands for loading scripts, showing analyzers, and starting the emulation.

LANGUAGE: ini
CODE:
[env:hifive1-revb]
platform = sifive
framework = zephyr
board = hifive1-revb
; Override the default upload settings
upload_command = renode $UPLOAD_FLAGS
upload_flags =
    -e include @scripts/single-node/sifive_fe310.resc
    -e showAnalyzer uart1
    -e sysbus LoadELF @$SOURCE
    -e start

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example for setting the upload protocol to ST-Link for firmware deployment.

LANGUAGE: ini
CODE:
[env:black_f407ze]
platform = ststm32
board = black_f407ze

upload_protocol = stlink

----------------------------------------

TITLE: Enabling Serial Debug for ESP8266 in PlatformIO
DESCRIPTION: Example of enabling serial debug output using build flags in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
...
build_flags = -DDEBUG_ESP_PORT=Serial

; or for Serial1
build_flags = -DDEBUG_ESP_PORT=Serial1

----------------------------------------

TITLE: Using PIO Package Unpublish Command in Bash
DESCRIPTION: Command syntax for unpublishing a package or specific version from the PlatformIO registry. Allows specifying organization, package name, and version with optional parameters for package type and undo functionality.

LANGUAGE: bash
CODE:
pio pkg unpublish [<organization>/]<pkgname>[@<version>] [OPTIONS]

----------------------------------------

TITLE: Implementing Basic Unity Test Structure in C
DESCRIPTION: Basic template for creating Unity test files including setup, teardown, test functions and framework-specific main implementations for different platforms.

LANGUAGE: c
CODE:
#include "unity.h"
#include "file_to_test.h"

void setUp(void) {
  // set stuff up here
}

void tearDown(void) {
  // clean stuff up here
}

void test_function_should_doBlahAndBlah(void) {
  // test stuff
}

void test_function_should_doAlsoDoBlah(void) {
  // more test stuff
}

int runUnityTests(void) {
  UNITY_BEGIN();
  RUN_TEST(test_function_should_doBlahAndBlah);
  RUN_TEST(test_function_should_doAlsoDoBlah);
  return UNITY_END();
}

// WARNING!!! PLEASE REMOVE UNNECESSARY MAIN IMPLEMENTATIONS //

/**
  * For native dev-platform or for some embedded frameworks
  */
int main(void) {
  return runUnityTests();
}

/**
  * For Arduino framework
  */
void setup() {
  delay(2000);
  runUnityTests();
}
void loop() {}

/**
  * For ESP-IDF framework
  */
void app_main() {
  runUnityTests();
}

----------------------------------------

TITLE: Configuring Basic Arduino Mini ATmega168 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Arduino Mini ATmega168 board in platformio.ini file. Specifies the platform and board settings.

LANGUAGE: ini
CODE:
[env:miniatmega168]
platform = atmelavr
board = miniatmega168

----------------------------------------

TITLE: Configuring Upstream NXP i.MX RT Platform in platformio.ini
DESCRIPTION: Example INI configuration for using the latest upstream development version of the NXP i.MX RT platform from GitHub in a PlatformIO project.

LANGUAGE: INI
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-nxpimxrt.git
board = ...

----------------------------------------

TITLE: Stringification Example in C++ with PlatformIO Configuration
DESCRIPTION: Shows how to use stringification in C++ code with macros defined in platformio.ini. This example demonstrates escaping quotes and using the StringifyMacro helper function.

LANGUAGE: cpp
CODE:
#include <stdio.h>

#define CONFIG_LV_FONT_DEFAULT MYFONT

int main(void) {
    printf("MYSTRING=<%s>\n", MYSTRING);
    return(0);
}

----------------------------------------

TITLE: Library Configuration with extraScript in library.json
DESCRIPTION: JSON configuration for a library named SomeLib that specifies an extra build script to be executed.

LANGUAGE: ini
CODE:
{
    "name": "SomeLib",
    "version": "0.0.0",
    "build": {
        "extraScript": "extra_script.py"
    }
}

----------------------------------------

TITLE: Configuring Custom Renode Debug Settings in PlatformIO INI
DESCRIPTION: This snippet shows how to configure custom debug settings for Renode in a PlatformIO project. It includes settings for redirecting UART output to a socket and starting a GDB server.

LANGUAGE: ini
CODE:
[env:hifive1-revb]
platform = sifive
framework = zephyr
board = hifive1-revb
; Override the default debug settings
debug_tool = custom
debug_port = localhost:3333
debug_server = renode
  --hide-log
  -e machine StartGdbServer 3333 True
  -e emulation CreateServerSocketTerminal 4321 "externalUART" false
  -e connector Connect uart0 externalUART
debug_extra_cmds =
    monitor start

# Monitor port for Renode integration
monitor_port = socket://localhost:4321

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Adafruit Feather ESP32-S3 No PSRAM board in platformio.ini

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3_nopsram]
platform = espressif32
board = adafruit_feather_esp32s3_nopsram

----------------------------------------

TITLE: Configuring ESP USB Bridge as Debugging Tool in PlatformIO
DESCRIPTION: This snippet shows how to configure the ESP USB Bridge as the debugging tool in a PlatformIO project configuration file. It sets the debug_tool option to esp-usb-bridge.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = esp-usb-bridge

----------------------------------------

TITLE: Example Output of Remote Device Listing in PlatformIO
DESCRIPTION: This code block shows an example output of the 'pio remote device list' command, displaying various serial ports and their details on a remote machine.

LANGUAGE: bash
CODE:
> pio remote device list

Agent innomac.local
===================
/dev/cu.Bluetooth-Incoming-Port
-------------------------------
Hardware ID: n/a
Description: n/a
/dev/cu.obd2ecu-SPPDev
----------------------
Hardware ID: n/a
Description: n/a
/dev/cu.usbmodemFA1431
----------------------
Hardware ID: USB VID:PID=2A03:0043 SER=75435353038351015271 LOCATION=250-1.4.3
Description: Arduino Uno
/dev/cu.usbserial-A6004003
--------------------------
Hardware ID: USB VID:PID=0403:6001 SER=A6004003 LOCATION=253-1.3.1
Description: FT232R USB UART - FT232R USB UART
/dev/cu.SLAB_USBtoUART
----------------------
Hardware ID: USB VID:PID=10C4:EA60 SER=0001 LOCATION=253-1.3.2
Description: CP2102 USB to UART Bridge Controller - CP2102 USB to UART Bridge Controller
/dev/cu.usbmodem589561
----------------------
Hardware ID: USB VID:PID=16C0:0483 SER=589560 LOCATION=250-1.4.1
Description: USB Serial

----------------------------------------

TITLE: Usage of PlatformIO Access Grant Command
DESCRIPTION: Demonstrates the basic usage syntax for the 'pio access grant' command in PlatformIO. This command is used to grant different levels of access to users or teams for specific resources.

LANGUAGE: bash
CODE:
pio access grant [OPTIONS] LEVEL <ORGNAME:TEAMNAME>|<USERNAME> URN

----------------------------------------

TITLE: Using PlatformIO Team Remove Command
DESCRIPTION: Command syntax for removing a team member from an organization team. The command requires the organization name, team name, and username of the member to be removed.

LANGUAGE: bash
CODE:
pio team remove ORGNAME:TEAMNAME USERNAME

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default MCU and frequency settings for the Franzininho WiFi board

LANGUAGE: ini
CODE:
[env:franzininho_wifi_esp32s2]
platform = espressif32
board = franzininho_wifi_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Filtering Tests in PlatformIO Remote Test
DESCRIPTION: Example of using the '--filter' option to process only specific tests in the PlatformIO remote test command. This demonstrates how to filter tests based on name patterns.

LANGUAGE: bash
CODE:
pio test --filter "mytest*" -i "test[13]"

----------------------------------------

TITLE: XinaBox CW02 Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration example showing how to specify the upload protocol for the XinaBox CW02 board.

LANGUAGE: ini
CODE:
[env:xinabox_cw02]
platform = espressif32
board = xinabox_cw02

upload_protocol = esptool

----------------------------------------

TITLE: Generating PlatformIO Project for Eclipse
DESCRIPTION: Shell command to generate a PlatformIO project configured for Eclipse IDE. It uses the PlatformIO Core CLI to initialize a project for a specific board.

LANGUAGE: shell
CODE:
pio project init --ide eclipse --board <ID>

----------------------------------------

TITLE: Preparing PlatformIO Project for Debugging
DESCRIPTION: Demonstrates the output when preparing a PlatformIO project for debugging. It shows the compilation process, linking, and size calculation for the firmware.

LANGUAGE: bash
CODE:
> pio debug

[Sun Apr 30 01:34:01 2017] Processing mzeropro (platform: atmelsam; debug_extra_cmds: b main.cpp:26; board: mzeropro; framework: arduino)
-----------------------------------------------------------------------------------------------
Verbose mode can be enabled via `-v, --verbose` option
Collected 26 compatible libraries
Looking for dependencies...
Project does not have dependencies
Compiling .pio/build/mzeropro/src/main.o
Compiling .pio/build/mzeropro/FrameworkArduinoVariant/variant.o
Compiling .pio/build/mzeropro/FrameworkArduino/IPAddress.o
Compiling .pio/build/mzeropro/FrameworkArduino/Print.o
Archiving .pio/build/mzeropro/libFrameworkArduinoVariant.a
Indexing .pio/build/mzeropro/libFrameworkArduinoVariant.a
...
Compiling .pio/build/mzeropro/FrameworkArduino/wiring_analog.o
Compiling .pio/build/mzeropro/FrameworkArduino/wiring_digital.o
Compiling .pio/build/mzeropro/FrameworkArduino/wiring_private.o
Compiling .pio/build/mzeropro/FrameworkArduino/wiring_shift.o
Archiving .pio/build/mzeropro/libFrameworkArduino.a
Indexing .pio/build/mzeropro/libFrameworkArduino.a
Linking .pio/build/mzeropro/firmware.elf
Calculating size .pio/build/mzeropro/firmware.elf
Building .pio/build/mzeropro/firmware.bin
text       data     bss     dec     hex filename
11512       256    1788   13556    34f4 .pio/build/mzeropro/firmware.elf
=========================== [SUCCESS] Took 7.82 seconds ===========================

----------------------------------------

TITLE: Configuring PlatformIO Project with Custom Hardware IDs
DESCRIPTION: This snippet shows the configuration in platformio.ini to specify the board, platform, framework, and a custom pre-script for modifying hardware IDs.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
board = uno
framework = arduino
extra_scripts = pre:custon_hwids.py

----------------------------------------

TITLE: Configuring Basic M5Stack Core ESP32 Environment in PlatformIO
DESCRIPTION: Basic configuration setup for M5Stack Core ESP32 board using PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:m5stack-core-esp32]
platform = espressif32
board = m5stack-core-esp32

----------------------------------------

TITLE: Listing Active Remote Agents in PlatformIO
DESCRIPTION: This command lists active PlatformIO Remote Agents associated with the user's account or shared by other developers. It displays the agent's ID and start time.

LANGUAGE: bash
CODE:
pio remote agent list

----------------------------------------

TITLE: Using PlatformIO System Completion Uninstall Command in Bash
DESCRIPTION: This command uninstalls shell completion files or code for PlatformIO CLI. It supports fish, zsh, and bash shells. An optional --path parameter allows specifying a custom installation path.

LANGUAGE: bash
CODE:
pio system completion uninstall [OPTIONS]

----------------------------------------

TITLE: Custom MCU Configuration for Blues Swan R5
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:blues_swan_r5]
platform = ststm32
board = blues_swan_r5

; change microcontroller
board_build.mcu = stm32l4r5ziy6

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Enabling External RAM (PSRAM) for ESP32 with ESP-IDF Framework
DESCRIPTION: Shows how to enable external RAM support for ESP32 using ESP-IDF framework by adding a specific build flag in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:myenv]
platform = platformio/espressif32
framework = espidf
board = ...
build_flags =
    -DCONFIG_SPIRAM_CACHE_WORKAROUND

----------------------------------------

TITLE: Configuring 'boards_dir' in PlatformIO INI File
DESCRIPTION: Sets the location of project-specific board definitions. Default is '<Project>/boards'. PlatformIO searches for boards in this directory first, followed by global and platform-specific directories.

LANGUAGE: ini
CODE:
boards_dir = <Project>/boards

----------------------------------------

TITLE: Revoking Team Access in PlatformIO
DESCRIPTION: Example of revoking access to a resource for a team. The command removes access for the 'developers' team in the 'platformio' organization to a specific package resource.

LANGUAGE: bash
CODE:
> pio access revoke platformio:developers prn:reg:pkg:8036:platform
Access for resource "prn:reg:pkg:8036:platform" has been revoked for "platformio:developers"

----------------------------------------

TITLE: Forcing C99 Standard in PlatformIO Library Configuration
DESCRIPTION: This configuration demonstrates how to force the use of the C99 standard instead of C11 in a PlatformIO library build by unflaging the default standard and setting a new one.

LANGUAGE: javascript
CODE:
"build": {
    "unflags": "-std=gnu++11",
    "flags": "-std=c99"
}

----------------------------------------

TITLE: Customizing Heltec WiFi Kit 32 (V2) Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings for the Heltec WiFi Kit 32 (V2) in a PlatformIO project. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32_v2]
platform = espressif32
board = heltec_wifi_kit_32_v2

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring JTAG-HS1 for Firmware Upload in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to configure JTAG-HS1 for both debugging and firmware uploading in the PlatformIO project configuration file. It sets both the debug_tool and upload_protocol options.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = digilent-hs1
upload_protocol = digilent-hs1

----------------------------------------

TITLE: Setting Build Flags Environment Variables
DESCRIPTION: Examples of setting PLATFORMIO_BUILD_FLAGS for different operating systems to define preprocessor directives and compiler flags

LANGUAGE: bash
CODE:
# Unix:
export PLATFORMIO_BUILD_FLAGS=-DFOO
export PLATFORMIO_BUILD_FLAGS=-DFOO -DBAR=1 -Wall

# Windows:
SET PLATFORMIO_BUILD_FLAGS=-DFOO
SET PLATFORMIO_BUILD_FLAGS=-DFOO -DBAR=1 -Wall

----------------------------------------

TITLE: Configuring PlatformIO Project for Arduino UNO
DESCRIPTION: INI configuration file for a PlatformIO project targeting Arduino UNO board. This file should be named 'platformio.ini' and placed in the project root directory.

LANGUAGE: ini
CODE:
; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/en/latest/projectconf/index.html

[env:arduino_uno]
platform = atmelavr
framework = arduino
board = uno

----------------------------------------

TITLE: Installing PlatformIO and Running Tests in Drone CI
DESCRIPTION: This snippet shows how to install PlatformIO and run tests for multiple environments in Drone CI. It uses the 'pio run' command for native PlatformIO projects.

LANGUAGE: bash
CODE:
pip install -U platformio
pio run -e <ID_1> -e <ID_2> -e <ID_N>

----------------------------------------

TITLE: Setting Upload Protocol for NodeMCU-32S in PlatformIO
DESCRIPTION: Configuration example showing how to specify the upload protocol for the NodeMCU-32S board in PlatformIO. Uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:nodemcu-32s]
platform = espressif32
board = nodemcu-32s

upload_protocol = esptool

----------------------------------------

TITLE: Arduino Blink Example for Cloud9
DESCRIPTION: Sample Arduino code demonstrating serial communication and LED blinking functionality

LANGUAGE: c++
CODE:
#include <Arduino.h>

int i = 0;

void setup() {
    Serial.begin(9600);
    Serial.println("Hello Cloud9!");
}

void loop() {
    /*  serial echo */
    while (Serial.available()) {
        Serial.write(Serial.read());
    }

    i++;
    Serial.println(i);
    delay(100);
}

----------------------------------------

TITLE: Overriding Filesystem Image Name for ESP8266 in PlatformIO
DESCRIPTION: Example of overriding the filesystem image name using a PRE extra script in platformio.ini and Python

LANGUAGE: ini
CODE:
[env:d1]
platform = espressif8266
framework = arduino
board = d1
board_build.filesystem = littlefs
extra_scripts =
    pre:extra_script.py

LANGUAGE: python
CODE:
Import("env")
env.Replace(ESP8266_FS_IMAGE_NAME="custom_image_name")

----------------------------------------

TITLE: Running PlatformIO Project Metadata Command
DESCRIPTION: Basic command syntax for dumping project metadata information. The command supports various options including project directory specification, environment selection, and JSON output formatting.

LANGUAGE: bash
CODE:
pio project metadata [OPTIONS]

----------------------------------------

TITLE: Renode Test Execution Output
DESCRIPTION: Example console output showing the execution of a test case using Renode simulator, including boot sequence and test results.

LANGUAGE: text
CODE:
> pio test --without-uploading

Verbose mode can be enabled via `-v, --verbose` option
Collected 1 tests

Processing test_dummy in hifive1-revb environment
-------------------------------------------------
Building...
Testing...
14:56:26.9860 [INFO] Loaded monitor commands from: ~/.platformio/packages/tool-renode/scripts/monitor.py
14:56:27.0093 [INFO] Monitor available in telnet mode on port 1234
14:56:27.0433 [INFO] Including script: ~/.platformio/packages/tool-renode/scripts/single-node/sifive_fe310.resc
14:56:27.0572 [INFO] System bus created.
14:56:27.8744 [INFO] sysbus: Loaded SVD: /tmp/renode-60394/61f3c8f5-c4df-4dc2-b892-2f96defd7e06.tmp. Name: FE310. Description: E31 CPU Coreplex, high-performance, 32-bit RV32IMAC core
14:56:27.9010 [INFO] sysbus: Loading segment of 20520 bytes length at 0x20400000.
14:56:27.9148 [INFO] sysbus: Loading segment of 324 bytes length at 0x20405028.
14:56:27.9149 [INFO] sysbus: Loading segment of 7944 bytes length at 0x80000148.
14:56:27.9380 [INFO] cpu: Setting PC value to 0x20401BC4.
14:56:28.0913 [INFO] sysbus: Loading segment of 32 bytes length at 0x20010000.
14:56:28.0914 [INFO] sysbus: Loading segment of 19132 bytes length at 0x20010020.
14:56:28.0914 [INFO] sysbus: Loading segment of 32 bytes length at 0x20014ADC.
14:56:28.0915 [INFO] sysbus: Loading segment of 4288 bytes length at 0x80000000.
14:56:28.0954 [INFO] cpu: Setting PC value to 0x20010000.
14:56:28.1041 [INFO] SiFive-FE310: Machine started.
14:56:28.1662 [INFO] uart0: [+0.28s host +0s virt 0s virt from start] *** Booting Zephyr OS build zephyr-v20701  ***
14:56:28.1695 [INFO] uart0: [+3.38ms host +0s virt 0s virt from start]   test/test_dummy/main.c:13: dummy_test	[PASSED]
--------------------- hifive1-revb:test_dummy [PASSED] Took 9.98 seconds ---------------------

================================================== SUMMARY ==================================================
Environment    Test        Status    Duration
-------------  ----------  --------  ------------
hifive1-revb   test_dummy  PASSED    00:00:09.976
================================= 1 test cases: 1 succeeded in 00:00:09.976 =================================

----------------------------------------

TITLE: Specifying Single License in PlatformIO Configuration (JavaScript)
DESCRIPTION: This snippet demonstrates how to specify a single license using an SPDX license ID in the PlatformIO project configuration. The example uses the Apache 2.0 license.

LANGUAGE: javascript
CODE:
"license": "Apache-2.0"

----------------------------------------

TITLE: Initializing PlatformIO Project for CodeBlocks
DESCRIPTION: Shell commands for generating a new PlatformIO project configured for CodeBlocks IDE. The example demonstrates project initialization for Arduino UNO board, but can be used with any supported board ID.

LANGUAGE: shell
CODE:
pio project init --ide codeblocks --board <ID>

# For example, generate project for Arduino UNO
pio project init --ide codeblocks --board uno

----------------------------------------

TITLE: Displaying PlatformIO Library Command Help in Bash
DESCRIPTION: This snippet shows how to display help information for the 'pio lib' command and its subcommands using the command-line interface.

LANGUAGE: bash
CODE:
# To print all available commands and options use
pio lib --help
pio lib COMMAND --help

----------------------------------------

TITLE: Configuring Multiple Headers in PlatformIO
DESCRIPTION: Example showing how to specify multiple header files as an array. This configuration allows multiple headers to be included using angle bracket notation.

LANGUAGE: javascript
CODE:
"headers": ["FooCore.h", "FooFeature.h"]

----------------------------------------

TITLE: Customizing Adafruit ESP32 Feather Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings for the Adafruit ESP32 Feather. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:featheresp32]
platform = espressif32
board = featheresp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Updating Organization Details with 'pio org update' in Bash
DESCRIPTION: This example shows how to use the 'pio org update' command to update an organization's email and display name. It demonstrates the use of the --email and --displayname options.

LANGUAGE: bash
CODE:
> pio org update platformio --email contact@platformio.org --displayname PlatformIO
The organization "platformio" has been successfully updated.

----------------------------------------

TITLE: Defining Project Name in PlatformIO Configuration
DESCRIPTION: The 'name' property is used to set a project name in PlatformIO. It is a string value that cannot have multiple entries. If not specified, it defaults to the project folder name. This name is used in various places within PlatformIO Home.

LANGUAGE: plaintext
CODE:
"name"

----------------------------------------

TITLE: Configuring ESP32-PoE Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol for the ESP32-PoE board. Supports either 'espota' or 'esptool' protocols.

LANGUAGE: ini
CODE:
[env:esp32-poe]
platform = espressif32
board = esp32-poe

upload_protocol = esptool

----------------------------------------

TITLE: Configuring LDF Chain Mode in PlatformIO
DESCRIPTION: Example configuration showing how to set lib_ldf_mode to chain+ in a PlatformIO environment. This enables evaluation of C/C++ Preprocessor conditional syntax when analyzing library dependencies.

LANGUAGE: ini
CODE:
[env:myenv]
; evaluate C/C++ Preprocessor conditional syntax
lib_ldf_mode = chain+

----------------------------------------

TITLE: Adding Owner Example - PlatformIO CLI Command
DESCRIPTION: Example demonstrating how to add a user named 'bob' as an owner to the 'platformio' organization, including the success message output.

LANGUAGE: bash
CODE:
> pio org add platformio bob
The new owner "bob" has been successfully added to the "platformio" organization.

----------------------------------------

TITLE: Basic Device Monitor Usage Command
DESCRIPTION: Shows the basic command syntax for using the PlatformIO device monitor.

LANGUAGE: bash
CODE:
pio device monitor [OPTIONS]

----------------------------------------

TITLE: Configuring PlatformIO Project Environment
DESCRIPTION: Basic platformio.ini configuration file that defines a project environment and includes an external script for compilation database customization.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
extra_scripts = pre:extra_script.py

----------------------------------------

TITLE: Configuring Debug Build Flags in PlatformIO INI
DESCRIPTION: Example configuration showing how to set custom debug build flags in a PlatformIO project's ini file. Demonstrates setting optimization level to O0 and maximum debug information with ggdb3 and g3 flags.

LANGUAGE: ini
CODE:
[env:debug]
platform = ...
board = ...

; Set optimization level and amount of debug information generated by the compiler
debug_build_flags = -O0 -ggdb3 -g3

----------------------------------------

TITLE: Using 'pio access revoke' Command in Bash
DESCRIPTION: Demonstrates the usage of the 'pio access revoke' command in PlatformIO. This command is used to remove access to a resource for users or teams. It requires specifying the user/team and the URN of the resource.

LANGUAGE: bash
CODE:
pio access revoke [OPTIONS] <ORGNAME:TEAMNAME>|<USERNAME> URN

----------------------------------------

TITLE: Configuring Namino Rosso Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Namino Rosso board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:namino_rosso]
platform = espressif32
board = namino_rosso

----------------------------------------

TITLE: Configuring SiFive Platform Version in platformio.ini
DESCRIPTION: Examples of how to specify the SiFive platform version in a PlatformIO project configuration file. This includes using the latest stable release, a specific version, or the upstream development version.

LANGUAGE: INI
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = sifive
board = ...

; Specific version
[env:custom_stable]
platform = sifive@x.y.z
board = ...

[env:upstream_develop]
platform = https://github.com/platformio/platform-sifive.git
board = ...

----------------------------------------

TITLE: Customizing LOLIN S3 Board Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:lolin_s3]
platform = espressif32
board = lolin_s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for M5Stack Core ESP32
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Demonstrates setting esptool as the upload protocol.

LANGUAGE: ini
CODE:
[env:m5stack-core-esp32]
platform = espressif32
board = m5stack-core-esp32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Zephyr CMake Build System
DESCRIPTION: Basic CMakeLists.txt configuration for Zephyr projects that pulls in the build system and specifies source files

LANGUAGE: cmake
CODE:
# Boilerplate code, which pulls in the Zephyr build system.
cmake_minimum_required(VERSION 3.13.1)
include($ENV{ZEPHYR_BASE}/cmake/app/boilerplate.cmake NO_POLICY_SCOPE)
project(my_zephyr_app)

# Add your source file to the "app" target. This must come after the boilerplate
# code, which defines the target. Note relative path to source file
target_sources(app PRIVATE ../src/main.c)

----------------------------------------

TITLE: Listing Remote Devices with PlatformIO
DESCRIPTION: This command lists all remote devices connected to the host machine running the PlatformIO Remote Agent.

LANGUAGE: bash
CODE:
pio remote device list

----------------------------------------

TITLE: Device Monitor Output Capture Command
DESCRIPTION: Command example showing how to capture device monitor output to a log file using filters.

LANGUAGE: bash
CODE:
pio device monitor -f default -f log2file

----------------------------------------

TITLE: Setting Upload Protocol for ESP32vn IoT Uno
DESCRIPTION: This snippet shows how to set a specific upload protocol for the ESP32vn IoT Uno board in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:esp32vn-iot-uno]
platform = espressif32
board = esp32vn-iot-uno

upload_protocol = esptool

----------------------------------------

TITLE: Basic M5Stack AtomS3 Configuration
DESCRIPTION: Minimal board configuration for M5Stack AtomS3 in PlatformIO project file.

LANGUAGE: ini
CODE:
[env:m5stack-atoms3]
platform = espressif32
board = m5stack-atoms3

----------------------------------------

TITLE: Implementing BLE LED Control for Nordic nRF52-DK with Arduino
DESCRIPTION: Arduino sketch that sets up a BLE peripheral with a characteristic to control the built-in LED. It allows remote devices to toggle the LED state via BLE.

LANGUAGE: cpp
CODE:
#include <Arduino.h>
#include <SPI.h>
#include <BLEPeripheral.h>

BLEPeripheral ledPeripheral = BLEPeripheral();

BLEService ledService = BLEService("19b10000e8f2537e4f6cd104768a1214");
BLECharCharacteristic ledCharacteristic = BLECharCharacteristic("19b10001e8f2537e4f6cd104768a1214", BLERead | BLEWrite);

void setup()
{
  pinMode(LED_BUILTIN, OUTPUT);

  ledPeripheral.setAdvertisedServiceUuid(ledService.uuid());
  ledPeripheral.addAttribute(ledService);
  ledPeripheral.addAttribute(ledCharacteristic);
  ledPeripheral.setLocalName("Nordic NRF52 DK");
  ledPeripheral.begin();
}

void loop()
{
  BLECentral central = ledPeripheral.central();

  if (central)
  {
    while (central.connected())
    {
      if (ledCharacteristic.written())
      {
        if (ledCharacteristic.value())
        {
          digitalWrite(LED_BUILTIN, HIGH);
        }
        else
        {
          digitalWrite(LED_BUILTIN, LOW);
        }
      }
    }
  }
}

----------------------------------------

TITLE: Configuring Extra Scripts in platformio.ini
DESCRIPTION: Configuration for enabling extra Python scripts in the PlatformIO build environment. Specifies the path to the extra script that will handle package installation.

LANGUAGE: ini
CODE:
[env:my_env]
platform = ...
extra_scripts = extra_script.py

----------------------------------------

TITLE: Configuring TI-ICDI Debug Tool in PlatformIO
DESCRIPTION: Configuration example for setting up TI-ICDI as a debug tool in the project configuration file. This enables debugging capabilities for Tiva C Series microcontrollers.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = ti-icdi

----------------------------------------

TITLE: Configuring PlatformIO Environment for Controllino Mini
DESCRIPTION: Basic PlatformIO configuration for the Controllino Mini board. Specifies the platform and board ID to use in the project configuration file.

LANGUAGE: ini
CODE:
[env:controllino_mini]
platform = atmelavr
board = controllino_mini

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. The ATSAMW25-XPRO supports multiple protocols with CMSIS-DAP as default.

LANGUAGE: ini
CODE:
[env:samd21g18a]
platform = atmelsam
board = samd21g18a

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Installing PlatformIO Shell Completion
DESCRIPTION: Command syntax for installing PlatformIO CLI tab completion support. Accepts an optional SHELL parameter and --path option for specifying a custom installation location.

LANGUAGE: bash
CODE:
pio system completion install [OPTIONS] [SHELL]

----------------------------------------

TITLE: Configuring AVR-Stub Breakpoint Mode in platformio.ini
DESCRIPTION: This configuration snippet demonstrates how to set a specific breakpoint mode for avr-stub by defining the AVR8_BREAKPOINT_MODE macro in the build_flags.

LANGUAGE: ini
CODE:
[env:myenv]
platform = atmelavr
board = uno

; Set breakpoint mode
build_flags =
  -DAVR8_BREAKPOINT_MODE=2

debug_tool = avr-stub
debug_port = SERIAL_PORT

lib_deps =
    jdolinay/avr-debugger @ ~1.4

----------------------------------------

TITLE: Initializing Project in Specified Directory
DESCRIPTION: Example of initializing a new PlatformIO project in a specified directory. This allows creating a project in a location different from the current working directory.

LANGUAGE: bash
CODE:
> pio project init -d %PATH_TO_DIR%

The following files/directories will be created in ***
 platformio.ini - Project Configuration File. |-> PLEASE EDIT ME <-|
...

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun ESP32 Thing Plus
DESCRIPTION: Configuration example for specifying the upload protocol for the SparkFun ESP32 Thing Plus board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:esp32thing_plus]
platform = espressif32
board = esp32thing_plus

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the ATMegaZero ESP32-S2 board in platformio.ini file, including platform and board selection.

LANGUAGE: ini
CODE:
[env:atmegazero_esp32s2]
platform = espressif32
board = atmegazero_esp32s2

----------------------------------------

TITLE: Configuring Stable Native Platform in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the stable version of the Native development platform in a PlatformIO project configuration file. It includes options for using the latest stable version and a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = native

; Specific version
[env:custom_stable]
platform = native@x.y.z

----------------------------------------

TITLE: Enabling CLI-based Uploading for Teensy in PlatformIO
DESCRIPTION: This configuration demonstrates how to set up a PlatformIO project for a Teensy 3.6 board using the command-line version of the Teensy Loader tool for uploading.

LANGUAGE: ini
CODE:
[env:teensy36]
platform = teensy
framework = arduino
board = teensy36
upload_protocol = teensy-cli

----------------------------------------

TITLE: Adding Team Members with PlatformIO CLI - Basic Usage
DESCRIPTION: Command syntax for adding a new member to a team within a PlatformIO organization. Requires organization name, team name, and username of the member to be added.

LANGUAGE: bash
CODE:
pio team add ORGNAME:TEAMNAME USERNAME

----------------------------------------

TITLE: Ignoring Tests in PlatformIO Remote Test
DESCRIPTION: Example of using the '--ignore' option to exclude specific tests from being processed in the PlatformIO remote test command. This shows how to ignore tests based on name patterns.

LANGUAGE: bash
CODE:
pio remote test --ignore "mytest*" -i "test[13]"

----------------------------------------

TITLE: Customizing Adafruit PyPortal M4 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_pyportal_m4]
platform = atmelsam
board = adafruit_pyportal_m4

; change microcontroller
board_build.mcu = samd51j20a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring Package Directory in PlatformIO
DESCRIPTION: The packages_dir option defines the directory path where PlatformIO Package Manager stores platform dependencies. It accepts a DirPath value and can be set through the configuration or PLATFORMIO_PACKAGES_DIR environment variable. By default, it points to the packages subdirectory within the core PlatformIO directory.

LANGUAGE: ini
CODE:
packages_dir = /path/to/packages

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-C3-DevKitC-02
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Espressif ESP32-C3-DevKitC-02 board in the PlatformIO configuration. The default protocol is 'esptool', but it can be changed using the 'upload_protocol' option.

LANGUAGE: ini
CODE:
[env:esp32-c3-devkitc-02]
platform = espressif32
board = esp32-c3-devkitc-02

upload_protocol = esptool

----------------------------------------

TITLE: Adding Organization Owner - PlatformIO CLI Command
DESCRIPTION: Command syntax for adding a user as an owner to a PlatformIO organization. Requires specifying the organization name and username of the new owner.

LANGUAGE: bash
CODE:
pio org add ORGNAME USERNAME

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the RoboHeart Hercules board. The board supports both espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:roboheart_hercules]
platform = espressif32
board = roboheart_hercules

upload_protocol = esptool

----------------------------------------

TITLE: LED Blink Implementation
DESCRIPTION: Main program implementing LED initialization and blinking functionality using STM32Cube HAL.

LANGUAGE: cpp
CODE:
#include "main.h"

void LED_Init();

int main(void)
{
  HAL_Init();
  LED_Init();

  while (1)
  {
    HAL_GPIO_TogglePin(LED_GPIO_PORT, LED_PIN);
    HAL_Delay(1000);
  }
}

void LED_Init()
{
  LED_GPIO_CLK_ENABLE();
  GPIO_InitTypeDef GPIO_InitStruct;
  GPIO_InitStruct.Pin = LED_PIN;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
  HAL_GPIO_Init(LED_GPIO_PORT, &GPIO_InitStruct);
}

void SysTick_Handler(void)
{
  HAL_IncTick();
}

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f469ni]
platform = ststm32
board = disco_f469ni

; change microcontroller
board_build.mcu = stm32f469nih6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Initializing PlatformIO Project for Qt Creator
DESCRIPTION: Shell commands for generating a PlatformIO project configured for Qt Creator IDE integration. The command accepts a board ID parameter and creates necessary project files.

LANGUAGE: shell
CODE:
pio project init --ide qtcreator --board <ID>\n\n# For example, generate project for Arduino UNO\npio project init --ide qtcreator --board uno

----------------------------------------

TITLE: Suppressing Cppcheck warnings in C/C++ code
DESCRIPTION: This code snippet demonstrates how to suppress specific Cppcheck warnings inline within C/C++ source code. It shows how to ignore 'unusedFunction' warnings for Arduino setup() and loop() functions.

LANGUAGE: c
CODE:
// cppcheck-suppress unusedFunction
void setup()
{
  ...
}

// cppcheck-suppress unusedFunction
void loop()
{
  ...
}

----------------------------------------

TITLE: Configuring Denky32 Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the Denky32 (WROOM32) board in the PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:denky32]
platform = espressif32
board = denky32

----------------------------------------

TITLE: Implementing Basic Custom Test Runner in Python
DESCRIPTION: Minimal implementation of a custom test runner class that inherits from TestRunnerBase. This provides the foundation for custom test execution in PlatformIO.

LANGUAGE: python
CODE:
from platformio.public import TestRunnerBase

class CustomTestRunner(TestRunnerBase):
    pass

----------------------------------------

TITLE: Using 'pio org list' Command in Bash
DESCRIPTION: This snippet demonstrates the usage of the 'pio org list' command in PlatformIO. It can be used to list organizations and their owners, with an optional OWNER parameter. The command also supports a --json-output option for JSON-formatted output.

LANGUAGE: bash
CODE:
pio org list [OPTIONS] [OWNER]

----------------------------------------

TITLE: Configuring Atmel-ICE for Firmware Upload
DESCRIPTION: Example configuration for using Atmel-ICE as the upload protocol in addition to debugging.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = atmel-ice
upload_protocol = atmel-ice

----------------------------------------

TITLE: Setting Custom Fuses for Arduino Uno
DESCRIPTION: Example of setting custom fuse values for an Arduino Uno board. Specifies low, high, and extended fuse bytes, as well as upload protocol and speed.

LANGUAGE: ini
CODE:
[env:custom_fuses]
platform = atmelavr
framework = arduino
board = uno
upload_protocol = stk500v1
upload_speed = 19200
board_fuses.lfuse = 0xAA
board_fuses.hfuse = 0xBB
board_fuses.efuse = 0xCC
upload_flags =
    -PCOM15
    -b$UPLOAD_SPEED
    -e

----------------------------------------

TITLE: Setting Upload Protocol for Onehorse ESP32 Dev Module
DESCRIPTION: This snippet shows how to set the upload protocol for the Onehorse ESP32 Dev Module. It uses the 'esptool' protocol as an example.

LANGUAGE: ini
CODE:
[env:onehorse32dev]
platform = espressif32
board = onehorse32dev

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Renode as Debug Tool in PlatformIO INI
DESCRIPTION: This snippet shows how to set Renode as the debug tool in a PlatformIO project configuration file. It specifies the debug_tool option in the project environment.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = renode

----------------------------------------

TITLE: Configuring PVS-Studio with Custom Analysis Options
DESCRIPTION: Advanced configuration example showing how to set analysis mode, disable specific errors, and specify a custom license file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = pvs-studio
check_flags =
  pvs-studio: --analysis-mode=4 --errors-off=V532,V586 --lic-file=/path/to/file.lic

----------------------------------------

TITLE: Configuring Stable Platform Version in platformio.ini
DESCRIPTION: Example of how to configure a specific stable version of the Atmel megaAVR platform in the project's platformio.ini file.

LANGUAGE: ini
CODE:
[env:custom_stable]
platform = atmelmegaavr@x.y.z
board = ...

----------------------------------------

TITLE: Configuring ESP-Prog Debugging Tool in PlatformIO
DESCRIPTION: Example configuration for using the ESP-Prog debugging tool in a PlatformIO project's platformio.ini file. Sets the debug_tool option and optionally the upload_protocol.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = esp-prog

# Optional: Use ESP-Prog for uploading
upload_protocol = esp-prog

----------------------------------------

TITLE: LED Testing Implementation
DESCRIPTION: Unit tests for LED functionality including pin configuration and state testing using Unity framework.

LANGUAGE: cpp
CODE:
#include "../src/main.h"
#include <unity.h>

void setUp(void)
{
  LED_GPIO_CLK_ENABLE();
  GPIO_InitTypeDef GPIO_InitStruct;
  GPIO_InitStruct.Pin = LED_PIN;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
  HAL_GPIO_Init(LED_GPIO_PORT, &GPIO_InitStruct);
}

void tearDown(void)
{
  HAL_GPIO_DeInit(LED_GPIO_PORT, LED_PIN);
}

void test_led_builtin_pin_number(void)
{
  TEST_ASSERT_EQUAL(GPIO_PIN_5, LED_PIN);
}

void test_led_state_high(void)
{
  HAL_GPIO_WritePin(LED_GPIO_PORT, LED_PIN, GPIO_PIN_SET);
  TEST_ASSERT_EQUAL(GPIO_PIN_SET, HAL_GPIO_ReadPin(LED_GPIO_PORT, LED_PIN));
}

void test_led_state_low(void)
{
  HAL_GPIO_WritePin(LED_GPIO_PORT, LED_PIN, GPIO_PIN_RESET);
  TEST_ASSERT_EQUAL(GPIO_PIN_RESET, HAL_GPIO_ReadPin(LED_GPIO_PORT, LED_PIN));
}

int main()
{
  HAL_Init();      // initialize the HAL library
  HAL_Delay(2000); // service delay

  UNITY_BEGIN();
  RUN_TEST(test_led_builtin_pin_number);

  for (unsigned int i = 0; i < 5; i++)
  {
    RUN_TEST(test_led_state_high);
    HAL_Delay(500);
    RUN_TEST(test_led_state_low);
    HAL_Delay(500);
  }

  UNITY_END(); // stop unit testing

  while (1)
  {
  }
}

----------------------------------------

TITLE: Project Directory Structure Setup
DESCRIPTION: Shows the required directory structure for organizing test files in a PlatformIO project.

LANGUAGE: bash
CODE:
project_dir
├── platformio.ini
└── test
    └── test_blink
        └── test_main.cpp

----------------------------------------

TITLE: Setting Upload Protocol for RHF76 052
DESCRIPTION: Configuration to specify the upload protocol for the RHF76 052 board. The default protocol is 'serial', but this example shows how to change it.

LANGUAGE: ini
CODE:
[env:rhf76_052]
platform = ststm32
board = rhf76_052

upload_protocol = serial

----------------------------------------

TITLE: Configuring JTAG-HS2 as Debugging Tool in PlatformIO INI
DESCRIPTION: This snippet shows how to set JTAG-HS2 as the debugging tool in a PlatformIO project configuration file. It also demonstrates how to set it as the upload protocol if needed.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = digilent-hs2

# For firmware uploading
upload_protocol = digilent-hs1

----------------------------------------

TITLE: Configuring Upstream Teensy Platform Version in platformio.ini
DESCRIPTION: This snippet shows how to use the upstream development version of the Teensy platform by specifying the GitHub repository URL in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-teensy.git
board = ...

----------------------------------------

TITLE: Configuring FTDI Chip for Firmware Upload in PlatformIO INI
DESCRIPTION: This snippet demonstrates how to configure FTDI Chip for both debugging and firmware uploading in a PlatformIO project. It sets the debug_tool to 'ftdi' and the upload_protocol to 'ftdi'.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = ftdi
upload_protocol = ftdi

----------------------------------------

TITLE: Initializing PlatformIO Project for Visual Studio
DESCRIPTION: Command to generate a PlatformIO project configured for Visual Studio IDE. It requires specifying the board ID.

LANGUAGE: shell
CODE:
pio project init --ide visualstudio --board <ID>

----------------------------------------

TITLE: Displaying Help for PlatformIO Platform Command
DESCRIPTION: These commands show how to access help information for the 'pio platform' command and its subcommands in PlatformIO. The first command displays general help, while the second shows help for a specific subcommand.

LANGUAGE: bash
CODE:
pio platform --help

LANGUAGE: bash
CODE:
pio platform COMMAND --help

----------------------------------------

TITLE: Basic Library Update Usage in Bash
DESCRIPTION: Shows the basic command syntax for updating libraries in PlatformIO, including options for updating all project libraries, specific libraries, and libraries in different storage locations.

LANGUAGE: bash
CODE:
pio lib [STORAGE_OPTIONS] update [OPTIONS]

# update all project libraries
# (run it from a project root where is located "platformio.ini")
pio lib update [OPTIONS]

# update project dependent library
pio lib [STORAGE_OPTIONS] update [OPTIONS] [LIBRARY...]

# update library in global storage
pio lib --global update [OPTIONS] [LIBRARY...]
pio lib -g update [OPTIONS] [LIBRARY...]

# update library in custom storage
pio lib --storage-dir /path/to/dir update [OPTIONS] [LIBRARY...]
pio lib -d /path/to/dir update [OPTIONS] [LIBRARY...]

----------------------------------------

TITLE: Configuring Upstream Development Version of Raspberry Pi Platform in PlatformIO
DESCRIPTION: INI configuration for using the latest upstream development version of the Raspberry Pi platform from GitHub in PlatformIO projects.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-raspberrypi.git
board = ...

----------------------------------------

TITLE: Customizing ESP32 Pico Kit Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:pico32]
platform = espressif32
board = pico32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Example Output of 'pio org list' Command in Bash
DESCRIPTION: This snippet shows an example output of the 'pio org list' command. It displays information about the 'platformio' organization, including its display name and owners.

LANGUAGE: bash
CODE:
> pio org list

...

platformio
----------
Display Name:  PlatformIO
Owners:        alice, bob

...

----------------------------------------

TITLE: SimAVR Test Execution Command
DESCRIPTION: Example command output showing successful test execution using SimAVR simulator without uploading firmware.

LANGUAGE: text
CODE:
> pio test --without-uploading

Verbose mode can be enabled via `-v, --verbose` option
Collected 1 tests

Processing test_dummy in uno environment
----------------------------------------
Building...
Testing...
test/test_dummy/test_main.cpp:19: dummy_test	[PASSED]
--------------------------- uno:test_dummy [PASSED] Took 0.94 seconds -------------------------

=============================== SUMMARY ===============================
Environment    Test        Status    Duration
-------------  ----------  --------  ------------
uno            test_dummy  PASSED    00:00:00.942
======================= 1 test cases: 1 succeeded in 00 ==================================

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board in platformio.ini file. Sets esptool as the upload protocol.

LANGUAGE: ini
CODE:
[env:adafruit_qualia_s3_rgb666]
platform = espressif32
board = adafruit_qualia_s3_rgb666

upload_protocol = esptool

----------------------------------------

TITLE: Defining Description Field for PlatformIO Project Configuration
DESCRIPTION: Specifies the 'description' field for PlatformIO project configuration. It is a single string value used to provide a short description of the project, which is displayed in various places within PlatformIO Home.

LANGUAGE: plaintext
CODE:
``description``
^^^^^^^^^^^^^^^

Type: ``String`` | Multiple: ``No``

Short description of the project. PlatformIO uses it for
:ref:`piohome` in the multiple places.

----------------------------------------

TITLE: Using pio pkg show Command in Bash
DESCRIPTION: This snippet demonstrates the basic usage of the 'pio pkg show' command in PlatformIO. It allows users to view information about a specific package from the PlatformIO Registry.

LANGUAGE: bash
CODE:
pio pkg show [OPTIONS] [<owner>/]<pkg>[@<version>]

----------------------------------------

TITLE: Using PlatformIO Team Update Command in Bash
DESCRIPTION: Demonstrates the usage of the 'pio team update' command to update team details in PlatformIO. The command requires the organization name and team name, and supports options for updating the team name and description.

LANGUAGE: bash
CODE:
pio team update [OPTIONS] ORGNAME:TEAMNAME

----------------------------------------

TITLE: Configuring Custom Test Command in platformio.ini
DESCRIPTION: Example of overriding the default test command in platformio.ini to pass custom arguments to the Doctest runner. This configuration aborts after the first error and includes successful assertions in the output.

LANGUAGE: ini
CODE:
[env:myenv]
platform = native
test_testing_command =
  ${platformio.build_dir}/${this.__env__}/program
  -aa=1
  -s

----------------------------------------

TITLE: Uninstalling PlatformIO Core using pip and Homebrew
DESCRIPTION: Commands for uninstalling PlatformIO Core installed via pip package manager or Homebrew on macOS. Includes commands for both standard pip uninstall and python module uninstall methods.

LANGUAGE: bash
CODE:
# uninstall standalone PlatformIO Core installed via `pip`
pip uninstall platformio
python -m pip uninstall platformio

# uninstall Homebrew's PlatformIO Core (only macOS users if you installed it via Homebrew before)
brew uninstall platformio

----------------------------------------

TITLE: Running PlatformIO Remote Test Command in Bash
DESCRIPTION: Basic usage of the 'pio remote test' command, including an example of running tests on a specified PlatformIO Remote Agent. This command is used to run unit tests remotely for PlatformIO projects.

LANGUAGE: bash
CODE:
pio remote test [OPTIONS]

# run tests on specified PlatformIO Remote Agent
pio remote --agent NAME test [OPTIONS]

----------------------------------------

TITLE: Configuring ALKS ESP32 Board in PlatformIO
DESCRIPTION: Basic configuration for using the ALKS ESP32 board in a PlatformIO project. Specifies the board ID and platform.

LANGUAGE: ini
CODE:
[env:alksesp32]
platform = espressif32
board = alksesp32

----------------------------------------

TITLE: Customizing M5Stack FIRE Board Settings
DESCRIPTION: Example of how to override default board settings in PlatformIO configuration. This snippet shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:m5stack-fire]
platform = espressif32
board = m5stack-fire

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Implementing a Simple Calculator Library in C
DESCRIPTION: This code defines a simple calculator library with basic arithmetic operations. It includes function declarations in the header file and implementations in the source file.

LANGUAGE: C
CODE:
// calculator.h
#ifndef _CALCULATOR_H_
#define _CALCULATOR_H_

#ifdef __cplusplus
extern "C"
{
#endif

  int addition(int a, int b);
  int subtraction(int a, int b);
  int multiplication(int a, int b);
  int division(int a, int b);

#ifdef __cplusplus
}
#endif

#endif // _CALCULATOR_H_

// calculator.c
#include "calculator.h"

int addition(int a, int b)
{
  return a + b;
}

int subtraction(int a, int b)
{
  return a - b;
}

int multiplication(int a, int b)
{
  return a * b;
}

int division(int a, int b)
{
  return a / b;
}

----------------------------------------

TITLE: Configuring Basic ESP32-GATEWAY Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ESP32-GATEWAY board project using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:esp32-gateway]
platform = espressif32
board = esp32-gateway

----------------------------------------

TITLE: Configuring Stable Version of Silicon Labs EFM32 Platform in platformio.ini
DESCRIPTION: Shows how to configure the stable version of the Silicon Labs EFM32 platform in the platformio.ini project configuration file. It includes options for using the latest stable version or pinning to a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = siliconlabsefm32
board = ...

; Specific version
[env:custom_stable]
platform = siliconlabsefm32@x.y.z
board = ...

----------------------------------------

TITLE: Configuring Upstream Platform Version
DESCRIPTION: Example showing how to use the latest upstream development version from GitHub

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-nordicnrf52.git
board = ...

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32s2_thing_plus]
platform = espressif32
board = sparkfun_esp32s2_thing_plus

upload_protocol = esptool

----------------------------------------

TITLE: Basic Library Search Command Usage
DESCRIPTION: Basic command syntax for searching libraries in PlatformIO Registry with optional query and filters

LANGUAGE: bash
CODE:
pio lib search [OPTIONS] [QUERY]

----------------------------------------

TITLE: Configuring ST 32L476GDISCOVERY Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST 32L476GDISCOVERY board using the STM32 platform. It sets the board ID and allows for custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:disco_l476vg]
platform = ststm32
board = disco_l476vg

; change microcontroller
board_build.mcu = stm32l476vgt6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Cppcheck in PlatformIO project
DESCRIPTION: This snippet shows how to explicitly specify Cppcheck as the check tool in a PlatformIO project configuration file. It also demonstrates how to enable all checks using the --enable=all flag.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
check_tool = cppcheck
check_flags = --enable=all

----------------------------------------

TITLE: Monitoring Remote Devices in PlatformIO
DESCRIPTION: This command connects to the Serial Port of a remote device to send or receive data in real time. It requires the PlatformIO remote agent to be running on the remote machine.

LANGUAGE: bash
CODE:
pio remote device monitor [OPTIONS]

# Connect to a specified agent
pio remote --agent NAME device monitor [OPTIONS]
pio remote -a NAME device monitor [OPTIONS]

----------------------------------------

TITLE: Configuring Basic ATmega808 Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega808 board project in platformio.ini. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega808]
platform = atmelmegaavr
board = ATmega808

----------------------------------------

TITLE: Configuring ST-LINK debugging tool in platformio.ini
DESCRIPTION: Example configuration for using ST-LINK as the debugging tool in the project configuration file. Also shows how to set it as the upload protocol.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = stlink

[env:myenv]
platform = ...
board = ...
debug_tool = stlink
upload_protocol = stlink

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the SparkFun RedBoard Turbo.

LANGUAGE: ini
CODE:
[env:sparkfun_redboard_turbo]
platform = atmelsam
board = sparkfun_redboard_turbo

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F746ZG
DESCRIPTION: Configuration example for specifying the upload protocol for the ST Nucleo F746ZG board.

LANGUAGE: ini
CODE:
[env:nucleo_f746zg]
platform = ststm32
board = nucleo_f746zg

upload_protocol = stlink

----------------------------------------

TITLE: Configuring test_filter in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set up the test_filter option in a PlatformIO project configuration file. It shows how to specify multiple patterns to filter test suites based on their paths relative to the test directory.

LANGUAGE: ini
CODE:
[env:myenv]
platform = native
test_filter =
    test_common
    native/*

----------------------------------------

TITLE: Configuring Custom Bootloader for Arduino Uno
DESCRIPTION: Configuration for flashing a custom bootloader to an Arduino Uno board. Specifies the bootloader file path and custom fuse values.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
framework = arduino
board = uno

board_bootloader.file = /path/to/custom/bootloader.hex
board_bootloader.lfuse = 0xFF
board_bootloader.hfuse = 0xDE
board_bootloader.efuse = 0xFD
board_bootloader.lock_bits = 0x0F
board_bootloader.unlock_bits = 0x3F

----------------------------------------

TITLE: Configuring Basic ESP32-S3 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the Adafruit Feather ESP32-S3 board defining the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3]
platform = espressif32
board = adafruit_feather_esp32s3

----------------------------------------

TITLE: Configuring Upload Protocol for M5Stack StampS3
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:m5stack-stamps3]
platform = espressif32
board = m5stack-stamps3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Extended Test Command with Arguments in PlatformIO
DESCRIPTION: Extended configuration example showing how to add custom arguments to the test command execution.

LANGUAGE: ini
CODE:
[env:myenv]
platform = native
test_testing_command =
  ${platformio.build_dir}/${this.__env__}/program
  arg1
  --option2
  option2_value

----------------------------------------

TITLE: Configuring Doctest in platformio.ini
DESCRIPTION: Basic configuration for using Doctest as the test framework in a PlatformIO project. Sets the platform to native and specifies Doctest as the test framework.

LANGUAGE: ini
CODE:
[env:native]
platform = native
test_framework = doctest

----------------------------------------

TITLE: Basic Remote Run Command Usage
DESCRIPTION: Shows the basic command syntax for running PlatformIO projects remotely with optional agent specification.

LANGUAGE: bash
CODE:
pio remote run [OPTIONS]

# process environments using specified PlatformIO Remote Agent
pio remote --agent NAME run [OPTIONS]

----------------------------------------

TITLE: Installing pyupdi Upload Tool
DESCRIPTION: Command to install the Python-based pyupdi tool for programming tinyAVR and megaAVR devices

LANGUAGE: bash
CODE:
python -m pip install https://github.com/mraardvark/pyupdi/archive/master.zip

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the Seeeduino XIAO.

LANGUAGE: ini
CODE:
[env:seeed_xiao]
platform = atmelsam
board = seeed_xiao

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Testing Frameworks Compatibility Table
DESCRIPTION: RST-formatted table showing compatibility between testing frameworks, test types, platforms, and mocking support. Includes doctest, googletest, and unity frameworks.

LANGUAGE: rst
CODE:
.. list-table::
  :header-rows:  1

  * - Framework
    - :ref:`unit_testing_runner_test_types`
    - :ref:`platforms`
    - Mocking

  * - :ref:`unit_testing_frameworks_doctest`
    - Native
    - :ref:`platform_native`
    - No

  * - :ref:`unit_testing_frameworks_googletest`
    - Any
    - :ref:`platform_native`, :ref:`platform_espressif8266`,
      :ref:`platform_espressif32`
    - Yes

  * - :ref:`unit_testing_frameworks_unity`
    - Any
    - Any
    - No

----------------------------------------

TITLE: Basic PlatformIO Configuration for M5Stack GREY ESP32
DESCRIPTION: Default configuration settings for setting up the M5Stack GREY ESP32 board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:m5stack-grey]
platform = espressif32
board = m5stack-grey

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Demonstrates how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32doit-devkit-v1]
platform = espressif32
board = esp32doit-devkit-v1

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example of configuring the upload protocol for the SparkFun ESP32 MicroMod board, demonstrating how to specify the esptool protocol.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32micromod]
platform = espressif32
board = sparkfun_esp32micromod

upload_protocol = esptool

----------------------------------------

TITLE: PlatformIO Project Configuration
DESCRIPTION: PlatformIO configuration file specifying board, framework and serial monitor settings

LANGUAGE: ini
CODE:
[env:nrf52_dk]
platform = nordicnrf52
board = nrf52_dk
framework = zephyr
monitor_speed = 115200

----------------------------------------

TITLE: Configuring STM32-E407 Board in PlatformIO
DESCRIPTION: Basic configuration for using the STM32-E407 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:olimex_e407]
platform = ststm32
board = olimex_e407

----------------------------------------

TITLE: Configuring Stable CHIPS Alliance Platform Version
DESCRIPTION: Configuration examples for using stable releases of the CHIPS Alliance platform in PlatformIO projects.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = chipsalliance
board = ...

; Specific version
[env:custom_stable]
platform = chipsalliance@x.y.z
board = ...

----------------------------------------

TITLE: Configuring ATmega1281 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega1281 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATmega1281]
platform = atmelavr
board = ATmega1281

; change microcontroller
board_build.mcu = atmega1281

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Monitor Filters in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set up monitor filters in a PlatformIO project configuration file. It applies default filtering, adds timestamps, and logs output to a file.

LANGUAGE: ini
CODE:
[env:log_output_to_file_with_timestamp]
...
platform = ...
monitor_filters =
  default   ; Remove typical terminal control codes from input
  time      ; Add timestamp with milliseconds for each new line
  log2file  ; Log data to a file "platformio-device-monitor-*.log" located in the current working directory

----------------------------------------

TITLE: Using the 'pio org update' Command in Bash
DESCRIPTION: This snippet demonstrates the basic usage of the 'pio org update' command. It allows users to update an organization's details, including its name, email, and display name.

LANGUAGE: bash
CODE:
pio org update [OPTIONS] ORGNAME

----------------------------------------

TITLE: Initializing LED Blink Project with Arduino for Nordic nRF52-DK
DESCRIPTION: Basic Arduino sketch that blinks the built-in LED on the Nordic nRF52-DK board. It initializes the LED pin in setup() and toggles it in the main loop().

LANGUAGE: cpp
CODE:
#include <Arduino.h>

void setup()
{
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop()
{
  digitalWrite(LED_BUILTIN, HIGH);
  delay(100);
  digitalWrite(LED_BUILTIN, LOW);
  delay(100);
}

----------------------------------------

TITLE: Configuring Black Magic Probe for firmware upload
DESCRIPTION: Example configuration for using Black Magic Probe to upload firmware in addition to debugging. Specifies the upload protocol and port.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = blackmagic
debug_port = <CONFIGURE GDB PORT>

upload_port = <THE SAME AS DEBUG PORT>

; SWD interface
upload_protocol = blackmagic

; JTAG interface
upload_protocol = blackmagic-jtag

----------------------------------------

TITLE: Customizing hackaBLE MCU Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings like MCU type and frequency.

LANGUAGE: ini
CODE:
[env:hackaBLE]
platform = nordicnrf52
board = hackaBLE

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring MSP Debug Upload Protocol
DESCRIPTION: Configuration for using MSP Debug tool as the upload protocol in PlatformIO project

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = mspdebug
upload_protocol = mspdebug

----------------------------------------

TITLE: Configuring PlatformIO for Custom Unity Testing
DESCRIPTION: This snippet shows the PlatformIO configuration file (platformio.ini) setup for using a custom test framework with an Arduino Mbed-core project.

LANGUAGE: ini
CODE:
[env:nano33ble]
platform = nordicnrf52
board = nano33ble
framework = arduino
test_framework = custom

----------------------------------------

TITLE: Customizing ATtiny1616 Build Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency in platformio.ini configuration.

LANGUAGE: ini
CODE:
[env:ATtiny1616]
platform = atmelmegaavr
board = ATtiny1616

; change microcontroller
board_build.mcu = attiny1616

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Using pio project init Command in Bash
DESCRIPTION: Basic usage of the 'pio project init' command to initialize a new PlatformIO project or update an existing one with new data. This command supports various options for customizing the project setup.

LANGUAGE: bash
CODE:
pio project init [OPTIONS]

----------------------------------------

TITLE: Customizing ATtiny3216 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:ATtiny3216]
platform = atmelmegaavr
board = ATtiny3216

; change microcontroller
board_build.mcu = attiny3216

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Maple STM32 USB Configuration
DESCRIPTION: Example of configuring USB Mass Storage for STM32F4 boards using the Maple core.

LANGUAGE: ini
CODE:
[env:disco_f407vg]
platform = ststm32
framework = arduino
board = disco_f407vg
board_build.core = maple
build_flags = -D ENABLE_USB_MASS_STORAGE

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the PyGamer M4 board. The board supports atmel-ice, jlink and sam-ba protocols with sam-ba as default.

LANGUAGE: ini
CODE:
[env:adafruit_pygamer_m4]
platform = atmelsam
board = adafruit_pygamer_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring ST STM8 Platform in platformio.ini
DESCRIPTION: Example of how to configure the ST STM8 platform in the PlatformIO project configuration file. Shows both stable and upstream versions.

LANGUAGE: ini
CODE:
; Latest stable version
[env:latest_stable]
platform = ststm8
board = ...

; Specific version
[env:custom_stable]
platform = ststm8@x.y.z
board = ...

; Upstream version
[env:upstream_develop]
platform = https://github.com/platformio/platform-ststm8.git
board = ...

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:um_tinys3]
platform = espressif32
board = um_tinys3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Custom Fuses Configuration
DESCRIPTION: Example of setting custom fuse values for an ATmega3209 board using the xplainedmini_updi upload protocol

LANGUAGE: ini
CODE:
[env:custom_fuses]
platform = atmelmegaavr
framework = arduino
board = ATmega3209
upload_protocol = xplainedmini_updi
board_fuses.bootend = 0xAA
board_fuses.syscfg0 = 0xBB
board_fuses.osccfg = 0xCC

----------------------------------------

TITLE: Configuring Upstream Lattice iCE40 Platform in INI
DESCRIPTION: PlatformIO configuration for using the latest upstream development version of the Lattice iCE40 platform directly from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-lattice_ice40.git
board = ...

----------------------------------------

TITLE: Using Arduino Framework with Staging Version for ESP32 in PlatformIO
DESCRIPTION: Demonstrates how to use the staging version of the Arduino framework for ESP32 by specifying the framework repository in the platform_packages option.

LANGUAGE: ini
CODE:
[env:esp32dev]
platform = platformio/espressif32
board = esp32dev
framework = arduino
platform_packages =
    platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git

----------------------------------------

TITLE: Customizing TAMC DPU ESP32 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. It demonstrates how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:dpu_esp32]
platform = espressif32
board = dpu_esp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring AutoTiler Library Path in PlatformIO for RISC-V GAP
DESCRIPTION: Demonstrates how to add the AutoTiler library path to the build flags in the PlatformIO configuration file. This is necessary for using the GAP8 AutoTiler library with GAPuino boards.

LANGUAGE: ini
CODE:
[env:gapuino]
platform = riscv_gap
board = gapuino
framework = ...
build_flags = -L/path/to/libtile/folder

----------------------------------------

TITLE: Setting Debug Level for ESP32 in PlatformIO
DESCRIPTION: Demonstrates how to set different debug levels for ESP32 using build flags in the PlatformIO configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
framework = arduino

;;;;; Possible options ;;;;;;

; None
build_flags = -DCORE_DEBUG_LEVEL=0

; Error
build_flags = -DCORE_DEBUG_LEVEL=1

; Warn
build_flags = -DCORE_DEBUG_LEVEL=2

; Info
build_flags = -DCORE_DEBUG_LEVEL=3

; Debug
build_flags = -DCORE_DEBUG_LEVEL=4

; Verbose
build_flags = -DCORE_DEBUG_LEVEL=5

----------------------------------------

TITLE: Customizing ESP32 FM DevKit Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency using board_*** options.

LANGUAGE: ini
CODE:
[env:fm-devkit]
platform = espressif32
board = fm-devkit

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Dynamic Build Flags with External Command in PlatformIO
DESCRIPTION: Example of using an external command to generate build flags dynamically in platformio.ini. This can be used for including version control information or other dynamic data in the build process.

LANGUAGE: ini
CODE:
[env:generate_flags_with_external_command]
build_flags = !cmd_or_path_to_script

; Unix only, get output from internal command
build_flags = !echo '-D COMMIT_HASH=\"'$(git log -1 --format=%%h)'\"

----------------------------------------

TITLE: Installing Python Virtual Environment on Debian/Ubuntu
DESCRIPTION: Command to install Python virtual environment package on Debian/Ubuntu systems using apt package manager. Required for PlatformIO core functionality.

LANGUAGE: bash
CODE:
sudo apt install python3-venv

----------------------------------------

TITLE: Executing PlatformIO Account Password Change Command
DESCRIPTION: This command is used to change the password for a PlatformIO account. It initiates the password change process for the currently logged-in user.

LANGUAGE: bash
CODE:
pio account password

----------------------------------------

TITLE: Installing Tool Packages
DESCRIPTION: Examples showing how to install tool packages from registry and git repository.

LANGUAGE: shell
CODE:
pio pkg install -t "platformio/tool-openocd"
pio pkg install --tool https://github.com/platformio/platform-sifive.git

----------------------------------------

TITLE: Configuring Basic Teensy 4.0 Board Settings
DESCRIPTION: Basic INI configuration for setting up a Teensy 4.0 board project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:teensy40]
platform = teensy
board = teensy40

----------------------------------------

TITLE: Configuring WeMos WiFi and Bluetooth Battery Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the WeMos WiFi and Bluetooth Battery board in a PlatformIO project configuration file. It sets the platform to espressif32 and the board to wemosbat.

LANGUAGE: ini
CODE:
[env:wemosbat]
platform = espressif32
board = wemosbat

----------------------------------------

TITLE: PlatformIO lib_ignore Configuration Examples
DESCRIPTION: Examples showing how to configure lib_ignore in platformio.ini using both single-line and multi-line formats to exclude specific libraries from dependency resolution.

LANGUAGE: ini
CODE:
[env:myenv]
; Single line
lib_ignore = AsyncMqttClient, DNSServer

; Multi-line
lib_ignore =
  AsyncMqttClient
  ESP Async WebServer

----------------------------------------

TITLE: Configuring Black STM32F407VE Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Black STM32F407VE board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:black_f407ve]
platform = ststm32
board = black_f407ve

----------------------------------------

TITLE: Configuring PlatformIO for Heltec WiFi LoRa 32 (V2)
DESCRIPTION: Basic PlatformIO configuration for the Heltec WiFi LoRa 32 (V2) board using the Espressif32 platform. Specifies the board ID to use in the project configuration file.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32_V2]
platform = espressif32
board = heltec_wifi_lora_32_V2

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the BBC micro:bit V2 board in platformio.ini file, specifying the platform and board.

LANGUAGE: ini
CODE:
[env:bbcmicrobit_v2]
platform = nordicnrf52
board = bbcmicrobit_v2

----------------------------------------

TITLE: Custom Board Build Configuration
DESCRIPTION: PlatformIO project configuration for building with a custom board target

LANGUAGE: ini
CODE:
[env:my_custom_board]
platform = nxplpc
framework = mbed
board = my_custom_board
build_flags = -I$PROJECT_SRC_DIR/MY_CUSTOM_BOARD_TARGET

----------------------------------------

TITLE: Custom ETBoard MCU Configuration
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:etboard]
platform = espressif32
board = etboard

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Denky32 Board in PlatformIO INI File
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Denky32 (WROOM32) board in PlatformIO. It sets the upload protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:denky32]
platform = espressif32
board = denky32

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ESP32-S3-Box Board Settings in PlatformIO
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32s3box]
platform = espressif32
board = esp32s3box

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Invent One Board Settings
DESCRIPTION: This example demonstrates how to override default Invent One board settings in the PlatformIO configuration. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:inventone]
platform = espressif8266
board = inventone

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: PlatformIO Home Server Output Example
DESCRIPTION: Example output showing the ASCII art logo and server status information when launching PlatformIO Home server.

LANGUAGE: bash
CODE:
  ___I_
 /\-_--\   PlatformIO Home
/  \_-__\
|[]| [] |  http://127.0.0.1:8008
|__|____|_______________________

Open PlatformIO Home in your browser by this URL => http://127.0.0.1:8008
PlatformIO Home has been started. Press Ctrl+C to shutdown.

----------------------------------------

TITLE: Displaying PlatformIO System Completion Help in Bash
DESCRIPTION: These commands demonstrate how to access help information for PlatformIO system completion. The first command shows general help, while the second provides help for a specific completion command.

LANGUAGE: bash
CODE:
pio system completion --help
pio system completion COMMAND --help

----------------------------------------

TITLE: Customizing ATtiny1624 Build Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATtiny1624]
platform = atmelmegaavr
board = ATtiny1624

; change microcontroller
board_build.mcu = attiny1624

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Uninstalling Libraries with PlatformIO CLI
DESCRIPTION: This snippet demonstrates various ways to use the 'pio lib uninstall' command for removing libraries from different storage locations and with different options.

LANGUAGE: bash
CODE:
pio lib [STORAGE_OPTIONS] uninstall [LIBRARY...]

# uninstall project dependent library
# (run it from a project root where is located "platformio.ini")
pio lib uninstall [LIBRARY...]

# uninstall dependencies for the specific project environment
# (run it from a project root where is located "platformio.ini")
pio lib -e myenv uninstall [OPTIONS] [LIBRARY...]
pio lib -d /path/to/platformio/project -e myenv uninstall [OPTIONS] [LIBRARY...]

# uninstall library from global storage
pio lib --global uninstall [LIBRARY...]
pio lib -g uninstall [LIBRARY...]

# uninstall library from custom storage
pio lib --storage-dir /path/to/dir uninstall [LIBRARY...]
pio lib -d /path/to/dir uninstall [LIBRARY...]

# [LIBRARY...] forms
pio lib [STORAGE_OPTIONS] uninstall <id>
pio lib [STORAGE_OPTIONS] uninstall <id>@<version>
pio lib [STORAGE_OPTIONS] uninstall <id>@<version range>
pio lib [STORAGE_OPTIONS] uninstall <name>
pio lib [STORAGE_OPTIONS] uninstall <name>@<version>
pio lib [STORAGE_OPTIONS] uninstall <name>@<version range>

----------------------------------------

TITLE: Configuring AVR128DA32 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR128DA32 board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:AVR128DA32]
platform = atmelmegaavr
board = AVR128DA32

; change microcontroller
board_build.mcu = avr128da32

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit QT Py ESP32-S3
DESCRIPTION: Configuration to change the upload protocol for the Adafruit QT Py ESP32-S3 board in platformio.ini. The default protocol is esptool.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32s3_n4r2]
platform = espressif32
board = adafruit_qtpy_esp32s3_n4r2

upload_protocol = esptool

----------------------------------------

TITLE: PVS-Studio License File Format Example
DESCRIPTION: Example format for PVS-Studio license file content, which should be saved in UTF-8 + BOM format.

LANGUAGE: text
CODE:
name@domain.com
AAAA-BBBB-CCCC-DDDD

----------------------------------------

TITLE: Running OpenOCD from PlatformIO Package
DESCRIPTION: This example demonstrates how to run the OpenOCD command from a PlatformIO package. It shows the usage of the 'pio pkg exec' command to execute OpenOCD with the '--help' option, displaying the OpenOCD version and available options.

LANGUAGE: bash
CODE:
> pio pkg exec -- openocd --help

OpenOCD x86_64 Open On-Chip Debugger 0.11.0+dev (2021-10-17-00:18)
Licensed under GNU GPL v2
For bug reports, read
    http://openocd.org/doc/doxygen/bugs.html
Open On-Chip Debugger
Licensed under GNU GPL v2
--help       | -h   display this help
--version    | -v   display OpenOCD version
--file       | -f   use configuration file <name>
--search     | -s   dir to search for config files and scripts
--debug      | -d   set debug level to 3
             | -d<n>    set debug level to <level>
--log_output | -l   redirect log output to file <name>
--command    | -c   run <command>

----------------------------------------

TITLE: Unix OS Device List Example
DESCRIPTION: Example output of device list command on Unix systems, showing USB-to-UART devices with hardware IDs and descriptions.

LANGUAGE: bash
CODE:
> pio device list
/dev/cu.SLAB_USBtoUART
----------
Hardware ID: USB VID:PID=10c4:ea60 SNR=0001
Description: CP2102 USB to UART Bridge Controller

/dev/cu.uart-1CFF4676258F4543
----------
Hardware ID: USB VID:PID=451:f432 SNR=1CFF4676258F4543
Description: Texas Instruments MSP-FET430UIF

----------------------------------------

TITLE: Configuring WEMOS LOLIN S3 PRO Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the WEMOS LOLIN S3 PRO board using the Espressif32 platform. Includes options to override default board settings.

LANGUAGE: ini
CODE:
[env:lolin_s3_pro]
platform = espressif32
board = lolin_s3_pro

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Smart Bee Motion S3 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Smart Bee Motion S3 board using the Espressif32 platform. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:bee_motion_s3]
platform = espressif32
board = bee_motion_s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Project Configuration with Library Dependencies
DESCRIPTION: Example of declaring library dependencies in project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
lib_deps =
    bblanchon/ArduinoJson
    etlcpp/Embedded Template Library

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ST Nucleo F072RB board project in PlatformIO using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_f072rb]
platform = ststm32
board = nucleo_f072rb

----------------------------------------

TITLE: Basic ESP32-S2-Saola-1 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for ESP32-S2-Saola-1 board setup using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:esp32-s2-saola-1]
platform = espressif32
board = esp32-s2-saola-1

----------------------------------------

TITLE: Customizing ESP32-S2-Kaluga-1 Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-s2-kaluga-1]
platform = espressif32
board = esp32-s2-kaluga-1

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Including Custom Libraries in C Source Code
DESCRIPTION: Shows how to include custom libraries in the main source file of a PlatformIO project. Demonstrates the use of angle brackets for including library headers.

LANGUAGE: c
CODE:
#include <Foo.h>
#include <Bar.h>

// rest of H/C/CPP code

----------------------------------------

TITLE: Customizing MH ET LIVE ESP32MiniKit Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mhetesp32minikit]
platform = espressif32
board = mhetesp32minikit

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller settings and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_f334r8]
platform = ststm32
board = nucleo_f334r8

; change microcontroller
board_build.mcu = stm32f334r8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing Unexpected Maker FeatherS2 Neo Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:um_feathers2_neo]
platform = espressif32
board = um_feathers2_neo

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Adafruit QT Py ESP32
DESCRIPTION: Basic board configuration settings in platformio.ini for Adafruit QT Py ESP32 using the espressif32 platform

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32]
platform = espressif32
board = adafruit_qtpy_esp32

----------------------------------------

TITLE: Configuring M5Stack Core2 Board in PlatformIO
DESCRIPTION: Basic configuration for using the M5Stack Core2 board with the Espressif32 platform in a PlatformIO project's ini file.

LANGUAGE: ini
CODE:
[env:m5stack-core2]
platform = espressif32
board = m5stack-core2

----------------------------------------

TITLE: Configuring April Brother ESPea32 Board in PlatformIO
DESCRIPTION: Basic configuration for using the April Brother ESPea32 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:espea32]
platform = espressif32
board = espea32

----------------------------------------

TITLE: Configuring Upstream Intel ARC32 Platform in PlatformIO
DESCRIPTION: This snippet shows how to use the upstream development version of the Intel ARC32 platform in a PlatformIO project by specifying the GitHub repository URL.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-intel_arc32.git
board = ...

----------------------------------------

TITLE: Setting lwIP Variant for ESP8266 in PlatformIO
DESCRIPTION: Example of setting the lwIP variant to v1.4 Higher Bandwidth using a build flag in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
...
build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH

----------------------------------------

TITLE: D-duino-32 Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the D-duino-32 board.

LANGUAGE: ini
CODE:
[env:d-duino-32]
platform = espressif32
board = d-duino-32

upload_protocol = esptool

----------------------------------------

TITLE: Executing Team Destruction Command in PlatformIO CLI (Bash)
DESCRIPTION: This command is used to destroy a team in PlatformIO. It requires specifying the organization name and team name in the format ORGNAME:TEAMNAME. This operation permanently removes the team from the organization.

LANGUAGE: bash
CODE:
pio team destroy ORGNAME:TEAMNAME

----------------------------------------

TITLE: Defining Table of Contents in reStructuredText for PlatformIO Documentation
DESCRIPTION: This snippet defines the structure of the PlatformIO documentation using reStructuredText's toctree directive. It organizes the content into several sections including Getting Started, Configuration, Instruments, Advanced features, Integration, and Miscellaneous.

LANGUAGE: reStructuredText
CODE:
.. toctree::
    :maxdepth: 2

    what-is-platformio

.. toctree::
    :caption: Getting Started
    :maxdepth: 1

    integration/ide/pioide
    core/index
    home/index
    plus/pio-account
    tutorials/index

.. toctree::
    :caption: Configuration
    :maxdepth: 1

    platformio.ini <projectconf/index>
    projectconf/build_configurations
    envvars

.. toctree::
    :caption: Instruments
    :maxdepth: 1

    librarymanager/index
    Platforms <platforms/index>
    frameworks/index
    boards/index
    platforms/custom_platform_and_board

.. toctree::
    :caption: Advanced
    :maxdepth: 1

    Scripting <scripting/index>
    plus/debugging
    advanced/unit-testing/index
    advanced/static-code-analysis/index
    plus/pio-remote

.. toctree::
    :caption: Integration
    :maxdepth: 2

    integration/ide/index
    integration/ci/index
    integration/compile_commands

.. toctree::
    :caption: Miscellaneous
    :maxdepth: 1

    FAQ <faq/index>
    core/history
    core/migration

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32_v2]
platform = espressif32
board = adafruit_feather_esp32_v2

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Custom Upload Command with USBasp in PlatformIO (INI)
DESCRIPTION: This snippet shows how to set up a custom upload command for an ATmega328p microcontroller using USBasp. It defines custom upload flags and an upload command that skips pre-uploading actions.

LANGUAGE: ini
CODE:
[env:program_via_usbasp]
platform = atmelavr
framework = arduino
board = uno
upload_protocol = custom
upload_flags =
    -C
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    atmega328p
    -Pusb
    -c
    stk500v1
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:olimex_f103]
platform = ststm32
board = olimex_f103

; change microcontroller
board_build.mcu = stm32f103rbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Project Environment in platformio.ini
DESCRIPTION: Platform configuration for different HAL environments using the native platform with specific build flags.

LANGUAGE: ini
CODE:
[env:foo]
platform = native
build_flags = -DHAL=foo

[env:bar]
platform = native
build_flags = -DHAL=bar

----------------------------------------

TITLE: Configuring Stable Renesas RA Platform Version in PlatformIO
DESCRIPTION: Shows how to specify stable versions of the Renesas RA platform in the PlatformIO project configuration file. Includes options for using the latest stable release or pinning to a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = renesas-ra
board = ...

; Specific version
[env:custom_stable]
platform = renesas-ra@x.y.z
board = ...

----------------------------------------

TITLE: Configuring AVR128DB28 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR128DB28 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:AVR128DB28]
platform = atmelmegaavr
board = AVR128DB28

; change microcontroller
board_build.mcu = avr128db28

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Displaying ArduinoJson Package Information in Bash
DESCRIPTION: This example shows how to use the 'pio pkg show' command to display information about the ArduinoJson package. It demonstrates the output format, including package details, compatibility, and version history.

LANGUAGE: bash
CODE:
> pio pkg show bblanchon/ArduinoJson

bblanchon/ArduinoJson
Library • 6.19.3 • Public • Published Tue Mar  8 16:24:14 2022

https://registry.platformio.org/libraries/bblanchon/ArduinoJson

A simple and efficient JSON library for embedded C++. ...

---------------------  ----------------------------------------------------------------
Homepage               https://arduinojson.org/?utm_source=meta&utm_medium=library.json
Repository             https://github.com/bblanchon/ArduinoJson.git
License                MIT
Popularity             2
Stars                  5599
Examples               10
Installed Size         385.83KB
Used By                134
Compatible Platforms   *
Compatible Frameworks  *
Keywords               json, rest, http, web
---------------------  ----------------------------------------------------------------

Version    Size      Published
---------  --------  -------------------
6.19.3     85.04KB   2022-03-08 16:24:14
6.19.2     84.82KB   2022-02-14 08:06:06
...

----------------------------------------

TITLE: Configuring ST 32F413HDISCOVERY Board in platformio.ini
DESCRIPTION: Basic configuration for the ST 32F413HDISCOVERY board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_f413zh]
platform = ststm32
board = disco_f413zh

----------------------------------------

TITLE: Configuring Test Ignore Patterns in PlatformIO
DESCRIPTION: Example configuration showing how to ignore specific test suites using pattern matching in PlatformIO's test framework. The configuration demonstrates ignoring all tests in the 'embedded' directory and test suites numbered 1 and 3.

LANGUAGE: ini
CODE:
[env:myenv]
platform = embedded
test_ignore =
  embedded/*
  test_suite[13]

----------------------------------------

TITLE: Setting Upload Protocol for STM32F423CH in PlatformIO
DESCRIPTION: Configuration snippet showing how to set the upload protocol for the STM32F423CH board. In this example, it's set to 'serial'.

LANGUAGE: ini
CODE:
[env:genericSTM32F423CH]
platform = ststm32
board = genericSTM32F423CH

upload_protocol = serial

----------------------------------------

TITLE: Using PlatformIO Account Token Command
DESCRIPTION: Command to get or regenerate a Personal Authentication Token for PlatformIO. Used in CI systems and remote operations where manual authorization isn't possible. The token can be accessed through the PLATFORMIO_AUTH_TOKEN environment variable.

LANGUAGE: bash
CODE:
pio account token

----------------------------------------

TITLE: Custom MCU Configuration for UM RMP Board
DESCRIPTION: Configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:um_rmp]
platform = espressif32
board = um_rmp

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring SparkFun ESP32 Thing Plus Board in PlatformIO
DESCRIPTION: Basic configuration for using the SparkFun ESP32 Thing Plus board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:esp32thing_plus]
platform = espressif32
board = esp32thing_plus

----------------------------------------

TITLE: Configuring Stable Platform Version
DESCRIPTION: Configuration examples for using stable releases of the Intel MCS-51 platform

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = intel_mcs51
board = ...

; Specific version
[env:custom_stable]
platform = intel_mcs51@x.y.z
board = ...

----------------------------------------

TITLE: USB Host Shield 2.0 Project Integration Example
DESCRIPTION: Complete example of Shippable configuration for USB Host Shield 2.0 project. Demonstrates handling multiple test environments and external library dependencies.

LANGUAGE: yaml
CODE:
language: python
python:
    - "3.11"

env:
    - PLATFORMIO_CI_SRC=examples/Bluetooth/PS3SPP/PS3SPP.ino
    - PLATFORMIO_CI_SRC=examples/pl2303/pl2303_gps/pl2303_gps.ino

install:
    - pip install -U platformio
    - wget https://github.com/xxxajk/spi4teensy3/archive/master.zip -O /tmp/spi4teensy3.zip
    - unzip /tmp/spi4teensy3.zip -d /tmp

script:
    - pio ci --lib="." --lib="/tmp/spi4teensy3-master" --board=uno --board=teensy31 --board=due

----------------------------------------

TITLE: Setting Custom Debug Tool in PlatformIO Configuration (INI)
DESCRIPTION: This snippet demonstrates how to set a custom debug tool in a PlatformIO project configuration file. The 'debug_tool' option is used to specify the debugging tool when a board supports multiple tools or when creating a custom debugging configuration.

LANGUAGE: ini
CODE:
[env:debug]
platform = ...
board = ...
debug_tool = custom

----------------------------------------

TITLE: Upload Protocol Configuration for M5Stack Timer CAM
DESCRIPTION: Configuration example showing how to specify the upload protocol for the M5Stack Timer CAM board.

LANGUAGE: ini
CODE:
[env:m5stack-timer-cam]
platform = espressif32
board = m5stack-timer-cam

upload_protocol = esptool

----------------------------------------

TITLE: Setting Flash Mode for ESP8266 in PlatformIO
DESCRIPTION: Example of setting the flash mode to QIO using the board_build.flash_mode option in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
board_build.flash_mode = qio

----------------------------------------

TITLE: Configuring Upstream Shakti Platform Version in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure a PlatformIO project to use the latest upstream version of the Shakti platform from its GitHub repository.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-shakti.git
board = ...

----------------------------------------

TITLE: Upload Protocol Configuration for KB32-FT
DESCRIPTION: Configuration example showing how to specify an upload protocol for the board, using esptool as the default upload method.

LANGUAGE: ini
CODE:
[env:kb32-ft]
platform = espressif32
board = kb32-ft

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for User Input Script
DESCRIPTION: This snippet shows how to configure platformio.ini to include an extra script for user input prompts.

LANGUAGE: ini
CODE:
[env:my_env]
platform = ...
extra_scripts = prompt-user-data.py

----------------------------------------

TITLE: Search DHT Sensors Example
DESCRIPTION: Example demonstrating wildcard search for DHT sensor related packages.

LANGUAGE: bash
CODE:
> pio pkg search "DHT*"

Found 163 packages (page 1 of 17)

0nism/ESP32-DHT11
Library • 1.0.1 • Published on Tue Oct 16 19:30:42 2018
Full featured driver to use DHT11 sensor on esp32 with esp-idf

adafruit/Adafruit DHT Unified
Library • 1.0.0 • Published on Fri May 27 20:45:19 2016
Unified sensor library version of the DHT humidity ...

robtillaart/DHT20
Library • 0.1.0 • Published on Tue Jan 11 20:35:46 2022
Arduino library for I2C DHT20 temperature and humidity sensor.
...

----------------------------------------

TITLE: PlatformIO Team Remove Example
DESCRIPTION: Example demonstrating how to remove a user named 'bob' from the 'dev' team in the 'platformio' organization.

LANGUAGE: bash
CODE:
> pio team remove platformio:dev bob\nThe "bob" member has been successfully removed from the "dev" team.

----------------------------------------

TITLE: Configuring monitor_rts in PlatformIO
DESCRIPTION: The 'monitor_rts' option is used to set the initial RTS (Request to Send) line state for the device monitor. It accepts a numeric value of either 0 or 1, and cannot be specified multiple times.

LANGUAGE: ini
CODE:
monitor_rts = 1

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration demonstrating how to specify the upload protocol for the Denky D4 board.

LANGUAGE: ini
CODE:
[env:denky_d4]
platform = espressif32
board = denky_d4

upload_protocol = esptool

----------------------------------------

TITLE: Renode Platform and Board Configuration Table
DESCRIPTION: RST formatted tables listing supported platforms, frameworks and development boards compatible with Renode debugging tool.

LANGUAGE: rst
CODE:
.. list-table::
    :header-rows:  1

    * - Name
      - Platform
      - Debug
      - MCU
      - Frequency
      - Flash
      - RAM
    * - :ref:`board_sifive_e310-arty`
      - :ref:`platform_sifive`
      - On-board
      - FE310
      - 450MHz
      - 16MB
      - 256MB

----------------------------------------

TITLE: Configuring Adafruit Metro M4 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Metro M4 board in the PlatformIO project configuration file. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_metro_m4]
platform = atmelsam
board = adafruit_metro_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the Cytron Maker Feather AIoT S3 board in PlatformIO.

LANGUAGE: ini
CODE:
[env:cytron_maker_feather_aiot_s3]
platform = espressif32
board = cytron_maker_feather_aiot_s3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ESP32-S3 Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_metro_esp32s3]
platform = espressif32
board = adafruit_metro_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Using 'pio access public' Command in PlatformIO CLI
DESCRIPTION: This command sets a resource to be publicly accessible. It requires a URN (Uniform Resource Name) as an argument and optionally accepts a '--urn-type' option to specify the resource type.

LANGUAGE: bash
CODE:
pio access public [OPTIONS] URN

----------------------------------------

TITLE: Configuring Check Source Filters in PlatformIO INI
DESCRIPTION: Example configuration showing how to filter source files for checking in PlatformIO. Demonstrates including specific files while excluding others using glob patterns relative to the project source directory.

LANGUAGE: ini
CODE:
[env:check_src_filters]
platform = ...
board = ...
check_src_filters =
  -<src/*>
  +<src/spi/spi.cpp>
  -<tests/>
  +<tests/test_embedded/*.c*>

----------------------------------------

TITLE: Setting VTables Location for ESP8266 in PlatformIO
DESCRIPTION: Examples of setting VTables location using build flags in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
...

; Flash (default)
build_flags = -DVTABLES_IN_FLASH

; Heap
build_flags = -DVTABLES_IN_DRAM

; IRAM
build_flags = -DVTABLES_IN_IRAM

----------------------------------------

TITLE: Customizing HealthyPi 4 MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the HealthyPi 4 board.

LANGUAGE: ini
CODE:
[env:healthypi4]
platform = espressif32
board = healthypi4

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Adding FreeRTOS Framework in PlatformIO Configuration
DESCRIPTION: This snippet demonstrates how to add FreeRTOS as an additional framework in the PlatformIO project configuration file. It specifies the SiFive platform and includes both the Freedom E SDK and FreeRTOS frameworks.

LANGUAGE: ini
CODE:
[env:freertos]
platform = sifive
framework = freedom-e-sdk, freertos
board = ...

----------------------------------------

TITLE: Customizing Arduino Opta (M4 core) Board Settings
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency, using board-specific options in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:opta_m4]
platform = ststm32
board = opta_m4

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring Basic Native Test Command in PlatformIO
DESCRIPTION: Default configuration for test_testing_command with native platform that specifies the basic test program path.

LANGUAGE: ini
CODE:
[env:myenv]
platform = native
test_testing_command =
  ${platformio.build_dir}/${this.__env__}/program

----------------------------------------

TITLE: Setting Upload Protocol for MakerAsia Nano32 in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to specify the upload protocol for the MakerAsia Nano32 board in the PlatformIO configuration file. The board supports 'espota' and 'esptool' protocols, with 'esptool' as the default.

LANGUAGE: ini
CODE:
[env:nano32]
platform = espressif32
board = nano32

upload_protocol = esptool

----------------------------------------

TITLE: Customizing LilyGo T-Display-S3 Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:lilygo-t-display-s3]
platform = espressif32
board = lilygo-t-display-s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing M5Stick-C Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default M5Stick-C settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:m5stick-c]
platform = espressif32
board = m5stick-c

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Prusa MM Control
DESCRIPTION: Basic PlatformIO configuration for the Prusa MM Control board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:prusa_mm_control]
platform = atmelavr
board = prusa_mm_control

----------------------------------------

TITLE: Displaying PlatformIO CLI Help in Bash
DESCRIPTION: Shows how to access help information for the PlatformIO CLI and its commands. The --help or -h option can be used with 'pio' or any specific command.

LANGUAGE: bash
CODE:
$ pio --help
$ pio COMMAND --help

----------------------------------------

TITLE: Configuring Upstream ESP8266 Platform Version
DESCRIPTION: Configuration for using the latest upstream development version of the Espressif 8266 platform from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-espressif8266.git
board = ...

----------------------------------------

TITLE: Configuring Basic AVR128DB48 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an AVR128DB48 board environment in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:AVR128DB48]
platform = atmelmegaavr
board = AVR128DB48

----------------------------------------

TITLE: Example PlatformIO Completion Installation
DESCRIPTION: Example showing the completion installation process with default settings, which installs completion support for fish shell in the default location.

LANGUAGE: bash
CODE:
> pio system completion install

PlatformIO CLI completion has been installed for fish shell to ~/.config/fish/completions/pio.fish
Please restart a current shell session

----------------------------------------

TITLE: Configuring 1Bitsy STM32F415RGT Board in PlatformIO
DESCRIPTION: Basic configuration for using the 1Bitsy STM32F415RGT board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:1bitsy_stm32f415rgt]
platform = ststm32
board = 1bitsy_stm32f415rgt

----------------------------------------

TITLE: Setting Upload Protocol for Heltec WiFi Kit 32
DESCRIPTION: Configuration to specify the upload protocol for the Heltec WiFi Kit 32 board. In this example, it's set to use the esptool protocol.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32]
platform = espressif32
board = heltec_wifi_kit_32

upload_protocol = esptool

----------------------------------------

TITLE: Uninstalling Multiple Libraries in PlatformIO
DESCRIPTION: This example shows how to uninstall multiple libraries with specific version constraints using the 'pio pkg uninstall' command.

LANGUAGE: bash
CODE:
pio pkg uninstall -l "bblanchon/ArduinoJson@^6.19.2" -l "milesburton/DallasTemperature@^3.9.1"

----------------------------------------

TITLE: Configuring Basic NodeMCU-32S2 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the NodeMCU-32S2 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:nodemcu-32s2]
platform = espressif32
board = nodemcu-32s2

----------------------------------------

TITLE: Setting Environment Variables for PlatformIO CI in Drone
DESCRIPTION: This snippet demonstrates how to set environment variables for PlatformIO CI in Drone. It specifies the source files or directories to be used for testing.

LANGUAGE: bash
CODE:
PLATFORMIO_CI_SRC=path/to/source/file.c
PLATFORMIO_CI_SRC=path/to/source/file.ino
PLATFORMIO_CI_SRC=path/to/source/directory

----------------------------------------

TITLE: Basic PlatformIO Board Configuration for TTGO T-Watch
DESCRIPTION: Basic configuration setup for TTGO T-Watch in platformio.ini file, specifying the platform and board.

LANGUAGE: ini
CODE:
[env:ttgo-t-watch]
platform = espressif32
board = ttgo-t-watch

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Adafruit Feather ESP32 V2 board setup.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32_v2]
platform = espressif32
board = adafruit_feather_esp32_v2

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Adafruit Feather ESP32 V2 board setup.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32_v2]
platform = espressif32
board = adafruit_feather_esp32_v2

----------------------------------------

TITLE: PlatformIO Project Configuration
DESCRIPTION: PlatformIO configuration file specifying Arduino Uno board settings with ATmega AVR platform.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
framework = arduino
board = uno

----------------------------------------

TITLE: Setting Upload Protocol for FireBeetle-ESP32
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the FireBeetle-ESP32 board in the PlatformIO configuration. The default protocol is 'esptool', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:firebeetle32]
platform = espressif32
board = firebeetle32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO environment for TTGO T-Beam
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the TTGO T-Beam board in the project configuration file. It specifies the platform and board to use.

LANGUAGE: ini
CODE:
[env:ttgo-t-beam]
platform = espressif32
board = ttgo-t-beam

----------------------------------------

TITLE: Upload Protocol Configuration for WT32-ETH01
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:wt32-eth01]
platform = espressif32
board = wt32-eth01

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Upstream Linux ARM Platform in PlatformIO
DESCRIPTION: This snippet shows how to configure the upstream development version of the Linux ARM platform in a PlatformIO project, using the GitHub repository URL.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-linux_arm.git

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration showing how to specify the upload protocol for the RemRam v1 board.

LANGUAGE: ini
CODE:
[env:remram_v1]
platform = ststm32
board = remram_v1

upload_protocol = stlink

----------------------------------------

TITLE: Customizing STM32 Board Parameters
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:st3dp001_eval]
platform = ststm32
board = st3dp001_eval

; change microcontroller
board_build.mcu = stm32f401vet6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Setting Upload Protocol for ESPino in PlatformIO INI File
DESCRIPTION: This snippet shows how to set the upload protocol for the ESPino board in a PlatformIO project configuration file. It uses the 'esptool' protocol as an example.

LANGUAGE: ini
CODE:
[env:espino]
platform = espressif8266
board = espino

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for WeAct Studio ESP32C3CoreBoard
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the WeAct Studio ESP32C3CoreBoard in the project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:weactstudio_esp32c3coreboard]
platform = espressif32
board = weactstudio_esp32c3coreboard

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Setting Private Access Command Usage
DESCRIPTION: Basic command syntax for setting private access on a PlatformIO resource using URN identifier.

LANGUAGE: bash
CODE:
pio access private [OPTIONS] URN

----------------------------------------

TITLE: Configuring Adafruit ESP32 Feather Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit ESP32 Feather board in the PlatformIO project configuration file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:featheresp32]
platform = espressif32
board = featheresp32

----------------------------------------

TITLE: Advanced STM32 MCU Configuration
DESCRIPTION: PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the RemRam v1 board.

LANGUAGE: ini
CODE:
[env:remram_v1]
platform = ststm32
board = remram_v1

; change microcontroller
board_build.mcu = stm32f765vit6

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Configuring MISRA addon for Cppcheck
DESCRIPTION: This JSON configuration specifies the use of the MISRA addon script for Cppcheck, including the path to a file containing MISRA rule descriptions.

LANGUAGE: json
CODE:
{
  "script": "addons/misra.py",
  "args": ["--rule-texts=misra-rules.txt"]
}

----------------------------------------

TITLE: Setting Up Command Hotkeys for PlatformIO in Sublime Text
DESCRIPTION: JSON configuration for custom key bindings in Sublime Text. It sets up shortcuts for cleaning the project (F11) and uploading firmware (F12).

LANGUAGE: json
CODE:
[
    { "keys": ["f11"], "command": "build", "args": {"variant": "Clean"} },
    { "keys": ["f12"], "command": "build", "args": {"variant": "Upload"} }
]

----------------------------------------

TITLE: Customizing Adafruit Pro Trinket MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Adafruit Pro Trinket board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:protrinket3]
platform = atmelavr
board = protrinket3

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 12000000L

----------------------------------------

TITLE: Configuring Adafruit pyCamera S3 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit pyCamera S3 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_camera_esp32s3]
platform = espressif32
board = adafruit_camera_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Installing pymcuprog CLI Tool
DESCRIPTION: Command to install the Python-based pymcuprog CLI tool for programming AVR devices with UPDI interface

LANGUAGE: bash
CODE:
python -m pip install pymcuprog

----------------------------------------

TITLE: Defining reStructuredText Document Structure
DESCRIPTION: Sets up the overall structure and headings for the PlatformIO boards documentation using reStructuredText syntax.

LANGUAGE: reStructuredText
CODE:
Boards
======

Rapid Embedded Development, Continuous and IDE integration in a few
steps with PlatformIO thanks to built-in project generator for the most
popular embedded boards and IDEs.

.. note::
    * You can list pre-configured boards by :ref:`cmd_boards` command
    * For more detailed ``board`` information please scroll tables below by horizontal.

Aceinna IMU
-----------

.. toctree::
    :maxdepth: 1
        
    aceinna_imu/LowCostRTK
    aceinna_imu/OpenIMU335
    aceinna_imu/OpenIMU300
    aceinna_imu/OpenIMU300ZA
    aceinna_imu/OpenIMU330
    aceinna_imu/OpenRTK
    aceinna_imu/OpenRTK330L

----------------------------------------

TITLE: Configuring 4D Systems GEN4-ESP32 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the 4D Systems GEN4-ESP32 16MB (ESP32S3-R8N16) board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:4d_systems_esp32s3_gen4_r8n16]
platform = espressif32
board = 4d_systems_esp32s3_gen4_r8n16

----------------------------------------

TITLE: Configuring Upstream Platform Version
DESCRIPTION: Configuration for using the latest upstream development version of the Heltec CubeCell platform from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/HelTecAutomation/platform-heltec-cubecell.git
board = ...

----------------------------------------

TITLE: Customizing OLIMEXINO-STM32 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:olimexino]
platform = ststm32
board = olimexino

; change microcontroller
board_build.mcu = stm32f103rbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Converted CPP File with Required Declarations
DESCRIPTION: The same Arduino code converted to a valid C++ file by adding the Arduino.h include and declaring the custom function before use.

LANGUAGE: cpp
CODE:
#include <Arduino.h>

void someFunction(int num);

void setup () {
    someFunction(13);
}

void loop() {
    delay(1000);
}

void someFunction(int num) {
}

----------------------------------------

TITLE: Configuring Upstream Aceinna IMU Platform Version in PlatformIO
DESCRIPTION: This INI configuration shows how to use the latest upstream development version of the Aceinna IMU platform from GitHub in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/aceinna/platform-aceinna_imu.git
board = ...

----------------------------------------

TITLE: Basic AVR64DB64 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for AVR64DB64 board using atmelmegaavr platform

LANGUAGE: ini
CODE:
[env:AVR64DB64]
platform = atmelmegaavr
board = AVR64DB64

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Configures the basic environment settings for the ESP32 DOIT DEVKIT V1 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:esp32doit-devkit-v1]
platform = espressif32
board = esp32doit-devkit-v1

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:prusa_mm_control]
platform = atmelavr
board = prusa_mm_control

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring OpenOCD Debugging in PlatformIO
DESCRIPTION: INI configuration for using on-board ST-Link V2/V2-1 with OpenOCD GDB Server in PlatformIO. Includes debug tool setup and custom debug server commands.

LANGUAGE: ini
CODE:
[env:debug]
platform = ststm32
framework = mbed
board = ...
debug_tool = custom
debug_server =
  $PLATFORMIO_CORE_DIR/packages/tool-openocd/bin/openocd
  -f
  $PLATFORMIO_CORE_DIR/packages/tool-openocd/scripts/board/st_nucleo_f4.cfg

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103V8
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the STM32F103V8 board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103V8]
platform = ststm32
board = genericSTM32F103V8

upload_protocol = serial

----------------------------------------

TITLE: Configuring Debug Server Ready Patterns in PlatformIO INI
DESCRIPTION: Examples showing how to configure debug_server_ready_pattern in platformio.ini to detect when a debug server is ready. Demonstrates both simple string matching and regular expression patterns that monitor server STDOUT/STDERR output.

LANGUAGE: ini
CODE:
[env:custom_debug_server_ready_pattern]
...

; match by string
debug_server_ready_pattern = Waiting for GDB connection

; match by regular expression
debug_server_ready_pattern = -.*Listening on port \d+ for gdb connections

----------------------------------------

TITLE: Configuring ESP32-S3-DevKitM-1 Basic Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ESP32-S3-DevKitM-1 board including platform and board selection.

LANGUAGE: ini
CODE:
[env:esp32-s3-devkitm-1]
platform = espressif32
board = esp32-s3-devkitm-1

----------------------------------------

TITLE: Configuring Adafruit pyCamera S3 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit pyCamera S3 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_camera_esp32s3]
platform = espressif32
board = adafruit_camera_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Installing Xcode Command Line Tools on macOS
DESCRIPTION: This shell command installs Xcode Command Line Tools on macOS, which are required for native development in PlatformIO.

LANGUAGE: shell
CODE:
xcode-select --install

----------------------------------------

TITLE: Configuring Upload Flags in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set custom upload flags for an ATmega328PB board in a PlatformIO project configuration file. It includes flags for port, speed, and various fuse settings.

LANGUAGE: ini
CODE:
[env:atmega328pb]
platform = atmelavr
board = atmega328pb
framework = arduino
upload_flags =
  -P$UPLOAD_PORT
  -b$UPLOAD_SPEED
  -u
  -Ulock:w:0xCF:m
  -Uhfuse:w:0xD7:m
  -Uefuse:w:0xF6:m
  -Ulfuse:w:0xE2:m

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Arduino Nano 33 BLE, using the sam-ba protocol.

LANGUAGE: ini
CODE:
[env:nano33ble]
platform = nordicnrf52
board = nano33ble

upload_protocol = sam-ba

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:wemos_d1_mini32]
platform = espressif32
board = wemos_d1_mini32

upload_protocol = esptool

----------------------------------------

TITLE: Custom Bootloader Configuration
DESCRIPTION: Example of configuring a custom bootloader with specific fuse settings for an ATmega4808 board

LANGUAGE: ini
CODE:
[env:ATmega4808]
platform = atmelmegaavr
framework = arduino
board = ATmega4808

board_bootloader.file = /path/to/custom/bootloader.hex
board_bootloader.bootend = 0xFF
board_bootloader.syscfg0 = 0xDE
board_bootloader.osccfg = 0xFD
board_bootloader.lock_bits = 0x0F

----------------------------------------

TITLE: Configuring Stable Lattice iCE40 Platform in INI
DESCRIPTION: PlatformIO configuration for using stable releases of the Lattice iCE40 development platform. Shows both latest stable and pinned version configurations.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = lattice_ice40
board = ...

; Specific version
[env:custom_stable]
platform = lattice_ice40@x.y.z
board = ...

----------------------------------------

TITLE: Configuring Adafruit ItsyBitsy ESP32 in platformio.ini
DESCRIPTION: Basic configuration for using the Adafruit ItsyBitsy ESP32 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_esp32]
platform = espressif32
board = adafruit_itsybitsy_esp32

----------------------------------------

TITLE: Configuring PlatformIO for Extra Linker Flags (INI)
DESCRIPTION: This snippet shows the configuration in platformio.ini to specify the platform and include an extra script for adding linker flags.

LANGUAGE: ini
CODE:
[env:env_extra_link_flags]
platform = windows_x86
extra_scripts = extra_script.py

----------------------------------------

TITLE: Uninstalling a Tool in PlatformIO
DESCRIPTION: This example demonstrates how to uninstall a specific tool using the 'pio pkg uninstall' command.

LANGUAGE: bash
CODE:
pio pkg uninstall -t "platformio/tool-openocd"

----------------------------------------

TITLE: Setting Upload Protocol for LilyGo T-Display-S3
DESCRIPTION: This snippet shows how to specify the upload protocol for the LilyGo T-Display-S3 board in the PlatformIO configuration. The default protocol is esptool.

LANGUAGE: ini
CODE:
[env:lilygo-t-display-s3]
platform = espressif32
board = lilygo-t-display-s3

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Lion:Bit
DESCRIPTION: PlatformIO configuration demonstrating how to specify the upload protocol for the Lion:Bit board, using esptool as the default option.

LANGUAGE: ini
CODE:
[env:lionbit]
platform = espressif32
board = lionbit

upload_protocol = esptool

----------------------------------------

TITLE: Executing PlatformIO Account Logout Command in Bash
DESCRIPTION: This command logs the user out of their PlatformIO account. It disconnects the current session and removes authentication credentials.

LANGUAGE: bash
CODE:
pio account logout

----------------------------------------

TITLE: Configuring PlatformIO for WEMOS LOLIN S2 Mini
DESCRIPTION: Basic PlatformIO configuration for the WEMOS LOLIN S2 Mini board using the Espressif32 platform. This snippet sets up the board ID and platform.

LANGUAGE: ini
CODE:
[env:lolin_s2_mini]
platform = espressif32
board = lolin_s2_mini

----------------------------------------

TITLE: Configuring IoTaaP Magnolia Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the IoTaaP Magnolia board using the Espressif32 platform. This snippet shows how to specify the board in the project configuration file.

LANGUAGE: ini
CODE:
[env:iotaap_magnolia]
platform = espressif32
board = iotaap_magnolia

----------------------------------------

TITLE: Customizing Adafruit QT Py ESP32-S3 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32s3_n4r2]
platform = espressif32
board = adafruit_qtpy_esp32s3_n4r2

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring NodeMCU-32S Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the NodeMCU-32S board using the Espressif32 platform. Specifies the board ID and platform to use in the project configuration file.

LANGUAGE: ini
CODE:
[env:nodemcu-32s]
platform = espressif32
board = nodemcu-32s

----------------------------------------

TITLE: Basic STM32 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for the RemRam v1 board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:remram_v1]
platform = ststm32
board = remram_v1

----------------------------------------

TITLE: Customizing STM32F072-EVAL Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:eval_f072vb]
platform = ststm32
board = eval_f072vb

; change microcontroller
board_build.mcu = stm32f072vbt6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic LOLIN S3 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a WEMOS LOLIN S3 board project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:lolin_s3]
platform = espressif32
board = lolin_s3

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-C3-DevKitM-1
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Default protocol is esptool.

LANGUAGE: ini
CODE:
[env:esp32-c3-devkitm-1]
platform = espressif32
board = esp32-c3-devkitm-1

upload_protocol = esptool

----------------------------------------

TITLE: Windows OS Device List Example
DESCRIPTION: Example output of device list command on Windows systems, displaying COM ports with hardware details.

LANGUAGE: bash
CODE:
> pio device list
COM4
----------
Hardware ID: USB VID:PID=0451:F432
Description: MSP430 Application UART (COM4)

COM3
----------
Hardware ID: USB VID:PID=10C4:EA60 SNR=0001
Description: Silicon Labs CP210x USB to UART Bridge (COM3)

----------------------------------------

TITLE: Setting Check Flags in PlatformIO Configuration
DESCRIPTION: Example showing how to configure additional check flags for static analysis tools in a PlatformIO project. Demonstrates setting both common flags for all tools and specific flags for cppcheck and clangtidy analyzers.

LANGUAGE: ini
CODE:
[env:extra_check_flags]
platform = ...
board = ...
check_tool = cppcheck, clangtidy
check_flags =
  --common-flag
  cppcheck: --enable=performance --inline-suppr
  clangtidy: -fix-errors -format-style=mozilla

----------------------------------------

TITLE: Configuring NXP i.MX RT1064 Evaluation Kit in platformio.ini
DESCRIPTION: Basic configuration for using the NXP i.MX RT1064 Evaluation Kit board in a PlatformIO project. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:mimxrt1064_evk]
platform = nxpimxrt
board = mimxrt1064_evk

----------------------------------------

TITLE: Setting Upload Protocol for Trueverit ESP32 Universal IoT Driver
DESCRIPTION: Shows how to specify the upload protocol for the Trueverit ESP32 Universal IoT Driver board in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:trueverit-iot-driver]
platform = espressif32
board = trueverit-iot-driver

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Base Heltec Wireless Stick Environment
DESCRIPTION: Basic PlatformIO configuration for the Heltec Wireless Stick board using the espressif32 platform

LANGUAGE: ini
CODE:
[env:heltec_wireless_stick]
platform = espressif32
board = heltec_wireless_stick

----------------------------------------

TITLE: Configuring AVR32DB32 Board in PlatformIO projectconf
DESCRIPTION: This snippet shows how to configure the AVR32DB32 board in the PlatformIO projectconf file. It includes the basic setup and examples of how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:AVR32DB32]
platform = atmelmegaavr
board = AVR32DB32

; change microcontroller
board_build.mcu = avr32db32

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring FT2232H Mini-Module Debugging
DESCRIPTION: Basic PlatformIO configuration for enabling the FT2232H Mini-Module as a debugging tool and upload protocol

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = minimodule

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = minimodule
upload_protocol = minimodule

----------------------------------------

TITLE: Disabling Bundled Components in STM32Cube
DESCRIPTION: Configuration to disable automatic inclusion of STM32Cube components as dynamic libraries.

LANGUAGE: ini
CODE:
[env:disco_f303vc]
platform = ststm32
framework = stm32cube
board = disco_f303vc
board_build.stm32cube.disable_embedded_libs = yes

----------------------------------------

TITLE: Configuring Curiosity Nano ATmega4809 in PlatformIO
DESCRIPTION: This snippet shows how to configure the Curiosity Nano ATmega4809 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:curiosity_nano_4809]
platform = atmelmegaavr
board = curiosity_nano_4809

; change microcontroller
board_build.mcu = atmega4809

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit ESP32 Feather
DESCRIPTION: This snippet shows how to set the upload protocol for the Adafruit ESP32 Feather board. The default protocol is 'esptool', but it can be changed using the upload_protocol option.

LANGUAGE: ini
CODE:
[env:featheresp32]
platform = espressif32
board = featheresp32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic ATmega324PB Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATmega324PB board setup using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ATmega324PB]
platform = atmelavr
board = ATmega324PB

----------------------------------------

TITLE: Setting Upload Protocol for OLIMEX ESP32-EVB
DESCRIPTION: Configuration to change the upload protocol for the OLIMEX ESP32-EVB board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:esp32-evb]
platform = espressif32
board = esp32-evb

upload_protocol = esptool

----------------------------------------

TITLE: Revoking Access for a User in PlatformIO
DESCRIPTION: Example of revoking access to a resource for a specific user named 'bob'. The command removes access to a package resource identified by its URN.

LANGUAGE: bash
CODE:
> pio access revoke bob prn:reg:pkg:8036:platform
Access for resource "prn:reg:pkg:8036:platform" has been revoked for "bob"

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Adafruit QT Py ESP32-S2 board. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32s2]
platform = espressif32
board = adafruit_qtpy_esp32s2

----------------------------------------

TITLE: Basic PlatformIO Configuration for Raspberry Pi Pico
DESCRIPTION: Minimal configuration required to set up a Raspberry Pi Pico project in PlatformIO.

LANGUAGE: ini
CODE:
[env:pico]
platform = raspberrypi
board = pico

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32]
platform = espressif32
board = heltec_wifi_lora_32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring ESP32vn IoT Uno Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the ESP32vn IoT Uno board in the PlatformIO project configuration file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:esp32vn-iot-uno]
platform = espressif32
board = esp32vn-iot-uno

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:wifiduino32c3]
platform = espressif32
board = wifiduino32c3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Generic STC15F201EA Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC15F201EA]
platform = intel_mcs51
board = STC15F201EA

; change microcontroller
board_build.mcu = stc15f201ea

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Namino Arancio Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Namino Arancio board using the Espressif32 platform. This snippet sets up the board identifier and platform.

LANGUAGE: ini
CODE:
[env:namino_arancio]
platform = espressif32
board = namino_arancio

----------------------------------------

TITLE: ESP32-S2-Saola-1 Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ESP32-S2-Saola-1 board.

LANGUAGE: ini
CODE:
[env:esp32-s2-saola-1]
platform = espressif32
board = esp32-s2-saola-1

upload_protocol = esptool

----------------------------------------

TITLE: Advanced ESP32-S2-Saola-1 Board Configuration
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-s2-saola-1]
platform = espressif32
board = esp32-s2-saola-1

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the RYMCU STM32F407VE board.

LANGUAGE: ini
CODE:
[env:rymcu_f407ve]
platform = ststm32
board = rymcu_f407ve

; change microcontroller
board_build.mcu = stm32f407vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing MKR Sharky Board Settings in PlatformIO
DESCRIPTION: Example of overriding default MKR Sharky settings in PlatformIO. This snippet demonstrates how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:mkr_sharky]
platform = ststm32
board = mkr_sharky

; change microcontroller
board_build.mcu = stm32wb55cg

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing AVR64DA48 Board Settings in PlatformIO
DESCRIPTION: Extended configuration for AVR64DA48 showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:AVR64DA48]
platform = atmelmegaavr
board = AVR64DA48

; change microcontroller
board_build.mcu = avr64da48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Upload Protocol Configuration for Eduino WiFi
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:eduinowifi]
platform = espressif8266
board = eduinowifi

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Heltec WiFi Kit 32
DESCRIPTION: Basic PlatformIO configuration for the Heltec WiFi Kit 32 board. Sets the platform to espressif32 and the board to heltec_wifi_kit_32.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32]
platform = espressif32
board = heltec_wifi_kit_32

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the RYMCU STM32F407VE board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:rymcu_f407ve]
platform = ststm32
board = rymcu_f407ve

----------------------------------------

TITLE: Setting Flash Mode for ESP32 in PlatformIO
DESCRIPTION: Illustrates how to set the flash mode to 'qio' using the board_build.flash_mode option in the PlatformIO configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
board_build.flash_mode = qio

----------------------------------------

TITLE: Configuring AVRISP Programmer Upload for ATmega AVR
DESCRIPTION: Configuration for uploading firmware to ATmega AVR microcontrollers using the AVRISP programmer. Specifies upload protocol, port, speed, and custom flags for avrdude.

LANGUAGE: ini
CODE:
[env:program_via_AVRISP]
platform = atmelavr
framework = arduino
upload_protocol = custom
upload_port = SERIAL_PORT_HERE
upload_speed = 19200
upload_flags =
    -C
    ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -b
    $UPLOAD_SPEED
    -c
    stk500v1
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

----------------------------------------

TITLE: Configuring UBW32 MX460 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the UBW32 MX460 board in a PlatformIO project's configuration file. It specifies the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:ubw32_mx460]
platform = microchippic32
board = ubw32_mx460

; change microcontroller
board_build.mcu = 32MX460F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring TI-ICDI Upload Protocol
DESCRIPTION: Configuration example for using TI-ICDI as both debug tool and upload protocol in the project configuration file. This enables both debugging and firmware uploading through the ICDI interface.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = ti-icdi
upload_protocol = ti-icdi

----------------------------------------

TITLE: Configuring M5Stack-Core Ink Board in PlatformIO
DESCRIPTION: Basic configuration for the M5Stack-Core Ink board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:m5stack-coreink]
platform = espressif32
board = m5stack-coreink

----------------------------------------

TITLE: Customizing Smart Bee Motion Mini Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO configuration. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:bee_motion_mini]
platform = espressif32
board = bee_motion_mini

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Configuring Upstream Linux i686 Platform Version in PlatformIO
DESCRIPTION: Shows how to use the latest upstream development version of the Linux i686 platform by referencing the GitHub repository directly.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-linux_i686.git

----------------------------------------

TITLE: Configuring Upstream CHIPS Alliance Platform
DESCRIPTION: Configuration for using the latest upstream development version of the CHIPS Alliance platform from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-chipsalliance.git
board = ...

----------------------------------------

TITLE: Configuring WD-Firmware Framework in PlatformIO
DESCRIPTION: Specifies the configuration setting in platformio.ini to use the WD-Firmware framework for a project.

LANGUAGE: ini
CODE:
framework = wd-riscv-sdk

----------------------------------------

TITLE: Configuring Basic Alorium Sno Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Alorium Sno board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:alorium_sno]
platform = atmelavr
board = alorium_sno

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like MCU type and frequency.

LANGUAGE: ini
CODE:
[env:esp-wrover-kit]
platform = espressif32
board = esp-wrover-kit

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing STM32H735G-DK MCU Settings
DESCRIPTION: Advanced INI configuration showing how to override default microcontroller and frequency settings for the STM32H735G-DK board.

LANGUAGE: ini
CODE:
[env:disco_h735ig]
platform = ststm32
board = disco_h735ig

; change microcontroller
board_build.mcu = stm32h735igk6

; change MCU frequency
board_build.f_cpu = 550000000L

----------------------------------------

TITLE: Configuring Upload Protocol for ESP32-S3
DESCRIPTION: PlatformIO configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_metro_esp32s3]
platform = espressif32
board = adafruit_metro_esp32s3

upload_protocol = esptool

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example configuration for setting the upload protocol for the STM32F103R6 board. Supports multiple protocols including blackmagic, dfu, jlink, serial, and stlink.

LANGUAGE: ini
CODE:
[env:genericSTM32F103R6]
platform = ststm32
board = genericSTM32F103R6

upload_protocol = serial

----------------------------------------

TITLE: Specifying Universal Platform Compatibility in PlatformIO - JavaScript
DESCRIPTION: Example showing how to specify that a library is compatible with all platforms by using the wildcard symbol.

LANGUAGE: javascript
CODE:
"platforms": "*"

----------------------------------------

TITLE: Setting Upload Protocol for Arduino MKR WAN 1310
DESCRIPTION: Configuration to specify the upload protocol for the Arduino MKR WAN 1310 board. In this example, the SAM-BA protocol is set.

LANGUAGE: ini
CODE:
[env:mkrwan1310]
platform = atmelsam
board = mkrwan1310

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring ATmega1284P Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega1284P board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATmega1284P]
platform = atmelavr
board = ATmega1284P

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Teensy 4.1 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Teensy 4.1 board in a PlatformIO project's configuration file. It demonstrates setting the platform and board, as well as overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:teensy41]
platform = teensy
board = teensy41

; change microcontroller
board_build.mcu = imxrt1062

; change MCU frequency
board_build.f_cpu = 600000000L

----------------------------------------

TITLE: Configuring Stable Windows x86 Platform in PlatformIO
DESCRIPTION: Configuration options for using stable releases of the Windows x86 platform. Shows how to specify both latest stable and specific version configurations.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = windows_x86

; Specific version
[env:custom_stable]
platform = windows_x86@x.y.z

----------------------------------------

TITLE: Configuring OLIMEX ESP32-EVB Board in PlatformIO
DESCRIPTION: Basic configuration for the OLIMEX ESP32-EVB board in the project's platformio.ini file. It specifies the platform and board to use.

LANGUAGE: ini
CODE:
[env:esp32-evb]
platform = espressif32
board = esp32-evb

----------------------------------------

TITLE: Configuring Basic ESP-WROOM-02 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ESP-WROOM-02 board in platformio.ini including platform and board settings.

LANGUAGE: ini
CODE:
[env:esp_wroom_02]
platform = espressif8266
board = esp_wroom_02

----------------------------------------

TITLE: Configuring Upstream Native Platform in PlatformIO
DESCRIPTION: This snippet shows how to configure the upstream development version of the Native platform in a PlatformIO project configuration file, using the GitHub repository URL.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-native.git

----------------------------------------

TITLE: Basic PlatformIO Run Command Integration for Shippable
DESCRIPTION: Basic YAML configuration for running PlatformIO projects on Shippable CI using the 'run' command. Suitable for native PlatformIO projects.

LANGUAGE: yaml
CODE:
language: python
python:
    - "3.11"

install:
    - pip install -U platformio

script:
    - pio run -e <ID_1> -e <ID_2> -e <ID_N>

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:huzzah]
platform = espressif8266
board = huzzah

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Example of PlatformIO System Completion Uninstall Command Output
DESCRIPTION: This snippet shows the expected output when uninstalling PlatformIO CLI completion for the fish shell. It indicates the removal of the completion file and suggests restarting the shell session.

LANGUAGE: bash
CODE:
> pio system completion uninstall

PlatformIO CLI completion has been uninstalled for fish shell from ~/.config/fish/completions/pio.fish
Please restart a current shell session.

----------------------------------------

TITLE: Installing ATmega AVR Platform with Default Packages
DESCRIPTION: This example shows how to install the ATmega AVR platform with its default packages using the 'pio platform install' command.

LANGUAGE: bash
CODE:
> pio platform install atmelavr

PlatformManager: Installing atmelavr
Downloading...
Unpacking  [####################################]  100%
atmelavr @ 0.0.0 has been successfully installed!
PackageManager: Installing tool-scons @ >=2.3.0,<2.6.0
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
tool-scons @ 2.4.1 has been successfully installed!
PackageManager: Installing toolchain-atmelavr @ ~1.40801.0
Downloading  [####################################]  100%
Unpacking  [####################################]  100%
toolchain-atmelavr @ 1.40801.0 has been successfully installed!
The platform 'atmelavr' has been successfully installed!
The rest of packages will be installed automatically depending on your build environment.

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Franzininho WiFi board

LANGUAGE: ini
CODE:
[env:franzininho_wifi_esp32s2]
platform = espressif32
board = franzininho_wifi_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO Environment for Aceinna OpenIMU 330
DESCRIPTION: Basic PlatformIO configuration for the Aceinna OpenIMU 330 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:OpenIMU330]
platform = aceinna_imu
board = OpenIMU330

----------------------------------------

TITLE: Generating PlatformIO Project for Emacs
DESCRIPTION: This command initializes a PlatformIO project with Emacs IDE integration. It requires specifying a board ID, which can be found using the 'pio boards' command or the Embedded Boards Explorer.

LANGUAGE: shell
CODE:
pio project init --ide emacs --board <ID>

----------------------------------------

TITLE: Configuring PlatformIO Environment for ST Nucleo L496ZG
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo L496ZG board, including platform and board settings. Also demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:nucleo_l496zg]
platform = ststm32
board = nucleo_l496zg

; change microcontroller
board_build.mcu = stm32l496zgt6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring WeMos D1 mini Pro Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the WeMos D1 mini Pro board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:d1_mini_pro]
platform = espressif8266
board = d1_mini_pro

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example configuration showing how to specify the upload protocol for the wESP32 board.

LANGUAGE: ini
CODE:
[env:wesp32]
platform = espressif32
board = wesp32

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the Raspberry Pi Pico.

LANGUAGE: ini
CODE:
[env:pico]
platform = raspberrypi
board = pico

; change microcontroller
board_build.mcu = rp2040

; change MCU frequency
board_build.f_cpu = 133000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo L496ZG
DESCRIPTION: Example of how to specify the upload protocol for the ST Nucleo L496ZG board in PlatformIO. The default protocol is 'stlink', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:nucleo_l496zg]
platform = ststm32
board = nucleo_l496zg

upload_protocol = stlink

----------------------------------------

TITLE: Customizing HiFive1 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:hifive1]
platform = sifive
board = hifive1

; change microcontroller
board_build.mcu = fe310

; change MCU frequency
board_build.f_cpu = 320000000L

----------------------------------------

TITLE: Configuring Basic ESP32-S2 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the MiniMain ESP32-S2 board with default settings.

LANGUAGE: ini
CODE:
[env:minimain_esp32s2]
platform = espressif32
board = minimain_esp32s2

----------------------------------------

TITLE: Setting Upload Protocol for Nucleo G070RB
DESCRIPTION: Configuration to specify the upload protocol for the Nucleo G070RB board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:nucleo_g070rb]
platform = ststm32
board = nucleo_g070rb

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Espressif Generic ESP8266 ESP-01 1M Board in PlatformIO
DESCRIPTION: Basic configuration for the Espressif Generic ESP8266 ESP-01 1M board in the PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:esp01_1m]
platform = espressif8266
board = esp01_1m

----------------------------------------

TITLE: Uninstalling Multiple Platforms in PlatformIO
DESCRIPTION: This example demonstrates how to uninstall multiple development platforms using the 'pio pkg uninstall' command. It specifies two platforms: one with a version constraint and another without.

LANGUAGE: bash
CODE:
pio pkg uninstall -p "aceinna/aceinna_imu@^1.3.8" -p "platformio/atmelavr"

----------------------------------------

TITLE: Setting Upload Protocol for STM32H747I-DISCO
DESCRIPTION: Example of specifying the upload protocol for the STM32H747I-DISCO board, using ST-Link as the default.

LANGUAGE: ini
CODE:
[env:disco_h747xi]
platform = ststm32
board = disco_h747xi

upload_protocol = stlink

----------------------------------------

TITLE: ESP32-CAM Custom Board Configuration
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:esp32cam]
platform = espressif32
board = esp32cam

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing ST Nucleo F429ZI Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_f429zi]
platform = ststm32
board = nucleo_f429zi

; change microcontroller
board_build.mcu = stm32f429zit6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Customizing ESP32-S2 Board Parameters
DESCRIPTION: Example showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2]
platform = espressif32
board = adafruit_feather_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting PlatformIO Workspace Directory
DESCRIPTION: Configuration for specifying the workspace directory where PlatformIO stores build artifacts, compiled objects, static libraries, firmwares and external library dependencies. Defaults to '.pio' in the project root directory.

LANGUAGE: ini
CODE:
workspace_dir = .pio

----------------------------------------

TITLE: Advanced PlatformIO Board Configuration
DESCRIPTION: Demonstrates how to override default board settings like microcontroller type and CPU frequency in a PlatformIO project environment

LANGUAGE: ini
CODE:
[env:bluefruitmicro]
platform = atmelavr
board = bluefruitmicro

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring TTGO LoRa32-OLED V1 Board in PlatformIO
DESCRIPTION: Basic configuration for the TTGO LoRa32-OLED V1 board in the project's platformio.ini file. It sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:ttgo-lora32-v1]
platform = espressif32
board = ttgo-lora32-v1

----------------------------------------

TITLE: Configuring ATmega3208 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega3208 board in a PlatformIO project's configuration file (platformio.ini). It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATmega3208]
platform = atmelmegaavr
board = ATmega3208

; change microcontroller
board_build.mcu = atmega3208

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:b96b_neonkey]
platform = ststm32
board = b96b_neonkey

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Upstream Linux x86_64 Platform in PlatformIO
DESCRIPTION: This snippet shows how to use the upstream development version of the Linux x86_64 platform in a PlatformIO project by specifying the GitHub repository URL.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-linux_x86_64.git

----------------------------------------

TITLE: Configuring PlatformIO for Generic ATtiny1634 Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic ATtiny1634 board. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:attiny1634]
platform = atmelavr
board = attiny1634

; change microcontroller
board_build.mcu = attiny1634

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Stable Aceinna IMU Platform Version in PlatformIO
DESCRIPTION: This INI configuration demonstrates how to specify a stable version of the Aceinna IMU platform in a PlatformIO project. It shows both using the latest stable version and pinning to a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = aceinna_imu
board = ...

; Specific version
[env:custom_stable]
platform = aceinna_imu@x.y.z
board = ...

----------------------------------------

TITLE: Configuring WEMOS D1 R1 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the WEMOS D1 R1 board in the PlatformIO project configuration file. It sets the platform to espressif8266 and specifies the board as 'd1'.

LANGUAGE: ini
CODE:
[env:d1]
platform = espressif8266
board = d1

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:d1_wroom_02]
platform = espressif8266
board = d1_wroom_02

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: ESP32 Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:wifiduino32]
platform = espressif32
board = wifiduino32

upload_protocol = esptool

----------------------------------------

TITLE: Setting Mbed Framework in platformio.ini
DESCRIPTION: Configuration snippet showing how to enable the Mbed framework in a PlatformIO project

LANGUAGE: ini
CODE:
framework = mbed

----------------------------------------

TITLE: Customizing Lilka v2 Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:lilka_v2]
platform = espressif32
board = lilka_v2

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic ESP32 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for Blinker WiFiduino32 board using ESP32 platform.

LANGUAGE: ini
CODE:
[env:wifiduino32]
platform = espressif32
board = wifiduino32

----------------------------------------

TITLE: Setting Upload Protocol for IoTaaP Magnolia
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO. This snippet shows how to set the upload protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:iotaap_magnolia]
platform = espressif32
board = iotaap_magnolia

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ST Nucleo L496ZG-P Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_l496zg_p]
platform = ststm32
board = nucleo_l496zg_p

; change microcontroller
board_build.mcu = stm32l496zgt6p

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO Configuration
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency for the Generic STC8A8K16D4 board.

LANGUAGE: ini
CODE:
[env:STC8A8K16D4]
platform = intel_mcs51
board = STC8A8K16D4

; change microcontroller
board_build.mcu = stc8a8k16d4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring STM32F411RE Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure the STM32F411RE board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:genericSTM32F411RE]
platform = ststm32
board = genericSTM32F411RE

; change microcontroller
board_build.mcu = stm32f411ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing STM32F401RC Board Parameters
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RC]
platform = ststm32
board = genericSTM32F401RC

; change microcontroller
board_build.mcu = stm32f401rct6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Configuring Basic ESP32 Turta IoT Node Board Settings
DESCRIPTION: Basic PlatformIO configuration for the Turta IoT Node board using the espressif32 platform

LANGUAGE: ini
CODE:
[env:turta_iot_node]
platform = espressif32
board = turta_iot_node

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo L432KC board.

LANGUAGE: ini
CODE:
[env:nucleo_l432kc]
platform = ststm32
board = nucleo_l432kc

; change microcontroller
board_build.mcu = stm32l432kcu6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic ST Nucleo L476RG Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo L476RG board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_l476rg]
platform = ststm32
board = nucleo_l476rg

----------------------------------------

TITLE: Configuring J-LINK Debugging Tool in platformio.ini
DESCRIPTION: Basic configuration for using J-LINK as the debugging tool in PlatformIO projects. Includes options for SWD and JTAG interfaces.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = jlink

; SWD interface
upload_protocol = jlink

; JTAG interface
upload_protocol = jlink-jtag

----------------------------------------

TITLE: Setting Upload Protocol for SODAQ Autonomo
DESCRIPTION: Configuration to specify the upload protocol for the SODAQ Autonomo board. In this example, it's set to sam-ba.

LANGUAGE: ini
CODE:
[env:sodaq_autonomo]
platform = atmelsam
board = sodaq_autonomo

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring PlatformIO Environment for Smart Bee Motion Mini
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Smart Bee Motion Mini board. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:bee_motion_mini]
platform = espressif32
board = bee_motion_mini

----------------------------------------

TITLE: Configuring Hornbill ESP32 Minima Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Hornbill ESP32 Minima board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:hornbill32minima]
platform = espressif32
board = hornbill32minima

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for CNRS AW2ETH
DESCRIPTION: Basic environment configuration for CNRS AW2ETH board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:cnrs_aw2eth]
platform = espressif32
board = cnrs_aw2eth

----------------------------------------

TITLE: Configuring Stable Linux x86_64 Platform in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the stable version of the Linux x86_64 platform in a PlatformIO project. It shows two options: using the latest stable version and specifying a particular version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = linux_x86_64

; Specific version
[env:custom_stable]
platform = linux_x86_64@x.y.z

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K32S2]
platform = intel_mcs51
board = STC8H1K32S2

; change microcontroller
board_build.mcu = stc8h1k32s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Private Access Example Command
DESCRIPTION: Example of setting private access on a platform package using its URN identifier, demonstrating the command usage with success message.

LANGUAGE: bash
CODE:
> pio access private prn:reg:pkg:8036:platform
The resource "prn:reg:pkg:8036:platform" has been successfully updated.

----------------------------------------

TITLE: Configuring Git Repository in library.json
DESCRIPTION: Example showing how to specify a Git repository in the library.json manifest file. The configuration includes the repository type and URL for source code location.

LANGUAGE: javascript
CODE:
"repository":
{
    "type": "git",
    "url": "https://github.com/foo/bar.git"
}

----------------------------------------

TITLE: Configuring BOB3 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for BOB3 board using the atmelavr platform. Sets up the core board environment.

LANGUAGE: ini
CODE:
[env:bob3]
platform = atmelavr
board = bob3

----------------------------------------

TITLE: Customizing TTGO LoRa32-OLED V1 Board Settings
DESCRIPTION: Example of overriding default board settings in the platformio.ini file. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ttgo-lora32-v1]
platform = espressif32
board = ttgo-lora32-v1

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Nordic nRF52-DK in PlatformIO
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Nordic nRF52-DK board in a PlatformIO project configuration. It specifies the use of the J-Link protocol for uploading firmware.

LANGUAGE: ini
CODE:
[env:nrf52_dk]
platform = nordicnrf52
board = nrf52_dk

upload_protocol = jlink

----------------------------------------

TITLE: Customizing Onehorse ESP32 Dev Module Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:onehorse32dev]
platform = espressif32
board = onehorse32dev

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for WEMOS LOLIN S2 Mini
DESCRIPTION: Configuration to specify the upload protocol for the WEMOS LOLIN S2 Mini board. This example uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:lolin_s2_mini]
platform = espressif32
board = lolin_s2_mini

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Upstream Platform Version in PlatformIO
DESCRIPTION: Configuration for using the latest upstream development version of the platform

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-freescalekinetis.git
board = ...

----------------------------------------

TITLE: Customizing Nucleo G071RB Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_g071rb]
platform = ststm32
board = nucleo_g071rb

; change microcontroller
board_build.mcu = stm32g071rbt6

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring NIBO 2 Robot in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the NIBO 2 robot in the PlatformIO project configuration file. It demonstrates setting the board type and platform, as well as how to override default board settings.

LANGUAGE: ini
CODE:
[env:nibo2]
platform = atmelavr
board = nibo2

; change microcontroller
board_build.mcu = atmega128

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Teensy 3.5 MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings like MCU type and frequency in the build environment.

LANGUAGE: ini
CODE:
[env:teensy35]
platform = teensy
board = teensy35

; change microcontroller
board_build.mcu = mk64fx512

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring Basic STM32F4DISCOVERY Board Settings
DESCRIPTION: Basic configuration for STM32F4DISCOVERY board in platformio.ini file, specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_f407vg]
platform = ststm32
board = disco_f407vg

----------------------------------------

TITLE: Configuring ATmega2560 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega2560 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATmega2560]
platform = atmelavr
board = ATmega2560

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Custom ESP8266 ESP-07 Board Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings for microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp07]
platform = espressif8266
board = esp07

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Upstream PIC32 Platform
DESCRIPTION: Configuration for using the latest upstream development version of the platform directly from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-microchippic32.git
board = ...

----------------------------------------

TITLE: Specifying J-LINK Probe Serial Number
DESCRIPTION: Configuration to specify a particular J-LINK probe by its serial number when multiple probes are connected.

LANGUAGE: ini
CODE:
[env:nrf52_dk]
platform = nordicnrf52
framework = arduino
board = nrf52_dk
upload_flags =
    -SelectEmuBySN
    123456789

----------------------------------------

TITLE: Customizing Heltec Wifi Kit 8 Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings such as microcontroller and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_8]
platform = espressif8266
board = heltec_wifi_kit_8

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the board

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3_nopsram]
platform = espressif32
board = adafruit_feather_esp32s3_nopsram

upload_protocol = esptool

----------------------------------------

TITLE: Setting Custom System Setup for STM32Cube
DESCRIPTION: Configuration to skip default system setup implementations and use custom project implementation.

LANGUAGE: ini
CODE:
[env:nucleo_f401re]
platform = ststm32
framework = stm32cube
board = nucleo_f401re
board_build.stm32cube.custom_system_setup = yes

----------------------------------------

TITLE: Configuring Seeed Studio XIAO ESP32C3 Board in PlatformIO
DESCRIPTION: Basic configuration for using the Seeed Studio XIAO ESP32C3 board in a PlatformIO project. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:seeed_xiao_esp32c3]
platform = espressif32
board = seeed_xiao_esp32c3

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Demonstrates the basic configuration needed to set up a PlatformIO project for the ML54LD1AE board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:ML54LD1AE]
platform = intel_mcs51
board = ML54LD1AE

----------------------------------------

TITLE: Installing PlatformIO Core in Cloud9
DESCRIPTION: Command to install PlatformIO Core using Python installer script in Cloud9 environment

LANGUAGE: bash
CODE:
sudo python -c "$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/develop/scripts/get-platformio.py)"

----------------------------------------

TITLE: Customizing WEMOS LOLIN D32 PRO Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lolin_d32_pro]
platform = espressif32
board = lolin_d32_pro

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F401RE
DESCRIPTION: Configuration example for specifying the upload protocol in platformio.ini file. The board supports multiple protocols including blackmagic, dfu, jlink, serial, and stlink.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RE]
platform = ststm32
board = genericSTM32F401RE

upload_protocol = serial

----------------------------------------

TITLE: Configuring PlatformIO for Widora AIR ESP32 Board
DESCRIPTION: Basic PlatformIO configuration for the Widora AIR board using the espressif32 platform. This snippet sets up the environment for building projects targeting this specific board.

LANGUAGE: ini
CODE:
[env:widora-air]
platform = espressif32
board = widora-air

----------------------------------------

TITLE: Configuring Basic STM32 Board Environment
DESCRIPTION: Basic PlatformIO configuration for ST Nucleo L152RE board setup using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_l152re]
platform = ststm32
board = nucleo_l152re

----------------------------------------

TITLE: Customizing STM32F401CC MCU Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F401CC]
platform = ststm32
board = genericSTM32F401CC

; change microcontroller
board_build.mcu = stm32f401ccu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Customizing Generic STC15W401AS Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows how to change the microcontroller and MCU frequency for the Generic STC15W401AS board.

LANGUAGE: ini
CODE:
[env:STC15W401AS]
platform = intel_mcs51
board = STC15W401AS

; change microcontroller
board_build.mcu = stc15w401as

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Advanced Board Settings for Pocket 32
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:pocket_32]
platform = espressif32
board = pocket_32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the ST Nucleo F411RE board.

LANGUAGE: ini
CODE:
[env:nucleo_f411re]
platform = ststm32
board = nucleo_f411re

; change microcontroller
board_build.mcu = stm32f411ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the Heltec WiFi LoRa 32 board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32]
platform = espressif32
board = heltec_wifi_lora_32

----------------------------------------

TITLE: Setting MMU Configuration for ESP8266 in PlatformIO
DESCRIPTION: Examples of setting different MMU configurations using build flags in platformio.ini

LANGUAGE: ini
CODE:
[env:espduino]
platform = espressif8266
framework = arduino
board = espduino
build_flags =
    -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48

[env:espino]
platform = espressif8266
framework = arduino
board = espino
build_flags =
    -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM32_SECHEAP_NOTSHARED

[env:d1_mini]
platform = espressif8266
framework = arduino
board = d1_mini
build_flags =
    -D PIO_FRAMEWORK_ARDUINO_MMU_CUSTOM
    -D MMU_IRAM_SIZE=0xC000
    -D MMU_ICACHE_SIZE=0x4000
    -D MMU_IRAM_HEAP

----------------------------------------

TITLE: Customizing STM32F401CC MCU Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F401CC]
platform = ststm32
board = genericSTM32F401CC

; change microcontroller
board_build.mcu = stm32f401ccu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Setting Upload Protocol for ESPino32 in PlatformIO
DESCRIPTION: This snippet shows how to set the upload protocol for the ESPino32 board in the PlatformIO project configuration. It uses the esptool protocol as an example.

LANGUAGE: ini
CODE:
[env:espino32]
platform = espressif32
board = espino32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring AVR64DB32 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR64DB32 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:AVR64DB32]
platform = atmelmegaavr
board = AVR64DB32

; change microcontroller
board_build.mcu = avr64db32

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Trueverit ESP32 Board in PlatformIO INI File
DESCRIPTION: Basic configuration for using the Trueverit ESP32 Universal IoT Driver MK III board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:trueverit-iot-driver-mk3]
platform = espressif32
board = trueverit-iot-driver-mk3

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:m5stack-grey]
platform = espressif32
board = m5stack-grey

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:circuitplay_classic]
platform = atmelavr
board = circuitplay_classic

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Adafruit Metro ESP32-S2 board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_metro_esp32s2]
platform = espressif32
board = adafruit_metro_esp32s2

----------------------------------------

TITLE: Configuring PlatformIO for Trueverit ESP32 Universal IoT Driver MK II
DESCRIPTION: Basic PlatformIO configuration for the Trueverit ESP32 Universal IoT Driver MK II board. Sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:trueverit-iot-driver-mk2]
platform = espressif32
board = trueverit-iot-driver-mk2

----------------------------------------

TITLE: Configuring Upload Protocol - INI
DESCRIPTION: Configuration example for setting the upload protocol for the Aventen S3 Sync board.

LANGUAGE: ini
CODE:
[env:aventen_s3_sync]
platform = espressif32
board = aventen_s3_sync

upload_protocol = esptool

----------------------------------------

TITLE: Specifying Multiple Licenses in PlatformIO Configuration (JavaScript)
DESCRIPTION: This snippet shows how to specify multiple licenses using an SPDX Expression in the PlatformIO project configuration. It combines MIT license with either LGPL-2.1-or-later or BSD-3-Clause.

LANGUAGE: javascript
CODE:
"license": "MIT AND (LGPL-2.1-or-later OR BSD-3-Clause)"

----------------------------------------

TITLE: Customizing ATmega644P Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default ATmega644P board settings in the PlatformIO configuration. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATmega644P]
platform = atmelavr
board = ATmega644P

; change microcontroller
board_build.mcu = atmega644p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the WEMOS D1 MINI ESP32 board specifying the platform and board ID

LANGUAGE: ini
CODE:
[env:wemos_d1_mini32]
platform = espressif32
board = wemos_d1_mini32

----------------------------------------

TITLE: Using PlatformIO Platform Uninstall Command in Bash
DESCRIPTION: Demonstrates the usage of the 'pio platform uninstall' command to remove specified platforms. The command can uninstall a platform or a specific version of a platform using Semantic Versioning.

LANGUAGE: bash
CODE:
pio platform uninstall [PLATFORM...]

# uninstall specific platform version using Semantic Versioning
pio platform uninstall PLATFORM@X.Y.Z

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol (stlink) for the ST Nucleo F103RB board.

LANGUAGE: ini
CODE:
[env:nucleo_f103rb]
platform = ststm32
board = nucleo_f103rb

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for STM32F446RE
DESCRIPTION: Configuration to change the upload protocol for the STM32F446RE board. The example sets it to 'serial'.

LANGUAGE: ini
CODE:
[env:genericSTM32F446RE]
platform = ststm32
board = genericSTM32F446RE

upload_protocol = serial

----------------------------------------

TITLE: Enabling Exceptions for ESP8266 in PlatformIO
DESCRIPTION: Example of enabling exceptions using a build flag in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
...

; Enable exceptions
build_flags = -D PIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS

----------------------------------------

TITLE: Configuring Generic N76E003 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic N76E003 board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:N76E003]
platform = intel_mcs51
board = N76E003

; change microcontroller
board_build.mcu = n76e003

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Custom MCU Configuration for ESP32-S3-DevKitC-1
DESCRIPTION: Example showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-s3-devkitc-1]
platform = espressif32
board = esp32-s3-devkitc-1

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring WeMos D1 mini Lite Board in PlatformIO
DESCRIPTION: Basic configuration for using the WeMos D1 mini Lite board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:d1_mini_lite]
platform = espressif8266
board = d1_mini_lite

----------------------------------------

TITLE: Customizing ATmega162 Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default ATmega162 settings in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATmega162]
platform = atmelavr
board = ATmega162

; change microcontroller
board_build.mcu = atmega162

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Board Settings with Override Options
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:wemos_d1_mini32]
platform = espressif32
board = wemos_d1_mini32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing M5Stack Core ESP32 Board Settings
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:m5stack-core-esp32]
platform = espressif32
board = m5stack-core-esp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST 32F746GDISCOVERY
DESCRIPTION: Example of setting the upload protocol to ST-Link for the ST 32F746GDISCOVERY board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:disco_f746ng]
platform = ststm32
board = disco_f746ng

upload_protocol = stlink

----------------------------------------

TITLE: Custom STC15F204A Board Configuration
DESCRIPTION: Extended configuration for STC15F204A board with custom microcontroller and frequency settings. Demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15F204A]
platform = intel_mcs51
board = STC15F204A

; change microcontroller
board_build.mcu = stc15f204a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting STM32F412CG Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Default protocol is serial but can be changed to blackmagic, dfu, jlink, or stlink.

LANGUAGE: ini
CODE:
[env:genericSTM32F412CG]
platform = ststm32
board = genericSTM32F412CG

upload_protocol = serial

----------------------------------------

TITLE: Basic STM32F103ZF Board Configuration in PlatformIO
DESCRIPTION: Initial configuration for setting up an STM32F103ZF board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZF]
platform = ststm32
board = genericSTM32F103ZF

----------------------------------------

TITLE: Configuring PlatformIO for Kinetic Dynamics Nebula S3
DESCRIPTION: Basic PlatformIO configuration for the Nebula S3 board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:nebulas3]
platform = espressif32
board = nebulas3

----------------------------------------

TITLE: Setting Upload Protocol for ST 32F401CDISCOVERY
DESCRIPTION: Configuration example for specifying the upload protocol in platformio.ini. It sets the protocol to ST-Link, which is the default for this board.

LANGUAGE: ini
CODE:
[env:disco_f401vc]
platform = ststm32
board = disco_f401vc

upload_protocol = stlink

----------------------------------------

TITLE: Basic ESP32-CAM Board Configuration
DESCRIPTION: Minimal configuration required to use the ESP32-CAM board in PlatformIO projects

LANGUAGE: ini
CODE:
[env:esp32cam]
platform = espressif32
board = esp32cam

----------------------------------------

TITLE: Basic Package Update Command Usage in PlatformIO
DESCRIPTION: Basic command syntax for updating packages in PlatformIO projects.

LANGUAGE: bash
CODE:
pio pkg update [OPTIONS]

----------------------------------------

TITLE: Customizing STM32F303CB Board Settings
DESCRIPTION: Demonstrates how to override default board settings such as microcontroller model and CPU frequency using board_*** options.

LANGUAGE: ini
CODE:
[env:genericSTM32F303CB]
platform = ststm32
board = genericSTM32F303CB

; change microcontroller
board_build.mcu = stm32f303cbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Advanced MagicBit Configuration with MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings for microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:magicbit]
platform = espressif32
board = magicbit

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO for Makerdiary nRF52840-MDK
DESCRIPTION: Basic PlatformIO configuration for the Makerdiary nRF52840-MDK board. Specifies the platform and board ID to use.

LANGUAGE: ini
CODE:
[env:nrf52840_mdk]
platform = nordicnrf52
board = nrf52840_mdk

----------------------------------------

TITLE: Overriding Default Board Settings in PlatformIO
DESCRIPTION: This code demonstrates how to override default board settings for Connaxio's Espoir in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:connaxio_espoir]
platform = espressif32
board = connaxio_espoir

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Upstream TI MSP430 Platform Version
DESCRIPTION: PlatformIO configuration for using the latest upstream development version of the TI MSP430 platform from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-timsp430.git
board = ...

----------------------------------------

TITLE: Advanced W79E658 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the W79E658 board in PlatformIO.

LANGUAGE: ini
CODE:
[env:W79E658]
platform = intel_mcs51
board = W79E658

; change microcontroller
board_build.mcu = w79e658

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Arduino Pin Definition Patch File
DESCRIPTION: Diff patch file showing the addition of PIN_A8 macro definition to the Arduino pins header.

LANGUAGE: diff
CODE:
63a64
> #define PIN_A8   (99)
112c113
< // 14-21 PA0-PA7 works
---
> // 14-21 PA0-PA7 works

----------------------------------------

TITLE: Setting Upload Protocol for ItsyBitsy nRF52840 Express
DESCRIPTION: Configuration to change the upload protocol for the ItsyBitsy nRF52840 Express board. In this example, it's set to 'nrfutil'.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_nrf52840]
platform = nordicnrf52
board = adafruit_itsybitsy_nrf52840

upload_protocol = nrfutil

----------------------------------------

TITLE: Configuring Basic ATmega168 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the Arduino Duemilanove/Diecimila ATmega168 board in platformio.ini file. Sets up the platform and board type.

LANGUAGE: ini
CODE:
[env:diecimilaatmega168]
platform = atmelavr
board = diecimilaatmega168

----------------------------------------

TITLE: Setting Upload Protocol for AirM2M CORE ESP32C3
DESCRIPTION: Configuration to specify the upload protocol for the AirM2M CORE ESP32C3 board. In this example, it uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:airm2m_core_esp32c3]
platform = espressif32
board = airm2m_core_esp32c3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ATmega649 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:ATmega649]
platform = atmelavr
board = ATmega649

; change microcontroller
board_build.mcu = atmega649

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration demonstrating how to override default microcontroller and frequency settings for ODROID-GO board.

LANGUAGE: ini
CODE:
[env:odroid_esp32]
platform = espressif32
board = odroid_esp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Upload Protocol for unPhone 8
DESCRIPTION: Configuration example showing how to specify the upload protocol for the unPhone 8 board.

LANGUAGE: ini
CODE:
[env:unphone8]
platform = espressif32
board = unphone8

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Unexpected Maker FeatherS2 Neo
DESCRIPTION: Basic PlatformIO configuration for the Unexpected Maker FeatherS2 Neo board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:um_feathers2_neo]
platform = espressif32
board = um_feathers2_neo

----------------------------------------

TITLE: Setting Upload Protocol for STM32F3DISCOVERY
DESCRIPTION: Configuration example for setting the upload protocol to ST-Link for the STM32F3DISCOVERY board

LANGUAGE: ini
CODE:
[env:disco_f303vc]
platform = ststm32
board = disco_f303vc

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic ATtiny461 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic ATtiny461 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:attiny461]
platform = atmelavr
board = attiny461

; change microcontroller
board_build.mcu = attiny461

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Node32s Board in PlatformIO INI File
DESCRIPTION: Basic configuration for using the Node32s board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:node32s]
platform = espressif32
board = node32s

----------------------------------------

TITLE: Configuring Nordic nRF52833-DK Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Nordic nRF52833-DK board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:nrf52833_dk]
platform = nordicnrf52
board = nrf52833_dk

; change microcontroller
board_build.mcu = nrf52833

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring M5Stack Core ESP32 16M Board in PlatformIO
DESCRIPTION: Sets up the basic configuration for the M5Stack Core ESP32 16M board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:m5stack-core-esp32-16M]
platform = espressif32
board = m5stack-core-esp32-16M

----------------------------------------

TITLE: Customizing Nucleo G431KB MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the Nucleo G431KB board

LANGUAGE: ini
CODE:
[env:nucleo_g431kb]
platform = ststm32
board = nucleo_g431kb

; change microcontroller
board_build.mcu = stm32g431kbt6

; change MCU frequency
board_build.f_cpu = 170000000L

----------------------------------------

TITLE: Configuring Olimex ARM-USB-OCD Debugging Tool in platformio.ini
DESCRIPTION: Example configuration for using Olimex ARM-USB-OCD as the debugging tool in the project's platformio.ini file. Also shows how to configure it as the upload protocol.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = olimex-arm-usb-ocd

[env:myenv]
platform = ...
board = ...
debug_tool = olimex-arm-usb-ocd
upload_protocol = olimex-arm-usb-ocd

----------------------------------------

TITLE: Custom MCU Configuration for 96Boards Neonkey
DESCRIPTION: Example showing how to override default board settings like microcontroller type and frequency.

LANGUAGE: ini
CODE:
[env:b96b_aerocore2]
platform = ststm32
board = b96b_aerocore2

; change microcontroller
board_build.mcu = stm32f427vit6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: INI configuration showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:mhetesp32devkit]
platform = espressif32
board = mhetesp32devkit

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Global Library Directory in PlatformIO
DESCRIPTION: Configuration option for specifying the global library storage directory used by PlatformIO's Library Dependency Finder. This setting is deprecated and has been replaced by the lib_deps declarative dependency management approach.

LANGUAGE: ini
CODE:
globallib_dir = /path/to/libs

----------------------------------------

TITLE: Configuring Adafruit Feather ESP32-S3 TFT Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Feather ESP32-S3 TFT board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3_tft]
platform = espressif32
board = adafruit_feather_esp32s3_tft

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing BOB3 MCU Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:bob3]
platform = atmelavr
board = bob3

; change microcontroller
board_build.mcu = atmega88

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Searching for All Available Development Platforms
DESCRIPTION: This example shows how to use the 'pio platform search' command without any query to list all available development platforms.

LANGUAGE: bash
CODE:
> pio platform search

----------------------------------------

TITLE: Customizing ATmega4808 Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega4808]
platform = atmelmegaavr
board = ATmega4808

; change microcontroller
board_build.mcu = atmega4808

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Nucleo G071RB
DESCRIPTION: Configuration to change the upload protocol for the Nucleo G071RB board. The example uses the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:nucleo_g071rb]
platform = ststm32
board = nucleo_g071rb

upload_protocol = stlink

----------------------------------------

TITLE: Configuring TinyPICO Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Unexpected Maker TinyPICO board in a PlatformIO project's configuration file. It sets the platform to espressif32 and the board to tinypico.

LANGUAGE: ini
CODE:
[env:tinypico]
platform = espressif32
board = tinypico

----------------------------------------

TITLE: Sourcing Profile in Zsh Configuration
DESCRIPTION: This code snippet sources the .profile file in Zsh configuration to support both Bash and Zsh shells.

LANGUAGE: shell
CODE:
emulate sh -c '. ~/.profile'

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the ST STM32VLDISCOVERY board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_f100rb]
platform = ststm32
board = disco_f100rb

----------------------------------------

TITLE: Customizing Generic MS51XB9BE Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default board settings in the PlatformIO configuration. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:MS51XB9BE]
platform = intel_mcs51
board = MS51XB9BE

; change microcontroller
board_build.mcu = ms51xb9be

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for DFRobot Firebeetle 2 ESP32-E
DESCRIPTION: Configuration to specify the upload protocol for the DFRobot Firebeetle 2 ESP32-E board in PlatformIO. This example sets the upload protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:dfrobot_firebeetle2_esp32e]
platform = espressif32
board = dfrobot_firebeetle2_esp32e

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ST 32F769IDISCOVERY in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the ST 32F769IDISCOVERY board in PlatformIO.

LANGUAGE: ini
CODE:
[env:disco_f769ni]
platform = ststm32
board = disco_f769ni

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Nucleo G474RE
DESCRIPTION: Configuration example for changing the upload protocol to ST-Link for the Nucleo G474RE board in PlatformIO.

LANGUAGE: ini
CODE:
[env:nucleo_g474re]
platform = ststm32
board = nucleo_g474re

upload_protocol = stlink

----------------------------------------

TITLE: ESP12E Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for ESP12E board

LANGUAGE: ini
CODE:
[env:esp12e]
platform = espressif8266
board = esp12e

upload_protocol = esptool

----------------------------------------

TITLE: Registering Source Files in CMake for ESP-IDF
DESCRIPTION: This CMake snippet registers the main.c file as a source file for the ESP-IDF project using the idf_component_register function.

LANGUAGE: CMake
CODE:
idf_component_register(SRCS "main.c")

----------------------------------------

TITLE: Customizing WEMOS LOLIN32 Lite Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lolin32_lite]
platform = espressif32
board = lolin32_lite

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Board Parameters - PlatformIO INI
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency in platformio.ini.

LANGUAGE: ini
CODE:
[env:portenta_c33]
platform = renesas-ra
board = portenta_c33

; change microcontroller
board_build.mcu = r7fa6m5bh2cbg

; change MCU frequency
board_build.f_cpu = 200000000L

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Minimal configuration required to set up a PlatformIO project for the SparkFun LoRa Gateway 1-Channel board.

LANGUAGE: ini
CODE:
[env:sparkfun_lora_gateway_1-channel]
platform = espressif32
board = sparkfun_lora_gateway_1-channel

----------------------------------------

TITLE: Customizing STM32F412RG Board Settings
DESCRIPTION: Advanced configuration options for customizing microcontroller and frequency settings of the STM32F412RG board.

LANGUAGE: ini
CODE:
[env:genericSTM32F412RG]
platform = ststm32
board = genericSTM32F412RG

; change microcontroller
board_build.mcu = stm32f412rgt6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Adafruit Flora
DESCRIPTION: Basic configuration for setting up an Adafruit Flora project in PlatformIO using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:flora8]\nplatform = atmelavr\nboard = flora8

----------------------------------------

TITLE: Customizing ESP32-PICO-DevKitM-2 Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:esp32-pico-devkitm-2]
platform = espressif32
board = esp32-pico-devkitm-2

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic STM32F103RG Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F103RG board using the ststm32 platform

LANGUAGE: ini
CODE:
[env:genericSTM32F103RG]
platform = ststm32
board = genericSTM32F103RG

----------------------------------------

TITLE: Configuring Upload Protocol for ST Nucleo F091RC
DESCRIPTION: Configuration example for setting the upload protocol to stlink for the ST Nucleo F091RC board.

LANGUAGE: ini
CODE:
[env:nucleo_f091rc]
platform = ststm32
board = nucleo_f091rc

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ESP32-C6-DevKitM-1 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-c6-devkitm-1]
platform = espressif32
board = esp32-c6-devkitm-1

; change microcontroller
board_build.mcu = esp32c6

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Customizing Generic ATtiny87 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:attiny87]
platform = atmelavr
board = attiny87

; change microcontroller
board_build.mcu = attiny87

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for ESP32-S3 WROOM
DESCRIPTION: Basic configuration snippet for setting up a PlatformIO project with the Freenove ESP32-S3 WROOM board.

LANGUAGE: ini
CODE:
[env:freenove_esp32_s3_wroom]
platform = espressif32
board = freenove_esp32_s3_wroom

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo H723ZG
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo H723ZG board. In this example, it's set to the default 'stlink' protocol.

LANGUAGE: ini
CODE:
[env:nucleo_h723zg]
platform = ststm32
board = nucleo_h723zg

upload_protocol = stlink

----------------------------------------

TITLE: Configuring BluePill F103C6 Advanced Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the BluePill F103C6 board.

LANGUAGE: ini
CODE:
[env:bluepill_f103c6]
platform = ststm32
board = bluepill_f103c6

; change microcontroller
board_build.mcu = stm32f103c6t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: ETBoard Upload Protocol Configuration
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for ETBoard. The board supports both espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:etboard]
platform = espressif32
board = etboard

upload_protocol = esptool

----------------------------------------

TITLE: Basic STC15W202S Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC15W202S board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC15W202S]
platform = intel_mcs51
board = STC15W202S

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2_tft]
platform = espressif32
board = adafruit_feather_esp32s2_tft

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Demonstrates the basic configuration for setting up a SparkFun ESP32 MicroMod board in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32micromod]
platform = espressif32
board = sparkfun_esp32micromod

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the FeatherS2 board.

LANGUAGE: ini
CODE:
[env:um_feathers2]
platform = espressif32
board = um_feathers2

upload_protocol = esptool

----------------------------------------

TITLE: PATH Environment Variable Configuration
DESCRIPTION: Example showing the correct way to extend the system PATH variable in shell profiles without overriding existing paths.

LANGUAGE: bash
CODE:
export PATH="/my/custom/path":$PATH

----------------------------------------

TITLE: Configuring Upstream Platform in INI
DESCRIPTION: Configuration settings for using the upstream development version of the Maxim 32 platform directly from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-maxim32.git
board = ...

----------------------------------------

TITLE: Setting Upload Protocol for Blue STM32F407VE Mini
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using ST-Link as the default option.

LANGUAGE: ini
CODE:
[env:blue_f407ve_mini]
platform = ststm32
board = blue_f407ve_mini

upload_protocol = stlink

----------------------------------------

TITLE: Customizing LilyPad ATmega168 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO environment.

LANGUAGE: ini
CODE:
[env:lilypadatmega168]
platform = atmelavr
board = lilypadatmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Blue STM32F407VE Mini board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:blue_f407ve_mini]
platform = ststm32
board = blue_f407ve_mini

----------------------------------------

TITLE: Configuring Flash Running Mode for GAPuino in PlatformIO
DESCRIPTION: Demonstrates the configuration for running a program from Flash on a GAPuino board. This setup changes the boot mode and upload commands in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:gapuino]
platform = riscv_gap
board = gapuino
framework = ...
board_upload.boot_mode = jtag_hyper
board_upload.commands = reqloop ioloop start wait

----------------------------------------

TITLE: Setting Upload Protocol for WEMOS LOLIN S3 PRO
DESCRIPTION: Example of setting the upload protocol to 'esptool' for the WEMOS LOLIN S3 PRO board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:lolin_s3_pro]
platform = espressif32
board = lolin_s3_pro

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo H745ZI-Q
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo H745ZI-Q board. This example uses the default 'stlink' protocol.

LANGUAGE: ini
CODE:
[env:nucleo_h745zi_q]
platform = ststm32
board = nucleo_h745zi_q

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Stable TI TIVA Platform Version in PlatformIO
DESCRIPTION: This code snippet shows how to configure a specific stable version of the TI TIVA platform in the PlatformIO project configuration file. It includes options for using the latest stable version or a specific version number.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = titiva
board = ...

; Specific version
[env:custom_stable]
platform = titiva@x.y.z
board = ...

----------------------------------------

TITLE: Configuring PlatformIO for WEMOS LOLIN D32 PRO
DESCRIPTION: Basic PlatformIO configuration for the WEMOS LOLIN D32 PRO board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lolin_d32_pro]
platform = espressif32
board = lolin_d32_pro

----------------------------------------

TITLE: Customizing Sonoff SV Board Settings in PlatformIO
DESCRIPTION: Advanced configuration for the Sonoff SV board, demonstrating how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sonoff_sv]
platform = espressif8266
board = sonoff_sv

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring ESP32-S3-DevKitC-1 Board in PlatformIO
DESCRIPTION: Basic configuration settings for using the ESP32-S3-DevKitC-1 board in a PlatformIO project environment file.

LANGUAGE: ini
CODE:
[env:esp32-s3-devkitc-1]
platform = espressif32
board = esp32-s3-devkitc-1

----------------------------------------

TITLE: Generating PlatformIO Project for Vim Integration
DESCRIPTION: Command to initialize a PlatformIO project with Vim integration. Requires specifying a board ID.

LANGUAGE: shell
CODE:
pio project init --ide vim --board <ID>

----------------------------------------

TITLE: Customizing Arduino Nano ATmega168 MCU Settings
DESCRIPTION: Advanced configuration showing how to override default board settings such as microcontroller type and CPU frequency in platformio.ini.

LANGUAGE: ini
CODE:
[env:nanoatmega168]
platform = atmelavr
board = nanoatmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Noduino Quantum
DESCRIPTION: Basic board configuration for Noduino Quantum using PlatformIO's platformio.ini file

LANGUAGE: ini
CODE:
[env:quantum]
platform = espressif32
board = quantum

----------------------------------------

TITLE: Configuring Basic STC8A4K60S2A12 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC8A4K60S2A12 board in the project's platformio.ini file using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8A4K60S2A12]
platform = intel_mcs51
board = STC8A4K60S2A12

----------------------------------------

TITLE: Setting Upload Protocol for Heltec WiFi LoRa 32 (V2)
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Heltec WiFi LoRa 32 (V2) board in PlatformIO. Uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32_V2]
platform = espressif32
board = heltec_wifi_lora_32_V2

upload_protocol = esptool

----------------------------------------

TITLE: Setting SCONSFLAGS Environment Variable in Windows CMD
DESCRIPTION: This snippet shows how to set the SCONSFLAGS environment variable in Windows Command Prompt to pass the '--dry-run' option to SCons.

LANGUAGE: batch
CODE:
C:\Users\foo> set SCONSFLAGS=--dry-run

----------------------------------------

TITLE: Customizing TinyLily Board Settings
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:tinylily]
platform = atmelavr
board = tinylily

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Custom ATtiny412 Configuration with MCU and Frequency Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the ATtiny412 board.

LANGUAGE: ini
CODE:
[env:ATtiny412]
platform = atmelmegaavr
board = ATtiny412

; change microcontroller
board_build.mcu = attiny412

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Adafruit Gemma Settings in PlatformIO
DESCRIPTION: Example of overriding default Adafruit Gemma settings in PlatformIO. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:gemma]
platform = atmelavr
board = gemma

; change microcontroller
board_build.mcu = attiny85

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring FireBeetle-ESP32 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the FireBeetle-ESP32 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:firebeetle32]
platform = espressif32
board = firebeetle32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for ESP-WROVER-KIT
DESCRIPTION: Basic PlatformIO configuration for initializing an ESP-WROVER-KIT project with default settings.

LANGUAGE: ini
CODE:
[env:esp-wrover-kit]
platform = espressif32
board = esp-wrover-kit

----------------------------------------

TITLE: Basic PlatformIO Configuration for Freenove ESP32-Wrover
DESCRIPTION: Initial configuration setup for the Freenove ESP32-Wrover board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:freenove_esp32_wrover]
platform = espressif32
board = freenove_esp32_wrover

----------------------------------------

TITLE: Setting Upload Protocol for Tuino 096
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Tuino 096 board.

LANGUAGE: ini
CODE:
[env:tuinozero96]
platform = atmelsam
board = tuinozero96

upload_protocol = stk500v2

----------------------------------------

TITLE: Configuring ESP32-C3-DevKitC-02 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Espressif ESP32-C3-DevKitC-02 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-c3-devkitc-02]
platform = espressif32
board = esp32-c3-devkitc-02

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST 32F413HDISCOVERY
DESCRIPTION: Configuration to specify the upload protocol for the ST 32F413HDISCOVERY board. This example sets the protocol to ST-Link.

LANGUAGE: ini
CODE:
[env:disco_f413zh]
platform = ststm32
board = disco_f413zh

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic STM32F411CE Board Settings with PlatformIO
DESCRIPTION: Basic configuration for STM32F411CE board in platformio.ini file to set up the build environment with STM32 platform

LANGUAGE: ini
CODE:
[env:genericSTM32F411CE]
platform = ststm32
board = genericSTM32F411CE

----------------------------------------

TITLE: Customizing Nebula S3 Board Settings
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nebulas3]
platform = espressif32
board = nebulas3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing SparkFun ESP32 Thing Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency using board_*** options.

LANGUAGE: ini
CODE:
[env:esp32thing]
platform = espressif32
board = esp32thing

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for NodeMCU-32S2
DESCRIPTION: Configuration example showing how to specify the upload protocol for the NodeMCU-32S2 board.

LANGUAGE: ini
CODE:
[env:nodemcu-32s2]
platform = espressif32
board = nodemcu-32s2

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F439ZI
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO project settings.

LANGUAGE: ini
CODE:
[env:nucleo_f439zi]
platform = ststm32
board = nucleo_f439zi

upload_protocol = stlink

----------------------------------------

TITLE: Extending PlatformIO Build Environment with Python Script
DESCRIPTION: This Python script shows how to modify the PlatformIO build environment by adding preprocessor definitions and include paths. It can be used as an extra script in the build configuration.

LANGUAGE: python
CODE:
Import('env')
# print(env.Dump())
env.Append(
    CPPDEFINES=["HELLO=WORLD", "TAG=1.2.3", "DEBUG"],
    CPPPATH=["inc", "inc/devices"]
)

# some python code that generates header files "on-the-fly"

----------------------------------------

TITLE: Configuring IOT-Bus JTAG Debugging Tool in platformio.ini
DESCRIPTION: Example configuration for using the IOT-Bus JTAG debugging tool in the project's platformio.ini file. Sets the debug tool and upload protocol.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = iot-bus-jtag

[env:myenv]
platform = ...
board = ...
debug_tool = iot-bus-jtag
upload_protocol = iot-bus-jtag

----------------------------------------

TITLE: Advanced M5Stack CoreS3 Configuration
DESCRIPTION: Extended board configuration with custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:m5stack-cores3]
platform = espressif32
board = m5stack-cores3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for u-blox EVK-ODIN-W2
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO. Sets the upload protocol to ST-Link for the u-blox EVK-ODIN-W2 board.

LANGUAGE: ini
CODE:
[env:ublox_evk_odin_w2]
platform = ststm32
board = ublox_evk_odin_w2

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration for ODROID-GO
DESCRIPTION: Configuration example showing how to specify the upload protocol for ODROID-GO board.

LANGUAGE: ini
CODE:
[env:odroid_esp32]
platform = espressif32
board = odroid_esp32

upload_protocol = esptool

----------------------------------------

TITLE: Debugging Options Section Header in RST
DESCRIPTION: ReStructuredText markup defining a section for PlatformIO debugging options, including copyright notice and section reference link.

LANGUAGE: rst
CODE:
..  Copyright (c) 2014-present PlatformIO <contact@platformio.org>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

.. _projectconf_section_env_debug:

Debugging options
-----------------

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Pycom LoPy board using espressif32 platform

LANGUAGE: ini
CODE:
[env:lopy]
platform = espressif32
board = lopy

----------------------------------------

TITLE: Customizing Heltec CubeCell-Module (HTCC-AM01) Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:cubecell_module]
platform = heltec-cubecell
board = cubecell_module

; change microcontroller
board_build.mcu = asr6501

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Using PlatformIO Platform List Command in Bash
DESCRIPTION: This command lists installed platforms in PlatformIO. It can be used with an optional '--json-output' flag to return the output in JSON format. The command is deprecated and will be removed in future releases.

LANGUAGE: bash
CODE:
pio platform list [OPTIONS]

----------------------------------------

TITLE: Customizing Espressif Generic ESP8266 ESP-01 1M Board Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:esp01_1m]
platform = espressif8266
board = esp01_1m

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ST Nucleo H743ZI board in platformio.ini file, setting the platform and board type

LANGUAGE: ini
CODE:
[env:nucleo_h743zi]
platform = ststm32
board = nucleo_h743zi

----------------------------------------

TITLE: Setting Upload Protocol for Qchip ESP32
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Qchip ESP32 board in PlatformIO. The default protocol is 'esptool', but it can be changed to 'espota'.

LANGUAGE: ini
CODE:
[env:qchip]
platform = espressif32
board = qchip

upload_protocol = esptool

----------------------------------------

TITLE: Basic Sonoff S20 Environment Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to set up a build environment for Sonoff S20 board in platformio.ini

LANGUAGE: ini
CODE:
[env:sonoff_s20]
platform = espressif8266
board = sonoff_s20

----------------------------------------

TITLE: Customizing Generic ATtiny88 Board Settings in PlatformIO
DESCRIPTION: This example illustrates how to override default board settings in PlatformIO for the Generic ATtiny88. It shows how to change the microcontroller and MCU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:attiny88]
platform = atmelavr
board = attiny88

; change microcontroller
board_build.mcu = attiny88

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for NodeMCU
DESCRIPTION: Configuration example showing how to specify the upload protocol for the NodeMCU board.

LANGUAGE: ini
CODE:
[env:nodemcu]
platform = espressif8266
board = nodemcu

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration for STC8H8K60U with custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:STC8H8K60U]
platform = intel_mcs51
board = STC8H8K60U

; change microcontroller
board_build.mcu = stc8h8k60u

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol (stlink) for the ST Nucleo F072RB board.

LANGUAGE: ini
CODE:
[env:nucleo_f072rb]
platform = ststm32
board = nucleo_f072rb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32_V3]
platform = espressif32
board = heltec_wifi_lora_32_V3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Sigma IC AGAFIA SG0
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Sigma IC AGAFIA SG0 board in PlatformIO. The default protocol is stlink, but it can be changed using the upload_protocol option.

LANGUAGE: ini
CODE:
[env:agafia_sg0]
platform = ststm32
board = agafia_sg0

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration for UM RMP Board
DESCRIPTION: Example showing how to configure the upload protocol for the Unexpected Maker RMP board.

LANGUAGE: ini
CODE:
[env:um_rmp]
platform = espressif32
board = um_rmp

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for microS2
DESCRIPTION: Configuration example showing how to specify the upload protocol for the microS2 board. Sets esptool as the upload protocol.

LANGUAGE: ini
CODE:
[env:micros2]
platform = espressif32
board = micros2

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic PyGamer M4 Board Settings
DESCRIPTION: Basic PlatformIO configuration for setting up the Adafruit PyGamer M4 Express board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:adafruit_pygamer_m4]
platform = atmelsam
board = adafruit_pygamer_m4

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:freenove_esp32_wrover]
platform = espressif32
board = freenove_esp32_wrover

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8G1K12
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic STC8G1K12 board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8G1K12]
platform = intel_mcs51
board = STC8G1K12

----------------------------------------

TITLE: Setting Upload Protocol for PYBStick Lite 26
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the PYBStick Lite 26 board in the PlatformIO configuration. The default protocol is 'stlink', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:pybstick26_lite]
platform = ststm32
board = pybstick26_lite

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration for ESP32S2
DESCRIPTION: Basic PlatformIO configuration for Franzininho WiFi board using ESP32S2 microcontroller

LANGUAGE: ini
CODE:
[env:franzininho_wifi_esp32s2]
platform = espressif32
board = franzininho_wifi_esp32s2

----------------------------------------

TITLE: Configuring WeAct Studio BlackPill V2.0 (STM32F411CE) in platformio.ini
DESCRIPTION: Basic configuration for the WeAct Studio BlackPill V2.0 (STM32F411CE) board in the project's platformio.ini file. This snippet sets the platform and board options.

LANGUAGE: ini
CODE:
[env:blackpill_f411ce]
platform = ststm32
board = blackpill_f411ce

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO Configuration
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:cytron_maker_feather_aiot_s3]
platform = espressif32
board = cytron_maker_feather_aiot_s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO for ST Nucleo L496ZG-P
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo L496ZG-P board. Specifies the platform and board ID to use.

LANGUAGE: ini
CODE:
[env:nucleo_l496zg_p]
platform = ststm32
board = nucleo_l496zg_p

----------------------------------------

TITLE: Configuring Basic ESP32S3 CAM LCD Board Settings
DESCRIPTION: Basic PlatformIO configuration for ESP32S3 CAM LCD board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:esp32s3camlcd]
platform = espressif32
board = esp32s3camlcd

----------------------------------------

TITLE: Setting Upload Protocol for STM32F413RH
DESCRIPTION: Configuration example for setting the upload protocol to serial (supports blackmagic, dfu, jlink, serial, and stlink)

LANGUAGE: ini
CODE:
[env:genericSTM32F413RH]
platform = ststm32
board = genericSTM32F413RH

upload_protocol = serial

----------------------------------------

TITLE: Customizing ESP32-PoE MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-poe]
platform = espressif32
board = esp32-poe

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Upload Protocol for Phoenix 2.0
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Phoenix 2.0 board using the esptool protocol.

LANGUAGE: ini
CODE:
[env:phoenix_v2]
platform = espressif8266
board = phoenix_v2

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for NXP LPCXpresso54114
DESCRIPTION: Configuration to specify the upload protocol for the NXP LPCXpresso54114 board. In this example, it's set to 'mbed'.

LANGUAGE: ini
CODE:
[env:lpc54114]
platform = nxplpc
board = lpc54114

upload_protocol = mbed

----------------------------------------

TITLE: Customizing ATtiny202 Board Settings
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency in platformio.ini file.

LANGUAGE: ini
CODE:
[env:ATtiny202]
platform = atmelmegaavr
board = ATtiny202

; change microcontroller
board_build.mcu = attiny202

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Pycom GPy board.

LANGUAGE: ini
CODE:
[env:pycom_gpy]
platform = espressif32
board = pycom_gpy

upload_protocol = esptool

----------------------------------------

TITLE: Setting ESPino Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ESPino board, with esptool as the default option

LANGUAGE: ini
CODE:
[env:espinotee]
platform = espressif8266
board = espinotee

upload_protocol = esptool

----------------------------------------

TITLE: Configuring WiFiduino Board in PlatformIO
DESCRIPTION: This snippet shows how to configure a PlatformIO project environment for the WiFiduino board using the espressif8266 platform.

LANGUAGE: ini
CODE:
[env:wifiduino]
platform = espressif8266
board = wifiduino

----------------------------------------

TITLE: Configuring Generic ATtiny841 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the Generic ATtiny841 board in a PlatformIO project configuration file. It demonstrates setting the basic board type and platform, as well as how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:attiny841]
platform = atmelavr
board = attiny841

; change microcontroller
board_build.mcu = attiny841

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Advanced N79E352 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the N79E352 board in PlatformIO.

LANGUAGE: ini
CODE:
[env:N79E352]
platform = intel_mcs51
board = N79E352

; change microcontroller
board_build.mcu = n79e352

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Selecting System File for Dual-Core STM32
DESCRIPTION: Example of selecting specific system file implementation for dual-core targets like STM32H7.

LANGUAGE: ini
CODE:
[env:disco_h747xi]
platform = ststm32
framework = stm32cube
board = disco_h747xi
board_build.stm32cube.system_file = system_stm32h7xx_dualcore_bootcm7_cm4gated.c

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol, with ST-Link as the default option.

LANGUAGE: ini
CODE:
[env:nucleo_f302r8]
platform = ststm32
board = nucleo_f302r8

upload_protocol = stlink

----------------------------------------

TITLE: Configuring STM32F423RH Board in PlatformIO
DESCRIPTION: Basic configuration for the STM32F423RH board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F423RH]
platform = ststm32
board = genericSTM32F423RH

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings like microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32_V3]
platform = espressif32
board = heltec_wifi_kit_32_V3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:espresso_lite_v1]
platform = espressif8266
board = espresso_lite_v1

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic Board Configuration for ESP32S2
DESCRIPTION: Basic PlatformIO configuration for initializing a project with Franzininho WiFi MSC board using ESP32S2.

LANGUAGE: ini
CODE:
[env:franzininho_wifi_msc_esp32s2]
platform = espressif32
board = franzininho_wifi_msc_esp32s2

----------------------------------------

TITLE: Configuring Pre-Uninstall Bash Script
DESCRIPTION: Example configuration demonstrating how to run a Bash script before package uninstallation. The script is specified as an array of command arguments and is located at the package root.

LANGUAGE: javascript
CODE:
"scripts": {
    "preuninstall": ["maintenance.sh", "--action", "uninstall"]
}

----------------------------------------

TITLE: Configuring Basic IOXESP32 Board Settings
DESCRIPTION: Basic PlatformIO configuration for IOXESP32 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:ioxesp32]
platform = espressif32
board = ioxesp32

----------------------------------------

TITLE: Customizing Unexpected Maker TinyS2 Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:um_tinys2]
platform = espressif32
board = um_tinys2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Seeed Studio XIAO ESP32S3 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Seeed Studio XIAO ESP32S3 board. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:seeed_xiao_esp32s3]
platform = espressif32
board = seeed_xiao_esp32s3

----------------------------------------

TITLE: Setting Upload Protocol for Labplus mPython in PlatformIO
DESCRIPTION: Demonstrates how to specify the upload protocol for the Labplus mPython board, with esptool as the default option.

LANGUAGE: ini
CODE:
[env:labplus_mpython]
platform = espressif32
board = labplus_mpython

upload_protocol = esptool

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:max32630fthr]
platform = maxim32
board = max32630fthr

; change microcontroller
board_build.mcu = max32630

; change MCU frequency
board_build.f_cpu = 96000000L

----------------------------------------

TITLE: Configuring SparkFun MicroView Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the SparkFun MicroView board in a PlatformIO project's configuration file. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:uview]
platform = atmelavr
board = uview

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun SAMD21
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. The board supports multiple protocols including sam-ba, atmel-ice, blackmagic, and jlink.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_mini_usb]
platform = atmelsam
board = sparkfun_samd21_mini_usb

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration for uPesy ESP32 Wrover DevKit with custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:upesy_wrover]
platform = espressif32
board = upesy_wrover

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing PyGamer M4 MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the PyGamer M4 board.

LANGUAGE: ini
CODE:
[env:adafruit_pygamer_m4]
platform = atmelsam
board = adafruit_pygamer_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Heltec Wireless Stick Lite
DESCRIPTION: Minimal configuration required to use the Heltec Wireless Stick Lite board with PlatformIO.

LANGUAGE: ini
CODE:
[env:heltec_wireless_stick_lite]
platform = espressif32
board = heltec_wireless_stick_lite

----------------------------------------

TITLE: Customizing Microduino Core USB Settings in PlatformIO INI
DESCRIPTION: This example demonstrates how to override default board settings in a PlatformIO project configuration. It shows changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:32u416m]
platform = atmelavr
board = 32u416m

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing ESPino Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default ESPino board settings in a PlatformIO project configuration file. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:espino]
platform = espressif8266
board = espino

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103VG in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32F103VG board. Shows how to set the serial protocol.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VG]
platform = ststm32
board = genericSTM32F103VG

upload_protocol = serial

----------------------------------------

TITLE: Customizing M5Stack Station Board Settings
DESCRIPTION: This example demonstrates how to override default board settings such as microcontroller type and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:m5stack-station]
platform = espressif32
board = m5stack-station

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic ML51UB9AE
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the Generic ML51UB9AE board. It sets the platform and board ID, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML51UB9AE]
platform = intel_mcs51
board = ML51UB9AE

; change microcontroller
board_build.mcu = ml51ub9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Basic STM32F103RC Board Configuration
DESCRIPTION: Initial board configuration for STM32F103RC using PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RC]
platform = ststm32
board = genericSTM32F103RC

----------------------------------------

TITLE: Customizing ATmega1284 Board Parameters in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the ATmega1284 board.

LANGUAGE: ini
CODE:
[env:ATmega1284]
platform = atmelavr
board = ATmega1284

; change microcontroller
board_build.mcu = atmega1284

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration for ESP32 Wrover
DESCRIPTION: Initial configuration setup for uPesy ESP32 Wrover DevKit board using PlatformIO.

LANGUAGE: ini
CODE:
[env:upesy_wrover]
platform = espressif32
board = upesy_wrover

----------------------------------------

TITLE: Configuring PlatformIO for DFRobot Firebeetle 2 ESP32-S3
DESCRIPTION: Basic PlatformIO configuration for the DFRobot Firebeetle 2 ESP32-S3 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:dfrobot_firebeetle2_esp32s3]
platform = espressif32
board = dfrobot_firebeetle2_esp32s3

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Essential board configuration settings for the Black STM32F407ZE in the project's configuration file.

LANGUAGE: ini
CODE:
[env:black_f407ze]
platform = ststm32
board = black_f407ze

----------------------------------------

TITLE: Basic Zephyr Project Structure
DESCRIPTION: Required folder and file structure for a PlatformIO project using Zephyr framework

LANGUAGE: bash
CODE:
project_dir
├── include
├── src
│    └── main.c
├── zephyr
│    ├── prj.conf
│    └── CMakeLists.txt
└── platformio.ini

----------------------------------------

TITLE: Customizing ESP32-C3-DevKitM-1 Board Parameters
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-c3-devkitm-1]
platform = espressif32
board = esp32-c3-devkitm-1

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for M5Stack FIRE
DESCRIPTION: Basic configuration for setting up a PlatformIO environment to use the M5Stack FIRE board. It specifies the platform and board to use.

LANGUAGE: ini
CODE:
[env:m5stack-fire]
platform = espressif32
board = m5stack-fire

----------------------------------------

TITLE: Configuring Basic ST Nucleo L412RB-P Board Setup
DESCRIPTION: Basic PlatformIO configuration for initializing an ST Nucleo L412RB-P board project with the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_l412rb_p]
platform = ststm32
board = nucleo_l412rb_p

----------------------------------------

TITLE: Configuring Basic Board Settings - INI
DESCRIPTION: Basic PlatformIO configuration for Aventen S3 Sync board using espressif32 platform.

LANGUAGE: ini
CODE:
[env:aventen_s3_sync]
platform = espressif32
board = aventen_s3_sync

----------------------------------------

TITLE: Adding User to Device Group
DESCRIPTION: Command to add the current user to the device access group

LANGUAGE: bash
CODE:
sudo usermod -a -G dialout $USERNAME

----------------------------------------

TITLE: Specifying Upload Protocol for WeMos D1 R2 and mini in PlatformIO
DESCRIPTION: Configuration example showing how to set a specific upload protocol (esptool) for the WeMos D1 R2 and mini board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:d1_mini]
platform = espressif8266
board = d1_mini

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Stable Platform Version
DESCRIPTION: Configuration examples for using stable versions of the Heltec CubeCell platform in PlatformIO projects.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = heltec-cubecell
board = ...

; Specific version
[env:custom_stable]
platform = heltec-cubecell@x.y.z
board = ...

----------------------------------------

TITLE: Updating Team Description with PlatformIO Team Update Command
DESCRIPTION: Shows an example of using the 'pio team update' command to update the description of a team named 'dev' in the 'platformio' organization.

LANGUAGE: bash
CODE:
> pio team update platformio:dev --description "Developers team"
The team "dev" has been successfully updated.

----------------------------------------

TITLE: Configuring Upload Protocol for WeAct Studio ESP32C3CoreBoard
DESCRIPTION: This snippet demonstrates how to specify the upload protocol for the WeAct Studio ESP32C3CoreBoard in the PlatformIO configuration. The default protocol is 'esptool', but this can be changed as shown.

LANGUAGE: ini
CODE:
[env:weactstudio_esp32c3coreboard]
platform = espressif32
board = weactstudio_esp32c3coreboard

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ST Nucleo F303RE Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_f303re]
platform = ststm32
board = nucleo_f303re

; change microcontroller
board_build.mcu = stm32f303ret6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring ESP32 Pico Kit Board in platformio.ini
DESCRIPTION: Basic configuration for using the ESP32 Pico Kit board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:pico32]
platform = espressif32
board = pico32

----------------------------------------

TITLE: Configuring Basic Board Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up an Arduino M0 Pro project environment in platformio.ini

LANGUAGE: ini
CODE:
[env:mzeropro]
platform = atmelsam
board = mzeropro

----------------------------------------

TITLE: Configuring Basic ATmega325P Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO project configuration for ATmega325P board setup using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ATmega325P]
platform = atmelavr
board = ATmega325P

----------------------------------------

TITLE: Setting Upload Protocol for ESP-Mx DevKit
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ESP-Mx DevKit board.

LANGUAGE: ini
CODE:
[env:espmxdevkit]
platform = espressif8266
board = espmxdevkit

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic STC8H3K48S2 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the STC8H3K48S2 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H3K48S2]
platform = intel_mcs51
board = STC8H3K48S2

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F070RB
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board in PlatformIO. The example uses the default 'stlink' protocol.

LANGUAGE: ini
CODE:
[env:nucleo_f070rb]
platform = ststm32
board = nucleo_f070rb

upload_protocol = stlink

----------------------------------------

TITLE: Setting upload protocol for u-blox NINA-W10 series
DESCRIPTION: Example of specifying the upload protocol in PlatformIO configuration. Sets the protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:nina_w10]
platform = espressif32
board = nina_w10

upload_protocol = esptool

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2_tft]
platform = espressif32
board = adafruit_feather_esp32s2_tft

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Lion:Bit S3 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lionbits3]
platform = espressif32
board = lionbits3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing IceZUM Board Parameters in PlatformIO
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:icezum]
platform = lattice_ice40
board = icezum

; change microcontroller
board_build.mcu = iCE40-HX1K-TQ144

; change MCU frequency
board_build.f_cpu = 12000000L

----------------------------------------

TITLE: Configuring NANO 33 IoT Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the NANO 33 IoT board in the PlatformIO project configuration file. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:nano_33_iot]
platform = atmelsam
board = nano_33_iot

----------------------------------------

TITLE: Customizing IOXESP32 MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the IOXESP32 board.

LANGUAGE: ini
CODE:
[env:ioxesp32]
platform = espressif32
board = ioxesp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Digilent Cerebot 32MX4 Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Digilent Cerebot 32MX4 board in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:cerebot32mx4]
platform = microchippic32
board = cerebot32mx4

; change microcontroller
board_build.mcu = 32MX460F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing ESP32-PRO Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-pro]
platform = espressif32
board = esp32-pro

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing ST Nucleo H745ZI-Q Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_h745zi_q]
platform = ststm32
board = nucleo_h745zi_q

; change microcontroller
board_build.mcu = stm32h745zit6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring ESP320 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Electronic SweetPeas ESP320 board in the PlatformIO project configuration file. It sets the platform to espressif32 and the board to esp320.

LANGUAGE: ini
CODE:
[env:esp320]
platform = espressif32
board = esp320

----------------------------------------

TITLE: Customizing BlackPill F401CE Board Settings
DESCRIPTION: Example of overriding default board settings, such as changing the microcontroller and CPU frequency. Uses board-specific options in the project configuration.

LANGUAGE: ini
CODE:
[env:blackpill_f401ce]
platform = ststm32
board = blackpill_f401ce

; change microcontroller
board_build.mcu = stm32f401ceu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for ESP32-S2 Feather
DESCRIPTION: Basic configuration setup for the Adafruit ESP32-S2 Feather board in platformio.ini file

LANGUAGE: ini
CODE:
[env:featheresp32-s2]
platform = espressif32
board = featheresp32-s2

----------------------------------------

TITLE: Configuring WeAct Studio MiniSTM32H750VBTX Board in PlatformIO
DESCRIPTION: Basic configuration for the WeAct Studio MiniSTM32H750VBTX board in the PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:weact_mini_h750vbtx]
platform = ststm32
board = weact_mini_h750vbtx

----------------------------------------

TITLE: Setting STM32F410C8 Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32F410C8 board

LANGUAGE: ini
CODE:
[env:genericSTM32F410C8]
platform = ststm32
board = genericSTM32F410C8

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol (JLink or mbed) for the LPCXpresso55S16.

LANGUAGE: ini
CODE:
[env:lpcxpresso55s16]
platform = nxplpc
board = lpcxpresso55s16

upload_protocol = jlink

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Example of setting a specific upload protocol for the board using the upload_protocol option.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32_V3]
platform = espressif32
board = heltec_wifi_kit_32_V3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Node32s Board Settings in PlatformIO
DESCRIPTION: Example of overriding default Node32s settings in the PlatformIO configuration, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:node32s]
platform = espressif32
board = node32s

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ST Nucleo H743ZI board

LANGUAGE: ini
CODE:
[env:nucleo_h743zi]
platform = ststm32
board = nucleo_h743zi

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ESP32S3 CAM LCD Board Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32s3camlcd]
platform = espressif32
board = esp32s3camlcd

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Arduino M0 Pro
DESCRIPTION: Example showing how to configure the upload protocol for the Arduino M0 Pro board.

LANGUAGE: ini
CODE:
[env:mzeroproUSB]
platform = atmelsam
board = mzeroproUSB

upload_protocol = stk500v2

----------------------------------------

TITLE: Configuring Basic ATmega645 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ATmega645 board setup in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega645]
platform = atmelavr
board = ATmega645

----------------------------------------

TITLE: Customizing Arduino Uno MCU Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the Arduino Uno board.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
board = uno

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Configures the basic environment settings for ST Nucleo F756ZG board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:nucleo_f756zg]
platform = ststm32
board = nucleo_f756zg

----------------------------------------

TITLE: Arduino STM32L0 Core Configuration
DESCRIPTION: Configuration example for STM32L0 core with USB mass storage support.

LANGUAGE: ini
CODE:
[env:cricket_l082cz]
platform = ststm32
framework = arduino
board = cricket_l082cz
build_flags =
  -D PIO_FRAMEWORK_ARDUINO_ENABLE_MASS_STORAGE

----------------------------------------

TITLE: Setting Upload Protocol for senseBox MCU-S2 ESP32-S2
DESCRIPTION: Configuration to specify the upload protocol for the senseBox MCU-S2 ESP32-S2 board in platformio.ini. The default protocol is esptool.

LANGUAGE: ini
CODE:
[env:sensebox_mcu_esp32s2]
platform = espressif32
board = sensebox_mcu_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for TinyPICO Board in PlatformIO
DESCRIPTION: This configuration snippet shows how to set the upload protocol for the TinyPICO board to 'esptool' in the PlatformIO project file. The board supports 'espota' and 'esptool' protocols.

LANGUAGE: ini
CODE:
[env:tinypico]
platform = espressif32
board = tinypico

upload_protocol = esptool

----------------------------------------

TITLE: MKRZERO Upload Protocol Configuration
DESCRIPTION: Example showing how to configure the upload protocol for the MKRZERO board using sam-ba protocol.

LANGUAGE: ini
CODE:
[env:mkrzero]
platform = atmelsam
board = mkrzero

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring ESP32-S3 PowerFeather Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the ESP32-S3 PowerFeather board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:esp32s3_powerfeather]
platform = espressif32
board = esp32s3_powerfeather

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Component Exclusion Configuration
DESCRIPTION: Configuration file for excluding specific Mbed OS components from the build process to reduce compilation time and binary size

LANGUAGE: ini
CODE:
mbed-os/connectivity/cellular/*
mbed-os/connectivity/nanostack/*
mbed-os/storage/kvstore/*

----------------------------------------

TITLE: Configuring Basic PlatformIO Environment for DWM1001
DESCRIPTION: Basic PlatformIO configuration setup for the decaWave DWM1001 development board using the nordicnrf52 platform.

LANGUAGE: ini
CODE:
[env:dwm1001_dev]
platform = nordicnrf52
board = dwm1001_dev

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, supporting either espota or esptool options.

LANGUAGE: ini
CODE:
[env:imbrios-logsens-v1p1]
platform = espressif32
board = imbrios-logsens-v1p1

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Stable Version Platform in INI
DESCRIPTION: Configuration settings for using the stable version of the Maxim 32 platform. Shows how to pin to specific versions or use the latest stable release.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = maxim32
board = ...

; Specific version
[env:custom_stable]
platform = maxim32@x.y.z
board = ...

----------------------------------------

TITLE: Setting Upload Protocol for M5Stack Station
DESCRIPTION: This snippet shows how to specify the upload protocol for the M5Stack Station board in the PlatformIO configuration. It uses the 'esptool' protocol as an example.

LANGUAGE: ini
CODE:
[env:m5stack-station]
platform = espressif32
board = m5stack-station

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Thunderboard Sense 2
DESCRIPTION: Configuration example for specifying the upload protocol for the Thunderboard Sense 2 board in PlatformIO. This sets the protocol to 'mbed'.

LANGUAGE: ini
CODE:
[env:tb_sense_12]
platform = siliconlabsefm32
board = tb_sense_12

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Basic AT90PWM216 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for AT90PWM216 board setup using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:at90pwm216]
platform = atmelavr
board = at90pwm216

----------------------------------------

TITLE: Upload Protocol Configuration for STM32F103RC
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F103RC board. Uses ST-Link as the default upload method.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RC]
platform = ststm32
board = genericSTM32F103RC

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Arduino Nano RP2040 Connect Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nanorp2040connect]
platform = raspberrypi
board = nanorp2040connect

; change microcontroller
board_build.mcu = rp2040

; change MCU frequency
board_build.f_cpu = 133000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Seeeduino XIAO board, using sam-ba as the protocol.

LANGUAGE: ini
CODE:
[env:seeed_xiao]
platform = atmelsam
board = seeed_xiao

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing OROCA EduBot Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default OROCA EduBot settings in the PlatformIO project configuration file. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:oroca_edubot]
platform = espressif32
board = oroca_edubot

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring AVR64DD32 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up a PlatformIO project configuration for the AVR64DD32 board. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:AVR64DD32]
platform = atmelmegaavr
board = AVR64DD32

; change microcontroller
board_build.mcu = avr64dd32

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Customizing PYBStick 26 Pro MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the PYBStick 26 Pro board.

LANGUAGE: ini
CODE:
[env:pybstick26_pro]
platform = ststm32
board = pybstick26_pro

; change microcontroller
board_build.mcu = stm32f412re

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring ESP32-S3-USB-OTG Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Espressif ESP32-S3-USB-OTG board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:esp32s3usbotg]
platform = espressif32
board = esp32s3usbotg

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the PROS3 board.

LANGUAGE: ini
CODE:
[env:um_pros3]
platform = espressif32
board = um_pros3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Controllino Maxi Automation
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Controllino Maxi Automation board. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:controllino_maxi_automation]
platform = atmelavr
board = controllino_maxi_automation

----------------------------------------

TITLE: Setting Upload Protocol for 32F412GDISCOVERY
DESCRIPTION: Configuration to specify the upload protocol for the 32F412GDISCOVERY board in PlatformIO.

LANGUAGE: ini
CODE:
[env:disco_f412zg]
platform = ststm32
board = disco_f412zg

upload_protocol = stlink

----------------------------------------

TITLE: Configuring ATmega48 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the ATmega48 board. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:ATmega48]
platform = atmelavr
board = ATmega48

----------------------------------------

TITLE: Customizing ESP32 Turta IoT Node MCU Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default microcontroller and frequency settings

LANGUAGE: ini
CODE:
[env:turta_iot_node]
platform = espressif32
board = turta_iot_node

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing ATtiny4313 Board Settings in PlatformIO
DESCRIPTION: This code demonstrates how to override default settings for the Generic ATtiny4313 board in a PlatformIO environment. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:attiny4313]
platform = atmelavr
board = attiny4313

; change microcontroller
board_build.mcu = attiny4313

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic Blues Cygnet Board Settings
DESCRIPTION: Basic configuration for the Blues Cygnet board in platformio.ini file. Sets up the STM32 platform and board type.

LANGUAGE: ini
CODE:
[env:blues_cygnet]
platform = ststm32
board = blues_cygnet

----------------------------------------

TITLE: Configuring Codeanywhere Run Button for PlatformIO
DESCRIPTION: This JSON configuration sets the Codeanywhere Run Button to execute the 'pio run' command, which builds the PlatformIO project.

LANGUAGE: javascript
CODE:
"commands": [
    "pio run"
]

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:wesp32]
platform = espressif32
board = wesp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration for Pycom WiPy3
DESCRIPTION: Basic PlatformIO configuration for setting up the Pycom WiPy3 board with ESP32 platform.

LANGUAGE: ini
CODE:
[env:wipy3]
platform = espressif32
board = wipy3

----------------------------------------

TITLE: Configuring Nucleo G431RB Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the Nucleo G431RB board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_g431rb]
platform = ststm32
board = nucleo_g431rb

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Shows how to override default board settings including microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32micromod]
platform = espressif32
board = sparkfun_esp32micromod

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Unity Test Configuration Header
DESCRIPTION: Configuration header for Unity test framework integration with STM32.

LANGUAGE: cpp
CODE:
#ifndef UNITY_CONFIG_H
#define UNITY_CONFIG_H

#ifndef NULL
#ifndef __cplusplus
#define NULL (void*)0
#else
#define NULL 0
#endif
#endif

#ifdef __cplusplus
extern "C"
{
#endif

void unityOutputStart();
void unityOutputChar(char);
void unityOutputFlush();
void unityOutputComplete();

#define UNITY_OUTPUT_START()    unityOutputStart()
#define UNITY_OUTPUT_CHAR(c)    unityOutputChar(c)
#define UNITY_OUTPUT_FLUSH()    unityOutputFlush()
#define UNITY_OUTPUT_COMPLETE() unityOutputComplete()

#ifdef __cplusplus
}
#endif /* extern "C" */

#endif /* UNITY_CONFIG_H */

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol, with stlink as the default option.

LANGUAGE: ini
CODE:
[env:disco_l4s5i_iot01a]
platform = ststm32
board = disco_l4s5i_iot01a

upload_protocol = stlink

----------------------------------------

TITLE: Basic PlatformIO Configuration for IAP15W4K63S4
DESCRIPTION: Initial PlatformIO configuration for setting up the IAP15W4K63S4 board with intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:IAP15W4K63S4]
platform = intel_mcs51
board = IAP15W4K63S4

----------------------------------------

TITLE: Basic Remote Update Command Usage
DESCRIPTION: Shows the basic syntax for running the PlatformIO remote update command with optional parameters.

LANGUAGE: bash
CODE:
pio remote update [OPTIONS]

# start update process on the specified agents/machines
pio remote --agent NAME update [OPTIONS]

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2_reversetft]
platform = espressif32
board = adafruit_feather_esp32s2_reversetft

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to use the ST Nucleo F410RB board in a PlatformIO project file.

LANGUAGE: ini
CODE:
[env:nucleo_f410rb]
platform = ststm32
board = nucleo_f410rb

----------------------------------------

TITLE: Setting Upload Protocol for Nebula S3
DESCRIPTION: Configuring the upload protocol for the Nebula S3 board, with esptool as the default.

LANGUAGE: ini
CODE:
[env:nebulas3]
platform = espressif32
board = nebulas3

upload_protocol = esptool

----------------------------------------

TITLE: Basic PlatformIO Configuration for MKR FOX 1200
DESCRIPTION: Basic board configuration settings for Arduino MKR FOX 1200 in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:mkrfox1200]
platform = atmelsam
board = mkrfox1200

----------------------------------------

TITLE: Configuring PlatformIO for EnviroDIY Mayfly Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the EnviroDIY Mayfly board. It sets the platform to atmelavr and the board to mayfly. Additional options demonstrate how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:mayfly]
platform = atmelavr
board = mayfly

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for Nucleo G431KB
DESCRIPTION: Example showing how to configure the upload protocol for the Nucleo G431KB board, with ST-Link as the default option

LANGUAGE: ini
CODE:
[env:nucleo_g431kb]
platform = ststm32
board = nucleo_g431kb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing SODAQ Ndogo MCU Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the SODAQ Ndogo board.

LANGUAGE: ini
CODE:
[env:sodaq_ndogo]
platform = atmelavr
board = sodaq_ndogo

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring ST Nucleo F207ZG Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo F207ZG board using the STM32 platform. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:nucleo_f207zg]
platform = ststm32
board = nucleo_f207zg

; change microcontroller
board_build.mcu = stm32f207zgt6

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to set a specific upload protocol for the ESP32 Wrover board.

LANGUAGE: ini
CODE:
[env:upesy_wrover]
platform = espressif32
board = upesy_wrover

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic STC89C54RD+ Board Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up the STC89C54RD+ board environment using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC89C54RD+]
platform = intel_mcs51
board = STC89C54RD+

----------------------------------------

TITLE: Customizing ESPectro Core Board Settings
DESCRIPTION: This code demonstrates how to override default board settings such as microcontroller type and CPU frequency using board_*** options.

LANGUAGE: ini
CODE:
[env:espectro]
platform = espressif8266
board = espectro

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo F446ZE board.

LANGUAGE: ini
CODE:
[env:nucleo_f446ze]
platform = ststm32
board = nucleo_f446ze

; change microcontroller
board_build.mcu = stm32f446zet6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the SODAQ ExpLoRer board.

LANGUAGE: ini
CODE:
[env:sodaq_explorer]
platform = atmelsam
board = sodaq_explorer

upload_protocol = sam-ba

----------------------------------------

TITLE: Custom MCU Configuration for RoboHeart Hercules
DESCRIPTION: Example showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:roboheart_hercules]
platform = espressif32
board = roboheart_hercules

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic MS51EC0AE Board Configuration
DESCRIPTION: Basic PlatformIO configuration for MS51EC0AE board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:MS51EC0AE]
platform = intel_mcs51
board = MS51EC0AE

----------------------------------------

TITLE: Configuring PlatformIO Environment for FRDM-K22F
DESCRIPTION: Basic PlatformIO configuration for the Freescale Kinetis FRDM-K22F board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:frdm_k22f]
platform = freescalekinetis
board = frdm_k22f

----------------------------------------

TITLE: Configuring ESP32S3 CAM LCD Upload Protocol
DESCRIPTION: PlatformIO configuration example showing how to specify the upload protocol for the ESP32S3 CAM LCD board.

LANGUAGE: ini
CODE:
[env:esp32s3camlcd]
platform = espressif32
board = esp32s3camlcd

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with MCU Override
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:cloud_jam]
platform = ststm32
board = cloud_jam

; change microcontroller
board_build.mcu = stm32f401ret6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Customizing April Brother ESPea32 Board Settings
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency, using board_*** options in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:espea32]
platform = espressif32
board = espea32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic INI configuration for setting up a PlatformIO project with the Blues Swan R5 board using the STM32 platform

LANGUAGE: ini
CODE:
[env:blues_swan_r5]
platform = ststm32
board = blues_swan_r5

----------------------------------------

TITLE: Customizing Denky32 Board Settings in PlatformIO INI File
DESCRIPTION: Example of overriding default board settings for the Denky32 (WROOM32) in the PlatformIO configuration. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:denky32]
platform = espressif32
board = denky32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic STM32F412CE Board Environment
DESCRIPTION: Basic PlatformIO environment configuration for STM32F412CE board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F412CE]
platform = ststm32
board = genericSTM32F412CE

----------------------------------------

TITLE: Setting Upload Protocol for M200 V2
DESCRIPTION: Example configuration for specifying the upload protocol to use with the M200 V2 board.

LANGUAGE: ini
CODE:
[env:malyanm200_f070cb]
platform = ststm32
board = malyanm200_f070cb

upload_protocol = stlink

----------------------------------------

TITLE: Basic PlatformIO Board Configuration for STM32F413CH
DESCRIPTION: Basic configuration to set up the STM32F413CH board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:genericSTM32F413CH]
platform = ststm32
board = genericSTM32F413CH

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit MagTag 2.9 ESP32-S2
DESCRIPTION: This configuration snippet demonstrates how to specify the upload protocol for the Adafruit MagTag 2.9 board in a PlatformIO project. It sets the upload protocol to 'esptool', which is the default for this board.

LANGUAGE: ini
CODE:
[env:adafruit_magtag29_esp32s2]
platform = espressif32
board = adafruit_magtag29_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Configuring LilyGo T-Display-S3 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the LilyGo T-Display-S3 board in the PlatformIO project configuration file. It sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:lilygo-t-display-s3]
platform = espressif32
board = lilygo-t-display-s3

----------------------------------------

TITLE: Configuring Basic Board Settings for ST Nucleo F746ZG
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo F746ZG board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_f746zg]
platform = ststm32
board = nucleo_f746zg

----------------------------------------

TITLE: Customizing SainSmart Due MCU Settings
DESCRIPTION: Example showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sainSmartDueUSB]
platform = atmelsam
board = sainSmartDueUSB

; change microcontroller
board_build.mcu = at91sam3x8e

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Setting Basic MoteinoMEGA Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for MoteinoMEGA board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:moteinomega]
platform = atmelavr
board = moteinomega

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings

LANGUAGE: ini
CODE:
[env:nicla_sense_me]
platform = nordicnrf52
board = nicla_sense_me

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol for the BBC micro:bit V2 board.

LANGUAGE: ini
CODE:
[env:bbcmicrobit_v2]
platform = nordicnrf52
board = bbcmicrobit_v2

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Configuring Basic ST Nucleo F412ZG Board Environment
DESCRIPTION: Basic configuration for setting up an ST Nucleo F412ZG board project in PlatformIO. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_f412zg]
platform = ststm32
board = nucleo_f412zg

----------------------------------------

TITLE: PlatformIO Library Schema URL
DESCRIPTION: The URL for the library.json JSON Schema used for validation and annotation.

LANGUAGE: shell
CODE:
https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/schema/library.json

----------------------------------------

TITLE: Setting Upload Protocol for RYMCU ESP32-S3-DevKitC-1 in PlatformIO
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the RYMCU ESP32-S3-DevKitC-1 board in a PlatformIO project configuration. The default protocol is 'esptool', but it can be changed using the upload_protocol option.

LANGUAGE: ini
CODE:
[env:rymcu-esp32-s3-devkitc-1]
platform = espressif32
board = rymcu-esp32-s3-devkitc-1

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Curiosity Nano AVR128DA48
DESCRIPTION: Basic PlatformIO configuration for the Curiosity Nano AVR128DA48 board. Sets the platform to atmelmegaavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:curiosity_nano_da]
platform = atmelmegaavr
board = curiosity_nano_da

----------------------------------------

TITLE: Configuring PlatformIO Environment for Frog Board ESP32
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Frog Board ESP32. It includes the basic configuration and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:frogboard]
platform = espressif32
board = frogboard

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring AVR-Stub Debug Tool in platformio.ini
DESCRIPTION: This snippet shows how to configure the avr-stub debug tool in the platformio.ini file. It includes setting the debug tool, port, and adding the necessary library dependency.

LANGUAGE: ini
CODE:
[env:myenv]
platform = atmelavr
board = ...

debug_tool = avr-stub
debug_port = SERIAL_PORT

; GDB stub implementation
lib_deps =
    jdolinay/avr-debugger @ ~1.4

----------------------------------------

TITLE: Configuring PlatformIO for DOIT ESPduino32 in INI
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the DOIT ESPduino32 board. It sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:esp32doit-espduino]
platform = espressif32
board = esp32doit-espduino

----------------------------------------

TITLE: Customizing ESP8266 Board Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:gen4iod]
platform = espressif8266
board = gen4iod

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Heltec WiFi Kit 32 (V2) Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Heltec WiFi Kit 32 (V2) board in a PlatformIO project configuration file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32_v2]
platform = espressif32
board = heltec_wifi_kit_32_v2

----------------------------------------

TITLE: Customizing MGBOT IOTIK 32A Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project configuration. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mgbot-iotik32a]
platform = espressif32
board = mgbot-iotik32a

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended environment configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:328p8m]
platform = atmelavr
board = 328p8m

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring emonPi Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the OpenEnergyMonitor emonPi board in a PlatformIO project configuration file. It sets the platform to atmelavr and the board to emonpi.

LANGUAGE: ini
CODE:
[env:emonpi]
platform = atmelavr
board = emonpi

----------------------------------------

TITLE: Upload Protocol Configuration for STM32F405
DESCRIPTION: PlatformIO configuration showing how to set the upload protocol for the SparkFun MicroMod STM32F405 board.

LANGUAGE: ini
CODE:
[env:sparkfun_micromod_f405]
platform = ststm32
board = sparkfun_micromod_f405

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration for STM32
DESCRIPTION: Initial configuration setup for the MultiTech mDot F411 board using PlatformIO's INI format

LANGUAGE: ini
CODE:
[env:mts_mdot_f411re]
platform = ststm32
board = mts_mdot_f411re

----------------------------------------

TITLE: Customizing AirM2M CORE ESP32C3 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:airm2m_core_esp32c3]
platform = espressif32
board = airm2m_core_esp32c3

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Setting Upload Protocol for Seeed Studio XIAO ESP32C3
DESCRIPTION: Example of specifying the upload protocol for the Seeed Studio XIAO ESP32C3 board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:seeed_xiao_esp32c3]
platform = espressif32
board = seeed_xiao_esp32c3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the Adafruit QT Py ESP32-C3.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32c3]
platform = espressif32
board = adafruit_qtpy_esp32c3

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F207ZG
DESCRIPTION: Example of setting the upload protocol to ST-Link for the ST Nucleo F207ZG board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_f207zg]
platform = ststm32
board = nucleo_f207zg

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic PYBStick Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a PYBStick Standard 26 board project using the STM32 platform.

LANGUAGE: ini
CODE:
[env:pybstick26_std]
platform = ststm32
board = pybstick26_std

----------------------------------------

TITLE: Customizing MCU Settings for Unexpected Maker NanoS3
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:um_nanos3]
platform = espressif32
board = um_nanos3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:cubecell_capsule]
platform = heltec-cubecell
board = cubecell_capsule

; change microcontroller
board_build.mcu = asr6501

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for WifInfo Board in PlatformIO
DESCRIPTION: This snippet illustrates how to set the upload protocol for the WifInfo board in the PlatformIO configuration. It sets the upload protocol to esptool.

LANGUAGE: ini
CODE:
[env:wifinfo]
platform = espressif8266
board = wifinfo

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Arduino Zero Board in PlatformIO
DESCRIPTION: Basic configuration for setting up an Arduino Zero board project. Specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:zero]
platform = atmelsam
board = zero

----------------------------------------

TITLE: Basic PlatformIO Configuration for IntoRobot Fig
DESCRIPTION: Initial configuration setup for IntoRobot Fig board using PlatformIO. Specifies the platform and board parameters.

LANGUAGE: ini
CODE:
[env:intorobot]
platform = espressif32
board = intorobot

----------------------------------------

TITLE: Customizing ESP32-S3 Board Parameters
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3]
platform = espressif32
board = adafruit_feather_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring ST 32L496GDISCOVERY Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST 32L496GDISCOVERY board using the ststm32 platform. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:disco_l496ag]
platform = ststm32
board = disco_l496ag

; change microcontroller
board_build.mcu = stm32l496agi6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-S2-Kaluga-1
DESCRIPTION: Configuration example for specifying the upload protocol. The board supports multiple protocols with esptool as default.

LANGUAGE: ini
CODE:
[env:esp32-s2-kaluga-1]
platform = espressif32
board = esp32-s2-kaluga-1

upload_protocol = esptool

----------------------------------------

TITLE: Customizing M5Stack Core2 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings for the M5Stack Core2, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:m5stack-core2]
platform = espressif32
board = m5stack-core2

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit ItsyBitsy ESP32
DESCRIPTION: Example of specifying the upload protocol for the Adafruit ItsyBitsy ESP32 board in the project configuration.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_esp32]
platform = espressif32
board = adafruit_itsybitsy_esp32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic STM32F103T6 Board Settings in PlatformIO
DESCRIPTION: Basic configuration example for setting up the STM32F103T6 board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F103T6]
platform = ststm32
board = genericSTM32F103T6

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32s2_thing_plus]
platform = espressif32
board = sparkfun_esp32s2_thing_plus

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic AT90CAN32 Board Environment in PlatformIO
DESCRIPTION: Basic configuration example for setting up an AT90CAN32 board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:AT90CAN32]
platform = atmelavr
board = AT90CAN32

----------------------------------------

TITLE: Setting Upload Protocol for Espressif ESP32 Dev Module
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Espressif ESP32 Dev Module in the PlatformIO project configuration file. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:esp32dev]
platform = espressif32
board = esp32dev

upload_protocol = esptool

----------------------------------------

TITLE: Customizing STM32F103VE Board Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VE]
platform = ststm32
board = genericSTM32F103VE

; change microcontroller
board_build.mcu = stm32f103vet6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing NodeMCU-32S2 Board Parameters
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:nodemcu-32s2]
platform = espressif32
board = nodemcu-32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Displaying PlatformIO Remote CLI Help in Bash
DESCRIPTION: Commands to display help information for the PlatformIO Remote CLI and its subcommands. Also shows how to run a command on specific PlatformIO Remote Agents.

LANGUAGE: bash
CODE:
pio remote --help
pio remote COMMAND --help

# run command on the specified PlatformIO Remote Agents
pio remote --agent NAME_1 --agent NAME_N COMMAND

----------------------------------------

TITLE: Setting Upload Protocol for ESP8266 ESP-01 in PlatformIO
DESCRIPTION: This snippet illustrates how to set a specific upload protocol (esptool in this case) for the ESP8266 ESP-01 board in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:esp01]
platform = espressif8266
board = esp01

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F412ZG
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ST Nucleo F412ZG board, using ST-Link as the default option.

LANGUAGE: ini
CODE:
[env:nucleo_f412zg]
platform = ststm32
board = nucleo_f412zg

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic ESP32-C3-DevKitM-1 Board Settings
DESCRIPTION: Basic configuration for ESP32-C3-DevKitM-1 board using PlatformIO's configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:esp32-c3-devkitm-1]
platform = espressif32
board = esp32-c3-devkitm-1

----------------------------------------

TITLE: Customizing AVR64DD14 MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the AVR64DD14 board.

LANGUAGE: ini
CODE:
[env:AVR64DD14]
platform = atmelmegaavr
board = AVR64DD14

; change microcontroller
board_build.mcu = avr64dd14

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Adafruit PyPortal M4 Titano Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit PyPortal M4 Titano board in a PlatformIO project's configuration file. It sets the platform, board, and allows for overriding default board settings.

LANGUAGE: ini
CODE:
[env:adafruit_pyportal_m4_titano]
platform = atmelsam
board = adafruit_pyportal_m4_titano

; change microcontroller
board_build.mcu = samd51j20a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring OLIMEXINO-STM32 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the OLIMEXINO-STM32 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:olimexino]
platform = ststm32
board = olimexino

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic INI configuration for setting up a PlatformIO project with the CubeCell-GPS board.

LANGUAGE: ini
CODE:
[env:cubecell_gps]
platform = heltec-cubecell
board = cubecell_gps

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F429ZI
DESCRIPTION: Configuration to change the upload protocol for the ST Nucleo F429ZI board in PlatformIO.

LANGUAGE: ini
CODE:
[env:nucleo_f429zi]
platform = ststm32
board = nucleo_f429zi

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for Valetron Systems VALTRACK-V4MVF
DESCRIPTION: Basic PlatformIO configuration for the Valetron Systems VALTRACK-V4MVF board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:valtrack_v4_mfw_esp32_c3]
platform = espressif32
board = valtrack_v4_mfw_esp32_c3

----------------------------------------

TITLE: Configuring Basic AVR64DA32 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the AVR64DA32 board using the atmelmegaavr platform.

LANGUAGE: ini
CODE:
[env:AVR64DA32]
platform = atmelmegaavr
board = AVR64DA32

----------------------------------------

TITLE: Setting Upload Protocol for nRF52840
DESCRIPTION: Configuration example showing how to specify the upload protocol for the nRF52840-DK board.

LANGUAGE: ini
CODE:
[env:nrf52840_dk_adafruit]
platform = nordicnrf52
board = nrf52840_dk_adafruit

upload_protocol = jlink

----------------------------------------

TITLE: Configuring STM32F072-EVAL Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STM32F072-EVAL board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:eval_f072vb]
platform = ststm32
board = eval_f072vb

----------------------------------------

TITLE: Configuring Deneyap Kart Board in PlatformIO
DESCRIPTION: Basic configuration for the Deneyap Kart board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:deneyapkart]
platform = espressif32
board = deneyapkart

----------------------------------------

TITLE: Customizing Seeed Studio XIAO ESP32S3 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:seeed_xiao_esp32s3]
platform = espressif32
board = seeed_xiao_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic STC8C1K08 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC8C1K08 board in the project's platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8C1K08]
platform = intel_mcs51
board = STC8C1K08

----------------------------------------

TITLE: Configuring Nucleo G071RB Board in PlatformIO
DESCRIPTION: Basic configuration for using the Nucleo G071RB board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_g071rb]
platform = ststm32
board = nucleo_g071rb

----------------------------------------

TITLE: Configuring OLIMEX ESP32-DevKit-LiPo Board in PlatformIO
DESCRIPTION: Basic configuration for using the OLIMEX ESP32-DevKit-LiPo board in a PlatformIO project. Specifies the board ID and platform.

LANGUAGE: ini
CODE:
[env:esp32-devkitlipo]
platform = espressif32
board = esp32-devkitlipo

----------------------------------------

TITLE: Configuring ESPino Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ESPino board in a PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:espino]
platform = espressif8266
board = espino

----------------------------------------

TITLE: Customizing HONEYLemon Board Settings in PlatformIO INI File
DESCRIPTION: Example of overriding default HONEYLemon settings in the PlatformIO project configuration file. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:honeylemon]
platform = espressif32
board = honeylemon

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Board Settings - PlatformIO INI
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:electrosmith_daisy_patch_sm]
platform = ststm32
board = electrosmith_daisy_patch_sm

; change microcontroller
board_build.mcu = stm32h750ibk6

; change MCU frequency
board_build.f_cpu = 400000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for WEMOS D1 R32
DESCRIPTION: Basic environment configuration in platformio.ini for WEMOS D1 R32 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:wemos_d1_uno32]\nplatform = espressif32\nboard = wemos_d1_uno32

----------------------------------------

TITLE: Configuring PlatformIO for 32F412GDISCOVERY Board
DESCRIPTION: Basic PlatformIO configuration for the 32F412GDISCOVERY board, including platform and board ID specification.

LANGUAGE: ini
CODE:
[env:disco_f412zg]
platform = ststm32
board = disco_f412zg

----------------------------------------

TITLE: Customizing STM32F103V8 MCU and Frequency Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the STM32F103V8 board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103V8]
platform = ststm32
board = genericSTM32F103V8

; change microcontroller
board_build.mcu = stm32f103v8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring STM32F407IG Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F407IG board initialization using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F407IGT6]
platform = ststm32
board = genericSTM32F407IGT6

----------------------------------------

TITLE: Upload Protocol Configuration for IntoRobot Fig
DESCRIPTION: Configuration example showing how to specify the upload protocol for IntoRobot Fig. The board supports espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:intorobot]
platform = espressif32
board = intorobot

upload_protocol = esptool

----------------------------------------

TITLE: Configuring BPI-Bit Board in PlatformIO's projectconf
DESCRIPTION: This snippet shows how to configure the BPI-Bit board in the PlatformIO project configuration file. It sets the platform to espressif32 and the board to bpi-bit.

LANGUAGE: ini
CODE:
[env:bpi-bit]
platform = espressif32
board = bpi-bit

----------------------------------------

TITLE: Upload Protocol Configuration for Olimex STM32-P405
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Default protocol is stlink, but blackmagic, cmsis-dap, and jlink are also supported.

LANGUAGE: ini
CODE:
[env:olimex_p405]
platform = ststm32
board = olimex_p405

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ATtiny826 Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default settings for the ATtiny826 board in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATtiny826]
platform = atmelmegaavr
board = ATtiny826

; change microcontroller
board_build.mcu = attiny826

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_dev_usb]
platform = atmelsam
board = sparkfun_samd21_dev_usb

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring PlatformIO Environment for Heltec Wifi Kit 8
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Heltec Wifi Kit 8 board. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_8]
platform = espressif8266
board = heltec_wifi_kit_8

----------------------------------------

TITLE: Configuring PlatformIO for ST Nucleo F767ZI
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the ST Nucleo F767ZI board using the ststm32 platform. It includes options to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:nucleo_f767zi]
platform = ststm32
board = nucleo_f767zi

; change microcontroller
board_build.mcu = stm32f767zit6

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Configuring STM32F103VE Board in platformio.ini
DESCRIPTION: Basic configuration for the STM32F103VE board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VE]
platform = ststm32
board = genericSTM32F103VE

----------------------------------------

TITLE: Customizing Valetron Systems VALTRACK-V4MVF Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:valtrack_v4_mfw_esp32_c3]
platform = espressif32
board = valtrack_v4_mfw_esp32_c3

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Customizing ATtiny816 MCU Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the ATtiny816 board.

LANGUAGE: ini
CODE:
[env:ATtiny816]
platform = atmelmegaavr
board = ATtiny816

; change microcontroller
board_build.mcu = attiny816

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Hornbill ESP32 Minima
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the Hornbill ESP32 Minima board in PlatformIO. The default protocol is 'esptool', but it can be changed using the upload_protocol option.

LANGUAGE: ini
CODE:
[env:hornbill32minima]
platform = espressif32
board = hornbill32minima

upload_protocol = esptool

----------------------------------------

TITLE: Example Output of PlatformIO Upgrade Command
DESCRIPTION: This snippet shows an example output when running the 'pio upgrade' command and the system is already up-to-date.

LANGUAGE: bash
CODE:
> pio upgrade

You are up-to-date!
PlatformIO x.x.x is currently the newest version available.

----------------------------------------

TITLE: Advanced STC8H04A10 Board Configuration
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H04A10]
platform = intel_mcs51
board = STC8H04A10

; change microcontroller
board_build.mcu = stc8h04a10

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for Metro nRF52840 Express
DESCRIPTION: Demonstrates how to specify the upload protocol in PlatformIO configuration. The default protocol is 'nrfutil'.

LANGUAGE: ini
CODE:
[env:adafruit_metro_nrf52840]
platform = nordicnrf52
board = adafruit_metro_nrf52840

upload_protocol = nrfutil

----------------------------------------

TITLE: Customizing AVR64DD20 MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:AVR64DD20]
platform = atmelmegaavr
board = AVR64DD20

; change microcontroller
board_build.mcu = avr64dd20

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for MGBOT IOTIK 32B
DESCRIPTION: Basic configuration for setting up a PlatformIO project with MGBOT IOTIK 32B board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:mgbot-iotik32b]
platform = espressif32
board = mgbot-iotik32b

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K08S2A10]
platform = intel_mcs51
board = STC8H1K08S2A10

; change microcontroller
board_build.mcu = stc8h1k08s2a10

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Custom AVR64DB64 Configuration Options
DESCRIPTION: PlatformIO configuration with custom microcontroller and frequency settings for AVR64DB64 board

LANGUAGE: ini
CODE:
[env:AVR64DB64]
platform = atmelmegaavr
board = AVR64DB64

; change microcontroller
board_build.mcu = avr64db64

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Example of specifying the upload protocol in PlatformIO configuration. Sets the protocol to 'esptool', which is the default for this board.

LANGUAGE: ini
CODE:
[env:dfrobot_firebeetle2_esp32s3]
platform = espressif32
board = dfrobot_firebeetle2_esp32s3

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ESP8266
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, with esptool as the selected protocol.

LANGUAGE: ini
CODE:
[env:gen4iod]
platform = espressif8266
board = gen4iod

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:dfrobot_firebeetle2_esp32s3]
platform = espressif32
board = dfrobot_firebeetle2_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring SparkFun ESP32 IoT RedBoard in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the SparkFun ESP32 IoT RedBoard. Specifies the board ID and platform to use in the project configuration file.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32_iot_redboard]
platform = espressif32
board = sparkfun_esp32_iot_redboard

----------------------------------------

TITLE: Configuring LightBlue Bean Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the LightBlue Bean board in a PlatformIO project's configuration file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:lightblue-bean]
platform = atmelavr
board = lightblue-bean

----------------------------------------

TITLE: Setting Upload Protocol for Cicada-L082CZ in PlatformIO
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Cicada-L082CZ board in a PlatformIO project configuration. The default protocol is 'dfu', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:cicada_l082cz]
platform = ststm32
board = cicada_l082cz

upload_protocol = dfu

----------------------------------------

TITLE: Basic STM32 Board Configuration
DESCRIPTION: Basic configuration setup for MultiTech mDot board using STM32 platform

LANGUAGE: ini
CODE:
[env:mts_mdot_f405rg]
platform = ststm32
board = mts_mdot_f405rg

----------------------------------------

TITLE: Configuring WEMOS LOLIN32 Lite Board in PlatformIO
DESCRIPTION: Basic configuration for the WEMOS LOLIN32 Lite board in the PlatformIO project configuration file. Sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:lolin32_lite]
platform = espressif32
board = lolin32_lite

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun ESP8266 Thing
DESCRIPTION: This code snippet shows how to set the upload protocol for the SparkFun ESP8266 Thing board in the PlatformIO configuration. It demonstrates changing the default protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:thing]
platform = espressif8266
board = thing

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ESPDuino
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ESPDuino board in PlatformIO.

LANGUAGE: ini
CODE:
[env:espduino]
platform = espressif8266
board = espduino

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:samd21g18a]
platform = atmelsam
board = samd21g18a

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:pycom_gpy]
platform = espressif32
board = pycom_gpy

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Writing Unity Tests for Arduino
DESCRIPTION: This C++ code demonstrates how to write Unity tests for an Arduino project. It includes setup and loop functions, as well as a simple test case.

LANGUAGE: cpp
CODE:
#include <Arduino.h>
#include <unity.h>

void setUp(void) {
    // set stuff up here
}

void tearDown(void) {
    // clean stuff up here
}

void simple_test(void)
{
    TEST_ASSERT_EQUAL(33, 33);
}

void setup()
{
    delay(2000);

    UNITY_BEGIN();
    RUN_TEST(simple_test);
    UNITY_END();
}

void loop()
{
    delay(1000);
}

----------------------------------------

TITLE: Customizing ST Nucleo L552ZE-Q Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_l552ze_q]
platform = ststm32
board = nucleo_l552ze_q

; change microcontroller
board_build.mcu = stm32l552zet6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103TB
DESCRIPTION: Configuration example for changing the upload protocol for the STM32F103TB board in PlatformIO. The default protocol is stlink, but this can be modified.

LANGUAGE: ini
CODE:
[env:genericSTM32F103TB]
platform = ststm32
board = genericSTM32F103TB

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for M5Stack Core2 in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the M5Stack Core2 board, with esptool as the default option.

LANGUAGE: ini
CODE:
[env:m5stack-core2]
platform = espressif32
board = m5stack-core2

upload_protocol = esptool

----------------------------------------

TITLE: Customizing M5Stack-Core Ink Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings for M5Stack-Core Ink, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:m5stack-coreink]
platform = espressif32
board = m5stack-coreink

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for M5Stack Timer CAM
DESCRIPTION: Basic configuration for setting up an M5Stack Timer CAM project in PlatformIO using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:m5stack-timer-cam]
platform = espressif32
board = m5stack-timer-cam

----------------------------------------

TITLE: Setting Upload Protocol for ST B-L475E-IOT01A Discovery Kit
DESCRIPTION: Configuration to change the upload protocol for the ST B-L475E-IOT01A Discovery kit board. In this example, it's set to 'stlink'.

LANGUAGE: ini
CODE:
[env:disco_l475vg_iot01a]
platform = ststm32
board = disco_l475vg_iot01a

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ESP32-GATEWAY MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-gateway]
platform = espressif32
board = esp32-gateway

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic Board Settings for microS2
DESCRIPTION: Basic PlatformIO configuration for microS2 board using the espressif32 platform. Sets up the board identifier and platform.

LANGUAGE: ini
CODE:
[env:micros2]
platform = espressif32
board = micros2

----------------------------------------

TITLE: Customizing STM32-E407 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency, in a PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:olimex_e407]
platform = ststm32
board = olimex_e407

; change microcontroller
board_build.mcu = stm32f407zgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring ATmega6450P Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATmega6450P board setup using the atmelavr platform. Defines the essential project environment settings.

LANGUAGE: ini
CODE:
[env:ATmega6450P]
platform = atmelavr
board = ATmega6450P

----------------------------------------

TITLE: Overriding Debug Settings in PlatformIO Config
DESCRIPTION: Extra debug configuration file that overrides base debug flags and specific environment settings.

LANGUAGE: ini
CODE:
# Override base "common.debug_flags"
[common]
debug_flags = -D DEBUG=1

[env:lolin32]
build_flags = -Og

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Example of overriding default board settings like microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:wifiduino32c3]
platform = espressif32
board = wifiduino32c3

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the ST Nucleo L152RE board.

LANGUAGE: ini
CODE:
[env:nucleo_l152re]
platform = ststm32
board = nucleo_l152re

; change microcontroller
board_build.mcu = stm32l152ret6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring ESP32 Upload Protocol
DESCRIPTION: PlatformIO configuration showing how to specify the upload protocol for the ESP32 board.

LANGUAGE: ini
CODE:
[env:az-delivery-devkit-v4]
platform = espressif32
board = az-delivery-devkit-v4

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ATmega325P Board Parameters in PlatformIO
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega325P]
platform = atmelavr
board = ATmega325P

; change microcontroller
board_build.mcu = atmega325p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring AVR64DA64 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR64DA64 board in a PlatformIO project's configuration file (platformio.ini). It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:AVR64DA64]
platform = atmelmegaavr
board = AVR64DA64

; change microcontroller
board_build.mcu = avr64da64

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring AVR128DB64 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR128DB64 board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:AVR128DB64]
platform = atmelmegaavr
board = AVR128DB64

; change microcontroller
board_build.mcu = avr128db64

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the ST B-U585I-IOT02A Discovery board in platformio.ini. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_b_u585i_iot02a]
platform = ststm32
board = disco_b_u585i_iot02a

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:modwifi]
platform = espressif8266
board = modwifi

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32 Board
DESCRIPTION: Example configuration for specifying the upload protocol for the ST 32L0538DISCOVERY board

LANGUAGE: ini
CODE:
[env:disco_l053c8]
platform = ststm32
board = disco_l053c8

upload_protocol = stlink

----------------------------------------

TITLE: Configuring S.ODI Ultra v1 Board in PlatformIO
DESCRIPTION: Basic configuration for the S.ODI Ultra v1 board in the project's platformio.ini file. Sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:s_odi_ultra]
platform = espressif32
board = s_odi_ultra

----------------------------------------

TITLE: Customizing Controllino Maxi Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Controllino Maxi board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:controllino_maxi]
platform = atmelavr
board = controllino_maxi

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Adafruit Feather nRF52840 Express Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52840]
platform = nordicnrf52
board = adafruit_feather_nrf52840

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for MAX32630FTHR
DESCRIPTION: Basic configuration example for setting up a PlatformIO project with the MAX32630FTHR board using the maxim32 platform.

LANGUAGE: ini
CODE:
[env:max32630fthr]
platform = maxim32
board = max32630fthr

----------------------------------------

TITLE: Setting Upload Protocol for TTGO T1 in PlatformIO
DESCRIPTION: PlatformIO configuration snippet showing how to specify the upload protocol for the TTGO T1 board. In this example, the default 'esptool' protocol is explicitly set.

LANGUAGE: ini
CODE:
[env:ttgo-t1]
platform = espressif32
board = ttgo-t1

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO Project for Generic STC15W4K16S4
DESCRIPTION: Basic PlatformIO project configuration for the Generic STC15W4K16S4 board using the Intel MCS-51 platform. This snippet sets up the environment with the correct board ID.

LANGUAGE: ini
CODE:
[env:STC15W4K16S4]
platform = intel_mcs51
board = STC15W4K16S4

----------------------------------------

TITLE: Configuring Basic Deneyap Mini v2 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a Deneyap Mini v2 board project using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:deneyapminiv2]
platform = espressif32
board = deneyapminiv2

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32_V3]
platform = espressif32
board = heltec_wifi_lora_32_V3

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the ATSAMR21-XPRO board.

LANGUAGE: ini
CODE:
[env:samr21_xpro]
platform = atmelsam
board = samr21_xpro

; change microcontroller
board_build.mcu = samr21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:freenove_esp32_wrover]
platform = espressif32
board = freenove_esp32_wrover

upload_protocol = esptool

----------------------------------------

TITLE: Customizing STM32F103VD Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VD]
platform = ststm32
board = genericSTM32F103VD

; change microcontroller
board_build.mcu = stm32f103vdt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing INEX OpenKB Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the INEX OpenKB board in a PlatformIO project. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:inex_openkb]
platform = espressif32
board = inex_openkb

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO for ST STM32F0DISCOVERY
DESCRIPTION: Basic PlatformIO configuration for the ST STM32F0DISCOVERY board. Specifies the platform and board ID to use.

LANGUAGE: ini
CODE:
[env:disco_f051r8]
platform = ststm32
board = disco_f051r8

----------------------------------------

TITLE: Setting Upload Protocol for STM32F072-EVAL
DESCRIPTION: Configuration to change the upload protocol for the STM32F072-EVAL board, with ST-Link as an example.

LANGUAGE: ini
CODE:
[env:eval_f072vb]
platform = ststm32
board = eval_f072vb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in platformio.ini file.

LANGUAGE: ini
CODE:
[env:adafruit_qualia_s3_rgb666]
platform = espressif32
board = adafruit_qualia_s3_rgb666

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing ESP32 Board Parameters
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:az-delivery-devkit-v4]
platform = espressif32
board = az-delivery-devkit-v4

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F415RG
DESCRIPTION: Configuration to specify the upload protocol for the STM32F415RG board. In this example, it's set to 'serial'.

LANGUAGE: ini
CODE:
[env:genericSTM32F415RG]
platform = ststm32
board = genericSTM32F415RG

upload_protocol = serial

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for AVR-IoT WG Development Board using the atmelmegaavr platform in platformio.ini file.

LANGUAGE: ini
CODE:
[env:avr_iot_wg]
platform = atmelmegaavr
board = avr_iot_wg

----------------------------------------

TITLE: Configuring PlatformIO for ATtiny826 Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the ATtiny826 board. It sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:ATtiny826]
platform = atmelmegaavr
board = ATtiny826

----------------------------------------

TITLE: Customizing Teensy 3.0 Board Settings
DESCRIPTION: This snippet demonstrates how to override default Teensy 3.0 settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:teensy30]
platform = teensy
board = teensy30

; change microcontroller
board_build.mcu = mk20dx128

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic Board Configuration for STM32 Platform
DESCRIPTION: Basic configuration setup for N2+ board using the STM32 platform in PlatformIO.

LANGUAGE: ini
CODE:
[env:netduino2plus]
platform = ststm32
board = netduino2plus

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo L486RG
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the ST Nucleo L486RG board in a PlatformIO project configuration. The default protocol is 'stlink', but it can be changed as shown.

LANGUAGE: ini
CODE:
[env:nucleo_l486rg]
platform = ststm32
board = nucleo_l486rg

upload_protocol = stlink

----------------------------------------

TITLE: Customizing LilyGo T3-S3 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings for the LilyGo T3-S3, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lilygo-t3-s3]
platform = espressif32
board = lilygo-t3-s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic AVR32DB28 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for AVR32DB28 board in platformio.ini file, specifying the platform and board.

LANGUAGE: ini
CODE:
[env:AVR32DB28]
platform = atmelmegaavr
board = AVR32DB28

----------------------------------------

TITLE: Configuring OROCA EduBot Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the OROCA EduBot board in the PlatformIO project configuration file. It sets the platform to espressif32 and the board to oroca_edubot.

LANGUAGE: ini
CODE:
[env:oroca_edubot]
platform = espressif32
board = oroca_edubot

----------------------------------------

TITLE: Configuring Espressif ESP32 Dev Module in PlatformIO
DESCRIPTION: This code snippet shows how to configure the Espressif ESP32 Dev Module board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:esp32dev]
platform = espressif32
board = esp32dev

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for 96Boards Nitrogen
DESCRIPTION: Basic environment configuration for 96Boards Nitrogen board using the Nordic nRF52 platform.

LANGUAGE: ini
CODE:
[env:96b_nitrogen]
platform = nordicnrf52
board = 96b_nitrogen

----------------------------------------

TITLE: Customizing Makerdiary nRF52840-MDK Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nrf52840_mdk]
platform = nordicnrf52
board = nrf52840_mdk

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing STM32F446RC Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F446RC]
platform = ststm32
board = genericSTM32F446RC

; change microcontroller
board_build.mcu = stm32f446rct6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Upload Protocol Configuration for MotorGo Mini 1
DESCRIPTION: Example configuration showing how to specify the upload protocol for the MotorGo Mini 1 board.

LANGUAGE: ini
CODE:
[env:motorgo_mini_1]
platform = espressif32
board = motorgo_mini_1

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Generic IAP15W205S Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic IAP15W205S board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:IAP15W205S]
platform = intel_mcs51
board = IAP15W205S

; change microcontroller
board_build.mcu = iap15w205s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic AVR64DD20 Board Settings
DESCRIPTION: Basic PlatformIO configuration for AVR64DD20 board setup, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:AVR64DD20]
platform = atmelmegaavr
board = AVR64DD20

----------------------------------------

TITLE: Setting Upload Protocol for M5Stack-ATOM in PlatformIO
DESCRIPTION: Configuration snippet showing how to specify the upload protocol for the M5Stack-ATOM board. In this case, it's set to use the 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:m5stack-atom]
platform = espressif32
board = m5stack-atom

upload_protocol = esptool

----------------------------------------

TITLE: Configuring ST 32F401CDISCOVERY Board in PlatformIO
DESCRIPTION: Basic configuration for the ST 32F401CDISCOVERY board in the project's platformio.ini file. It sets the platform and board name.

LANGUAGE: ini
CODE:
[env:disco_f401vc]
platform = ststm32
board = disco_f401vc

----------------------------------------

TITLE: Configuring ESP32-C6-DevKitC-1 Board in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the Espressif ESP32-C6-DevKitC-1 board in a PlatformIO project's configuration file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:esp32-c6-devkitc-1]
platform = espressif32
board = esp32-c6-devkitc-1

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for TTGO T7 V1.4 Mini32 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:ttgo-t7-v14-mini32]
platform = espressif32
board = ttgo-t7-v14-mini32

----------------------------------------

TITLE: Customizing Feather 328P MCU and Clock Settings
DESCRIPTION: Example showing how to override default board settings including the microcontroller type and CPU frequency. Demonstrates the use of board_build options for customization.

LANGUAGE: ini
CODE:
[env:feather328p]
platform = atmelavr
board = feather328p

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic STM32F401CC Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F401CC board initialization. Sets the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F401CC]
platform = ststm32
board = genericSTM32F401CC

----------------------------------------

TITLE: Configuring Basic STM32373C-EVAL Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32373C-EVAL board using the STM32 platform

LANGUAGE: ini
CODE:
[env:eval_f373vc]
platform = ststm32
board = eval_f373vc

----------------------------------------

TITLE: Configuring Basic USBasp Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for USBasp board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:usbasp]
platform = atmelavr
board = usbasp

----------------------------------------

TITLE: Configuring Teensy LC Board in PlatformIO INI File
DESCRIPTION: Sets up the basic configuration for a Teensy LC board project in the platformio.ini file. Specifies the platform as 'teensy' and the board as 'teensylc'.

LANGUAGE: ini
CODE:
[env:teensylc]
platform = teensy
board = teensylc

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:digix]
platform = atmelsam
board = digix

; change microcontroller
board_build.mcu = at91sam3x8e

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Basic STM32F407VG Board Configuration
DESCRIPTION: Basic PlatformIO configuration for the Black STM32F407VG board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:black_f407vg]
platform = ststm32
board = black_f407vg

----------------------------------------

TITLE: Customizing Lion:Bit MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the Lion:Bit board.

LANGUAGE: ini
CODE:
[env:lionbit]
platform = espressif32
board = lionbit

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: ESP32-CAM Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ESP32-CAM board

LANGUAGE: ini
CODE:
[env:esp32cam]
platform = espressif32
board = esp32cam

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Arduino Giga R1 (M4 core) Board in PlatformIO
DESCRIPTION: Basic configuration for the Arduino Giga R1 (M4 core) board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:giga_r1_m4]
platform = ststm32
board = giga_r1_m4

----------------------------------------

TITLE: Setting Upload Protocol for ALKS ESP32
DESCRIPTION: Example of specifying an upload protocol for the ALKS ESP32 board. In this case, using the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:alksesp32]
platform = espressif32
board = alksesp32

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32s2]
platform = espressif32
board = adafruit_qtpy_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced ESP32 Board Configuration
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like MCU and CPU frequency.

LANGUAGE: ini
CODE:
[env:wifiduino32]
platform = espressif32
board = wifiduino32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103VD
DESCRIPTION: Configuration to change the upload protocol for the STM32F103VD board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VD]
platform = ststm32
board = genericSTM32F103VD

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Edgebox-ESP-100 board.

LANGUAGE: ini
CODE:
[env:edgebox-esp-100]
platform = espressif32
board = edgebox-esp-100

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Minimal configuration required to use the wESP32 board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:wesp32]
platform = espressif32
board = wesp32

----------------------------------------

TITLE: Setting Upload Protocol for ESPectro32
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the ESPectro32 board in a PlatformIO project configuration file. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:espectro32]
platform = espressif32
board = espectro32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring STEVAL-FCU001V1 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STEVAL-FCU001V1 board using the STM32 platform. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:steval_fcu001v1]
platform = ststm32
board = steval_fcu001v1

; change microcontroller
board_build.mcu = stm32f401ccu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Customizing STC15W408AS Board Parameters
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15W408AS]
platform = intel_mcs51
board = STC15W408AS

; change microcontroller
board_build.mcu = stc15w408as

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic Board Settings for ST Nucleo F413ZH
DESCRIPTION: Basic configuration setup for ST Nucleo F413ZH board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:nucleo_f413zh]
platform = ststm32
board = nucleo_f413zh

----------------------------------------

TITLE: Configuring Franzininho WiFi Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Franzininho WiFi Board in a PlatformIO project's configuration file. It sets the platform, board, and allows for overriding default settings.

LANGUAGE: ini
CODE:
[env:esp32-s2-franzininho]
platform = espressif32
board = esp32-s2-franzininho

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Options
DESCRIPTION: Extended configuration for N2+ board with custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:netduino2plus]
platform = ststm32
board = netduino2plus

; change microcontroller
board_build.mcu = stm32f405rgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing Board Settings - INI
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:aventen_s3_sync]
platform = espressif32
board = aventen_s3_sync

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing NANO 33 IoT Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nano_33_iot]
platform = atmelsam
board = nano_33_iot

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-C6-DevKitM-1
DESCRIPTION: Configuration for specifying the upload protocol in PlatformIO. Uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:esp32-c6-devkitm-1]
platform = espressif32
board = esp32-c6-devkitm-1

upload_protocol = esptool

----------------------------------------

TITLE: Basic STC15F104E Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up an STC15F104E board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC15F104E]
platform = intel_mcs51
board = STC15F104E

----------------------------------------

TITLE: Configuring ATmega645P Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the ATmega645P board. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATmega645P]
platform = atmelavr
board = ATmega645P

; change microcontroller
board_build.mcu = atmega645p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing EFM32WG-STK3800 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:efm32wg_stk3800]
platform = siliconlabsefm32
board = efm32wg_stk3800

; change microcontroller
board_build.mcu = efm32wg990f256

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103RG
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:genericSTM32F103RG]
platform = ststm32
board = genericSTM32F103RG

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun Qwiic Micro SAMD21E
DESCRIPTION: Configuration to specify the upload protocol for the SparkFun Qwiic Micro board. Sets the protocol to sam-ba.

LANGUAGE: ini
CODE:
[env:sparkfun_qwiic_micro_samd21e]
platform = atmelsam
board = sparkfun_qwiic_micro_samd21e

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Basic SensorTile.box Board Settings
DESCRIPTION: Basic configuration for setting up a PlatformIO project with the SensorTile.box board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:steval_mksboxv1]
platform = ststm32
board = steval_mksboxv1

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to set the upload protocol for the N2+ board.

LANGUAGE: ini
CODE:
[env:netduino2plus]
platform = ststm32
board = netduino2plus

upload_protocol = dfu

----------------------------------------

TITLE: Customizing IoTaaP Magnolia Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. This snippet demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:iotaap_magnolia]
platform = espressif32
board = iotaap_magnolia

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for S.ODI Ultra v1
DESCRIPTION: Configuration to change the upload protocol for the S.ODI Ultra v1 board. In this example, it's set to use the esptool protocol.

LANGUAGE: ini
CODE:
[env:s_odi_ultra]
platform = espressif32
board = s_odi_ultra

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the BlackPill F103C8 board, specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:blackpill_f103c8_128]
platform = ststm32
board = blackpill_f103c8_128

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52832]
platform = nordicnrf52
board = adafruit_feather_nrf52832

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Base configuration for using the 96Boards Neonkey board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:b96b_aerocore2]
platform = ststm32
board = b96b_aerocore2

----------------------------------------

TITLE: Configuring SparkFun ESP32 Thing Board in PlatformIO
DESCRIPTION: Basic configuration for using the SparkFun ESP32 Thing board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:esp32thing]
platform = espressif32
board = esp32thing

----------------------------------------

TITLE: Setting Upload Protocol for Franzininho WiFi Board
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Franzininho WiFi Board in a PlatformIO project configuration. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:esp32-s2-franzininho]
platform = espressif32
board = esp32-s2-franzininho

upload_protocol = esptool

----------------------------------------

TITLE: Configuring oddWires IoT-Bus Proteus Board in PlatformIO
DESCRIPTION: Basic configuration for the oddWires IoT-Bus Proteus board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:iotbusproteus]
platform = espressif32
board = iotbusproteus

----------------------------------------

TITLE: Basic PlatformIO Configuration for ST Nucleo L433RC-P
DESCRIPTION: Base configuration to set up a PlatformIO project for the ST Nucleo L433RC-P board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_l433rc_p]
platform = ststm32
board = nucleo_l433rc_p

----------------------------------------

TITLE: Customizing LightUp Board Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the LightUp board in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:lightup]
platform = atmelavr
board = lightup

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing Seeeduino Zero Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:seeed_zero]
platform = atmelsam
board = seeed_zero

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for LilyGo T3-S3 in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the LilyGo T3-S3 board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:lilygo-t3-s3]
platform = espressif32
board = lilygo-t3-s3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Malyan M200 V1 Board Settings
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency, in a PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:malyanm200_f103cb]
platform = ststm32
board = malyanm200_f103cb

; change microcontroller
board_build.mcu = stm32f103cbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO for Deneyap Mini
DESCRIPTION: Basic PlatformIO configuration for the Deneyap Mini board using the espressif32 platform. This snippet sets up the board and platform in the project's configuration file.

LANGUAGE: ini
CODE:
[env:deneyapmini]
platform = espressif32
board = deneyapmini

----------------------------------------

TITLE: Customizing 32F412GDISCOVERY Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f412zg]
platform = ststm32
board = disco_f412zg

; change microcontroller
board_build.mcu = stm32f412zgt6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for STorM32 BGC v1.31 RC
DESCRIPTION: Basic PlatformIO configuration for the STorM32 BGC v1.31 RC board. Sets the platform to ststm32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:storm32_v1_31_rc]
platform = ststm32
board = storm32_v1_31_rc

----------------------------------------

TITLE: Customizing Seeeduino Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Seeeduino settings in the PlatformIO project configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:seeeduino]
platform = atmelavr
board = seeeduino

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Deneyap Kart G
DESCRIPTION: Configuration to specify the upload protocol for the Deneyap Kart G board in PlatformIO.

LANGUAGE: ini
CODE:
[env:deneyapkartg]
platform = espressif32
board = deneyapkartg

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Nano ESP32
DESCRIPTION: Shows how to specify a custom upload protocol for the Arduino Nano ESP32 board in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:arduino_nano_esp32]
platform = espressif32
board = arduino_nano_esp32

upload_protocol = dfu

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103R8
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the STM32F103R8 board in a PlatformIO project configuration. The default protocol is 'stlink', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:genericSTM32F103R8]
platform = ststm32
board = genericSTM32F103R8

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic STM32F407ZG Board Settings
DESCRIPTION: Basic PlatformIO configuration for Black STM32F407ZG board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:black_f407zg]
platform = ststm32
board = black_f407zg

----------------------------------------

TITLE: Customizing ATmega329 Board Settings in PlatformIO INI File
DESCRIPTION: This example demonstrates how to override default ATmega329 settings in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATmega329]
platform = atmelavr
board = ATmega329

; change microcontroller
board_build.mcu = atmega329

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Arty A7-100 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:artix7_100t]
platform = shakti
board = artix7_100t

; change microcontroller
board_build.mcu = C-Class

; change MCU frequency
board_build.f_cpu = 50000000L

----------------------------------------

TITLE: Setting Upload Protocol for Aceinna OpenRTK330L
DESCRIPTION: Configuration to change the upload protocol for the Aceinna OpenRTK330L board. This example sets it to 'stlink'.

LANGUAGE: ini
CODE:
[env:OpenRTK330L]
platform = aceinna_imu
board = OpenRTK330L

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic ATtiny87 Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure a PlatformIO project to use the Generic ATtiny87 board. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:attiny87]
platform = atmelavr
board = attiny87

----------------------------------------

TITLE: Configuring Maple Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Maple board in a PlatformIO project's ini file. It includes the basic setup and options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:maple]
platform = ststm32
board = maple

; change microcontroller
board_build.mcu = stm32f103rbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing SparkFun Digital Sandbox Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_digitalsandbox]
platform = atmelavr
board = sparkfun_digitalsandbox

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic STM32F413RG Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F413RG board setup with the STM32 platform

LANGUAGE: ini
CODE:
[env:genericSTM32F413RG]
platform = ststm32
board = genericSTM32F413RG

----------------------------------------

TITLE: Setting Upload Protocol for Namino Arancio
DESCRIPTION: Configuration to specify the upload protocol for the Namino Arancio board. This example uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:namino_arancio]
platform = espressif32
board = namino_arancio

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ATmega48PB Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:ATmega48PB]
platform = atmelavr
board = ATmega48PB

; change microcontroller
board_build.mcu = atmega48pb

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for using the Pycom GPy board with the espressif32 platform in PlatformIO projects.

LANGUAGE: ini
CODE:
[env:pycom_gpy]
platform = espressif32
board = pycom_gpy

----------------------------------------

TITLE: Setting Upload Protocol for Teensy 4.1
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Teensy 4.1 board in a PlatformIO project configuration. It uses the 'teensy-gui' protocol, which is the default option.

LANGUAGE: ini
CODE:
[env:teensy41]
platform = teensy
board = teensy41

upload_protocol = teensy-gui

----------------------------------------

TITLE: Configuring Basic ATmega6450 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATmega6450 board setup using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ATmega6450]
platform = atmelavr
board = ATmega6450

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Circuit Playground Bluefruit board in platformio.ini. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_cplaynrf52840]
platform = nordicnrf52
board = adafruit_cplaynrf52840

----------------------------------------

TITLE: Customizing Arduino Nano MCU Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the Arduino Nano board.

LANGUAGE: ini
CODE:
[env:nanoatmega328]
platform = atmelavr
board = nanoatmega328

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for ODROID-GO
DESCRIPTION: Minimal configuration required to use ODROID-GO board with PlatformIO ecosystem.

LANGUAGE: ini
CODE:
[env:odroid_esp32]
platform = espressif32
board = odroid_esp32

----------------------------------------

TITLE: Customizing Generic STC8H4K48TLCD Configuration in PlatformIO
DESCRIPTION: Example of customizing the Generic STC8H4K48TLCD configuration in PlatformIO. This snippet demonstrates how to change the microcontroller and MCU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:STC8H4K48TLCD]
platform = intel_mcs51
board = STC8H4K48TLCD

; change microcontroller
board_build.mcu = stc8h4k48tlcd

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring ST Nucleo WL55JC Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo WL55JC board using the STM32 platform. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:nucleo_wl55jc]
platform = ststm32
board = nucleo_wl55jc

; change microcontroller
board_build.mcu = stm32wl55jc

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for HealthyPi 4
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the HealthyPi 4 board.

LANGUAGE: ini
CODE:
[env:healthypi4]
platform = espressif32
board = healthypi4

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic nRF52840 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Nordic nRF52840-DK board using the nordicnrf52 platform.

LANGUAGE: ini
CODE:
[env:nrf52840_dk_adafruit]
platform = nordicnrf52
board = nrf52840_dk_adafruit

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-S3 PowerFeather
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the ESP32-S3 PowerFeather board in PlatformIO. The default protocol is 'esptool', but it can be changed using the 'upload_protocol' option.

LANGUAGE: ini
CODE:
[env:esp32s3_powerfeather]
platform = espressif32
board = esp32s3_powerfeather

upload_protocol = esptool

----------------------------------------

TITLE: ESP-210 Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration showing how to set the upload protocol for the ESP-210 board. Supports 'espota' and 'esptool' protocols.

LANGUAGE: ini
CODE:
[env:esp210]
platform = espressif8266
board = esp210

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for oddWires IoT-Bus Proteus
DESCRIPTION: Configuration to specify the upload protocol for the oddWires IoT-Bus Proteus board in the platformio.ini file. Default protocol is esptool.

LANGUAGE: ini
CODE:
[env:iotbusproteus]
platform = espressif32
board = iotbusproteus

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO Environment for Sigma IC AGAFIA SG0
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Sigma IC AGAFIA SG0 board. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:agafia_sg0]
platform = ststm32
board = agafia_sg0

; change microcontroller
board_build.mcu = stm32g071rbt6

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring ESP32-C6-DevKitM-1 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ESP32-C6-DevKitM-1 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:esp32-c6-devkitm-1]
platform = espressif32
board = esp32-c6-devkitm-1

----------------------------------------

TITLE: Custom MCU Configuration for Arduino BT ATmega168
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency in platformio.ini file.

LANGUAGE: ini
CODE:
[env:btatmega168]
platform = atmelavr
board = btatmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for PrntrBoard V2 in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for PrntrBoard V2. This snippet sets the upload protocol to 'stlink', which is the default for this board.

LANGUAGE: ini
CODE:
[env:prntr_v2]
platform = ststm32
board = prntr_v2

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:mkrvidor4000]
platform = atmelsam
board = mkrvidor4000

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Basic STM32F103ZC Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STM32F103ZC board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZC]
platform = ststm32
board = genericSTM32F103ZC

----------------------------------------

TITLE: Setting Upload Protocol for Valetron Systems VALTRACK-V4VTS
DESCRIPTION: Configuration to specify the upload protocol for the Valetron Systems VALTRACK-V4VTS board. Uses the esptool protocol as an example.

LANGUAGE: ini
CODE:
[env:valtrack_v4_vts_esp32_c3]
platform = espressif32
board = valtrack_v4_vts_esp32_c3

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for M5Stack FIRE
DESCRIPTION: Configuration to specify the upload protocol for the M5Stack FIRE board. This example sets it to 'esptool', which is the default protocol.

LANGUAGE: ini
CODE:
[env:m5stack-fire]
platform = espressif32
board = m5stack-fire

upload_protocol = esptool

----------------------------------------

TITLE: Advanced STM32 Board Configuration
DESCRIPTION: Configuration with custom microcontroller and frequency settings for MultiTech mDot board

LANGUAGE: ini
CODE:
[env:mts_mdot_f405rg]
platform = ststm32
board = mts_mdot_f405rg

; change microcontroller
board_build.mcu = stm32f411ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing ESP32-S2 Board Parameters
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:minimain_esp32s2]
platform = espressif32
board = minimain_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing OLIMEX ESP32-PoE-ISO Board Settings
DESCRIPTION: Example of overriding default board settings for the OLIMEX ESP32-PoE-ISO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-poe-iso]
platform = espressif32
board = esp32-poe-iso

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Upload Protocol Settings
DESCRIPTION: Configuration example for setting the upload protocol for the Edgebox-ESP-100 board.

LANGUAGE: ini
CODE:
[env:edgebox-esp-100]
platform = espressif32
board = edgebox-esp-100

upload_protocol = esptool

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:genericSTM32F373RC]
platform = ststm32
board = genericSTM32F373RC

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Adafruit Gemma M0 in PlatformIO INI file
DESCRIPTION: Basic configuration for the Adafruit Gemma M0 board in the PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_gemma_m0]
platform = atmelsam
board = adafruit_gemma_m0

----------------------------------------

TITLE: Configuring ESP8266 ESP-01 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Espressif Generic ESP8266 ESP-01 512k board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:esp01]
platform = espressif8266
board = esp01

----------------------------------------

TITLE: Customizing IoT-Bus Io Board Parameters
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:iotbusio]
platform = espressif32
board = iotbusio

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for ATD1.47-S3

LANGUAGE: ini
CODE:
[env:atd147_s3]
platform = espressif32
board = atd147_s3

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for nRF51 DK
DESCRIPTION: Configuration example showing how to specify the upload protocol for the nRF51 DK board using JLink.

LANGUAGE: ini
CODE:
[env:nrf51_dk]
platform = nordicnrf51
board = nrf51_dk

upload_protocol = jlink

----------------------------------------

TITLE: Setting Upload Protocol for Widora AIR in PlatformIO
DESCRIPTION: Configuration snippet demonstrating how to specify the upload protocol for the Widora AIR board in PlatformIO. This example sets the upload protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:widora-air]
platform = espressif32
board = widora-air

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic STM32F401RC Board Environment
DESCRIPTION: Basic PlatformIO configuration for STM32F401RC board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RC]
platform = ststm32
board = genericSTM32F401RC

----------------------------------------

TITLE: Basic PlatformIO Configuration for Imbrios LogSens V1P1
DESCRIPTION: Basic configuration in platformio.ini for setting up an Imbrios LogSens V1P1 project using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:imbrios-logsens-v1p1]
platform = espressif32
board = imbrios-logsens-v1p1

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example showing how to configure the upload protocol for the MultiTech mDot board

LANGUAGE: ini
CODE:
[env:mts_mdot_f405rg]
platform = ststm32
board = mts_mdot_f405rg

upload_protocol = mbed

----------------------------------------

TITLE: Customizing ALKS ESP32 Board Settings
DESCRIPTION: Examples of overriding default board settings, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:alksesp32]
platform = espressif32
board = alksesp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:xinabox_cw01]
platform = espressif8266
board = xinabox_cw01

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing Arduino Zero (USB Native Port) Build Settings
DESCRIPTION: Example of overriding default board settings, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:zeroUSB]
platform = atmelsam
board = zeroUSB

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-C6-DevKitC-1
DESCRIPTION: This snippet demonstrates how to specify the upload protocol for the Espressif ESP32-C6-DevKitC-1 board in PlatformIO. It sets the upload protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:esp32-c6-devkitc-1]
platform = espressif32
board = esp32-c6-devkitc-1

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Alorium XLR8 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the Alorium XLR8 board in a PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:alorium_xlr8]
platform = atmelavr
board = alorium_xlr8

----------------------------------------

TITLE: Configuring Basic STM32F410R8 Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F410R8 board setup using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F410R8]
platform = ststm32
board = genericSTM32F410R8

----------------------------------------

TITLE: Setting Upload Protocol for Laird Pinnacle 100 DVK
DESCRIPTION: Configuration to specify the upload protocol for the Laird Connectivity Pinnacle 100 DVK board, with J-Link as an example.

LANGUAGE: ini
CODE:
[env:laird_pinnacle_100_dvk]
platform = nordicnrf52
board = laird_pinnacle_100_dvk

upload_protocol = jlink

----------------------------------------

TITLE: Configuring Basic STM32H735G-DK Board Settings
DESCRIPTION: Basic INI configuration for setting up the STM32H735G-DK Discovery board in PlatformIO. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_h735ig]
platform = ststm32
board = disco_h735ig

----------------------------------------

TITLE: Configuring ST 32F746GDISCOVERY Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST 32F746GDISCOVERY board using the STM32 platform. Includes options to customize the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f746ng]
platform = ststm32
board = disco_f746ng

; change microcontroller
board_build.mcu = stm32f746ngh6

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Customizing Phoenix 1.0 MCU and Frequency Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the Phoenix 1.0 board.

LANGUAGE: ini
CODE:
[env:phoenix_v1]
platform = espressif8266
board = phoenix_v1

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for VCCGND F103ZET6
DESCRIPTION: Configuration example for setting the upload protocol to ST-Link, which is the default upload method for this board.

LANGUAGE: ini
CODE:
[env:vccgnd_f103zet6]
platform = ststm32
board = vccgnd_f103zet6

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic SODAQ Ndogo Board Settings
DESCRIPTION: Basic PlatformIO configuration for the SODAQ Ndogo board using the atmelavr platform. Defines the board type and platform.

LANGUAGE: ini
CODE:
[env:sodaq_ndogo]
platform = atmelavr
board = sodaq_ndogo

----------------------------------------

TITLE: Configuring MGBOT IOTIK 32A Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the MGBOT IOTIK 32A board in a PlatformIO project's configuration file. It sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:mgbot-iotik32a]
platform = espressif32
board = mgbot-iotik32a

----------------------------------------

TITLE: Configuring Basic ATtiny85 Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATtiny85 project environment in platformio.ini. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:attiny85]
platform = atmelavr
board = attiny85

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration with custom microcontroller and frequency settings for the Holyiot YJ-16019 board.

LANGUAGE: ini
CODE:
[env:holyiot_yj16019]
platform = nordicnrf52
board = holyiot_yj16019

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic ML51LD1AE Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic ML51LD1AE board in the PlatformIO configuration file (platformio.ini). It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:ML51LD1AE]
platform = intel_mcs51
board = ML51LD1AE

----------------------------------------

TITLE: Customizing Heltec WiFi Kit 32 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32]
platform = espressif32
board = heltec_wifi_kit_32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring DigiStump Oak Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the DigiStump Oak board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:oak]
platform = espressif8266
board = oak

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic STC15F2K24AS Environment
DESCRIPTION: Basic PlatformIO configuration for the STC15F2K24AS board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15F2K24AS]
platform = intel_mcs51
board = STC15F2K24AS

----------------------------------------

TITLE: Customizing ATtiny1607 MCU and Frequency Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the ATtiny1607 board.

LANGUAGE: ini
CODE:
[env:ATtiny1607]
platform = atmelmegaavr
board = ATtiny1607

; change microcontroller
board_build.mcu = attiny1607

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing ATmega324PB MCU Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the ATmega324PB board.

LANGUAGE: ini
CODE:
[env:ATmega324PB]
platform = atmelavr
board = ATmega324PB

; change microcontroller
board_build.mcu = atmega324pb

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Seeed Tiny BLE MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:seeedTinyBLE]
platform = nordicnrf51
board = seeedTinyBLE

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic ESPino Board Settings
DESCRIPTION: Basic PlatformIO configuration for the ThaiEasyElec ESPino board using the espressif8266 platform

LANGUAGE: ini
CODE:
[env:espinotee]
platform = espressif8266
board = espinotee

----------------------------------------

TITLE: Upload Protocol Configuration for Olimexino STM32F3
DESCRIPTION: Example showing how to configure the upload protocol for the Olimexino STM32F3 board using the stlink protocol.

LANGUAGE: ini
CODE:
[env:olimexino_stm32f3]
platform = ststm32
board = olimexino_stm32f3

upload_protocol = stlink

----------------------------------------

TITLE: Customizing SG-O AirMon Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency, in a PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:sg-o_airMon]
platform = espressif32
board = sg-o_airMon

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring BlackPill F401CE Board in PlatformIO
DESCRIPTION: Basic configuration for using the WeAct Studio BlackPill V3.0 (STM32F401CE) board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:blackpill_f401ce]
platform = ststm32
board = blackpill_f401ce

----------------------------------------

TITLE: Configuring Adafruit Pro Trinket 5V/16MHz (FTDI) in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Pro Trinket 5V/16MHz (FTDI) board in the project's configuration file. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:protrinket5ftdi]
platform = atmelavr
board = protrinket5ftdi

----------------------------------------

TITLE: Configuring Sino:Bit Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Sino:Bit board in the PlatformIO project configuration file. It sets the platform to nordicnrf51 and the board to Sinobit.

LANGUAGE: ini
CODE:
[env:Sinobit]
platform = nordicnrf51
board = Sinobit

----------------------------------------

TITLE: Customizing STM8S003F3 MCU Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:stm8s003f3]
platform = ststm8
board = stm8s003f3

; change microcontroller
board_build.mcu = stm8s003f3p6

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for DFRobot Beetle ESP32-C3
DESCRIPTION: Configuring the upload protocol in platformio.ini. The example shows how to set it to the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:dfrobot_beetle_esp32c3]
platform = espressif32
board = dfrobot_beetle_esp32c3

upload_protocol = esptool

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Raytac MDBT50Q-RX board

LANGUAGE: ini
CODE:
[env:raytac_mdbt50q_rx]
platform = nordicnrf52
board = raytac_mdbt50q_rx

upload_protocol = nrfutil

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo L011K4
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo L011K4 board, with stlink as the default option.

LANGUAGE: ini
CODE:
[env:nucleo_l011k4]
platform = ststm32
board = nucleo_l011k4

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Arduboy DevKit MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Arduboy DevKit board.

LANGUAGE: ini
CODE:
[env:arduboy_devkit]
platform = atmelavr
board = arduboy_devkit

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring STM32F412RE Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STM32F412RE board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:genericSTM32F412RE]
platform = ststm32
board = genericSTM32F412RE

----------------------------------------

TITLE: Customizing Arduino Giga R1 (M7 core) Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. Shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:giga_r1_m7]
platform = ststm32
board = giga_r1_m7

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring ATmega644P Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega644P board in the PlatformIO project configuration file. It sets the platform to atmelavr and specifies the board as ATmega644P.

LANGUAGE: ini
CODE:
[env:ATmega644P]
platform = atmelavr
board = ATmega644P

----------------------------------------

TITLE: Basic DevEBox H750VBTX Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up a DevEBox H750VBTX board project using the STM32 platform.

LANGUAGE: ini
CODE:
[env:devebox_h750vbtx]
platform = ststm32
board = devebox_h750vbtx

----------------------------------------

TITLE: Setting Upload Protocol for Electrosmith Daisy
DESCRIPTION: Configuration to change the upload protocol for the Electrosmith Daisy board. This example sets the protocol to ST-Link.

LANGUAGE: ini
CODE:
[env:electrosmith_daisy]
platform = ststm32
board = electrosmith_daisy

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Adafruit QT Py ESP32-S3 No PSRAM Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32s3_nopsram]
platform = espressif32
board = adafruit_qtpy_esp32s3_nopsram

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for M5Stack Station
DESCRIPTION: This snippet shows how to set up a basic PlatformIO environment for the M5Stack Station board using the Espressif32 platform.

LANGUAGE: ini
CODE:
[env:m5stack-station]
platform = espressif32
board = m5stack-station

----------------------------------------

TITLE: Basic Altair Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up an Altair board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:altair]
platform = atmelavr
board = altair

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO project with RoboHeart Hercules board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:roboheart_hercules]
platform = espressif32
board = roboheart_hercules

----------------------------------------

TITLE: Customizing Teensy 3.1 / 3.2 Board Settings in PlatformIO INI File
DESCRIPTION: Advanced configuration demonstrating how to override default board settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:teensy31]
platform = teensy
board = teensy31

; change microcontroller
board_build.mcu = mk20dx256

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring TTGO LoRa32-OLED v2.1.6 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the TTGO LoRa32-OLED v2.1.6 board using the ESP32 platform. Includes options for setting the board ID and platform.

LANGUAGE: ini
CODE:
[env:ttgo-lora32-v21]
platform = espressif32
board = ttgo-lora32-v21

----------------------------------------

TITLE: Setting Upload Protocol for RedBearLab nRF51822
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the RedBearLab nRF51822 board in the PlatformIO configuration. It shows setting the upload protocol to cmsis-dap, which is the default for this board.

LANGUAGE: ini
CODE:
[env:redBearLab]
platform = nordicnrf51
board = redBearLab

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Customizing Arduino Zero MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:zero]
platform = atmelsam
board = zero

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring TAMC Termod S3 Board in PlatformIO
DESCRIPTION: Basic configuration for the TAMC Termod S3 board in the PlatformIO project configuration file. It sets the platform to espressif32 and specifies the board.

LANGUAGE: ini
CODE:
[env:tamc_termod_s3]
platform = espressif32
board = tamc_termod_s3

----------------------------------------

TITLE: Setting Upload Protocol for STM32F303CB
DESCRIPTION: Shows how to specify the upload protocol for the STM32F303CB board. In this example, it's set to 'stlink', which is the default protocol.

LANGUAGE: ini
CODE:
[env:genericSTM32F303CB]
platform = ststm32
board = genericSTM32F303CB

upload_protocol = stlink

----------------------------------------

TITLE: Configuring STM32F103VF Board in PlatformIO
DESCRIPTION: Sets up the basic configuration for using the STM32F103VF board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VF]
platform = ststm32
board = genericSTM32F103VF

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Sonoff Basic board.

LANGUAGE: ini
CODE:
[env:sonoff_basic]\nplatform = espressif8266\nboard = sonoff_basic\n\nupload_protocol = esptool

----------------------------------------

TITLE: Configuring Upload Protocol for Unexpected Maker NanoS3
DESCRIPTION: Example configuration for specifying the upload protocol used to program the board. Default protocol is esptool.

LANGUAGE: ini
CODE:
[env:um_nanos3]
platform = espressif32
board = um_nanos3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring INEX OpenKB Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the INEX OpenKB board in a PlatformIO project's platformio.ini file. It sets the platform to espressif32 and specifies the board as inex_openkb.

LANGUAGE: ini
CODE:
[env:inex_openkb]
platform = espressif32
board = inex_openkb

----------------------------------------

TITLE: Setting Upload Protocol for DigiStump Oak in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the DigiStump Oak board in the PlatformIO project configuration file. It uses the 'esptool' protocol as an example.

LANGUAGE: ini
CODE:
[env:oak]
platform = espressif8266
board = oak

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Board Environment for ESP8266 gen4 IoD
DESCRIPTION: Basic configuration for setting up the gen4 IoD board environment in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:gen4iod]
platform = espressif8266
board = gen4iod

----------------------------------------

TITLE: Setting Upload Protocol for Particle Boron
DESCRIPTION: Configuration to specify the upload protocol for the Particle Boron board. This example sets the protocol to nrfutil, which is the default for this board.

LANGUAGE: ini
CODE:
[env:particle_boron]
platform = nordicnrf52
board = particle_boron

upload_protocol = nrfutil

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to customize microcontroller and frequency settings for the ST Nucleo F410RB board.

LANGUAGE: ini
CODE:
[env:nucleo_f410rb]
platform = ststm32
board = nucleo_f410rb

; change microcontroller
board_build.mcu = stm32f410rbt6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring SparkFun Pro Micro 5V/16MHz in PlatformIO
DESCRIPTION: This snippet shows how to configure the SparkFun Pro Micro 5V/16MHz board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_promicro16]
platform = atmelavr
board = sparkfun_promicro16

----------------------------------------

TITLE: Customizing STM32 Board MCU and Frequency Settings
DESCRIPTION: Configuration showing how to override default microcontroller and frequency settings for the ST 32L0538DISCOVERY board

LANGUAGE: ini
CODE:
[env:disco_l053c8]
platform = ststm32
board = disco_l053c8

; change microcontroller
board_build.mcu = stm32l053c8t6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Customizing BluzDK Board Settings in PlatformIO INI File
DESCRIPTION: Example of overriding default BluzDK board settings in the PlatformIO configuration. It shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:bluz_dk]
platform = nordicnrf51
board = bluz_dk

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Arduino Nano 33 BLE board in platformio.ini file. Sets up the Nordic nRF52 platform and board identifier.

LANGUAGE: ini
CODE:
[env:nano33ble]
platform = nordicnrf52
board = nano33ble

----------------------------------------

TITLE: Customizing NodeMCU Board Parameters
DESCRIPTION: Advanced PlatformIO configuration showing how to override default MCU and frequency settings for the NodeMCU board.

LANGUAGE: ini
CODE:
[env:nodemcu]
platform = espressif8266
board = nodemcu

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic Board Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up the Heltec WiFi Kit 32 (V3) board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_32_V3]
platform = espressif32
board = heltec_wifi_kit_32_V3

----------------------------------------

TITLE: Customizing Armed v1 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:armed_v1]
platform = ststm32
board = armed_v1

; change microcontroller
board_build.mcu = stm32f407vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Setting Upload Protocol for Connaxio's Espoir
DESCRIPTION: This snippet illustrates how to set a specific upload protocol for the Connaxio's Espoir board in the PlatformIO configuration. It uses the 'esptool' protocol as an example.

LANGUAGE: ini
CODE:
[env:connaxio_espoir]
platform = espressif32
board = connaxio_espoir

upload_protocol = esptool

----------------------------------------

TITLE: Configuring senseBox MCU-S2 ESP32-S2 Board in platformio.ini
DESCRIPTION: Basic configuration for the senseBox MCU-S2 ESP32-S2 board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sensebox_mcu_esp32s2]
platform = espressif32
board = sensebox_mcu_esp32s2

----------------------------------------

TITLE: Customizing Espressif Generic ESP8266 ESP-07S Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings for the Espressif Generic ESP8266 ESP-07S. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:esp07s]
platform = espressif8266
board = esp07s

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing STM32F413RH MCU Settings
DESCRIPTION: Example showing how to override default microcontroller settings like MCU model and frequency

LANGUAGE: ini
CODE:
[env:genericSTM32F413RH]
platform = ststm32
board = genericSTM32F413RH

; change microcontroller
board_build.mcu = stm32f413rht6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: PlatformIO configuration with custom microcontroller and frequency settings for the ST Nucleo F722ZE board.

LANGUAGE: ini
CODE:
[env:nucleo_f722ze]
platform = ststm32
board = nucleo_f722ze

; change microcontroller
board_build.mcu = stm32f722zet6

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Configuring WeMos D1 R2 and mini Board in PlatformIO
DESCRIPTION: Basic configuration for the WeMos D1 R2 and mini board in a PlatformIO project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:d1_mini]
platform = espressif8266
board = d1_mini

----------------------------------------

TITLE: Configuring PlatformIO for AirM2M CORE ESP32C3
DESCRIPTION: Basic PlatformIO configuration for the AirM2M CORE ESP32C3 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:airm2m_core_esp32c3]
platform = espressif32
board = airm2m_core_esp32c3

----------------------------------------

TITLE: Customizing MCU Settings for Circuit Playground Bluefruit
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:adafruit_cplaynrf52840]
platform = nordicnrf52
board = adafruit_cplaynrf52840

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring PlatformIO for The Things Uno Board
DESCRIPTION: This code snippet shows how to configure a PlatformIO project for The Things Uno board. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:the_things_uno]
platform = atmelavr
board = the_things_uno

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:nucleo_f334r8]
platform = ststm32
board = nucleo_f334r8

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for WEMOS LOLIN S2 PICO
DESCRIPTION: Demonstrates how to specify the upload protocol in PlatformIO configuration. Uses 'esptool' as the default protocol.

LANGUAGE: ini
CODE:
[env:lolin_s2_pico]
platform = espressif32
board = lolin_s2_pico

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Core board F401RCT6 Build Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:coreboard_f401rc]
platform = ststm32
board = coreboard_f401rc

; change microcontroller
board_build.mcu = stm32f401rct6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: PlatformIO configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32s2]
platform = espressif32
board = adafruit_qtpy_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m0]
platform = atmelsam
board = adafruit_feather_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring PlatformIO for Ai-Thinker ESP-C3-M1-I-Kit
DESCRIPTION: Basic PlatformIO configuration for the Ai-Thinker ESP-C3-M1-I-Kit board using the Espressif32 platform. This snippet sets the board ID and platform.

LANGUAGE: ini
CODE:
[env:esp32-c3-m1i-kit]
platform = espressif32
board = esp32-c3-m1i-kit

----------------------------------------

TITLE: Advanced Board Configuration with MCU Options
DESCRIPTION: Extended configuration with microcontroller and frequency customization options for Sanguino ATmega644P board

LANGUAGE: ini
CODE:
[env:sanguino_atmega644p_8m]
platform = atmelavr
board = sanguino_atmega644p_8m

; change microcontroller
board_build.mcu = atmega644p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing Controllino Maxi Automation Board Settings
DESCRIPTION: This example demonstrates how to override default board settings in PlatformIO. It shows how to change the microcontroller and MCU frequency for a Controllino Maxi Automation project.

LANGUAGE: ini
CODE:
[env:controllino_maxi_automation]
platform = atmelavr
board = controllino_maxi_automation

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration
DESCRIPTION: Basic PlatformIO configuration for 96Boards Neonkey using the STM32 platform.

LANGUAGE: ini
CODE:
[env:b96b_neonkey]
platform = ststm32
board = b96b_neonkey

----------------------------------------

TITLE: Setting Upload Protocol for Calliope Mini v3 in PlatformIO
DESCRIPTION: Configuration example showing how to set the upload protocol for the Calliope Mini v3 board. Uses the CMSIS-DAP protocol.

LANGUAGE: ini
CODE:
[env:calliopemini_v3]
platform = nordicnrf52
board = calliopemini_v3

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Configuring STM32F303CB Board in PlatformIO
DESCRIPTION: Sets up the basic configuration for using the STM32F303CB board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F303CB]
platform = ststm32
board = genericSTM32F303CB

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Metro M4
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Adafruit Metro M4 board in the PlatformIO configuration. The default protocol is 'sam-ba', but it can be changed to other supported protocols like 'atmel-ice' or 'jlink'.

LANGUAGE: ini
CODE:
[env:adafruit_metro_m4]
platform = atmelsam
board = adafruit_metro_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:helvepic32_smd_mx270]
platform = microchippic32
board = helvepic32_smd_mx270

; change microcontroller
board_build.mcu = 32MX270F256D

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring MTS Dragonfly F411RE Board in PlatformIO
DESCRIPTION: Basic configuration for the MTS Dragonfly F411RE board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:mts_dragonfly_f411re]
platform = ststm32
board = mts_dragonfly_f411re

----------------------------------------

TITLE: Configuring Basic Genuino 101 Environment in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for Arduino/Genuino 101 board using the intel_arc32 platform.

LANGUAGE: ini
CODE:
[env:genuino101]
platform = intel_arc32
board = genuino101

----------------------------------------

TITLE: Configuring Zephyr Modules
DESCRIPTION: CMake configuration for adding extra Zephyr modules to the project build system

LANGUAGE: cmake
CODE:
# Additional modules
set(ZEPHYR_EXTRA_MODULES "path/to-zephyr-custom-module"  [...])

# Boilerplate code, which pulls in the Zephyr build system.
cmake_minimum_required(VERSION 3.13.1)
include($ENV{ZEPHYR_BASE}/cmake/app/boilerplate.cmake NO_POLICY_SCOPE)
project(my_zephyr_app)

# Add your source file to the "app" target. This must come after
# the boilerplate code, which defines the target.
target_sources(app PRIVATE ../src/main.c)

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like MCU and CPU frequency.

LANGUAGE: ini
CODE:
[env:lolin_s3_mini]
platform = espressif32
board = lolin_s3_mini

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced IAP15F413AD Board Configuration
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:IAP15F413AD]
platform = intel_mcs51
board = IAP15F413AD

; change microcontroller
board_build.mcu = iap15f413ad

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic nRF51 DK Board Settings
DESCRIPTION: Basic configuration for the nRF51 DK board in platformio.ini, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:nrf51_dk]
platform = nordicnrf51
board = nrf51_dk

----------------------------------------

TITLE: Setting Upload Protocol for Heltec Wifi Kit 8
DESCRIPTION: This snippet shows how to specify the upload protocol for the Heltec Wifi Kit 8 board. The default protocol is esptool, but it can be changed to espota.

LANGUAGE: ini
CODE:
[env:heltec_wifi_kit_8]
platform = espressif8266
board = heltec_wifi_kit_8

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Lion:Bit S3 Board
DESCRIPTION: Demonstrates how to specify a custom upload protocol in the PlatformIO configuration for the Lion:Bit S3 board.

LANGUAGE: ini
CODE:
[env:lionbits3]
platform = espressif32
board = lionbits3

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun ESP8266 Thing Dev
DESCRIPTION: This snippet shows how to specify the upload protocol for the SparkFun ESP8266 Thing Dev board in the PlatformIO configuration. It sets the protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:thingdev]
platform = espressif8266
board = thingdev

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8F2K32S4]
platform = intel_mcs51
board = STC8F2K32S4

; change microcontroller
board_build.mcu = stc8f2k32s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing WEMOS LOLIN S2 Mini Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. This snippet demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lolin_s2_mini]
platform = espressif32
board = lolin_s2_mini

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega88P]
platform = atmelavr
board = ATmega88P

; change microcontroller
board_build.mcu = atmega88p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic Ruuvi Tag Board Settings
DESCRIPTION: Basic configuration for setting up a Ruuvi Tag board project in PlatformIO. Specifies the platform and board settings.

LANGUAGE: ini
CODE:
[env:ruuvitag]
platform = nordicnrf52
board = ruuvitag

----------------------------------------

TITLE: Advanced Sonoff S20 Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default MCU and frequency settings for the Sonoff S20 board

LANGUAGE: ini
CODE:
[env:sonoff_s20]
platform = espressif8266
board = sonoff_s20

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing VAkE v1.0 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows how to change the microcontroller and MCU frequency for the VAkE v1.0 board.

LANGUAGE: ini
CODE:
[env:vake_v1]
platform = ststm32
board = vake_v1

; change microcontroller
board_build.mcu = stm32f446ret6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Overriding Default WifInfo Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default WifInfo board settings in the PlatformIO configuration. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:wifinfo]
platform = espressif8266
board = wifinfo

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing MCU and Frequency for WeAct Studio MiniSTM32H750VBTX
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration, specifically changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:weact_mini_h750vbtx]
platform = ststm32
board = weact_mini_h750vbtx

; change microcontroller
board_build.mcu = stm32h750vbt6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring Basic ATmega809 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ATmega809 board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega809]
platform = atmelmegaavr
board = ATmega809

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, with sam-ba as the default option.

LANGUAGE: ini
CODE:
[env:adafruit_proxlighttrinkey_m0]
platform = atmelsam
board = adafruit_proxlighttrinkey_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration for STC15W101 board with custom microcontroller and frequency settings. Shows how to override default board parameters.

LANGUAGE: ini
CODE:
[env:STC15W101]
platform = intel_mcs51
board = STC15W101

; change microcontroller
board_build.mcu = stc15w101

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, which supports both espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:agruminolemon]
platform = espressif8266
board = agruminolemon

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32c3]
platform = espressif32
board = adafruit_qtpy_esp32c3

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. The nrfutil protocol is set as the default option.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52832]
platform = nordicnrf52
board = adafruit_feather_nrf52832

upload_protocol = nrfutil

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC8H2K32T board in PlatformIO's project configuration file (platformio.ini). Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8H2K32T]
platform = intel_mcs51
board = STC8H2K32T

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_clue_nrf52840]
platform = nordicnrf52
board = adafruit_clue_nrf52840

upload_protocol = nrfutil

----------------------------------------

TITLE: Configuring ST 32F429IDISCOVERY Board in platformio.ini
DESCRIPTION: Basic configuration for using the ST 32F429IDISCOVERY board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_f429zi]
platform = ststm32
board = disco_f429zi

----------------------------------------

TITLE: Upload Protocol Configuration for STM32
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:mts_mdot_f411re]
platform = ststm32
board = mts_mdot_f411re

upload_protocol = mbed

----------------------------------------

TITLE: Customizing SparkFun RedBoard Settings in PlatformIO
DESCRIPTION: This code snippet demonstrates how to override default SparkFun RedBoard settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_redboard]
platform = atmelavr
board = sparkfun_redboard

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring PlatformIO for Wraith V1 ESC
DESCRIPTION: Basic PlatformIO configuration for the Wraith V1 ESC board using the STM32 platform. Specifies the board ID and platform to use.

LANGUAGE: ini
CODE:
[env:wraith32_v1]
platform = ststm32
board = wraith32_v1

----------------------------------------

TITLE: Configuring Nordic nRF52-DK Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Nordic nRF52-DK board. It sets the platform and board name, and demonstrates how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nrf52_dk]
platform = nordicnrf52
board = nrf52_dk

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring PlatformIO for Digilent Cerebot 32MX4
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Digilent Cerebot 32MX4 board. It sets the platform to microchippic32 and the board to cerebot32mx4.

LANGUAGE: ini
CODE:
[env:cerebot32mx4]
platform = microchippic32
board = cerebot32mx4

----------------------------------------

TITLE: Basic PlatformIO Configuration for HUZZAH ESP8266
DESCRIPTION: Basic environment configuration for the Adafruit HUZZAH ESP8266 board in platformio.ini

LANGUAGE: ini
CODE:
[env:huzzah]
platform = espressif8266
board = huzzah

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lpc1768]
platform = nxplpc
board = lpc1768

; change microcontroller
board_build.mcu = lpc1768

; change MCU frequency
board_build.f_cpu = 96000000L

----------------------------------------

TITLE: Setting Upload Protocol for TTGO LoRa32-OLED V1
DESCRIPTION: Configuration to specify the upload protocol for the TTGO LoRa32-OLED V1 board. This example sets it to the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:ttgo-lora32-v1]
platform = espressif32
board = ttgo-lora32-v1

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic LilyGo T-Display Board Settings
DESCRIPTION: Basic PlatformIO configuration for the LilyGo T-Display board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:lilygo-t-display]
platform = espressif32
board = lilygo-t-display

----------------------------------------

TITLE: Customizing L476DMW1K MCU Settings in PlatformIO
DESCRIPTION: Advanced board configuration showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:rhombio_l476dmw1k]
platform = ststm32
board = rhombio_l476dmw1k

; change microcontroller
board_build.mcu = stm32l476vgt6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for BluzDK in PlatformIO INI File
DESCRIPTION: Configuration example for changing the upload protocol for the BluzDK board. It demonstrates how to set the upload protocol to J-Link.

LANGUAGE: ini
CODE:
[env:bluz_dk]
platform = nordicnrf51
board = bluz_dk

upload_protocol = jlink

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:denky_d4]
platform = espressif32
board = denky_d4

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing TTGO T-Beam board settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings for the TTGO T-Beam in the PlatformIO configuration. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ttgo-t-beam]
platform = espressif32
board = ttgo-t-beam

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring STM32F103ZE Board in PlatformIO INI File
DESCRIPTION: Basic PlatformIO configuration for the STM32F103ZE board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZE]
platform = ststm32
board = genericSTM32F103ZE

----------------------------------------

TITLE: Configuring Basic PYBStick 26 Pro Board Settings
DESCRIPTION: Basic PlatformIO configuration for the PYBStick 26 Pro board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:pybstick26_pro]
platform = ststm32
board = pybstick26_pro

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:espresso_lite_v1]
platform = espressif8266
board = espresso_lite_v1

upload_protocol = esptool

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8F2K16S4
DESCRIPTION: Basic environment configuration for the STC8F2K16S4 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC8F2K16S4]
platform = intel_mcs51
board = STC8F2K16S4

----------------------------------------

TITLE: Setting Upload Protocol for WEMOS LOLIN32 Lite
DESCRIPTION: Configuration to change the upload protocol for the WEMOS LOLIN32 Lite board in PlatformIO. The example sets it to 'esptool', which is the default.

LANGUAGE: ini
CODE:
[env:lolin32_lite]
platform = espressif32
board = lolin32_lite

upload_protocol = esptool

----------------------------------------

TITLE: Customizing WiFiduino Board Settings
DESCRIPTION: This example demonstrates how to override default WiFiduino settings in a PlatformIO project, such as changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:wifiduino]
platform = espressif8266
board = wifiduino

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic Watchy Board Configuration in PlatformIO
DESCRIPTION: Configures the basic environment settings for SQFMI Watchy v2.0 board using PlatformIO

LANGUAGE: ini
CODE:
[env:watchy]
platform = espressif32
board = watchy

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ublox_bmd345eval_nrf52840]
platform = nordicnrf52
board = ublox_bmd345eval_nrf52840

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing Ai-Thinker ESP-C3-M1-I-Kit Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. This snippet demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-c3-m1i-kit]
platform = espressif32
board = esp32-c3-m1i-kit

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Customizing Arduboy MCU Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for Arduboy board.

LANGUAGE: ini
CODE:
[env:arduboy]
platform = atmelavr
board = arduboy

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Custom MCU Configuration for ST Nucleo L433RC-P
DESCRIPTION: Example showing how to customize microcontroller settings including MCU model and frequency for the ST Nucleo L433RC-P board.

LANGUAGE: ini
CODE:
[env:nucleo_l433rc_p]
platform = ststm32
board = nucleo_l433rc_p

; change microcontroller
board_build.mcu = stm32l433rc

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing Nordic Thingy:52 MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the Nordic Thingy:52 board.

LANGUAGE: ini
CODE:
[env:thingy_52]
platform = nordicnrf52
board = thingy_52

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the nRF52832-MDK board in platformio.ini file. Sets up the basic environment with the Nordic nRF52 platform.

LANGUAGE: ini
CODE:
[env:nrf52832_mdk]
platform = nordicnrf52
board = nrf52832_mdk

----------------------------------------

TITLE: Basic ESP-210 Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ESP-210 board using espressif8266 platform.

LANGUAGE: ini
CODE:
[env:esp210]
platform = espressif8266
board = esp210

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for firmware deployment.

LANGUAGE: ini
CODE:
[env:sparkfun_lora_gateway_1-channel]
platform = espressif32
board = sparkfun_lora_gateway_1-channel

upload_protocol = esptool

----------------------------------------

TITLE: Configuring ATmega168P/PA Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ATmega168P/PA board in the PlatformIO project configuration file. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega168P]
platform = atmelavr
board = ATmega168P

; change microcontroller
board_build.mcu = atmega168p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for 4D Systems GEN4-ESP32 Board
DESCRIPTION: Configuration to specify the upload protocol for the 4D Systems GEN4-ESP32 board. In this example, it's set to the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:4d_systems_esp32s3_gen4_r8n16]
platform = espressif32
board = 4d_systems_esp32s3_gen4_r8n16

upload_protocol = esptool

----------------------------------------

TITLE: Basic XinaBox CW02 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for XinaBox CW02 board setup using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:xinabox_cw02]
platform = espressif32
board = xinabox_cw02

----------------------------------------

TITLE: Customizing WeMos D1 mini Lite Board Settings
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency, using board_*** options in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:d1_mini_lite]
platform = espressif8266
board = d1_mini_lite

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic NIBO burger Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the NIBO burger robot using the atmelavr platform. Specifies the board type and platform.

LANGUAGE: ini
CODE:
[env:niboburger]
platform = atmelavr
board = niboburger

----------------------------------------

TITLE: Setting Upload Protocol for SLSTK3701A Giant Gecko S1
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO. Sets the upload protocol to 'mbed'.

LANGUAGE: ini
CODE:
[env:efm32gg11_stk3701]
platform = siliconlabsefm32
board = efm32gg11_stk3701

upload_protocol = mbed

----------------------------------------

TITLE: Overriding Default WeMos D1 mini Pro Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings such as microcontroller and CPU frequency in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:d1_mini_pro]
platform = espressif8266
board = d1_mini_pro

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring ESP32 FM DevKit Board in PlatformIO
DESCRIPTION: Basic configuration for using the ESP32 FM DevKit board in a PlatformIO project. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:fm-devkit]
platform = espressif32
board = fm-devkit

----------------------------------------

TITLE: Basic Board Configuration for SODAQ SARA
DESCRIPTION: Basic PlatformIO configuration for setting up a SODAQ SARA board project using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:sodaq_sara]
platform = atmelsam
board = sodaq_sara

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up the STC89C516RD+ board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC89C516RD+]
platform = intel_mcs51
board = STC89C516RD+

----------------------------------------

TITLE: Setting Upload Protocol for STM32F405RG in PlatformIO
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the STM32F405RG board in PlatformIO. The default protocol is 'serial', but it can be changed to other supported protocols like 'blackmagic', 'dfu', 'jlink', or 'stlink'.

LANGUAGE: ini
CODE:
[env:genericSTM32F405RG]
platform = ststm32
board = genericSTM32F405RG

upload_protocol = serial

----------------------------------------

TITLE: Customizing WeMos D1 R2 and mini Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in a PlatformIO project configuration. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:d1_mini]
platform = espressif8266
board = d1_mini

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for VAkE v1.0 in PlatformIO
DESCRIPTION: This snippet shows how to set a specific upload protocol for the VAkE v1.0 board in PlatformIO. It uses the ST-Link protocol as an example.

LANGUAGE: ini
CODE:
[env:vake_v1]
platform = ststm32
board = vake_v1

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example of how to configure the upload protocol for the Adafruit QT Py ESP32, using esptool as the default uploader

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32]
platform = espressif32
board = adafruit_qtpy_esp32

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Laird Pinnacle 100 DVK Board Settings
DESCRIPTION: Example of overriding default board settings for the Laird Connectivity Pinnacle 100 DVK, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:laird_pinnacle_100_dvk]
platform = nordicnrf52
board = laird_pinnacle_100_dvk

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Custom MCU Configuration for 32F723EDISCOVERY
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f723ie]
platform = ststm32
board = disco_f723ie

; change microcontroller
board_build.mcu = stm32f723iek6

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_wb55rg_p]
platform = ststm32
board = nucleo_wb55rg_p

; change microcontroller
board_build.mcu = stm32wb55rg

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring SEGGER IP Switch Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the SEGGER IP Switch Board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:segger_ip_switch]
platform = freescalekinetis
board = segger_ip_switch

; change microcontroller
board_build.mcu = mk66fn2m0vmd18

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:nucleo_g031k8]
platform = ststm32
board = nucleo_g031k8

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the u-blox BMD-345-EVAL board in platformio.ini file, specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:ublox_bmd345eval_nrf52840]
platform = nordicnrf52
board = ublox_bmd345eval_nrf52840

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ST Nucleo F722ZE board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_f722ze]
platform = ststm32
board = nucleo_f722ze

----------------------------------------

TITLE: Configuring Basic Arduino BT ATmega328 Environment
DESCRIPTION: Basic PlatformIO configuration for Arduino BT ATmega328 board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:btatmega328]
platform = atmelavr
board = btatmega328

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO project with the P-Nucleo WB55RG board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_wb55rg_p]
platform = ststm32
board = nucleo_wb55rg_p

----------------------------------------

TITLE: Setting Upload Protocol for Arduino M0 in PlatformIO INI File
DESCRIPTION: This snippet shows how to set the upload protocol for the Arduino M0 board in the PlatformIO configuration. It uses the stk500v2 protocol.

LANGUAGE: ini
CODE:
[env:mzeroUSB]
platform = atmelsam
board = mzeroUSB

upload_protocol = stk500v2

----------------------------------------

TITLE: Setting Upload Protocol for ESPectro Core
DESCRIPTION: This snippet shows how to specify the upload protocol for the ESPectro Core board. The default protocol is 'esptool', but it can be changed to 'espota'.

LANGUAGE: ini
CODE:
[env:espectro]
platform = espressif8266
board = espectro

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for WEMOS D1 R1
DESCRIPTION: This snippet shows how to set the upload protocol for the WEMOS D1 R1 board in the PlatformIO configuration. It sets the protocol to 'esptool', which is the default for this board.

LANGUAGE: ini
CODE:
[env:d1]
platform = espressif8266
board = d1

upload_protocol = esptool

----------------------------------------

TITLE: Basic Board Configuration for Adafruit pyBadge M4 Express
DESCRIPTION: Minimal configuration required to set up an Adafruit pyBadge M4 Express board project in PlatformIO.

LANGUAGE: ini
CODE:
[env:adafruit_pybadge_m4]
platform = atmelsam
board = adafruit_pybadge_m4

----------------------------------------

TITLE: Configuring ST Nucleo H745ZI-Q Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo H745ZI-Q board using the STM32 platform. This snippet sets up the board ID and platform.

LANGUAGE: ini
CODE:
[env:nucleo_h745zi_q]
platform = ststm32
board = nucleo_h745zi_q

----------------------------------------

TITLE: Basic STC8C1K12 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up an STC8C1K12 board project in platformio.ini. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8C1K12]
platform = intel_mcs51
board = STC8C1K12

----------------------------------------

TITLE: Setting Upload Protocol for SG-O AirMon in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol (esptool in this case) for the SG-O AirMon board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:sg-o_airMon]
platform = espressif32
board = sg-o_airMon

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Phoenix 2.0 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Phoenix 2.0 board in platformio.ini file. Sets up the board with espressif8266 platform.

LANGUAGE: ini
CODE:
[env:phoenix_v2]
platform = espressif8266
board = phoenix_v2

----------------------------------------

TITLE: Configuring PlatformIO Environment for Generic N79E813
DESCRIPTION: This snippet shows how to set up a basic PlatformIO environment for the Generic N79E813 board in the project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:N79E813]
platform = intel_mcs51
board = N79E813

----------------------------------------

TITLE: Customizing SODAQ ONE Board Settings
DESCRIPTION: Example of overriding default SODAQ ONE board settings in PlatformIO. This snippet shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sodaq_one]
platform = atmelsam
board = sodaq_one

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic LightBlue Bean+ Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO environment for the LightBlue Bean+ board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:lightblue-beanplus]
platform = atmelavr
board = lightblue-beanplus

----------------------------------------

TITLE: Setting Upload Protocol for nRF52 Board
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using JLink as the selected protocol.

LANGUAGE: ini
CODE:
[env:stct_nrf52_minidev]
platform = nordicnrf52
board = stct_nrf52_minidev

upload_protocol = jlink

----------------------------------------

TITLE: Configuring WifInfo Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the WifInfo board in the PlatformIO project configuration file. It sets the platform to espressif8266 and the board to wifinfo.

LANGUAGE: ini
CODE:
[env:wifinfo]
platform = espressif8266
board = wifinfo

----------------------------------------

TITLE: Customizing ATmega325 MCU and Clock Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the ATmega325 board in PlatformIO.

LANGUAGE: ini
CODE:
[env:ATmega325]
platform = atmelavr
board = ATmega325

; change microcontroller
board_build.mcu = atmega325

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic ESP8266 ESP-07 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for ESP8266 ESP-07 board setup using the espressif8266 platform.

LANGUAGE: ini
CODE:
[env:esp07]
platform = espressif8266
board = esp07

----------------------------------------

TITLE: Customizing Microduino Core MCU Settings in PlatformIO
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Microduino Core board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:168pa16m]
platform = atmelavr
board = 168pa16m

; change microcontroller
board_build.mcu = atmega168p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the board using board_build options.

LANGUAGE: ini
CODE:
[env:disco_l4s5i_iot01a]
platform = ststm32
board = disco_l4s5i_iot01a

; change microcontroller
board_build.mcu = stm32l4s5vit6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Adafruit MONSTER M4SK board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_monster_m4sk]
platform = atmelsam
board = adafruit_monster_m4sk

----------------------------------------

TITLE: Setting Upload Protocol for Arduino MKR1000
DESCRIPTION: Demonstrates how to specify the upload protocol for the Arduino MKR1000 board, using sam-ba as an example.

LANGUAGE: ini
CODE:
[env:mkr1000USB]
platform = atmelsam
board = mkr1000USB

upload_protocol = sam-ba

----------------------------------------

TITLE: Setting Upload Protocol for Teensy 3.0
DESCRIPTION: This snippet shows how to set the upload protocol for the Teensy 3.0 board in the PlatformIO configuration. It demonstrates setting the protocol to 'teensy-gui'.

LANGUAGE: ini
CODE:
[env:teensy30]
platform = teensy
board = teensy30

upload_protocol = teensy-gui

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example of configuring custom upload protocol for the Pycom WiPy3 board using esptool.

LANGUAGE: ini
CODE:
[env:wipy3]
platform = espressif32
board = wipy3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the Adafruit Metro ESP32-S2 board, using the default esptool protocol.

LANGUAGE: ini
CODE:
[env:adafruit_metro_esp32s2]
platform = espressif32
board = adafruit_metro_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO project for the Waveshare BLE400 board using the Nordic nRF51 platform.

LANGUAGE: ini
CODE:
[env:waveshare_ble400]
platform = nordicnrf51
board = waveshare_ble400

----------------------------------------

TITLE: Configuring Generic ATtiny84 Board in PlatformIO
DESCRIPTION: This code snippet shows how to configure the Generic ATtiny84 board in the PlatformIO project configuration file (platformio.ini). It sets the platform to atmelavr and the board to attiny84.

LANGUAGE: ini
CODE:
[env:attiny84]
platform = atmelavr
board = attiny84

----------------------------------------

TITLE: Customizing MCU and Clock Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:frdm_kw24d]
platform = freescalekinetis
board = frdm_kw24d

; change microcontroller
board_build.mcu = mkw24d512

; change MCU frequency
board_build.f_cpu = 50000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ST Nucleo L412KB board.

LANGUAGE: ini
CODE:
[env:nucleo_l412kb]
platform = ststm32
board = nucleo_l412kb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing SLSTK3400A Happy Gecko Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:efm32hg_stk3400]
platform = siliconlabsefm32
board = efm32hg_stk3400

; change microcontroller
board_build.mcu = efm32hg322f64

; change MCU frequency
board_build.f_cpu = 25000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the AT90CAN128 board

LANGUAGE: ini
CODE:
[env:AT90CAN128]
platform = atmelavr
board = AT90CAN128

; change microcontroller
board_build.mcu = at90can128

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced CurrentRanger Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:current_ranger]
platform = atmelsam
board = current_ranger

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing STC12C5A48S2 Board Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC12C5A48S2]
platform = intel_mcs51
board = STC12C5A48S2

; change microcontroller
board_build.mcu = stc12c5a48s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo F746ZG board.

LANGUAGE: ini
CODE:
[env:nucleo_f746zg]
platform = ststm32
board = nucleo_f746zg

; change microcontroller
board_build.mcu = stm32f746zgt6

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Configuring Basic ESPDuino Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ESPDuino board setup using the espressif8266 platform.

LANGUAGE: ini
CODE:
[env:espduino]
platform = espressif8266
board = espduino

----------------------------------------

TITLE: Customizing TI LaunchPad MSP-EXP430FR4133LP Board Settings
DESCRIPTION: Example of overriding default board settings in the platformio.ini file. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lpmsp430fr4133]
platform = timsp430
board = lpmsp430fr4133

; change microcontroller
board_build.mcu = msp430fr4133

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Custom MCU Configuration for TTGO T-Watch
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ttgo-t-watch]
platform = espressif32
board = ttgo-t-watch

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing SparkFun Qwiic Micro SAMD21E Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_qwiic_micro_samd21e]
platform = atmelsam
board = sparkfun_qwiic_micro_samd21e

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing ST STM32F0308DISCOVERY Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f030r8]
platform = ststm32
board = disco_f030r8

; change microcontroller
board_build.mcu = stm32f030r8t6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring ST STM32LDISCOVERY Board in PlatformIO
DESCRIPTION: Basic configuration for the ST STM32LDISCOVERY board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_l152rb]
platform = ststm32
board = disco_l152rb

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration specifying ST-Link as the upload protocol for BluePill F103C8

LANGUAGE: ini
CODE:
[env:bluepill_f103c8]
platform = ststm32
board = bluepill_f103c8

upload_protocol = stlink

----------------------------------------

TITLE: Configuring TTGO T1 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the TTGO T1 board using the Espressif32 platform. This snippet sets up the environment and specifies the board.

LANGUAGE: ini
CODE:
[env:ttgo-t1]
platform = espressif32
board = ttgo-t1

----------------------------------------

TITLE: Configuring PlatformIO for Seeed Arch Max Board
DESCRIPTION: Basic configuration for using the Seeed Arch Max board in a PlatformIO project. This snippet sets the platform and board in the project's configuration file.

LANGUAGE: ini
CODE:
[env:seeedArchMax]
platform = ststm32
board = seeedArchMax

----------------------------------------

TITLE: Setting Upload Protocol for STM32F407VE in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the STM32F407VE board. This example sets it to 'stlink'.

LANGUAGE: ini
CODE:
[env:genericSTM32F407VET6]
platform = ststm32
board = genericSTM32F407VET6

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol to be used with the Maple Mini board

LANGUAGE: ini
CODE:
[env:maple_mini_b20]
platform = ststm32
board = maple_mini_b20

upload_protocol = dfu

----------------------------------------

TITLE: Configuring YeaCreate NSCREEN-32 Board in platformio.ini
DESCRIPTION: Basic configuration for the YeaCreate NSCREEN-32 board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nscreen-32]
platform = espressif32
board = nscreen-32

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:um_pros3]
platform = espressif32
board = um_pros3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Arduino MKR1000 Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency using board_*** options.

LANGUAGE: ini
CODE:
[env:mkr1000USB]
platform = atmelsam
board = mkr1000USB

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing microS2 Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:micros2]
platform = espressif32
board = micros2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up Seeed Arch Pro board in platformio.ini file

LANGUAGE: ini
CODE:
[env:seeedArchPro]
platform = nxplpc
board = seeedArchPro

----------------------------------------

TITLE: Overriding Default HelvePic32 Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the HelvePic32 board in a PlatformIO project configuration file. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:helvepic32_smd]
platform = microchippic32
board = helvepic32_smd

; change microcontroller
board_build.mcu = 32MX250F128D

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring PlatformIO for RedBearLab Blend Micro 3.3V/8MHz
DESCRIPTION: Basic PlatformIO configuration for the RedBearLab Blend Micro 3.3V/8MHz board. Sets the platform to atmelavr and the board to blendmicro8.

LANGUAGE: ini
CODE:
[env:blendmicro8]
platform = atmelavr
board = blendmicro8

----------------------------------------

TITLE: Configuring PlatformIO Environment for Pycom LoPy4
DESCRIPTION: Basic PlatformIO configuration for the Pycom LoPy4 board using the Espressif32 platform. This snippet sets up the build environment with the correct board identifier.

LANGUAGE: ini
CODE:
[env:lopy4]
platform = espressif32
board = lopy4

----------------------------------------

TITLE: Configuring Generic STC12C5A40S2 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC12C5A40S2 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC12C5A40S2]
platform = intel_mcs51
board = STC12C5A40S2

----------------------------------------

TITLE: Configuring Generic STC15F104 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15F104 board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC15F104]
platform = intel_mcs51
board = STC15F104

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:espresso_lite_v2]
platform = espressif8266
board = espresso_lite_v2

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring STM32 F407VG Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the F407VG board using the ststm32 platform. Sets up the board ID for project configuration.

LANGUAGE: ini
CODE:
[env:diymore_f407vgt]
platform = ststm32
board = diymore_f407vgt

----------------------------------------

TITLE: Configuring ATmega329 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the ATmega329 board. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:ATmega329]
platform = atmelavr
board = ATmega329

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:adafruit_metro_esp32s2]
platform = espressif32
board = adafruit_metro_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring KITS ESP32 EDU Board in PlatformIO
DESCRIPTION: Basic configuration for using the KITS ESP32 EDU board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:kits-edu]
platform = espressif32
board = kits-edu

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Giga R1 (M7 core)
DESCRIPTION: Configuration to specify the upload protocol for the Arduino Giga R1 (M7 core) board. In this example, it's set to DFU (Device Firmware Upgrade).

LANGUAGE: ini
CODE:
[env:giga_r1_m7]
platform = ststm32
board = giga_r1_m7

upload_protocol = dfu

----------------------------------------

TITLE: Customizing Arduino Yun Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default Arduino Yun settings in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:yun]
platform = atmelavr
board = yun

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Configures the basic environment settings for the STC15F205A board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15F205A]
platform = intel_mcs51
board = STC15F205A

----------------------------------------

TITLE: Basic PlatformIO Configuration for Eduino WiFi
DESCRIPTION: Basic configuration snippet for setting up a PlatformIO project with Eduino WiFi board.

LANGUAGE: ini
CODE:
[env:eduinowifi]
platform = espressif8266
board = eduinowifi

----------------------------------------

TITLE: Customizing Namino Arancio Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:namino_arancio]
platform = espressif32
board = namino_arancio

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to use the AT90CAN128 board in a PlatformIO project environment

LANGUAGE: ini
CODE:
[env:AT90CAN128]
platform = atmelavr
board = AT90CAN128

----------------------------------------

TITLE: Basic PlatformIO Configuration for ElectronutLabs Papyr
DESCRIPTION: Basic configuration setup for using ElectronutLabs Papyr board with PlatformIO. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:electronut_papyr]
platform = nordicnrf52
board = electronut_papyr

----------------------------------------

TITLE: Setting Upload Protocol for STM32F407IG
DESCRIPTION: Example configuration for specifying the upload protocol (stlink) for the STM32F407IG board.

LANGUAGE: ini
CODE:
[env:genericSTM32F407IGT6]
platform = ststm32
board = genericSTM32F407IGT6

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, which supports both espota and esptool options.

LANGUAGE: ini
CODE:
[env:d1_wroom_02]
platform = espressif8266
board = d1_wroom_02

upload_protocol = esptool

----------------------------------------

TITLE: Basic PlatformIO Configuration for Adafruit Trinket M0
DESCRIPTION: Basic configuration for setting up an Adafruit Trinket M0 project in platformio.ini

LANGUAGE: ini
CODE:
[env:adafruit_trinket_m0]
platform = atmelsam
board = adafruit_trinket_m0

----------------------------------------

TITLE: Configuring Upload Protocol for ESP32S2
DESCRIPTION: Configuration example showing how to specify the upload protocol for programming the board. Uses the default esptool protocol.

LANGUAGE: ini
CODE:
[env:adafruit_funhouse_esp32s2]
platform = espressif32
board = adafruit_funhouse_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Customizing STM32F417VE Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F417VE]
platform = ststm32
board = genericSTM32F417VE

; change microcontroller
board_build.mcu = stm32f417vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Configuration with custom microcontroller and frequency settings for the Smart Bee S3 board.

LANGUAGE: ini
CODE:
[env:bee_s3]
platform = espressif32
board = bee_s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring TI LaunchPad MSP-EXP430G2553LP in PlatformIO
DESCRIPTION: This snippet shows how to configure the TI LaunchPad MSP-EXP430G2553LP board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:lpmsp430g2553]
platform = timsp430
board = lpmsp430g2553

; change microcontroller
board_build.mcu = msp430g2553

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration for STM32F413CH
DESCRIPTION: Configuration example showing how to set the upload protocol for the STM32F413CH board.

LANGUAGE: ini
CODE:
[env:genericSTM32F413CH]
platform = ststm32
board = genericSTM32F413CH

upload_protocol = serial

----------------------------------------

TITLE: Customizing MCU and Clock Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:lpcxpresso55s16]
platform = nxplpc
board = lpcxpresso55s16

; change microcontroller
board_build.mcu = lpc55s16

; change MCU frequency
board_build.f_cpu = 150000000L

----------------------------------------

TITLE: Setting Upload Protocol for OLIMEX ESP32-PoE-ISO
DESCRIPTION: Configuration to specify the upload protocol for the OLIMEX ESP32-PoE-ISO board. The example sets it to 'esptool', which is the default.

LANGUAGE: ini
CODE:
[env:esp32-poe-iso]
platform = espressif32
board = esp32-poe-iso

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Feather M0 Express
DESCRIPTION: Configuration to change the upload protocol for the Adafruit Feather M0 Express board. In this example, it's set to use the SAM-BA protocol.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m0_express]
platform = atmelsam
board = adafruit_feather_m0_express

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing Adafruit Feather ESP32-S3 Reverse TFT Settings in PlatformIO INI
DESCRIPTION: Example of overriding default board settings for the Adafruit Feather ESP32-S3 Reverse TFT, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3_reversetft]
platform = espressif32
board = adafruit_feather_esp32s3_reversetft

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Adafruit Slide Trinkey Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Slide Trinkey board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:adafruit_slidetrinkey_m0]
platform = atmelsam
board = adafruit_slidetrinkey_m0

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Advanced MS51TC0AE Board Configuration with Custom Settings
DESCRIPTION: Extended configuration for MS51TC0AE board showing how to override default settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:MS51TC0AE]
platform = intel_mcs51
board = MS51TC0AE

; change microcontroller
board_build.mcu = ms51tc0ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration with custom microcontroller and frequency settings for the SparkFun Blynk Board.

LANGUAGE: ini
CODE:
[env:sparkfunBlynk]
platform = espressif8266
board = sparkfunBlynk

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the Unexpected Maker TinyS3 board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:um_tinys3]
platform = espressif32
board = um_tinys3

----------------------------------------

TITLE: Configuring RYMCU ESP32-C3-DevKitM-1 Board in PlatformIO
DESCRIPTION: Basic configuration for the RYMCU ESP32-C3-DevKitM-1 board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:rymcu-esp32-c3-devkitm-1]
platform = espressif32
board = rymcu-esp32-c3-devkitm-1

----------------------------------------

TITLE: Customizing ST STM32LDISCOVERY Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:disco_l152rb]
platform = ststm32
board = disco_l152rb

; change microcontroller
board_build.mcu = stm32l152rbt6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Arduino Nano
DESCRIPTION: Basic environment configuration for Arduino Nano ATmega328 board with new bootloader in platformio.ini file.

LANGUAGE: ini
CODE:
[env:nanoatmega328new]
platform = atmelavr
board = nanoatmega328new

----------------------------------------

TITLE: Setting Upload Protocol for uPesy ESP32 Wroom DevKit
DESCRIPTION: Demonstrates how to specify the upload protocol in PlatformIO configuration. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:upesy_wroom]
platform = espressif32
board = upesy_wroom

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Arduino MKR WiFi 1010 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino MKR WiFi 1010 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:mkrwifi1010]
platform = atmelsam
board = mkrwifi1010

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Sanguino ATmega644P MCU Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sanguino_atmega644p]
platform = atmelavr
board = sanguino_atmega644p

; change microcontroller
board_build.mcu = atmega644p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ATmega88 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega88 board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega88]
platform = atmelavr
board = ATmega88

; change microcontroller
board_build.mcu = atmega88

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Overriding Default Pinoccio Scout Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Pinoccio Scout settings in the PlatformIO project configuration file. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:pinoccio]
platform = atmelavr
board = pinoccio

; change microcontroller
board_build.mcu = atmega256rfr2

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15W410S Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic STC15W410S board. It sets the platform to intel_mcs51 and the board to STC15W410S. Additional options demonstrate how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15W410S]
platform = intel_mcs51
board = STC15W410S

; change microcontroller
board_build.mcu = stc15w410s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default MCU and frequency settings for the Sonoff TH board.

LANGUAGE: ini
CODE:
[env:sonoff_th]
platform = espressif8266
board = sonoff_th

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for SODAQ SFF
DESCRIPTION: This snippet shows how to set the upload protocol for the SODAQ SFF board in PlatformIO. It sets the upload protocol to sam-ba, which is the default for this board.

LANGUAGE: ini
CODE:
[env:sodaq_sff]
platform = atmelsam
board = sodaq_sff

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Arduino LilyPad USB Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino LilyPad USB board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board as LilyPadUSB.

LANGUAGE: ini
CODE:
[env:LilyPadUSB]
platform = atmelavr
board = LilyPadUSB

----------------------------------------

TITLE: Configuring Basic Board Environment for ST Nucleo H753ZI
DESCRIPTION: Basic PlatformIO environment configuration for the ST Nucleo H753ZI board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_h753zi]
platform = ststm32
board = nucleo_h753zi

----------------------------------------

TITLE: Customizing The Things Uno Board Settings
DESCRIPTION: This example demonstrates how to override default board settings in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:the_things_uno]
platform = atmelavr
board = the_things_uno

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Arduino Zero (USB Native Port) in PlatformIO
DESCRIPTION: Basic configuration for using the Arduino Zero (USB Native Port) board in a PlatformIO project. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:zeroUSB]
platform = atmelsam
board = zeroUSB

----------------------------------------

TITLE: Advanced AT90PWM316 Configuration with Custom Parameters
DESCRIPTION: Extended configuration example showing how to override default microcontroller settings and MCU frequency for the AT90PWM316 board.

LANGUAGE: ini
CODE:
[env:at90pwm316]
platform = atmelavr
board = at90pwm316

; change microcontroller
board_build.mcu = at90pwm316

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Generic ML56LD1AE Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic ML56LD1AE board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ML56LD1AE]
platform = intel_mcs51
board = ML56LD1AE

; change microcontroller
board_build.mcu = ml56ld1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol for Particle Argon
DESCRIPTION: Configuration for specifying the upload protocol used for the Particle Argon board, using nrfutil as an example.

LANGUAGE: ini
CODE:
[env:particle_argon]
platform = nordicnrf52
board = particle_argon

upload_protocol = nrfutil

----------------------------------------

TITLE: Customizing ESP32S2 Board Parameters
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_funhouse_esp32s2]
platform = espressif32
board = adafruit_funhouse_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Initial configuration for setting up the NXP i.MX RT1020 Evaluation Kit board in platformio.ini

LANGUAGE: ini
CODE:
[env:mimxrt1020_evk]
platform = nxpimxrt
board = mimxrt1020_evk

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up SODAQ ExpLoRer board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:sodaq_explorer]
platform = atmelsam
board = sodaq_explorer

----------------------------------------

TITLE: Customizing DevEBox H743VITX MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the DevEBox H743VITX board.

LANGUAGE: ini
CODE:
[env:devebox_h743vitx]
platform = ststm32
board = devebox_h743vitx

; change microcontroller
board_build.mcu = stm32h743vit6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring Basic STC8H4K32LCD Board Environment
DESCRIPTION: Basic PlatformIO configuration for setting up a project with the STC8H4K32LCD board on the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H4K32LCD]
platform = intel_mcs51
board = STC8H4K32LCD

----------------------------------------

TITLE: Configuring RAK811 LoRa Tracker Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the RAK811 LoRa Tracker board using the STM32 platform. Includes options to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:rak811_tracker]
platform = ststm32
board = rak811_tracker

; change microcontroller
board_build.mcu = stm32l151rbt6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring RAK811 LoRa Tracker Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the RAK811 LoRa Tracker board using the STM32 platform. Includes options to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:rak811_tracker]
platform = ststm32
board = rak811_tracker

; change microcontroller
board_build.mcu = stm32l151rbt6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Upload Protocol Configuration for TTGO T-Watch
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:ttgo-t-watch]
platform = espressif32
board = ttgo-t-watch

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol (stlink) for the ST Nucleo L432KC board.

LANGUAGE: ini
CODE:
[env:nucleo_l432kc]
platform = ststm32
board = nucleo_l432kc

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Slide Trinkey
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Adafruit Slide Trinkey board in a PlatformIO project configuration. It uses the 'sam-ba' protocol, which is the default for this board.

LANGUAGE: ini
CODE:
[env:adafruit_slidetrinkey_m0]
platform = atmelsam
board = adafruit_slidetrinkey_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Upload Protocol for STM32G431CB
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32G431CB board, using stlink as the upload method.

LANGUAGE: ini
CODE:
[env:genericSTM32G431CB]
platform = ststm32
board = genericSTM32G431CB

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ATtiny3227 MCU Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the ATtiny3227 board.

LANGUAGE: ini
CODE:
[env:ATtiny3227]
platform = atmelmegaavr
board = ATtiny3227

; change microcontroller
board_build.mcu = attiny3227

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Upload Protocol for Wio Node
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Wio Node board, with esptool as the default option.

LANGUAGE: ini
CODE:
[env:wio_node]
platform = espressif8266
board = wio_node

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC8H3K48S4 Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic STC8H3K48S4 board using the Intel MCS-51 platform. It demonstrates setting the board ID and platform in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8H3K48S4]
platform = intel_mcs51
board = STC8H3K48S4

----------------------------------------

TITLE: Configuring Basic Board Settings for Unexpected Maker NanoS3
DESCRIPTION: Basic configuration for setting up an Unexpected Maker NanoS3 board project using PlatformIO. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:um_nanos3]
platform = espressif32
board = um_nanos3

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_clue_nrf52840]
platform = nordicnrf52
board = adafruit_clue_nrf52840

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example of configuring the upload protocol for the TinyS3 board using esptool.

LANGUAGE: ini
CODE:
[env:um_tinys3]
platform = espressif32
board = um_tinys3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing M5Stack-ATOM Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:m5stack-atom]
platform = espressif32
board = m5stack-atom

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Elektor F072C8 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:elektor_f072c8]
platform = ststm32
board = elektor_f072c8

; change microcontroller
board_build.mcu = stm32f072c8t6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring PrntrBoard V2 in PlatformIO INI File
DESCRIPTION: Basic configuration for using the PrntrBoard V2 with the STM32 platform in a PlatformIO project. This snippet sets up the board and platform in the project's configuration file.

LANGUAGE: ini
CODE:
[env:prntr_v2]
platform = ststm32
board = prntr_v2

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:ttgo-t-oi-plus]
platform = espressif32
board = ttgo-t-oi-plus

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Customizing ItsyBitsy Board Configuration
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:itsybitsy32u4_5V]
platform = atmelavr
board = itsybitsy32u4_5V

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring NAMote72 Board in PlatformIO
DESCRIPTION: Basic configuration for NAMote72 board using the ststm32 platform in platformio.ini

LANGUAGE: ini
CODE:
[env:mote_l152rc]
platform = ststm32
board = mote_l152rc

----------------------------------------

TITLE: Setting Upload Protocol for IOXESP32
DESCRIPTION: PlatformIO configuration demonstrating how to specify the upload protocol for the IOXESP32 board.

LANGUAGE: ini
CODE:
[env:ioxesp32]
platform = espressif32
board = ioxesp32

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Tuino 096 MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Tuino 096 board.

LANGUAGE: ini
CODE:
[env:tuinozero96]
platform = atmelsam
board = tuinozero96

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for Espressif Generic ESP8266 ESP-07S
DESCRIPTION: This snippet shows how to set the upload protocol for the Espressif Generic ESP8266 ESP-07S board. It demonstrates setting the protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:esp07s]
platform = espressif8266
board = esp07s

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:mzeropro]
platform = atmelsam
board = mzeropro

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_pygamer_advance_m4]
platform = atmelsam
board = adafruit_pygamer_advance_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Basic Board Configuration for MAX32620FTHR in PlatformIO
DESCRIPTION: Initial configuration setup for the MAX32620FTHR board using PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:max32620fthr]
platform = maxim32
board = max32620fthr

----------------------------------------

TITLE: Configuring ATtiny1614 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny1614 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATtiny1614]
platform = atmelmegaavr
board = ATtiny1614

; change microcontroller
board_build.mcu = attiny1614

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing ATtiny3226 MCU Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller settings including MCU model and frequency.

LANGUAGE: ini
CODE:
[env:ATtiny3226]
platform = atmelmegaavr
board = ATtiny3226

; change microcontroller
board_build.mcu = attiny3226

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic Lion:Bit Board Settings
DESCRIPTION: Basic PlatformIO configuration for Lion:Bit Dev Board using espressif32 platform. Sets up the core board configuration.

LANGUAGE: ini
CODE:
[env:lionbit]
platform = espressif32
board = lionbit

----------------------------------------

TITLE: Overriding Default STC15F2K40S2 Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC15F2K40S2 board in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K40S2]
platform = intel_mcs51
board = STC15F2K40S2

; change microcontroller
board_build.mcu = stc15f2k40s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC12C5A56S2]
platform = intel_mcs51
board = STC12C5A56S2

; change microcontroller
board_build.mcu = stc12c5a56s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Particle Boron Board Settings
DESCRIPTION: Example of overriding default board settings in the platformio.ini file. This demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:particle_boron]
platform = nordicnrf52
board = particle_boron

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Custom M5Stamp-Pico Board Configuration
DESCRIPTION: Advanced PlatformIO configuration showing how to override default MCU and frequency settings for the M5Stamp-Pico board.

LANGUAGE: ini
CODE:
[env:m5stamp-pico]
platform = espressif32
board = m5stamp-pico

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing ATtiny13 Configuration in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:attiny13]
platform = atmelavr
board = attiny13

; change microcontroller
board_build.mcu = attiny13

; change MCU frequency
board_build.f_cpu = 9600000L

----------------------------------------

TITLE: Setting Upload Protocol for YeaCreate NSCREEN-32
DESCRIPTION: Configuration example for specifying the upload protocol for the YeaCreate NSCREEN-32 board. Sets the protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:nscreen-32]
platform = espressif32
board = nscreen-32

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for DOIT ESPduino32 in PlatformIO INI
DESCRIPTION: This snippet shows how to specify the upload protocol for the DOIT ESPduino32 board in a PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:esp32doit-espduino]
platform = espressif32
board = esp32doit-espduino

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Wraith V1 ESC Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:wraith32_v1]
platform = ststm32
board = wraith32_v1

; change microcontroller
board_build.mcu = stm32f051k6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Microduino Core
DESCRIPTION: Basic environment configuration for Microduino Core board using PlatformIO. Sets the platform to atmelavr and board to 328p8m.

LANGUAGE: ini
CODE:
[env:328p8m]
platform = atmelavr
board = 328p8m

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the Arduino Uno R4 Minima.

LANGUAGE: ini
CODE:
[env:uno_r4_minima]
platform = renesas-ra
board = uno_r4_minima

; change microcontroller
board_build.mcu = ra4m1

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing ESPino MCU Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the ESPino board

LANGUAGE: ini
CODE:
[env:espinotee]
platform = espressif8266
board = espinotee

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for ESP32 Pico Kit
DESCRIPTION: Configuration to specify the upload protocol for the ESP32 Pico Kit board. The example uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:pico32]
platform = espressif32
board = pico32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic ATtiny3217 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ATtiny3217 board in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny3217]
platform = atmelmegaavr
board = ATtiny3217

----------------------------------------

TITLE: Configuring Generic ATtiny4313 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic ATtiny4313 board in a PlatformIO project's configuration file. It sets the platform to atmelavr and the board to attiny4313.

LANGUAGE: ini
CODE:
[env:attiny4313]
platform = atmelavr
board = attiny4313

----------------------------------------

TITLE: Customizing STM32F410R8 MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:genericSTM32F410R8]
platform = ststm32
board = genericSTM32F410R8

; change microcontroller
board_build.mcu = stm32f410r8t6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ublox_evk_nina_b1]
platform = nordicnrf52
board = ublox_evk_nina_b1

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Rotary Trinkey
DESCRIPTION: Configuration snippet for specifying the upload protocol. In this example, it sets the protocol to 'sam-ba'.

LANGUAGE: ini
CODE:
[env:adafruit_rotarytrinkey_m0]
platform = atmelsam
board = adafruit_rotarytrinkey_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Feather ESP32-S3 TFT
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Adafruit Feather ESP32-S3 TFT board in a PlatformIO project configuration. The default protocol is 'esptool', but it can be changed using the 'upload_protocol' option.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3_tft]
platform = espressif32
board = adafruit_feather_esp32s3_tft

upload_protocol = esptool

----------------------------------------

TITLE: Advanced STM32F103ZF Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZF]
platform = ststm32
board = genericSTM32F103ZF

; change microcontroller
board_build.mcu = stm32f103zft6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing Sanguino ATmega644 (8 MHz) Board Settings
DESCRIPTION: This code demonstrates how to override default settings for the Sanguino ATmega644 or ATmega644A (8 MHz) board in PlatformIO. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sanguino_atmega644_8m]
platform = atmelavr
board = sanguino_atmega644_8m

; change microcontroller
board_build.mcu = atmega644

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic STC8H1K08 Board Settings
DESCRIPTION: Basic PlatformIO configuration for STC8H1K08 board setup using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H1K08]
platform = intel_mcs51
board = STC8H1K08

----------------------------------------

TITLE: Setting Upload Protocol for STM32F401RD
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the STM32F401RD board in the PlatformIO configuration. The default protocol is 'serial', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RD]
platform = ststm32
board = genericSTM32F401RD

upload_protocol = serial

----------------------------------------

TITLE: Customizing SDT32620B Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default SDT32620B board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sdt32620b]
platform = maxim32
board = sdt32620b

; change microcontroller
board_build.mcu = max32620iwg

; change MCU frequency
board_build.f_cpu = 96000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:sensesiot_weizen]
platform = espressif32
board = sensesiot_weizen

upload_protocol = esptool

----------------------------------------

TITLE: Overriding Default Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings for the Heltec CubeCell-1/2AA Node in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:cubecell_node]
platform = heltec-cubecell
board = cubecell_node

; change microcontroller
board_build.mcu = asr6502

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit NeoKey Trinkey
DESCRIPTION: This configuration snippet demonstrates how to set the upload protocol for the Adafruit NeoKey Trinkey board in PlatformIO. The default protocol is 'sam-ba', but this example shows how to explicitly set it.

LANGUAGE: ini
CODE:
[env:adafruit_neokeytrinkey_m0]
platform = atmelsam
board = adafruit_neokeytrinkey_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32G071B Discovery board. The board supports multiple protocols including stlink, blackmagic, cmsis-dap, jlink, and mbed.

LANGUAGE: ini
CODE:
[env:disco_g071rb]
platform = ststm32
board = disco_g071rb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing OpenRTK Board Parameters in PlatformIO
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:OpenRTK]
platform = aceinna_imu
board = OpenRTK

; change microcontroller
board_build.mcu = stm32f469IG

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Basic STC15F2K08S2 Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to set up an STC15F2K08S2 board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC15F2K08S2]
platform = intel_mcs51
board = STC15F2K08S2

----------------------------------------

TITLE: Basic Board Configuration for WEMOS LOLIN S3 Mini
DESCRIPTION: Basic PlatformIO configuration for setting up the WEMOS LOLIN S3 Mini board with ESP32 platform.

LANGUAGE: ini
CODE:
[env:lolin_s3_mini]
platform = espressif32
board = lolin_s3_mini

----------------------------------------

TITLE: ESP8266 ESP-07 Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration showing how to specify the upload protocol for the ESP8266 ESP-07 board.

LANGUAGE: ini
CODE:
[env:esp07]
platform = espressif8266
board = esp07

upload_protocol = esptool

----------------------------------------

TITLE: Customizing sakura.io Evaluation Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sakuraio_evb_01]
platform = ststm32
board = sakuraio_evb_01

; change microcontroller
board_build.mcu = stm32f411ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring Lattice iCEstick FPGA Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the basic configuration for the Lattice iCEstick FPGA Evaluation Kit in the platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:icestick]
platform = lattice_ice40
board = icestick

----------------------------------------

TITLE: Configuring Generic ESP8285 Module in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic ESP8285 Module in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:esp8285]
platform = espressif8266
board = esp8285

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for SAMD21G18A
DESCRIPTION: Basic configuration setup for the Atmel ATSAMW25-XPRO board in platformio.ini. This snippet specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:samd21g18a]
platform = atmelsam
board = samd21g18a

----------------------------------------

TITLE: Configuring Basic M200 V2 Board Settings
DESCRIPTION: Basic PlatformIO configuration for M200 V2 board initialization using the STM32 platform.

LANGUAGE: ini
CODE:
[env:malyanm200_f070cb]
platform = ststm32
board = malyanm200_f070cb

----------------------------------------

TITLE: Configuring ATmega165P/PA Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega165P/PA board in the PlatformIO project configuration file. It demonstrates setting the platform and board, as well as overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATmega165P]
platform = atmelavr
board = ATmega165P

; change microcontroller
board_build.mcu = atmega165p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic AVR32DA32 Build Environment in PlatformIO
DESCRIPTION: Basic configuration snippet for setting up an AVR32DA32 project environment in platformio.ini

LANGUAGE: ini
CODE:
[env:AVR32DA32]
platform = atmelmegaavr
board = AVR32DA32

----------------------------------------

TITLE: Configuring Basic STC8C2K16S2 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STC8C2K16S2 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8C2K16S2]
platform = intel_mcs51
board = STC8C2K16S2

----------------------------------------

TITLE: Configuring Upload Protocol Settings
DESCRIPTION: Configuration example showing how to specify the upload protocol for firmware deployment. Uses CMSIS-DAP as the upload method.

LANGUAGE: ini
CODE:
[env:nrf52832_mdk]
platform = nordicnrf52
board = nrf52832_mdk

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Configuring ATtiny1627 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny1627 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny1627]
platform = atmelmegaavr
board = ATtiny1627

; change microcontroller
board_build.mcu = attiny1627

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration for ThunderPack
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ThunderPack board

LANGUAGE: ini
CODE:
[env:thunder_pack_f411]
platform = ststm32
board = thunder_pack_f411

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Sanguino ATmega644 (8 MHz) Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Sanguino ATmega644 or ATmega644A (8 MHz) board in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:sanguino_atmega644_8m]
platform = atmelavr
board = sanguino_atmega644_8m

----------------------------------------

TITLE: Customizing STM32F411CE MCU and Clock Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the STM32F411CE board

LANGUAGE: ini
CODE:
[env:genericSTM32F411CE]
platform = ststm32
board = genericSTM32F411CE

; change microcontroller
board_build.mcu = stm32f411ceu6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:swervolf_nexys]
platform = chipsalliance
board = swervolf_nexys

; change microcontroller
board_build.mcu = 

; change MCU frequency
board_build.f_cpu = 320000000L

----------------------------------------

TITLE: Customizing MCU Settings for STM32VLDISCOVERY
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings like MCU model and frequency in PlatformIO's project configuration.

LANGUAGE: ini
CODE:
[env:disco_f100rb]
platform = ststm32
board = disco_f100rb

; change microcontroller
board_build.mcu = stm32f100rbt6

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring VNG VBLUno52 Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the VNG VBLUno52 board in the PlatformIO project configuration file. It sets the platform to nordicnrf52 and the board to vbluno52.

LANGUAGE: ini
CODE:
[env:vbluno52]
platform = nordicnrf52
board = vbluno52

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration demonstrating how to override default microcontroller and frequency settings for the Wio 3G board.

LANGUAGE: ini
CODE:
[env:wio_3g]
platform = ststm32
board = wio_3g

; change microcontroller
board_build.mcu = stm32f439vi

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Customizing Digilent chipKIT Pro MX4 Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows examples of changing the microcontroller and MCU frequency for the Digilent chipKIT Pro MX4.

LANGUAGE: ini
CODE:
[env:chipkit_pro_mx4]
platform = microchippic32
board = chipkit_pro_mx4

; change microcontroller
board_build.mcu = 32MX460F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Arduino MKR WAN 1310 Board in PlatformIO
DESCRIPTION: Basic configuration for the Arduino MKR WAN 1310 board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:mkrwan1310]
platform = atmelsam
board = mkrwan1310

----------------------------------------

TITLE: Configuring ATtiny1606 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny1606 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:ATtiny1606]
platform = atmelmegaavr
board = ATtiny1606

; change microcontroller
board_build.mcu = attiny1606

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic INI configuration for setting up the STC15W1K24S board with the intel_mcs51 platform in PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:STC15W1K24S]
platform = intel_mcs51
board = STC15W1K24S

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103C8 in PlatformIO
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the STM32F103C8 board in the PlatformIO configuration. It uses the 'stlink' protocol as an example.

LANGUAGE: ini
CODE:
[env:genericSTM32F103C8]
platform = ststm32
board = genericSTM32F103C8

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2_reversetft]
platform = espressif32
board = adafruit_feather_esp32s2_reversetft

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Particle Argon Board Settings
DESCRIPTION: Basic configuration for setting up a Particle Argon board project using the NordicNRF52 platform.

LANGUAGE: ini
CODE:
[env:particle_argon]
platform = nordicnrf52
board = particle_argon

----------------------------------------

TITLE: Upload Protocol Configuration for Raspberry Pi Pico
DESCRIPTION: PlatformIO configuration demonstrating how to specify the upload protocol for the Raspberry Pi Pico.

LANGUAGE: ini
CODE:
[env:pico]
platform = raspberrypi
board = pico

upload_protocol = picotool

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an Adafruit NeoPixel Trinkey project in PlatformIO using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:adafruit_neotrinkey_m0]
platform = atmelsam
board = adafruit_neotrinkey_m0

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:pinguino32]
platform = microchippic32
board = pinguino32

; change microcontroller
board_build.mcu = 32MX440F256H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing Generic STC8C2K64S4 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency for the Generic STC8C2K64S4 board.

LANGUAGE: ini
CODE:
[env:STC8C2K64S4]
platform = intel_mcs51
board = STC8C2K64S4

; change microcontroller
board_build.mcu = stc8c2k64s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Generic STC12C5A60S2 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC12C5A60S2]
platform = intel_mcs51
board = STC12C5A60S2

; change microcontroller
board_build.mcu = stc12c5a60s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration for STC12C5A56S2
DESCRIPTION: Basic PlatformIO configuration for STC12C5A56S2 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC12C5A56S2]
platform = intel_mcs51
board = STC12C5A56S2

----------------------------------------

TITLE: Setting Upload Protocol for unPhone 7
DESCRIPTION: Example of how to set the upload protocol for the unPhone 7 board in PlatformIO. The default protocol is 'esptool', but this can be changed as shown.

LANGUAGE: ini
CODE:
[env:unphone7]
platform = espressif32
board = unphone7

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: PlatformIO configuration with custom microcontroller and frequency settings for ATD1.47-S3

LANGUAGE: ini
CODE:
[env:atd147_s3]
platform = espressif32
board = atd147_s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring M5Stick-C Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the M5Stick-C board in the PlatformIO project configuration file. It sets the platform to espressif32 and specifies the board as m5stick-c.

LANGUAGE: ini
CODE:
[env:m5stick-c]
platform = espressif32
board = m5stick-c

----------------------------------------

TITLE: M300 Configuration with Custom MCU Settings
DESCRIPTION: PlatformIO configuration demonstrating how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:malyanm300_f070cb]
platform = ststm32
board = malyanm300_f070cb

; change microcontroller
board_build.mcu = stm32f070cbt6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring ST Nucleo L011K4 Board in PlatformIO
DESCRIPTION: Basic configuration for using the ST Nucleo L011K4 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_l011k4]
platform = ststm32
board = nucleo_l011k4

----------------------------------------

TITLE: Setting Upload Protocol for Unexpected Maker FeatherS2 Neo
DESCRIPTION: Configuration to specify the upload protocol for the Unexpected Maker FeatherS2 Neo board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:um_feathers2_neo]
platform = espressif32
board = um_feathers2_neo

upload_protocol = esptool

----------------------------------------

TITLE: Configuring uPesy ESP32 Wroom DevKit in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the uPesy ESP32 Wroom DevKit board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:upesy_wroom]
platform = espressif32
board = upesy_wroom

----------------------------------------

TITLE: Configuring FYSETC F6 V1.3 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the FYSETC F6 V1.3 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings like the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:fysetc_f6_13]
platform = atmelavr
board = fysetc_f6_13

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F401RE
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the ST Nucleo F401RE board in a PlatformIO project configuration. The default protocol is 'stlink', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:nucleo_f401re]
platform = ststm32
board = nucleo_f401re

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example of configuring the upload protocol for the ATSAMR21-XPRO board, using CMSIS-DAP as the protocol.

LANGUAGE: ini
CODE:
[env:samr21_xpro]
platform = atmelsam
board = samr21_xpro

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8F2K32S2]
platform = intel_mcs51
board = STC8F2K32S2

; change microcontroller
board_build.mcu = stc8f2k32s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO Environment for ESPectro Core
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the ESPectro Core board. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:espectro]
platform = espressif8266
board = espectro

----------------------------------------

TITLE: Configuring Seeeduino LoRaWAN Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Seeeduino LoRaWAN board using the atmelsam platform. Includes options to override default board settings.

LANGUAGE: ini
CODE:
[env:seeeduino_lorawan]
platform = atmelsam
board = seeeduino_lorawan

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for Wio Link in PlatformIO
DESCRIPTION: Configuration snippet for specifying the upload protocol for the Wio Link board in a PlatformIO project. This example sets the upload protocol to 'esptool'.

LANGUAGE: ini
CODE:
[env:wio_link]
platform = espressif8266
board = wio_link

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Digilent chipKIT Pro MX4
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Digilent chipKIT Pro MX4 board. It sets the platform to microchippic32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:chipkit_pro_mx4]
platform = microchippic32
board = chipkit_pro_mx4

----------------------------------------

TITLE: Customizing RYMCU ESP32-DevKitC Board Settings
DESCRIPTION: Example of overriding default board settings for the RYMCU ESP32-DevKitC, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:rymcu-esp32-devkitc]
platform = espressif32
board = rymcu-esp32-devkitc

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Sonoff Basic
DESCRIPTION: Minimal configuration required in platformio.ini to set up a project for Sonoff Basic board.

LANGUAGE: ini
CODE:
[env:sonoff_basic]\nplatform = espressif8266\nboard = sonoff_basic

----------------------------------------

TITLE: Configuring Arduino Nano ESP32 Board in PlatformIO
DESCRIPTION: Sets up the basic configuration for the Arduino Nano ESP32 board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:arduino_nano_esp32]
platform = espressif32
board = arduino_nano_esp32

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G2K16S2]
platform = intel_mcs51
board = STC8G2K16S2

; change microcontroller
board_build.mcu = stc8g2k16s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the XinaBox CW01 board. Supports espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:xinabox_cw01]
platform = espressif8266
board = xinabox_cw01

upload_protocol = esptool

----------------------------------------

TITLE: Configuring ItsyBitsy nRF52840 Express in platformio.ini
DESCRIPTION: Basic configuration for the ItsyBitsy nRF52840 Express board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_nrf52840]
platform = nordicnrf52
board = adafruit_itsybitsy_nrf52840

----------------------------------------

TITLE: Overriding Default ATtiny25 Settings in PlatformIO
DESCRIPTION: This code snippet demonstrates how to override default settings for the Generic ATtiny25 board in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:attiny25]
platform = atmelavr
board = attiny25

; change microcontroller
board_build.mcu = attiny25

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic Arduino Uno WiFi Rev2 Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up an Arduino Uno WiFi Rev2 project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:uno_wifi_rev2]
platform = atmelmegaavr
board = uno_wifi_rev2

----------------------------------------

TITLE: Setting Upload Protocol for Heltec Wireless Stick
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:heltec_wireless_stick]
platform = espressif32
board = heltec_wireless_stick

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Upload Protocol for ESP32-PRO
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ESP32-PRO board.

LANGUAGE: ini
CODE:
[env:esp32-pro]
platform = espressif32
board = esp32-pro

upload_protocol = esptool

----------------------------------------

TITLE: Customizing MCU Settings for VCCGND F407ZGT6
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:vccgnd_f407zg_mini]
platform = ststm32
board = vccgnd_f407zg_mini

; change microcontroller
board_build.mcu = stm32f407zgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing ATmega6450P Board Parameters
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega6450P]
platform = atmelavr
board = ATmega6450P

; change microcontroller
board_build.mcu = atmega6450p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for M5Stack-Core Ink in PlatformIO
DESCRIPTION: Configuration to set the upload protocol for M5Stack-Core Ink board. In this example, it's set to 'esptool'.

LANGUAGE: ini
CODE:
[env:m5stack-coreink]
platform = espressif32
board = m5stack-coreink

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic NodeMCU Board Settings
DESCRIPTION: Basic PlatformIO configuration for NodeMCU board using the espressif8266 platform.

LANGUAGE: ini
CODE:
[env:nodemcu]
platform = espressif8266
board = nodemcu

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:ioxesp32ps]
platform = espressif32
board = ioxesp32ps

upload_protocol = esptool

----------------------------------------

TITLE: Basic PlatformIO Environment Configuration for CubeCell Board
DESCRIPTION: Basic configuration snippet for setting up a PlatformIO environment for the Heltec CubeCell-Board-V2

LANGUAGE: ini
CODE:
[env:cubecell_board_v2]
platform = heltec-cubecell
board = cubecell_board_v2

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:wemos_d1_uno32]\nplatform = espressif32\nboard = wemos_d1_uno32\n\n; change microcontroller\nboard_build.mcu = esp32\n\n; change MCU frequency\nboard_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing STM32F407VE Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F407VET6]
platform = ststm32
board = genericSTM32F407VET6

; change microcontroller
board_build.mcu = stm32f407vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol for the Adafruit Feather M4 CAN board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m4_can]
platform = atmelsam
board = adafruit_feather_m4_can

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default MCU and frequency settings

LANGUAGE: ini
CODE:
[env:ublox_c030_u201]
platform = ststm32
board = ublox_c030_u201

; change microcontroller
board_build.mcu = stm32f437vg

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:quantum]
platform = espressif32
board = quantum

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring TI LaunchPad (Stellaris) Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the TI LaunchPad (Stellaris) board with lm4f120 microcontroller in a PlatformIO project's configuration file. It demonstrates setting the platform and board ID.

LANGUAGE: ini
CODE:
[env:lplm4f120h5qr]
platform = titiva
board = lplm4f120h5qr

----------------------------------------

TITLE: Basic W79E658 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO environment targeting the W79E658 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:W79E658]
platform = intel_mcs51
board = W79E658

----------------------------------------

TITLE: Basic STC8H8K64U Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for the STC8H8K64U board using the intel_mcs51 platform in platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC8H8K64U]
platform = intel_mcs51
board = STC8H8K64U

----------------------------------------

TITLE: Configuring Basic IceZUM Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the IceZUM Alhambra FPGA board using the lattice_ice40 platform.

LANGUAGE: ini
CODE:
[env:icezum]
platform = lattice_ice40
board = icezum

----------------------------------------

TITLE: Basic PlatformIO Configuration for PROS3
DESCRIPTION: Basic environment configuration for the Unexpected Maker PROS3 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:um_pros3]
platform = espressif32
board = um_pros3

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for SparkFun RedBoard Turbo board in platformio.ini file specifying the platform and board.

LANGUAGE: ini
CODE:
[env:sparkfun_redboard_turbo]
platform = atmelsam
board = sparkfun_redboard_turbo

----------------------------------------

TITLE: Configuring Adafruit Feather M4 Express in PlatformIO INI file
DESCRIPTION: Basic configuration for the Adafruit Feather M4 Express board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m4]
platform = atmelsam
board = adafruit_feather_m4

----------------------------------------

TITLE: Customizing Microduino Core+ Board Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:1284p16m]
platform = atmelavr
board = 1284p16m

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration for the STC15W104 board with custom microcontroller and frequency settings using board_build options.

LANGUAGE: ini
CODE:
[env:STC15W104]
platform = intel_mcs51
board = STC15W104

; change microcontroller
board_build.mcu = stc15w104

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced D-duino-32 Board Configuration
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:d-duino-32]
platform = espressif32
board = d-duino-32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Arduino Mega ATmega1280 Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project configuration. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:megaatmega1280]
platform = atmelavr
board = megaatmega1280

; change microcontroller
board_build.mcu = atmega1280

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing PX-HER0 MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the PX-HER0 board

LANGUAGE: ini
CODE:
[env:piconomix_px_her0]
platform = ststm32
board = piconomix_px_her0

; change microcontroller
board_build.mcu = stm32l072rb

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Upload Protocol Configuration for Watchy
DESCRIPTION: Shows how to configure the upload protocol for the Watchy board

LANGUAGE: ini
CODE:
[env:watchy]
platform = espressif32
board = watchy

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sonoff_basic]\nplatform = espressif8266\nboard = sonoff_basic\n\n; change microcontroller\nboard_build.mcu = esp8266\n\n; change MCU frequency\nboard_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing SODAQ Autonomo Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sodaq_autonomo]
platform = atmelsam
board = sodaq_autonomo

; change microcontroller
board_build.mcu = samd21j18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Olimex ARM-USB-OCD-H for Firmware Upload
DESCRIPTION: Example configuration for using the Olimex ARM-USB-OCD-H tool for firmware uploading in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = olimex-arm-usb-ocd-h
upload_protocol = olimex-arm-usb-ocd-h

----------------------------------------

TITLE: Configuring Elektor Uno R4 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Elektor Uno R4 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:elektor_uno_r4]
platform = atmelavr
board = elektor_uno_r4

; change microcontroller
board_build.mcu = atmega328pb

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration for ESPresso Lite 2.0
DESCRIPTION: Configuration example showing how to specify the upload protocol for firmware deployment.

LANGUAGE: ini
CODE:
[env:espresso_lite_v2]
platform = espressif8266
board = espresso_lite_v2

upload_protocol = esptool

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Basic configuration setup for STC8H4K32TLCD board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC8H4K32TLCD]
platform = intel_mcs51
board = STC8H4K32TLCD

----------------------------------------

TITLE: Configuring Laird Pinnacle 100 DVK Board in PlatformIO
DESCRIPTION: Basic configuration for using the Laird Connectivity Pinnacle 100 DVK board with the Nordic nRF52 platform in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:laird_pinnacle_100_dvk]
platform = nordicnrf52
board = laird_pinnacle_100_dvk

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit ItsyBitsy M0
DESCRIPTION: Configuration example for specifying the upload protocol for the Adafruit ItsyBitsy M0 board. It sets the protocol to 'sam-ba'.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_m0]
platform = atmelsam
board = adafruit_itsybitsy_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ST Nucleo F411RE board using PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:nucleo_f411re]
platform = ststm32
board = nucleo_f411re

----------------------------------------

TITLE: Customizing MoteinoMEGA Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:moteinomega]
platform = atmelavr
board = moteinomega

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example showing how to configure the upload protocol for the STM32F401RB board.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RB]
platform = ststm32
board = genericSTM32F401RB

upload_protocol = serial

----------------------------------------

TITLE: Configuring Basic Board Settings - PlatformIO INI
DESCRIPTION: Basic configuration for Arduino Portenta C33 board in platformio.ini file, setting the platform and board ID.

LANGUAGE: ini
CODE:
[env:portenta_c33]
platform = renesas-ra
board = portenta_c33

----------------------------------------

TITLE: Setting Upload Protocol for Deneyap Kart
DESCRIPTION: Configuration to specify the upload protocol for the Deneyap Kart board. In this example, it's set to the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:deneyapkart]
platform = espressif32
board = deneyapkart

upload_protocol = esptool

----------------------------------------

TITLE: Basic Board Configuration for Raytac MDBT50Q-RX
DESCRIPTION: Basic PlatformIO configuration for using the Raytac MDBT50Q-RX board with the Nordic nRF52 platform

LANGUAGE: ini
CODE:
[env:raytac_mdbt50q_rx]
platform = nordicnrf52
board = raytac_mdbt50q_rx

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ublox_c030_n211]
platform = ststm32
board = ublox_c030_n211

; change microcontroller
board_build.mcu = stm32f437vg

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Customizing STC8G2K32S4 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC8G2K32S4 board in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8G2K32S4]
platform = intel_mcs51
board = STC8G2K32S4

; change microcontroller
board_build.mcu = stc8g2k32s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring STM32F410CB Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F410CB board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F410CB]
platform = ststm32
board = genericSTM32F410CB

----------------------------------------

TITLE: Configuring PlatformIO Environment for Generic N79E824
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic N79E824 board. It includes the basic configuration and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:N79E824]
platform = intel_mcs51
board = N79E824

; change microcontroller
board_build.mcu = n79e824

; change MCU frequency
board_build.f_cpu = 6000000L

----------------------------------------

TITLE: Configuring Basic STC15F202EA Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STC15F202EA board that sets up the platform and board type.

LANGUAGE: ini
CODE:
[env:STC15F202EA]
platform = intel_mcs51
board = STC15F202EA

----------------------------------------

TITLE: Configuring PlatformIO Environment for Trueverit ESP32 Universal IoT Driver
DESCRIPTION: Sets up a PlatformIO environment for the Trueverit ESP32 Universal IoT Driver board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:trueverit-iot-driver]
platform = espressif32
board = trueverit-iot-driver

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Basic configuration settings for the Smart Bee S3 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:bee_s3]
platform = espressif32
board = bee_s3

----------------------------------------

TITLE: Basic PlatformIO Configuration for Olimex STM32-P405
DESCRIPTION: Basic configuration to set up an Olimex STM32-P405 project using PlatformIO. Specifies the platform and board name.

LANGUAGE: ini
CODE:
[env:olimex_p405]
platform = ststm32
board = olimex_p405

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Adafruit ItsyBitsy M4 board.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_m4]
platform = atmelsam
board = adafruit_itsybitsy_m4

; change microcontroller
board_build.mcu = samd51g19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring Basic STM32F4Stamp Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F4Stamp F405 board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:stm32f4stamp]
platform = ststm32
board = stm32f4stamp

----------------------------------------

TITLE: Customizing M200 V2 MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the M200 V2 board.

LANGUAGE: ini
CODE:
[env:malyanm200_f070cb]
platform = ststm32
board = malyanm200_f070cb

; change microcontroller
board_build.mcu = stm32f070cbt6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic Board Configuration with PlatformIO
DESCRIPTION: Basic configuration settings for SparkFun Blynk Board using the espressif8266 platform in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:sparkfunBlynk]
platform = espressif8266
board = sparkfunBlynk

----------------------------------------

TITLE: Configuring Generic STC15F101W Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15F101W board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15F101W]
platform = intel_mcs51
board = STC15F101W

; change microcontroller
board_build.mcu = stc15f101w

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic MS51TC0AE Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for MS51TC0AE board in platformio.ini file, specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:MS51TC0AE]
platform = intel_mcs51
board = MS51TC0AE

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Trellis M4
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Adafruit Trellis M4 board in a PlatformIO project. It uses the 'sam-ba' protocol, which is the default for this board.

LANGUAGE: ini
CODE:
[env:adafruit_trellis_m4]
platform = atmelsam
board = adafruit_trellis_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:featheresp32-s2]
platform = espressif32
board = featheresp32-s2

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Maple RET6 MCU Settings
DESCRIPTION: Example of overriding default microcontroller and frequency settings for the Maple RET6 board

LANGUAGE: ini
CODE:
[env:maple_ret6]
platform = ststm32
board = maple_ret6

; change microcontroller
board_build.mcu = stm32f103ret6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Example configuration for specifying the upload protocol for the BlackPill F103C8 board.

LANGUAGE: ini
CODE:
[env:blackpill_f103c8_128]
platform = ststm32
board = blackpill_f103c8_128

upload_protocol = stlink

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:nucleo_g031k8]
platform = ststm32
board = nucleo_g031k8

; change microcontroller
board_build.mcu = stm32g031k8

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Deneyap Kart G Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Deneyap Kart G board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:deneyapkartg]
platform = espressif32
board = deneyapkartg

----------------------------------------

TITLE: Configuring Espressif Generic ESP8266 ESP-07S Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Espressif Generic ESP8266 ESP-07S board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:esp07s]
platform = espressif8266
board = esp07s

----------------------------------------

TITLE: Customizing Generic STC89C52RC Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC89C52RC]
platform = intel_mcs51
board = STC89C52RC

; change microcontroller
board_build.mcu = stc89c52rc

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic ML51TD1AE Board Configuration
DESCRIPTION: Basic PlatformIO configuration for ML51TD1AE board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:ML51TD1AE]
platform = intel_mcs51
board = ML51TD1AE

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Feather ESP32-S3 Reverse TFT in PlatformIO INI
DESCRIPTION: Configuration example showing how to set the upload protocol for the Adafruit Feather ESP32-S3 Reverse TFT board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s3_reversetft]
platform = espressif32
board = adafruit_feather_esp32s3_reversetft

upload_protocol = esptool

----------------------------------------

TITLE: Configuring WEMOS LOLIN32 Board in PlatformIO
DESCRIPTION: Basic configuration for using the WEMOS LOLIN32 board with the Espressif32 platform in a PlatformIO project's platformio.ini file.

LANGUAGE: ini
CODE:
[env:lolin32]
platform = espressif32
board = lolin32

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:cubecell_module_plus]
platform = heltec-cubecell
board = cubecell_module_plus

; change microcontroller
board_build.mcu = asr6502

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. The board supports atmel-ice, jlink, and sam-ba protocols.

LANGUAGE: ini
CODE:
[env:sparkfun_samd51_micromod]
platform = atmelsam
board = sparkfun_samd51_micromod

upload_protocol = sam-ba

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Configures the basic environment settings for using the STC15F203EA board with the intel_mcs51 platform in PlatformIO.

LANGUAGE: ini
CODE:
[env:STC15F203EA]
platform = intel_mcs51
board = STC15F203EA

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the STC8F2K64S2 board in PlatformIO.

LANGUAGE: ini
CODE:
[env:STC8F2K64S2]
platform = intel_mcs51
board = STC8F2K64S2

; change microcontroller
board_build.mcu = stc8f2k64s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing M5Stack StampS3 Board Settings
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:m5stack-stamps3]
platform = espressif32
board = m5stack-stamps3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upload Protocol Configuration for HUZZAH ESP8266
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:huzzah]
platform = espressif8266
board = huzzah

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Valetron Systems VALTRACK-V4VTS
DESCRIPTION: Basic PlatformIO configuration for the Valetron Systems VALTRACK-V4VTS board. Sets the platform to espressif32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:valtrack_v4_vts_esp32_c3]
platform = espressif32
board = valtrack_v4_vts_esp32_c3

----------------------------------------

TITLE: Configuring Generic N79E844 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic N79E844 board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E844]
platform = intel_mcs51
board = N79E844

; change microcontroller
board_build.mcu = n79e844

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Upload Protocol Configuration for Olimex MOD-WIFI-ESP8266
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:modwifi]
platform = espressif8266
board = modwifi

upload_protocol = esptool

----------------------------------------

TITLE: Overriding Default Sino:Bit Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Sino:Bit settings in the PlatformIO configuration. It changes the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:Sinobit]
platform = nordicnrf51
board = Sinobit

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring TI FraunchPad MSP-EXP430FR5739LP in PlatformIO
DESCRIPTION: This snippet shows how to configure the TI FraunchPad MSP-EXP430FR5739LP board in a PlatformIO project's configuration file. It demonstrates setting the platform and board, as well as overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:lpmsp430fr5739]
platform = timsp430
board = lpmsp430fr5739

; change microcontroller
board_build.mcu = msp430fr5739

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for MKR GSM 1400
DESCRIPTION: Configuration example showing how to specify the upload protocol for the MKR GSM 1400 board.

LANGUAGE: ini
CODE:
[env:mkrgsm1400]
platform = atmelsam
board = mkrgsm1400

upload_protocol = sam-ba

----------------------------------------

TITLE: Setting Upload Protocol for Seeed Studio XIAO ESP32S3
DESCRIPTION: Example of specifying the upload protocol for the Seeed Studio XIAO ESP32S3 board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:seeed_xiao_esp32s3]
platform = espressif32
board = seeed_xiao_esp32s3

upload_protocol = esptool

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic INI configuration to set up an ArtronShop IOXESP32PS board project in PlatformIO

LANGUAGE: ini
CODE:
[env:ioxesp32ps]
platform = espressif32
board = ioxesp32ps

----------------------------------------

TITLE: Setting Upload Protocol for Maple RET6
DESCRIPTION: Configuration example showing how to set the upload protocol for the Maple RET6 board

LANGUAGE: ini
CODE:
[env:maple_ret6]
platform = ststm32
board = maple_ret6

upload_protocol = dfu

----------------------------------------

TITLE: Customizing Adafruit Pro Trinket 5V/16MHz (FTDI) Settings
DESCRIPTION: This code demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:protrinket5ftdi]
platform = atmelavr
board = protrinket5ftdi

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing ATmega3209 Board Settings in PlatformIO
DESCRIPTION: Extended INI configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega3209]
platform = atmelmegaavr
board = ATmega3209

; change microcontroller
board_build.mcu = atmega3209

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing ST Discovery F072RB Board Settings
DESCRIPTION: Demonstrates how to override default board settings such as microcontroller and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:disco_f072rb]
platform = ststm32
board = disco_f072rb

; change microcontroller
board_build.mcu = stm32f072rbt6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for LilyGo T-Display
DESCRIPTION: Configuration example for specifying the upload protocol for the board, with esptool as the default option.

LANGUAGE: ini
CODE:
[env:lilygo-t-display]
platform = espressif32
board = lilygo-t-display

upload_protocol = esptool

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8G1K08A
DESCRIPTION: Basic configuration setup for STC8G1K08A board in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8G1K08A]
platform = intel_mcs51
board = STC8G1K08A

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended environment configuration demonstrating how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mega_pic32]
platform = microchippic32
board = mega_pic32

; change microcontroller
board_build.mcu = 32MX795F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing WeAct Studio BlackPill V2.0 (STM32F411CE) Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. This snippet demonstrates how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:blackpill_f411ce]
platform = ststm32
board = blackpill_f411ce

; change microcontroller
board_build.mcu = stm32f411ceu6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the Waveshare BLE400 board.

LANGUAGE: ini
CODE:
[env:waveshare_ble400]
platform = nordicnrf51
board = waveshare_ble400

upload_protocol = jlink

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Adafruit BLM Badge.

LANGUAGE: ini
CODE:
[env:adafruit_blm_badge]
platform = atmelsam
board = adafruit_blm_badge

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Custom MCU Configuration for Olimex STM32-P405
DESCRIPTION: Advanced configuration demonstrating how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:olimex_p405]
platform = ststm32
board = olimex_p405

; change microcontroller
board_build.mcu = stm32f405rgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration example for setting up LinkIt Smart 7688 Duo board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:smart7688]
platform = atmelavr
board = smart7688

----------------------------------------

TITLE: Customizing NXP i.MX RT1010 Evaluation Kit settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mimxrt1010_evk]
platform = nxpimxrt
board = mimxrt1010_evk

; change microcontroller
board_build.mcu = mimxrt1011dae5a

; change MCU frequency
board_build.f_cpu = 500000000L

----------------------------------------

TITLE: Basic MS51DA9AE Board Configuration for PlatformIO
DESCRIPTION: Basic PlatformIO configuration for MS51DA9AE board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:MS51DA9AE]
platform = intel_mcs51
board = MS51DA9AE

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC12C5A52S2
DESCRIPTION: Basic environment configuration for STC12C5A52S2 board using the intel_mcs51 platform in platformio.ini

LANGUAGE: ini
CODE:
[env:STC12C5A52S2]
platform = intel_mcs51
board = STC12C5A52S2

----------------------------------------

TITLE: Configuring Generic STC8F1K17 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC8F1K17 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:STC8F1K17]
platform = intel_mcs51
board = STC8F1K17

; change microcontroller
board_build.mcu = stc8f1k17

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for FeatherS2
DESCRIPTION: Basic configuration setup for using Unexpected Maker FeatherS2 board with PlatformIO ecosystem.

LANGUAGE: ini
CODE:
[env:um_feathers2]
platform = espressif32
board = um_feathers2

----------------------------------------

TITLE: Setting Upload Protocol for Calliope Mini
DESCRIPTION: Configuration example for specifying the upload protocol (cmsis-dap) for the Calliope mini board.

LANGUAGE: ini
CODE:
[env:calliope_mini]
platform = nordicnrf51
board = calliope_mini

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol (sam-ba) for the Adafruit BLM Badge.

LANGUAGE: ini
CODE:
[env:adafruit_blm_badge]
platform = atmelsam
board = adafruit_blm_badge

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring ATmega16 Board in PlatformIO
DESCRIPTION: Basic configuration for ATmega16 board in platformio.ini file. Sets up the platform and board name.

LANGUAGE: ini
CODE:
[env:ATmega16]
platform = atmelavr
board = ATmega16

----------------------------------------

TITLE: Basic Board Configuration for STC15W102
DESCRIPTION: Basic PlatformIO configuration for setting up the STC15W102 board with the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15W102]
platform = intel_mcs51
board = STC15W102

----------------------------------------

TITLE: Setting Upload Protocol for Black STM32F407VE
DESCRIPTION: Configuration example for changing the upload protocol to ST-Link for the Black STM32F407VE board in PlatformIO.

LANGUAGE: ini
CODE:
[env:black_f407ve]
platform = ststm32
board = black_f407ve

upload_protocol = stlink

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the RedBearLab BLE Nano 1.5.

LANGUAGE: ini
CODE:
[env:redBearLabBLENano]
platform = nordicnrf51
board = redBearLabBLENano

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Upload Protocol for Blues Cygnet
DESCRIPTION: Example configuration for setting the upload protocol to ST-Link for the Blues Cygnet board.

LANGUAGE: ini
CODE:
[env:blues_cygnet]
platform = ststm32
board = blues_cygnet

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for ST 32L100DISCOVERY
DESCRIPTION: This configuration sets the upload protocol for the ST 32L100DISCOVERY board to ST-Link, which is the default protocol. It demonstrates how to explicitly specify the upload protocol in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:disco_l100rc]
platform = ststm32
board = disco_l100rc

upload_protocol = stlink

----------------------------------------

TITLE: Advanced ML51UC0AE Board Configuration with Custom Settings
DESCRIPTION: Extended configuration for ML51UC0AE board with custom microcontroller and frequency settings. Demonstrates how to override default board settings using board_build options.

LANGUAGE: ini
CODE:
[env:ML51UC0AE]
platform = intel_mcs51
board = ML51UC0AE

; change microcontroller
board_build.mcu = ml51uc0ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Microduino Core+
DESCRIPTION: This code snippet demonstrates how to set up a PlatformIO environment for the Microduino Core+ board in the project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:644pa16m]
platform = atmelavr
board = 644pa16m

----------------------------------------

TITLE: Customizing Arduino Yun Mini MCU Settings
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:yunmini]
platform = atmelavr
board = yunmini

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Heltec CubeCell Capsule Solar Sensor Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings for the Heltec CubeCell Capsule Solar Sensor (HTCC-AC02). It shows examples of changing the microcontroller and MCU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:cubecell_capsule_solar_sensor]
platform = heltec-cubecell
board = cubecell_capsule_solar_sensor

; change microcontroller
board_build.mcu = asr6051

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Sonoff SV Board in PlatformIO
DESCRIPTION: Basic configuration for the Sonoff SV board in the PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sonoff_sv]
platform = espressif8266
board = sonoff_sv

----------------------------------------

TITLE: Basic PlatformIO Configuration for IAP15F2K61S2
DESCRIPTION: Default configuration settings for the IAP15F2K61S2 board in platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:IAP15F2K61S2]
platform = intel_mcs51
board = IAP15F2K61S2

----------------------------------------

TITLE: Customizing ST Nucleo H723ZG Board Settings
DESCRIPTION: Example of overriding default board settings, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_h723zg]
platform = ststm32
board = nucleo_h723zg

; change microcontroller
board_build.mcu = stm32h723zgt6

; change MCU frequency
board_build.f_cpu = 550000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Seeeduino Wio Lite MG126 board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:seeed_wio_lite_mg126]
platform = atmelsam
board = seeed_wio_lite_mg126

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to set custom upload protocol for the ST Nucleo F303ZE

LANGUAGE: ini
CODE:
[env:nucleo_f303ze]
platform = ststm32
board = nucleo_f303ze

upload_protocol = stlink

----------------------------------------

TITLE: Customizing SODAQ Mbili MCU Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the SODAQ Mbili board.

LANGUAGE: ini
CODE:
[env:sodaq_mbili]
platform = atmelavr
board = sodaq_mbili

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing MCU Settings for ST Nucleo F042K6
DESCRIPTION: Configuration example showing how to override default microcontroller settings including MCU model and frequency

LANGUAGE: ini
CODE:
[env:nucleo_f042k6]
platform = ststm32
board = nucleo_f042k6

; change microcontroller
board_build.mcu = stm32f042k6t6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic STC8F1K08S2A10 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for the STC8F1K08S2A10 board in platformio.ini config file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8F1K08S2A10]
platform = intel_mcs51
board = STC8F1K08S2A10

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the ST Nucleo F070RB board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:nucleo_f070rb]
platform = ststm32
board = nucleo_f070rb

----------------------------------------

TITLE: Advanced STM32F103RB Configuration with MCU Options
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RB]
platform = ststm32
board = genericSTM32F103RB

; change microcontroller
board_build.mcu = stm32f103rbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring ST Nucleo F429ZI Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo F429ZI board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:nucleo_f429zi]
platform = ststm32
board = nucleo_f429zi

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15W401AS
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic STC15W401AS board. It sets the platform to intel_mcs51 and the board to STC15W401AS.

LANGUAGE: ini
CODE:
[env:STC15W401AS]
platform = intel_mcs51
board = STC15W401AS

----------------------------------------

TITLE: Setting Upload Protocol for ST STM32F0308DISCOVERY
DESCRIPTION: Configuration to specify the upload protocol for the ST STM32F0308DISCOVERY board. In this example, it's set to 'stlink'.

LANGUAGE: ini
CODE:
[env:disco_f030r8]
platform = ststm32
board = disco_f030r8

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for ST Nucleo F303ZE board in platformio.ini file

LANGUAGE: ini
CODE:
[env:nucleo_f303ze]
platform = ststm32
board = nucleo_f303ze

----------------------------------------

TITLE: Configuring Generic ML51XB9AE Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic ML51XB9AE board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ML51XB9AE]
platform = intel_mcs51
board = ML51XB9AE

; change microcontroller
board_build.mcu = ml51xb9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example showing how to set the upload protocol for the Arduino Uno R4 WiFi board to sam-ba.

LANGUAGE: ini
CODE:
[env:uno_r4_wifi]
platform = renesas-ra
board = uno_r4_wifi

upload_protocol = sam-ba

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, with STLink as the default option.

LANGUAGE: ini
CODE:
[env:LowCostRTK]
platform = aceinna_imu
board = LowCostRTK

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for u-blox EVK-ODIN-W2 Board
DESCRIPTION: Basic PlatformIO configuration for the u-blox EVK-ODIN-W2 board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:ublox_evk_odin_w2]
platform = ststm32
board = ublox_evk_odin_w2

----------------------------------------

TITLE: Customizing SparkFun SAMD21 MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings like MCU model and frequency in PlatformIO's project configuration.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_mini_usb]
platform = atmelsam
board = sparkfun_samd21_mini_usb

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the Adafruit Feather ESP32-S2 TFT board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2_tft]
platform = espressif32
board = adafruit_feather_esp32s2_tft

----------------------------------------

TITLE: Configuring Basic Arduboy DevKit Board Settings
DESCRIPTION: Basic PlatformIO configuration for Arduboy DevKit board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:arduboy_devkit]
platform = atmelavr
board = arduboy_devkit

----------------------------------------

TITLE: Configuring Generic IRC15W415S Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic IRC15W415S board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:IRC15W415S]
platform = intel_mcs51
board = IRC15W415S

; change microcontroller
board_build.mcu = irc15w415s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Overriding Default WeMos WiFi and Bluetooth Battery Board Settings
DESCRIPTION: This example demonstrates how to override default board settings in a PlatformIO project. It changes the microcontroller and MCU frequency for the WeMos WiFi and Bluetooth Battery board.

LANGUAGE: ini
CODE:
[env:wemosbat]
platform = espressif32
board = wemosbat

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing N79E822 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E822]
platform = intel_mcs51
board = N79E822

; change microcontroller
board_build.mcu = n79e822

; change MCU frequency
board_build.f_cpu = 6000000L

----------------------------------------

TITLE: Basic IRC15W107 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for the IRC15W107 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:IRC15W107]
platform = intel_mcs51
board = IRC15W107

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Due (USB Native Port)
DESCRIPTION: Configuration example showing how to change the upload protocol for the Arduino Due board. In this case, it's set to use the SAM-BA protocol.

LANGUAGE: ini
CODE:
[env:dueUSB]
platform = atmelsam
board = dueUSB

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing WEMOS LOLIN S2 PICO Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lolin_s2_pico]
platform = espressif32
board = lolin_s2_pico

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Nucleo G474RE
DESCRIPTION: Basic configuration for setting up a PlatformIO environment targeting the Nucleo G474RE board. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_g474re]
platform = ststm32
board = nucleo_g474re

----------------------------------------

TITLE: Configuring Arduino Leonardo in PlatformIO
DESCRIPTION: This snippet shows how to configure an Arduino Leonardo board in a PlatformIO project's configuration file. It sets the platform and board type, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:leonardo]
platform = atmelavr
board = leonardo

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ATmega329P/PA Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega329P/PA board in a PlatformIO project configuration file. It includes options for setting the platform, board, microcontroller, and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega329P]
platform = atmelavr
board = ATmega329P

; change microcontroller
board_build.mcu = atmega329p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing DFRobot Beetle ESP32-C3 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:dfrobot_beetle_esp32c3]
platform = espressif32
board = dfrobot_beetle_esp32c3

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Configuring Wio Link Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Wio Link board using the Espressif8266 platform. This snippet sets up the environment for building projects targeting the Wio Link hardware.

LANGUAGE: ini
CODE:
[env:wio_link]
platform = espressif8266
board = wio_link

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:adafruit_ledglasses_nrf52840]
platform = nordicnrf52
board = adafruit_ledglasses_nrf52840

upload_protocol = nrfutil

----------------------------------------

TITLE: Configuring PlatformIO Environment for Fubarino SD Board
DESCRIPTION: This code snippet shows how to set up a PlatformIO project environment for the Fubarino SD (1.5) board. It specifies the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:fubarino_sd]
platform = microchippic32
board = fubarino_sd

; change microcontroller
board_build.mcu = 32MX795F512H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Example configuration for specifying the upload protocol for the RYMCU STM32F407VE board, using STLink as the upload method.

LANGUAGE: ini
CODE:
[env:rymcu_f407ve]
platform = ststm32
board = rymcu_f407ve

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Core board F401RCT6 in platformio.ini
DESCRIPTION: Basic configuration for the Core board F401RCT6 in the PlatformIO project configuration file. Sets the platform and board options.

LANGUAGE: ini
CODE:
[env:coreboard_f401rc]
platform = ststm32
board = coreboard_f401rc

----------------------------------------

TITLE: Configuring PlatformIO for Generic N79E845 Board
DESCRIPTION: This snippet shows how to configure the project's platformio.ini file to use the Generic N79E845 board with the Intel MCS-51 platform. It includes basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:N79E845]
platform = intel_mcs51
board = N79E845

; change microcontroller
board_build.mcu = n79e845

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Customizing Microduino Core+ Board Settings
DESCRIPTION: This example shows how to override default board settings in the PlatformIO configuration. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:644pa16m]
platform = atmelavr
board = 644pa16m

; change microcontroller
board_build.mcu = atmega644p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Sparky V1 F303
DESCRIPTION: This code demonstrates how to set the upload protocol for the Sparky V1 F303 board in the PlatformIO configuration. The default protocol is 'stlink', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:sparky_v1]
platform = ststm32
board = sparky_v1

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC12C5A32S2
DESCRIPTION: This snippet shows how to set up the build environment for the Generic STC12C5A32S2 board in the PlatformIO configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:STC12C5A32S2]
platform = intel_mcs51
board = STC12C5A32S2

; change microcontroller
board_build.mcu = stc12c5a32s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for ESPresso Lite 1.0
DESCRIPTION: Basic project configuration for ESPresso Lite 1.0 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:espresso_lite_v1]
platform = espressif8266
board = espresso_lite_v1

----------------------------------------

TITLE: Basic Board Configuration for ESPresso Lite 2.0 in PlatformIO
DESCRIPTION: Basic configuration for setting up an ESPresso Lite 2.0 project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:espresso_lite_v2]
platform = espressif8266
board = espresso_lite_v2

----------------------------------------

TITLE: Basic PlatformIO Configuration for Curiosity Nano AVR128DB48
DESCRIPTION: Basic configuration snippet for setting up a PlatformIO project for the Curiosity Nano AVR128DB48 board using the atmelmegaavr platform.

LANGUAGE: ini
CODE:
[env:curiosity_nano_db]
platform = atmelmegaavr
board = curiosity_nano_db

----------------------------------------

TITLE: Configuring PlatformIO for Pontech Quick240 Board
DESCRIPTION: This snippet demonstrates how to configure a PlatformIO project for the Pontech Quick240 board. It sets the platform to microchippic32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:quick240_usb]
platform = microchippic32
board = quick240_usb

----------------------------------------

TITLE: Customizing TI LaunchPad (Stellaris) Board Settings in PlatformIO
DESCRIPTION: This snippet illustrates how to override default board settings for the TI LaunchPad (Stellaris) in a PlatformIO project. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lplm4f120h5qr]
platform = titiva
board = lplm4f120h5qr

; change microcontroller
board_build.mcu = lplm4f120h5qr

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Nucleo G070RB Board in PlatformIO
DESCRIPTION: Basic configuration for the Nucleo G070RB board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_g070rb]
platform = ststm32
board = nucleo_g070rb

----------------------------------------

TITLE: Custom MCU Configuration for Watchy Board
DESCRIPTION: Demonstrates how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:watchy]
platform = espressif32
board = watchy

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring SODAQ ONE Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the SODAQ ONE board using the atmelsam platform. This snippet demonstrates how to set up a project environment for the SODAQ ONE.

LANGUAGE: ini
CODE:
[env:sodaq_one]
platform = atmelsam
board = sodaq_one

----------------------------------------

TITLE: Configuring ESPino32 Board in PlatformIO's project configuration
DESCRIPTION: This snippet shows how to configure the ESPino32 board in the PlatformIO project configuration file. It sets the platform to espressif32 and the board to espino32.

LANGUAGE: ini
CODE:
[env:espino32]
platform = espressif32
board = espino32

----------------------------------------

TITLE: Configuring NodeMCU 1.0 (ESP-12E Module) in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the NodeMCU 1.0 (ESP-12E Module) in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:ublox_c030_u201]
platform = ststm32
board = ublox_c030_u201

upload_protocol = mbed

----------------------------------------

TITLE: Overriding Default Arduino Nano Every Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default board settings in PlatformIO. It shows how to change the microcontroller and MCU frequency for the Arduino Nano Every.

LANGUAGE: ini
CODE:
[env:nano_every]
platform = atmelmegaavr
board = nano_every

; change microcontroller
board_build.mcu = atmega4809

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Fubarino Mini Board in PlatformIO INI
DESCRIPTION: This snippet shows how to configure the Fubarino Mini board in a PlatformIO project configuration file. It includes the basic setup and examples of overriding default board settings.

LANGUAGE: ini
CODE:
[env:fubarino_mini]
platform = microchippic32
board = fubarino_mini

; change microcontroller
board_build.mcu = 32MX250F128D

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STM32G0316-DISCO
DESCRIPTION: Basic environment configuration for the STM32G0316-DISCO board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:disco_g031j6]
platform = ststm32
board = disco_g031j6

----------------------------------------

TITLE: Configuring TAMC DPU ESP32 Board in PlatformIO
DESCRIPTION: Basic configuration for the TAMC DPU ESP32 board in the project's platformio.ini file. It sets the platform to espressif32 and the board to dpu_esp32.

LANGUAGE: ini
CODE:
[env:dpu_esp32]
platform = espressif32
board = dpu_esp32

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15F201EA
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic STC15F201EA board. It sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC15F201EA]
platform = intel_mcs51
board = STC15F201EA

----------------------------------------

TITLE: Configuring SODAQ Autonomo Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the SODAQ Autonomo board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sodaq_autonomo]
platform = atmelsam
board = sodaq_autonomo

----------------------------------------

TITLE: Upload Protocol Configuration for ST Nucleo L433RC-P
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the ST Nucleo L433RC-P board.

LANGUAGE: ini
CODE:
[env:nucleo_l433rc_p]
platform = ststm32
board = nucleo_l433rc_p

upload_protocol = stlink

----------------------------------------

TITLE: Customizing STM32F103ZD board settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. This snippet demonstrates how to change the microcontroller model and CPU frequency for the STM32F103ZD board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZD]
platform = ststm32
board = genericSTM32F103ZD

; change microcontroller
board_build.mcu = stm32f103zdt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for SparkFun SAMD51 MicroMod board in platformio.ini file. Sets the platform to atmelsam and specifies the board model.

LANGUAGE: ini
CODE:
[env:sparkfun_samd51_micromod]
platform = atmelsam
board = sparkfun_samd51_micromod

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Configuration with custom microcontroller and frequency settings for the ST Nucleo F303ZE

LANGUAGE: ini
CODE:
[env:nucleo_f303ze]
platform = ststm32
board = nucleo_f303ze

; change microcontroller
board_build.mcu = stm32f303zet6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol for NXP LPCXpresso54608 in PlatformIO INI File
DESCRIPTION: Configures the upload protocol for the NXP LPCXpresso54608 board. The board supports 'jlink' and 'mbed' protocols, with 'mbed' as the default.

LANGUAGE: ini
CODE:
[env:lpc546xx]
platform = nxplpc
board = lpc546xx

upload_protocol = mbed

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended INI configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:cubecell_gps]
platform = heltec-cubecell
board = cubecell_gps

; change microcontroller
board_build.mcu = asr6502

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring PlatformIO for Raspberry Pi 2 Model B
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Raspberry Pi 2 Model B board. It sets the platform to linux_arm and specifies the board ID.

LANGUAGE: ini
CODE:
[env:raspberrypi_2b]
platform = linux_arm
board = raspberrypi_2b

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for the STC12C5A08S2 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC12C5A08S2]
platform = intel_mcs51
board = STC12C5A08S2

----------------------------------------

TITLE: Customizing ATtiny3217 Board Settings in PlatformIO
DESCRIPTION: Advanced configuration for ATtiny3217 board showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATtiny3217]
platform = atmelmegaavr
board = ATtiny3217

; change microcontroller
board_build.mcu = attiny3217

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Arduino MKR NB 1500 Board Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:mkrnb1500]
platform = atmelsam
board = mkrnb1500

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Generic STC8C2K60S2 Board in PlatformIO INI File
DESCRIPTION: Basic configuration for using the Generic STC8C2K60S2 board in a PlatformIO project's ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8C2K60S2]
platform = intel_mcs51
board = STC8C2K60S2

----------------------------------------

TITLE: Configuring PlatformIO for Armed v1 Board
DESCRIPTION: Basic PlatformIO configuration for the Armed v1 3D Printer Controller board. Sets the platform to STM32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:armed_v1]
platform = ststm32
board = armed_v1

----------------------------------------

TITLE: Basic Board Configuration for ESP32 KB32-FT
DESCRIPTION: Minimal configuration required to set up a PlatformIO project for the MakerAsia KB32-FT board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:kb32-ft]
platform = espressif32
board = kb32-ft

----------------------------------------

TITLE: Customizing ATmega3290P Board Parameters in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega3290P]
platform = atmelavr
board = ATmega3290P

; change microcontroller
board_build.mcu = atmega3290p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ATtiny3224 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny3224 board in a platformio.ini file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny3224]
platform = atmelmegaavr
board = ATtiny3224

; change microcontroller
board_build.mcu = attiny3224

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing STC15W1K16S Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC15W1K16S]
platform = intel_mcs51
board = STC15W1K16S

; change microcontroller
board_build.mcu = stc15w1k16s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic ATmega164P Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega164P board project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega164P]
platform = atmelavr
board = ATmega164P

----------------------------------------

TITLE: Upload Protocol Configuration for FYSETC S6
DESCRIPTION: Example configuration for setting the upload protocol for FYSETC S6 board

LANGUAGE: ini
CODE:
[env:fysetc_s6]
platform = ststm32
board = fysetc_s6

upload_protocol = stlink

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:franzininho_wifi_msc_esp32s2]
platform = espressif32
board = franzininho_wifi_msc_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing STC8H4K60TLR Board Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H4K60TLR]
platform = intel_mcs51
board = STC8H4K60TLR

; change microcontroller
board_build.mcu = stc8h4k60tlr

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for HelvePic32 SMD MX270
DESCRIPTION: Basic configuration settings to use the HelvePic32 SMD MX270 board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:helvepic32_smd_mx270]
platform = microchippic32
board = helvepic32_smd_mx270

----------------------------------------

TITLE: Customizing STM32F407IG MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the STM32F407IG board.

LANGUAGE: ini
CODE:
[env:genericSTM32F407IGT6]
platform = ststm32
board = genericSTM32F407IGT6

; change microcontroller
board_build.mcu = stm32f407igt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Setting Upload Protocol for SODAQ ONE
DESCRIPTION: Configuration for changing the upload protocol for the SODAQ ONE board in PlatformIO. This example sets the upload protocol to sam-ba.

LANGUAGE: ini
CODE:
[env:sodaq_one]
platform = atmelsam
board = sodaq_one

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring MKR Sharky Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the MKR Sharky board using the STM32 platform. This snippet sets up the board ID and platform.

LANGUAGE: ini
CODE:
[env:mkr_sharky]
platform = ststm32
board = mkr_sharky

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Metro M0 Express
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Adafruit Metro M0 Express board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:adafruit_metro_m0]
platform = atmelsam
board = adafruit_metro_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing Generic STC8C2K16S4 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO for the Generic STC8C2K16S4. This snippet demonstrates how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8C2K16S4]
platform = intel_mcs51
board = STC8C2K16S4

; change microcontroller
board_build.mcu = stc8c2k16s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Upload Protocol for VCCGND F407ZGT6
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using ST-Link as the default option.

LANGUAGE: ini
CODE:
[env:vccgnd_f407zg_mini]
platform = ststm32
board = vccgnd_f407zg_mini

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for STM32F446RC in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO. Sets the upload protocol to serial, which is the default for this board.

LANGUAGE: ini
CODE:
[env:genericSTM32F446RC]
platform = ststm32
board = genericSTM32F446RC

upload_protocol = serial

----------------------------------------

TITLE: Customizing ST Nucleo F303K8 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_f303k8]
platform = ststm32
board = nucleo_f303k8

; change microcontroller
board_build.mcu = stm32f303k8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Generic N78E055 Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure the Generic N78E055 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:N78E055]
platform = intel_mcs51
board = N78E055

; change microcontroller
board_build.mcu = n78e055

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring PlatformIO for Heltec CubeCell Capsule Solar Sensor
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Heltec CubeCell Capsule Solar Sensor (HTCC-AC02) board. It sets the platform and board ID in the project's configuration file.

LANGUAGE: ini
CODE:
[env:cubecell_capsule_solar_sensor]
platform = heltec-cubecell
board = cubecell_capsule_solar_sensor

----------------------------------------

TITLE: Configuring Generic N78E059 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic N78E059 board in a PlatformIO project's configuration file (platformio.ini). It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:N78E059]
platform = intel_mcs51
board = N78E059

; change microcontroller
board_build.mcu = n78e059

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Basic configuration setup for the Adafruit LED Glasses Driver nRF52840 board in platformio.ini

LANGUAGE: ini
CODE:
[env:adafruit_ledglasses_nrf52840]
platform = nordicnrf52
board = adafruit_ledglasses_nrf52840

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Seeeduino Wio Terminal board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:seeed_wio_terminal]
platform = atmelsam
board = seeed_wio_terminal

----------------------------------------

TITLE: Customizing MKR GSM 1400 MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the MKR GSM 1400 board.

LANGUAGE: ini
CODE:
[env:mkrgsm1400]
platform = atmelsam
board = mkrgsm1400

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic FeatherS3 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the FeatherS3 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:um_feathers3]
platform = espressif32
board = um_feathers3

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended environment configuration demonstrating how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:STC12C5A52S2]
platform = intel_mcs51
board = STC12C5A52S2

; change microcontroller
board_build.mcu = stc12c5a52s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for ST Sensor Node
DESCRIPTION: Configuration snippet showing how to set a specific upload protocol (mbed in this case) for the ST Sensor Node board in PlatformIO.

LANGUAGE: ini
CODE:
[env:silica_sensor_node]
platform = ststm32
board = silica_sensor_node

upload_protocol = mbed

----------------------------------------

TITLE: Setting Upload Protocol for Arduino MKR WAN 1300
DESCRIPTION: This configuration snippet demonstrates how to set the upload protocol for the Arduino MKR WAN 1300 board in PlatformIO. The default protocol is 'sam-ba', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:mkrwan1300]
platform = atmelsam
board = mkrwan1300

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing senseBox MCU-S2 ESP32-S2 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sensebox_mcu_esp32s2]
platform = espressif32
board = sensebox_mcu_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:curiosity_nano_db]
platform = atmelmegaavr
board = curiosity_nano_db

; change microcontroller
board_build.mcu = avr128db48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring ATmega64 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega64 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega64]
platform = atmelavr
board = ATmega64

; change microcontroller
board_build.mcu = atmega64

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic Dwenguino Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Dwenguino board using the atmelavr platform. Sets up the fundamental environment for project development.

LANGUAGE: ini
CODE:
[env:dwenguino]
platform = atmelavr
board = dwenguino

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:nicla_vision]
platform = ststm32
board = nicla_vision

upload_protocol = dfu

----------------------------------------

TITLE: Configuring ATmega165/A Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure a PlatformIO project to use the ATmega165/A board. It includes the basic board setup and examples of how to override default settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega165]
platform = atmelavr
board = ATmega165

; change microcontroller
board_build.mcu = atmega165a

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Arduino MKR WiFi 1010
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Arduino MKR WiFi 1010 board in a PlatformIO project configuration. The default protocol is 'sam-ba', but this can be changed as shown.

LANGUAGE: ini
CODE:
[env:mkrwifi1010]
platform = atmelsam
board = mkrwifi1010

upload_protocol = sam-ba

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC15W100
DESCRIPTION: Basic environment configuration for the STC15W100 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC15W100]
platform = intel_mcs51
board = STC15W100

----------------------------------------

TITLE: M5Stamp-Pico Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration demonstrating how to specify the upload protocol for the M5Stamp-Pico board.

LANGUAGE: ini
CODE:
[env:m5stamp-pico]
platform = espressif32
board = m5stamp-pico

upload_protocol = esptool

----------------------------------------

TITLE: Configuring STC15F102W Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15F102W board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:STC15F102W]
platform = intel_mcs51
board = STC15F102W

; change microcontroller
board_build.mcu = stc15f102w

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC15W201S
DESCRIPTION: Basic configuration setup for STC15W201S board in platformio.ini project file. Specifies the platform and board selection.

LANGUAGE: ini
CODE:
[env:STC15W201S]
platform = intel_mcs51
board = STC15W201S

----------------------------------------

TITLE: Configuring Basic ATmega640 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega640 board environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega640]
platform = atmelavr
board = ATmega640

----------------------------------------

TITLE: Customizing STC8G1K12A Board Settings in PlatformIO
DESCRIPTION: Advanced configuration for the STC8G1K12A board, demonstrating how to override default settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G1K12A]
platform = intel_mcs51
board = STC8G1K12A

; change microcontroller
board_build.mcu = stc8g1k12a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun SAMD51 Thing Plus
DESCRIPTION: Configuration to specify the upload protocol for the SparkFun SAMD51 Thing Plus board. In this example, it's set to sam-ba.

LANGUAGE: ini
CODE:
[env:sparkfun_samd51_thing_plus]
platform = atmelsam
board = sparkfun_samd51_thing_plus

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8G1K17 Board
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Generic STC8G1K17 board. It sets the platform and board ID, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G1K17]
platform = intel_mcs51
board = STC8G1K17

; change microcontroller
board_build.mcu = stc8g1k17

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic STC8F2K16S2 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC8F2K16S2 board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8F2K16S2]
platform = intel_mcs51
board = STC8F2K16S2

----------------------------------------

TITLE: Customizing HelvePic32 Robot Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:helvepic32_robot]
platform = microchippic32
board = helvepic32_robot

; change microcontroller
board_build.mcu = 32MX270F256D

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:blackpill_f103c8_128]
platform = ststm32
board = blackpill_f103c8_128

; change microcontroller
board_build.mcu = stm32f103c8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing STM32F401RE MCU Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RE]
platform = ststm32
board = genericSTM32F401RE

; change microcontroller
board_build.mcu = stm32f401ret6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: M5Stack AtomS3 Upload Protocol Configuration
DESCRIPTION: Example showing how to configure the upload protocol for the M5Stack AtomS3 board.

LANGUAGE: ini
CODE:
[env:m5stack-atoms3]
platform = espressif32
board = m5stack-atoms3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Generic IAP15F206A Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic IAP15F206A board in the PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:IAP15F206A]
platform = intel_mcs51
board = IAP15F206A

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:ttgo-t-oi-plus]
platform = espressif32
board = ttgo-t-oi-plus

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Wio Node MCU Settings in PlatformIO
DESCRIPTION: Example of overriding default microcontroller and frequency settings for the Wio Node board using board_build options.

LANGUAGE: ini
CODE:
[env:wio_node]
platform = espressif8266
board = wio_node

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: STM32F103RB Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F103RB board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RB]
platform = ststm32
board = genericSTM32F103RB

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Zero (USB Native Port)
DESCRIPTION: Configuration to specify the upload protocol for the Arduino Zero (USB Native Port) board. In this example, sam-ba is set as the upload protocol.

LANGUAGE: ini
CODE:
[env:zeroUSB]
platform = atmelsam
board = zeroUSB

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring ST Nucleo F401RE Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the ST Nucleo F401RE board in a PlatformIO project's configuration file. It includes options for specifying the board, changing the microcontroller, and adjusting the MCU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_f401re]
platform = ststm32
board = nucleo_f401re

; change microcontroller
board_build.mcu = stm32f401ret6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Advanced ML56MD1AE Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO environment.

LANGUAGE: ini
CODE:
[env:ML56MD1AE]
platform = intel_mcs51
board = ML56MD1AE

; change microcontroller
board_build.mcu = ml56md1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol for BPI-Leaf-S3 in PlatformIO
DESCRIPTION: Configuration to set the upload protocol for the BPI-Leaf-S3 board. This example uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:bpi_leaf_s3]
platform = espressif32
board = bpi_leaf_s3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Generic STC89C58RD+ Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC89C58RD+]
platform = intel_mcs51
board = STC89C58RD+

; change microcontroller
board_build.mcu = stc89c58rd+

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic ESP32-S3-Box Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ESP32-S3-Box board in platformio.ini file specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:esp32s3box]
platform = espressif32
board = esp32s3box

----------------------------------------

TITLE: Configuring Basic ESP32-S3-Box Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ESP32-S3-Box board in platformio.ini file specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:esp32s3box]
platform = espressif32
board = esp32s3box

----------------------------------------

TITLE: Customizing ST Nucleo L073RZ Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_l073rz]
platform = ststm32
board = nucleo_l073rz

; change microcontroller
board_build.mcu = stm32l073rz

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring STM32F446RC Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F446RC board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F446RC]
platform = ststm32
board = genericSTM32F446RC

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Due in PlatformIO INI File
DESCRIPTION: Configuration to specify the upload protocol for the Arduino Due board. This example uses the SAM-BA protocol.

LANGUAGE: ini
CODE:
[env:due]
platform = atmelsam
board = due

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Basic ST Nucleo F091RC Board Settings
DESCRIPTION: Basic PlatformIO configuration for ST Nucleo F091RC board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_f091rc]
platform = ststm32
board = nucleo_f091rc

----------------------------------------

TITLE: Setting Upload Protocol for PYBStick Board
DESCRIPTION: Configuration example for specifying the upload protocol (ST-Link) for the PYBStick board.

LANGUAGE: ini
CODE:
[env:pybstick26_std]
platform = ststm32
board = pybstick26_std

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for Generic MS51XB9BE Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic MS51XB9BE board in the platformio.ini file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:MS51XB9BE]
platform = intel_mcs51
board = MS51XB9BE

----------------------------------------

TITLE: Custom MCU and Frequency Configuration
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Adafruit pyBadge M4 Express.

LANGUAGE: ini
CODE:
[env:adafruit_pybadge_m4]
platform = atmelsam
board = adafruit_pybadge_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Customizing Nordic Beacon Kit Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:nrf51_beacon]
platform = nordicnrf51
board = nrf51_beacon

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Advanced STC15F104E Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F104E]
platform = intel_mcs51
board = STC15F104E

; change microcontroller
board_build.mcu = stc15f104e

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration for STC8H8K60U in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for STC8H8K60U board setup using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H8K60U]
platform = intel_mcs51
board = STC8H8K60U

----------------------------------------

TITLE: Customizing Arduino Esplora Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Arduino Esplora settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:esplora]
platform = atmelavr
board = esplora

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ATmega1280 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega1280 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATmega1280]
platform = atmelavr
board = ATmega1280

; change microcontroller
board_build.mcu = atmega1280

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Controllino Maxi Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Controllino Maxi board in the PlatformIO project configuration file. It sets the platform to atmelavr and specifies the board as controllino_maxi.

LANGUAGE: ini
CODE:
[env:controllino_maxi]
platform = atmelavr
board = controllino_maxi

----------------------------------------

TITLE: Basic STC89C51RC Board Configuration
DESCRIPTION: Basic PlatformIO configuration for the STC89C51RC board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC89C51RC]
platform = intel_mcs51
board = STC89C51RC

----------------------------------------

TITLE: Customizing Dwenguino Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:dwenguino]
platform = atmelavr
board = dwenguino

; change microcontroller
board_build.mcu = at90usb646

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring LilyGo T3-S3 Board in PlatformIO
DESCRIPTION: Basic configuration for the LilyGo T3-S3 board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lilygo-t3-s3]
platform = espressif32
board = lilygo-t3-s3

----------------------------------------

TITLE: Advanced W79E633 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:W79E633]
platform = intel_mcs51
board = W79E633

; change microcontroller
board_build.mcu = w79e633

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring SparkFun Serial 7-Segment Display in PlatformIO
DESCRIPTION: This snippet shows how to configure the SparkFun Serial 7-Segment Display board in the PlatformIO project configuration file. It sets the platform to atmelavr and the board to sparkfun_serial7seg.

LANGUAGE: ini
CODE:
[env:sparkfun_serial7seg]
platform = atmelavr
board = sparkfun_serial7seg

----------------------------------------

TITLE: Setting Upload Protocol for STM32F412CE
DESCRIPTION: Example showing how to configure the upload protocol for the STM32F412CE board, using serial protocol as an example.

LANGUAGE: ini
CODE:
[env:genericSTM32F412CE]
platform = ststm32
board = genericSTM32F412CE

upload_protocol = serial

----------------------------------------

TITLE: Basic IAP15F413AD Board Configuration
DESCRIPTION: Basic PlatformIO configuration for IAP15F413AD board setup using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:IAP15F413AD]
platform = intel_mcs51
board = IAP15F413AD

----------------------------------------

TITLE: Configuring PlatformIO Environment for Cricket-L082CZ Board
DESCRIPTION: Basic PlatformIO configuration for the Cricket-L082CZ board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:cricket_l082cz]
platform = ststm32
board = cricket_l082cz

----------------------------------------

TITLE: Setting Upload Protocol for Seeeduino Zero
DESCRIPTION: Configuration to set the upload protocol for the Seeeduino Zero board. In this example, it's set to use the SAM-BA protocol.

LANGUAGE: ini
CODE:
[env:seeed_zero]
platform = atmelsam
board = seeed_zero

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring PlatformIO Environment for ML51PB9AE Board
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic ML51PB9AE board. It specifies the platform and board ID, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML51PB9AE]
platform = intel_mcs51
board = ML51PB9AE

; change microcontroller
board_build.mcu = ml51pb9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Wio 3G board.

LANGUAGE: ini
CODE:
[env:wio_3g]
platform = ststm32
board = wio_3g

upload_protocol = stlink

----------------------------------------

TITLE: Customizing MCU Settings for ST Nucleo F070RB
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings like MCU model and frequency in PlatformIO's project configuration.

LANGUAGE: ini
CODE:
[env:nucleo_f070rb]
platform = ststm32
board = nucleo_f070rb

; change microcontroller
board_build.mcu = stm32f070rbt6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Arduino MKR NB 1500 Board in PlatformIO
DESCRIPTION: Basic configuration for the Arduino MKR NB 1500 board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:mkrnb1500]
platform = atmelsam
board = mkrnb1500

----------------------------------------

TITLE: Setting Upload Protocol for PYBStick 26 Pro
DESCRIPTION: Configuration example for specifying the upload protocol for the PYBStick 26 Pro board.

LANGUAGE: ini
CODE:
[env:pybstick26_pro]
platform = ststm32
board = pybstick26_pro

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Valetron Systems VALTRACK-V4MVF
DESCRIPTION: Configuration to change the upload protocol for the Valetron Systems VALTRACK-V4MVF board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:valtrack_v4_mfw_esp32_c3]
platform = espressif32
board = valtrack_v4_mfw_esp32_c3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Seeeduino Zero Board in PlatformIO
DESCRIPTION: Basic configuration for using the Seeeduino Zero board in a PlatformIO project. Sets the platform to atmelsam and specifies the board ID.

LANGUAGE: ini
CODE:
[env:seeed_zero]
platform = atmelsam
board = seeed_zero

----------------------------------------

TITLE: Basic Board Configuration for IRC15W207S
DESCRIPTION: Minimal configuration required to set up an IRC15W207S board project in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:IRC15W207S]
platform = intel_mcs51
board = IRC15W207S

----------------------------------------

TITLE: Upload Protocol Configuration for Olimex STM32-H103
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using ST-Link as the default option.

LANGUAGE: ini
CODE:
[env:olimex_f103]
platform = ststm32
board = olimex_f103

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Minitronics v2.0
DESCRIPTION: Configuration example for specifying the upload protocol for the Minitronics v2.0 board, using sam-ba as the protocol.

LANGUAGE: ini
CODE:
[env:minitronics20]
platform = atmelsam
board = minitronics20

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing Deneyap Kart Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:deneyapkart]
platform = espressif32
board = deneyapkart

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced PlatformIO Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the STC8A4K64S2A12 board.

LANGUAGE: ini
CODE:
[env:STC8A4K64S2A12]
platform = intel_mcs51
board = STC8A4K64S2A12

; change microcontroller
board_build.mcu = stc8a4k64s2a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Adafruit Pro Trinket 3V/12MHz (FTDI) in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Pro Trinket 3V/12MHz (FTDI) board in a PlatformIO project's configuration file. It demonstrates setting the platform and board, as well as how to override default board settings.

LANGUAGE: ini
CODE:
[env:protrinket3ftdi]
platform = atmelavr
board = protrinket3ftdi

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 12000000L

----------------------------------------

TITLE: Setting Upload Protocol for SAMC21-XPRO
DESCRIPTION: Configuration example for specifying the upload protocol for the SAMC21-XPRO board, using CMSIS-DAP as the protocol.

LANGUAGE: ini
CODE:
[env:samc21_xpro]
platform = atmelsam
board = samc21_xpro

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Configuring Basic ATmega1284 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATmega1284 board setup using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ATmega1284]
platform = atmelavr
board = ATmega1284

----------------------------------------

TITLE: Configuring ATmega324A Board in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega324A board project in platformio.ini. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega324A]
platform = atmelavr
board = ATmega324A

----------------------------------------

TITLE: Configuring Onehorse ESP32 Dev Module in PlatformIO
DESCRIPTION: This snippet shows how to configure the Onehorse ESP32 Dev Module board in the PlatformIO project configuration file. It sets the platform and board name.

LANGUAGE: ini
CODE:
[env:onehorse32dev]
platform = espressif32
board = onehorse32dev

----------------------------------------

TITLE: AT89S52 Upload Protocol Configuration
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the AT89S52 board using avrdude.

LANGUAGE: ini
CODE:
[env:AT89S52]
platform = intel_mcs51
board = AT89S52

upload_protocol = avrdude

----------------------------------------

TITLE: Configuring ATtiny1617 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny1617 board in a PlatformIO project's configuration file. It includes the basic setup and examples of overriding default settings.

LANGUAGE: ini
CODE:
[env:ATtiny1617]
platform = atmelmegaavr
board = ATtiny1617

; change microcontroller
board_build.mcu = attiny1617

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8H3K32S4
DESCRIPTION: Basic configuration setup for STC8H3K32S4 board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8H3K32S4]
platform = intel_mcs51
board = STC8H3K32S4

----------------------------------------

TITLE: Customizing ItsyBitsy Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:itsybitsy32u4_3V]
platform = atmelavr
board = itsybitsy32u4_3V

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Smart Bee Data Logger board. Default protocol is esptool.

LANGUAGE: ini
CODE:
[env:bee_data_logger]
platform = espressif32
board = bee_data_logger

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit PyPortal M4 Titano
DESCRIPTION: This configuration snippet demonstrates how to set the upload protocol for the Adafruit PyPortal M4 Titano board in PlatformIO. The default protocol is 'sam-ba', but it can be changed to other supported protocols like 'atmel-ice' or 'jlink'.

LANGUAGE: ini
CODE:
[env:adafruit_pyportal_m4_titano]
platform = atmelsam
board = adafruit_pyportal_m4_titano

upload_protocol = sam-ba

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for Adafruit PyGamer Advance M4 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:adafruit_pygamer_advance_m4]
platform = atmelsam
board = adafruit_pygamer_advance_m4

----------------------------------------

TITLE: Customizing ML54MD1AE Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller model and CPU frequency for the ML54MD1AE board.

LANGUAGE: ini
CODE:
[env:ML54MD1AE]
platform = intel_mcs51
board = ML54MD1AE

; change microcontroller
board_build.mcu = ml54md1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Basic ATmega649P Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATmega649P board using the atmelavr platform. This establishes the minimum required settings for a project.

LANGUAGE: ini
CODE:
[env:ATmega649P]
platform = atmelavr
board = ATmega649P

----------------------------------------

TITLE: Configuring Cicada-L082CZ Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Cicada-L082CZ board in a PlatformIO project's INI file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:cicada_l082cz]
platform = ststm32
board = cicada_l082cz

; change microcontroller
board_build.mcu = stm32l082czy6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F767ZI
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the ST Nucleo F767ZI board in a PlatformIO project configuration. The default protocol is stlink, but it can be changed as shown.

LANGUAGE: ini
CODE:
[env:nucleo_f767zi]
platform = ststm32
board = nucleo_f767zi

upload_protocol = stlink

----------------------------------------

TITLE: Custom Board Settings Configuration
DESCRIPTION: Example of overriding default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_matrixportal_esp32s3]
platform = espressif32
board = adafruit_matrixportal_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-S3-DevKitM-1
DESCRIPTION: Configuration example for specifying the upload protocol used to program the board.

LANGUAGE: ini
CODE:
[env:esp32-s3-devkitm-1]
platform = espressif32
board = esp32-s3-devkitm-1

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Generic IRC15F107W Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic IRC15F107W board. It sets the platform to intel_mcs51 and the board to IRC15F107W. Additional options demonstrate how to override default board settings.

LANGUAGE: ini
CODE:
[env:IRC15F107W]
platform = intel_mcs51
board = IRC15F107W

; change microcontroller
board_build.mcu = irc15f107w

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Adafruit QT Py ESP32-C3 board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:adafruit_qtpy_esp32c3]
platform = espressif32
board = adafruit_qtpy_esp32c3

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration showing how to specify the upload protocol for the Sonoff TH board, which supports espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:sonoff_th]
platform = espressif8266
board = sonoff_th

upload_protocol = esptool

----------------------------------------

TITLE: Setting STM32F413CG Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F413CG board.

LANGUAGE: ini
CODE:
[env:genericSTM32F413CG]
platform = ststm32
board = genericSTM32F413CG

upload_protocol = serial

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example for setting the upload protocol to sam-ba for the Seeeduino Wio Lite MG126.

LANGUAGE: ini
CODE:
[env:seeed_wio_lite_mg126]
platform = atmelsam
board = seeed_wio_lite_mg126

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring STM32H747I-DISCO Board in PlatformIO
DESCRIPTION: Basic configuration for using the STM32H747I-DISCO board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_h747xi]
platform = ststm32
board = disco_h747xi

----------------------------------------

TITLE: Configuring PlatformIO Environment for Munich Labs RedPill ESP32-S3
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Munich Labs RedPill ESP32-S3 board in the project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:redpill_esp32s3]
platform = espressif32
board = redpill_esp32s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Nordic Beacon Kit
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Nordic Beacon Kit. In this case, it's set to use the J-Link protocol.

LANGUAGE: ini
CODE:
[env:nrf51_beacon]
platform = nordicnrf51
board = nrf51_beacon

upload_protocol = jlink

----------------------------------------

TITLE: Setting Upload Protocol for WeAct Studio MiniSTM32H743VITX
DESCRIPTION: Configuration to specify the upload protocol for the WeAct Studio MiniSTM32H743VITX board. This example sets the upload protocol to ST-Link, which is the default for this board.

LANGUAGE: ini
CODE:
[env:weact_mini_h743vitx]
platform = ststm32
board = weact_mini_h743vitx

upload_protocol = stlink

----------------------------------------

TITLE: Configuring STM32F412RG Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for STM32F412RG board setup using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F412RG]
platform = ststm32
board = genericSTM32F412RG

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F042K6
DESCRIPTION: Example configuration for specifying the upload protocol for the board, using ST-Link as the default option

LANGUAGE: ini
CODE:
[env:nucleo_f042k6]
platform = ststm32
board = nucleo_f042k6

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic STM32F103T4 Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F103T4 board setup using the ststm32 platform

LANGUAGE: ini
CODE:
[env:genericSTM32F103T4]
platform = ststm32
board = genericSTM32F103T4

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo L552ZE-Q
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo L552ZE-Q board in PlatformIO.

LANGUAGE: ini
CODE:
[env:nucleo_l552ze_q]
platform = ststm32
board = nucleo_l552ze_q

upload_protocol = stlink

----------------------------------------

TITLE: Configuring DFRobot Firebeetle 2 ESP32-E Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the DFRobot Firebeetle 2 ESP32-E board. Specifies the board ID and platform to use in the project configuration file.

LANGUAGE: ini
CODE:
[env:dfrobot_firebeetle2_esp32e]
platform = espressif32
board = dfrobot_firebeetle2_esp32e

----------------------------------------

TITLE: Configuring ATmega644/A Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega644/A board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:ATmega644A]
platform = atmelavr
board = ATmega644A

; change microcontroller
board_build.mcu = atmega644a

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Generic IRC15F2K63S2 Board in PlatformIO project
DESCRIPTION: This snippet shows how to configure the Generic IRC15F2K63S2 board in a PlatformIO project's configuration file (platformio.ini). It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:IRC15F2K63S2]
platform = intel_mcs51
board = IRC15F2K63S2

; change microcontroller
board_build.mcu = irc15f2k63s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing unPhone 8 MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the unPhone 8 board.

LANGUAGE: ini
CODE:
[env:unphone8]
platform = espressif32
board = unphone8

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Adafruit Feather 32u4 in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Feather 32u4 board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:feather32u4]
platform = atmelavr
board = feather32u4

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic ATmega325 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega325 board in the PlatformIO environment file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega325]
platform = atmelavr
board = ATmega325

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun ESP32 Thing
DESCRIPTION: Configuration to change the upload protocol for the SparkFun ESP32 Thing board. The example uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:esp32thing]
platform = espressif32
board = esp32thing

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Generic STC8H4K32TLR Board in PlatformIO
DESCRIPTION: Basic configuration for using the Generic STC8H4K32TLR board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8H4K32TLR]
platform = intel_mcs51
board = STC8H4K32TLR

----------------------------------------

TITLE: Customizing Metro Board MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default Metro board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:metro]
platform = atmelavr
board = metro

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Nordic nRF51 Dongle Board in PlatformIO
DESCRIPTION: Basic configuration for the Nordic nRF51 Dongle (PCA10031) board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nrf51_dongle]
platform = nordicnrf51
board = nrf51_dongle

----------------------------------------

TITLE: Customizing NIBO burger MCU Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller settings and CPU frequency for the NIBO burger robot.

LANGUAGE: ini
CODE:
[env:niboburger]
platform = atmelavr
board = niboburger

; change microcontroller
board_build.mcu = atmega16

; change MCU frequency
board_build.f_cpu = 15000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8A8K60D4]
platform = intel_mcs51
board = STC8A8K60D4

; change microcontroller
board_build.mcu = stc8a8k60d4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for Arduino Nano ATmega328.

LANGUAGE: ini
CODE:
[env:nanoatmega328new]
platform = atmelavr
board = nanoatmega328new

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing ST Nucleo U575ZI-Q Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_u575zi_q]
platform = ststm32
board = nucleo_u575zi_q

; change microcontroller
board_build.mcu = stm32u575zit6q

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Advanced IRC15W107 Board Configuration
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:IRC15W107]
platform = intel_mcs51
board = IRC15W107

; change microcontroller
board_build.mcu = irc15w107

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring ThunderPack v1.0 in PlatformIO INI File
DESCRIPTION: Basic configuration for the ThunderPack v1.0 board in the PlatformIO project configuration file. Sets the platform to STM32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:thunder_pack]
platform = ststm32
board = thunder_pack

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit pIRkey in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the Adafruit pIRkey board. In this example, it's set to sam-ba.

LANGUAGE: ini
CODE:
[env:adafruit_pirkey]
platform = atmelsam
board = adafruit_pirkey

upload_protocol = sam-ba

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Demonstrates setting blackmagic as the upload protocol.

LANGUAGE: ini
CODE:
[env:electronut_papyr]
platform = nordicnrf52
board = electronut_papyr

upload_protocol = blackmagic

----------------------------------------

TITLE: Configuring STM32F103R8 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the STM32F103R8 board in a PlatformIO project's configuration file. It includes options for setting the platform, board ID, and customizing microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:genericSTM32F103R8]
platform = ststm32
board = genericSTM32F103R8

; change microcontroller
board_build.mcu = stm32f103r8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring u-blox ODIN-W2 Board in PlatformIO
DESCRIPTION: Basic configuration for using the u-blox ODIN-W2 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:mtb_ublox_odin_w2]
platform = ststm32
board = mtb_ublox_odin_w2

----------------------------------------

TITLE: Configuring Basic SODAQ Moja Board Settings
DESCRIPTION: Basic PlatformIO configuration for SODAQ Moja board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:sodaq_moja]
platform = atmelavr
board = sodaq_moja

----------------------------------------

TITLE: Customizing STM32F423RH Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F423RH]
platform = ststm32
board = genericSTM32F423RH

; change microcontroller
board_build.mcu = stm32f423rht6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring Basic ESP32S2 Board Settings
DESCRIPTION: Basic configuration for setting up an Adafruit FunHouse ESP32S2 board in PlatformIO. Defines the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_funhouse_esp32s2]
platform = espressif32
board = adafruit_funhouse_esp32s2

----------------------------------------

TITLE: Basic Board Configuration - PlatformIO INI
DESCRIPTION: Minimal configuration required to use Adafruit Hallowing M0 board in PlatformIO projects

LANGUAGE: ini
CODE:
[env:adafruit_hallowing]
platform = atmelsam
board = adafruit_hallowing

----------------------------------------

TITLE: Customizing Generic STC89C53RC Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC89C53RC board in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC89C53RC]
platform = intel_mcs51
board = STC89C53RC

; change microcontroller
board_build.mcu = stc89c53rc

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F412RG
DESCRIPTION: Configuration for specifying the upload protocol for the STM32F412RG board, with serial as the default option.

LANGUAGE: ini
CODE:
[env:genericSTM32F412RG]
platform = ststm32
board = genericSTM32F412RG

upload_protocol = serial

----------------------------------------

TITLE: Configuring Basic SainSmart Due Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up a SainSmart Due project environment, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:sainSmartDueUSB]
platform = atmelsam
board = sainSmartDueUSB

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Example configuration showing how to specify the upload protocol for the TTGO T7 V1.4 Mini32 board.

LANGUAGE: ini
CODE:
[env:ttgo-t7-v14-mini32]
platform = espressif32
board = ttgo-t7-v14-mini32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring ST Nucleo L073RZ Board in PlatformIO
DESCRIPTION: This snippet shows the basic PlatformIO configuration for the ST Nucleo L073RZ board. It sets the platform to STM32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:nucleo_l073rz]
platform = ststm32
board = nucleo_l073rz

----------------------------------------

TITLE: Configuring Basic N79E814 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the N79E814 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:N79E814]
platform = intel_mcs51
board = N79E814

----------------------------------------

TITLE: Configuring Basic ATmega3250 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega3250 board environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega3250]
platform = atmelavr
board = ATmega3250

----------------------------------------

TITLE: Configuring AfroFlight Rev5 (8MHz) Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the AfroFlight Rev5 (8MHz) board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:afroflight_f103cb]
platform = ststm32
board = afroflight_f103cb

; change microcontroller
board_build.mcu = stm32f103cbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing ATmega324A Board Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega324A]
platform = atmelavr
board = ATmega324A

; change microcontroller
board_build.mcu = atmega324a

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Arduino Giga R1 (M7 core) Board in PlatformIO
DESCRIPTION: Basic configuration for the Arduino Giga R1 (M7 core) board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:giga_r1_m7]
platform = ststm32
board = giga_r1_m7

----------------------------------------

TITLE: Configuring PlatformIO Environment for Generic STC8H4K48TLR
DESCRIPTION: This snippet demonstrates how to set up a PlatformIO environment for the Generic STC8H4K48TLR board using the Intel MCS-51 platform. It includes the basic configuration and shows how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC8H4K48TLR]
platform = intel_mcs51
board = STC8H4K48TLR

; change microcontroller
board_build.mcu = stc8h4k48tlr

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for STM32H750VBT6
DESCRIPTION: Configuration for specifying the upload protocol for the STM32H750VBT6 board in PlatformIO. The example uses the serial protocol.

LANGUAGE: ini
CODE:
[env:genericSTM32H750VB]
platform = ststm32
board = genericSTM32H750VB

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol for ESP320
DESCRIPTION: This snippet shows how to set the upload protocol for the ESP320 board. It demonstrates setting the protocol to esptool, which is the default option.

LANGUAGE: ini
CODE:
[env:esp320]
platform = espressif32
board = esp320

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Generic STC8H4K32TLR Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8H4K32TLR]
platform = intel_mcs51
board = STC8H4K32TLR

; change microcontroller
board_build.mcu = stc8h4k32tlr

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO Environment for nicai-systems NIBObee robot
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the nicai-systems NIBObee robot with Tuning Kit in the project configuration file. It sets the platform to atmelavr and the board to nibobee_1284.

LANGUAGE: ini
CODE:
[env:nibobee_1284]
platform = atmelavr
board = nibobee_1284

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:adafruit_pygamer_advance_m4]
platform = atmelsam
board = adafruit_pygamer_advance_m4

; change microcontroller
board_build.mcu = samd51j20a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring Basic SODAQ Mbili Environment in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for the SODAQ Mbili board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:sodaq_mbili]
platform = atmelavr
board = sodaq_mbili

----------------------------------------

TITLE: Basic ESP12E Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for ESP12E board in platformio.ini file

LANGUAGE: ini
CODE:
[env:esp12e]
platform = espressif8266
board = esp12e

----------------------------------------

TITLE: Configuring Basic N79E822 Board Settings in PlatformIO
DESCRIPTION: Basic configuration setup for the N79E822 board in the project's platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:N79E822]
platform = intel_mcs51
board = N79E822

----------------------------------------

TITLE: Advanced Quirkbot Configuration with MCU Settings
DESCRIPTION: PlatformIO configuration for Quirkbot with custom microcontroller and frequency settings

LANGUAGE: ini
CODE:
[env:quirkbot]
platform = atmelavr
board = quirkbot

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST STM32LDISCOVERY
DESCRIPTION: Configuration to change the upload protocol for the ST STM32LDISCOVERY board to ST-Link in platformio.ini.

LANGUAGE: ini
CODE:
[env:disco_l152rb]
platform = ststm32
board = disco_l152rb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing STM32G431CB MCU Settings
DESCRIPTION: Example showing how to override default microcontroller settings like MCU model and frequency for the STM32G431CB board.

LANGUAGE: ini
CODE:
[env:genericSTM32G431CB]
platform = ststm32
board = genericSTM32G431CB

; change microcontroller
board_build.mcu = stm32g431cbu6

; change MCU frequency
board_build.f_cpu = 170000000L

----------------------------------------

TITLE: Configuring BL652 Development Kit in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the BL652 Development Kit in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:laird_bl652_dvk]
platform = nordicnrf52
board = laird_bl652_dvk

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Basic IRC15W415AS Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to set up a PlatformIO project for the IRC15W415AS board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:IRC15W415AS]
platform = intel_mcs51
board = IRC15W415AS

----------------------------------------

TITLE: Setting Upload Protocol for Espressif Generic ESP8266 ESP-01 1M
DESCRIPTION: Configuration example showing how to set the upload protocol for the Espressif Generic ESP8266 ESP-01 1M board. It uses the 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:esp01_1m]
platform = espressif8266
board = esp01_1m

upload_protocol = esptool

----------------------------------------

TITLE: Basic Board Configuration for Sonoff TH
DESCRIPTION: Basic PlatformIO configuration for setting up a Sonoff TH board project using the espressif8266 platform.

LANGUAGE: ini
CODE:
[env:sonoff_th]
platform = espressif8266
board = sonoff_th

----------------------------------------

TITLE: Custom MCU Configuration for Electrosmith Daisy Petal SM
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:electrosmith_daisy_petal_sm]
platform = ststm32
board = electrosmith_daisy_petal_sm

; change microcontroller
board_build.mcu = stm32h750ibk6

; change MCU frequency
board_build.f_cpu = 400000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for Adafruit Hallowing M4

LANGUAGE: ini
CODE:
[env:adafruit_hallowing_m4]
platform = atmelsam
board = adafruit_hallowing_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Upload Protocol Configuration for 32F723EDISCOVERY
DESCRIPTION: Example showing how to configure the upload protocol for the board. The board supports blackmagic, cmsis-dap, jlink, and stlink protocols.

LANGUAGE: ini
CODE:
[env:disco_f723ie]
platform = ststm32
board = disco_f723ie

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration for MotorGo Mini 1
DESCRIPTION: Basic PlatformIO configuration to use the MotorGo Mini 1 board with ESP32 platform.

LANGUAGE: ini
CODE:
[env:motorgo_mini_1]
platform = espressif32
board = motorgo_mini_1

----------------------------------------

TITLE: Configuring Adafruit Grand Central M4 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Grand Central M4 board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:adafruit_grandcentral_m4]
platform = atmelsam
board = adafruit_grandcentral_m4

; change microcontroller
board_build.mcu = samd51p20a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Setting Upload Protocol for Smart Bee Motion S3
DESCRIPTION: Example of changing the upload protocol for the Smart Bee Motion S3 board in PlatformIO configuration. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:bee_motion_s3]
platform = espressif32
board = bee_motion_s3

upload_protocol = esptool

----------------------------------------

TITLE: Custom MCU Configuration for ThunderPack
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:thunder_pack_f411]
platform = ststm32
board = thunder_pack_f411

; change microcontroller
board_build.mcu = stm32f411ceu6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring Basic MXChip AZ3166 Board Settings
DESCRIPTION: Basic configuration for the MXChip AZ3166 board using PlatformIO's project configuration file. Sets the platform to STM32 and specifies the board type.

LANGUAGE: ini
CODE:
[env:mxchip_az3166]
platform = ststm32
board = mxchip_az3166

----------------------------------------

TITLE: Setting Upload Protocol for TAMC DPU ESP32
DESCRIPTION: Configuration to change the upload protocol for the TAMC DPU ESP32 board. In this example, it's set to use the esptool protocol.

LANGUAGE: ini
CODE:
[env:dpu_esp32]
platform = espressif32
board = dpu_esp32

upload_protocol = esptool

----------------------------------------

TITLE: Basic PlatformIO Environment Configuration for Olimex STM32-H103
DESCRIPTION: Minimal configuration required to set up a PlatformIO environment for the Olimex STM32-H103 board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:olimex_f103]
platform = ststm32
board = olimex_f103

----------------------------------------

TITLE: Customizing STM32F401CE MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the STM32F401CE board

LANGUAGE: ini
CODE:
[env:genericSTM32F401CE]
platform = ststm32
board = genericSTM32F401CE

; change microcontroller
board_build.mcu = stm32f401ceu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_makeymakey]\nplatform = atmelavr\nboard = sparkfun_makeymakey\n\n; change microcontroller\nboard_build.mcu = atmega32u4\n\n; change MCU frequency\nboard_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8A8K64S4A12
DESCRIPTION: Base configuration for setting up a PlatformIO project targeting the STC8A8K64S4A12 board on the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8A8K64S4A12]
platform = intel_mcs51
board = STC8A8K64S4A12

----------------------------------------

TITLE: Customizing Hornbill ESP32 Dev Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:hornbill32dev]
platform = espressif32
board = hornbill32dev

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Digispark Pro
DESCRIPTION: Basic configuration settings for the Digispark Pro board in platformio.ini file

LANGUAGE: ini
CODE:
[env:digispark-pro64]
platform = atmelavr
board = digispark-pro64

----------------------------------------

TITLE: Custom MCU Configuration
DESCRIPTION: Configuration example showing how to customize microcontroller and frequency settings for the STM32F103R6 board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103R6]
platform = ststm32
board = genericSTM32F103R6

; change microcontroller
board_build.mcu = stm32f103r6t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO for Digilent chipKIT Cmod
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Digilent chipKIT Cmod board. It sets the platform to microchippic32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:chipkit_cmod]
platform = microchippic32
board = chipkit_cmod

----------------------------------------

TITLE: Configuring Basic ATtiny804 Environment in PlatformIO
DESCRIPTION: Basic configuration setup for ATtiny804 board in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny804]
platform = atmelmegaavr
board = ATtiny804

----------------------------------------

TITLE: Configuring PlatformIO for Adafruit Gemma
DESCRIPTION: Basic PlatformIO configuration for the Adafruit Gemma board. Sets the platform to atmelavr and the board to gemma.

LANGUAGE: ini
CODE:
[env:gemma]
platform = atmelavr
board = gemma

----------------------------------------

TITLE: Configuring Basic STM32F411RC Board Settings in PlatformIO
DESCRIPTION: Basic configuration for STM32F411RC board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F411RC]
platform = ststm32
board = genericSTM32F411RC

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F204EA]
platform = intel_mcs51
board = STC15F204EA

; change microcontroller
board_build.mcu = stc15f204ea

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing SpellFoundry Sleepy Pi 2 Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the SpellFoundry Sleepy Pi 2 board in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sleepypi]
platform = atmelavr
board = sleepypi

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103VC Board
DESCRIPTION: INI configuration demonstrating how to specify the upload protocol for the STM32F103VC board, using stlink as an example.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VC]
platform = ststm32
board = genericSTM32F103VC

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic ML51PC0AE Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic ML51PC0AE board in a PlatformIO project's ini file. It includes the basic board setup and examples of how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML51PC0AE]
platform = intel_mcs51
board = ML51PC0AE

; change microcontroller
board_build.mcu = ml51pc0ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Customizing AT90CAN32 Board Settings in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:AT90CAN32]
platform = atmelavr
board = AT90CAN32

; change microcontroller
board_build.mcu = at90can32

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting upload protocol for Adafruit Gemma M0 in PlatformIO INI file
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Adafruit Gemma M0 board. It sets the protocol to 'sam-ba'.

LANGUAGE: ini
CODE:
[env:adafruit_gemma_m0]
platform = atmelsam
board = adafruit_gemma_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring PlatformIO Environment for SDT52832B
DESCRIPTION: Sets up a PlatformIO environment for the SDT52832B board using the Nordic nRF52 platform. Includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sdt52832b]
platform = nordicnrf52
board = sdt52832b

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing STM32F103C6 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103C6]
platform = ststm32
board = genericSTM32F103C6

; change microcontroller
board_build.mcu = stm32f103c6t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing MTS Dragonfly F411RE Board Settings
DESCRIPTION: Example of overriding default board settings in the platformio.ini file. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mts_dragonfly_f411re]
platform = ststm32
board = mts_dragonfly_f411re

; change microcontroller
board_build.mcu = stm32f411ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing RedBearLab Blend Board Settings
DESCRIPTION: This example demonstrates how to override default board settings in a PlatformIO project. It shows how to change the microcontroller and MCU frequency for the RedBearLab Blend board.

LANGUAGE: ini
CODE:
[env:blend]
platform = atmelavr
board = blend

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Custom MCU Configuration for FYSETC S6
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the FYSETC S6 board

LANGUAGE: ini
CODE:
[env:fysetc_s6]
platform = ststm32
board = fysetc_s6

; change microcontroller
board_build.mcu = stm32f446vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic IAP15W413S Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic IAP15W413S board in the PlatformIO configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:IAP15W413S]
platform = intel_mcs51
board = IAP15W413S

----------------------------------------

TITLE: Setting Upload Protocol for STM32F4DISCOVERY
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F4DISCOVERY board using the stlink option.

LANGUAGE: ini
CODE:
[env:disco_f407vg]
platform = ststm32
board = disco_f407vg

upload_protocol = stlink

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the SODAQ ExpLoRer board.

LANGUAGE: ini
CODE:
[env:sodaq_explorer]
platform = atmelsam
board = sodaq_explorer

; change microcontroller
board_build.mcu = samd21j18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring PlatformIO for u-blox NINA-W10 series
DESCRIPTION: Basic PlatformIO configuration for the u-blox NINA-W10 series board. Specifies the board ID and platform.

LANGUAGE: ini
CODE:
[env:nina_w10]
platform = espressif32
board = nina_w10

----------------------------------------

TITLE: Configuring Basic STC8H4K60TLR Board Environment
DESCRIPTION: Basic PlatformIO configuration for setting up the STC8H4K60TLR board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H4K60TLR]
platform = intel_mcs51
board = STC8H4K60TLR

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo L073RZ in PlatformIO
DESCRIPTION: This snippet shows how to specify the upload protocol for the ST Nucleo L073RZ board in PlatformIO. The default protocol is ST-Link, but this can be changed as shown.

LANGUAGE: ini
CODE:
[env:nucleo_l073rz]
platform = ststm32
board = nucleo_l073rz

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Digispark Pro Board in PlatformIO INI File
DESCRIPTION: Basic configuration for using the Digispark Pro board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:digispark-pro]
platform = atmelavr
board = digispark-pro

----------------------------------------

TITLE: Configuring Base Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Microduino Core board in platformio.ini. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:328p16m]
platform = atmelavr
board = 328p16m

----------------------------------------

TITLE: Configuring Controllino Mega Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Controllino Mega board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:controllino_mega]
platform = atmelavr
board = controllino_mega

----------------------------------------

TITLE: Configuring Basic STM32F413RH Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F413RH board setup with the ststm32 platform

LANGUAGE: ini
CODE:
[env:genericSTM32F413RH]
platform = ststm32
board = genericSTM32F413RH

----------------------------------------

TITLE: Configuring STM32F103VG Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F103VG board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VG]
platform = ststm32
board = genericSTM32F103VG

----------------------------------------

TITLE: Advanced MS51EC0AE Board Configuration
DESCRIPTION: Extended PlatformIO configuration for MS51EC0AE board with custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:MS51EC0AE]
platform = intel_mcs51
board = MS51EC0AE

; change microcontroller
board_build.mcu = ms51ec0ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring BL654 Development Kit in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the BL654 Development Kit in the PlatformIO project configuration file. It includes basic setup and examples of overriding default board settings.

LANGUAGE: ini
CODE:
[env:laird_bl654_dvk]
platform = nordicnrf52
board = laird_bl654_dvk

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Initializing Basic chipKIT DP32 Configuration
DESCRIPTION: Basic PlatformIO environment configuration for the chipKIT DP32 board using the microchippic32 platform.

LANGUAGE: ini
CODE:
[env:chipkit_dp32]
platform = microchippic32
board = chipkit_dp32

----------------------------------------

TITLE: Configuring ATtiny827 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ATtiny827 board in a PlatformIO project configuration file. It demonstrates basic board selection and how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATtiny827]
platform = atmelmegaavr
board = ATtiny827

; change microcontroller
board_build.mcu = attiny827

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ST Nucleo F030R8 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo F030R8 board, including platform and board ID. Additional options demonstrate how to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:nucleo_f030r8]
platform = ststm32
board = nucleo_f030r8

; change microcontroller
board_build.mcu = stm32f030r8t6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing LightBlue Bean Board Settings
DESCRIPTION: This snippet demonstrates how to override default LightBlue Bean settings in a PlatformIO project. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:lightblue-bean]
platform = atmelavr
board = lightblue-bean

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring STM32F103VG Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F103VG board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VG]
platform = ststm32
board = genericSTM32F103VG

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the Raytac MDBT50Q-RX board

LANGUAGE: ini
CODE:
[env:raytac_mdbt50q_rx]
platform = nordicnrf52
board = raytac_mdbt50q_rx

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Sanguino ATmega1284p Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Sanguino ATmega1284p board in the PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sanguino_atmega1284p]
platform = atmelavr
board = sanguino_atmega1284p

----------------------------------------

TITLE: Setting Upload Protocol for Elektor F072C8
DESCRIPTION: Configuration to specify the upload protocol for the Elektor LoRa Node Core F072C8 board. The default protocol is serial, but this example shows how to change it.

LANGUAGE: ini
CODE:
[env:elektor_f072c8]
platform = ststm32
board = elektor_f072c8

upload_protocol = serial

----------------------------------------

TITLE: Customizing MCU Settings for Blue STM32F407VE Mini
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings including MCU model and CPU frequency.

LANGUAGE: ini
CODE:
[env:blue_f407ve_mini]
platform = ststm32
board = blue_f407ve_mini

; change microcontroller
board_build.mcu = stm32f407vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring Basic Delta DFBM-NQ620 Environment
DESCRIPTION: Basic PlatformIO environment configuration for the Delta DFBM-NQ620 board using the Nordic nRF52 platform.

LANGUAGE: ini
CODE:
[env:delta_dfbm_nq620]
platform = nordicnrf52
board = delta_dfbm_nq620

----------------------------------------

TITLE: Configuring PlatformIO for Generic ML56SD1AE Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic ML56SD1AE board in the PlatformIO configuration file. It includes options for setting the platform, board, microcontroller, and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML56SD1AE]
platform = intel_mcs51
board = ML56SD1AE

; change microcontroller
board_build.mcu = ml56sd1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Advanced ESP12E Board Configuration with MCU Settings
DESCRIPTION: Extended configuration for ESP12E board with custom microcontroller and frequency settings

LANGUAGE: ini
CODE:
[env:esp12e]
platform = espressif8266
board = esp12e

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to use the Lifely Agrumino Lemon v4 board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:agruminolemon]
platform = espressif8266
board = agruminolemon

----------------------------------------

TITLE: Configuring SparkFun Mega Pro Mini 3.3V in PlatformIO INI file
DESCRIPTION: Basic configuration for the SparkFun Mega Pro Mini 3.3V board in the project's platformio.ini file. It sets the platform to atmelavr and the board to sparkfun_megamini.

LANGUAGE: ini
CODE:
[env:sparkfun_megamini]
platform = atmelavr
board = sparkfun_megamini

----------------------------------------

TITLE: Setting Upload Protocol for Nordic nRF52840-DK
DESCRIPTION: Configuration to specify the upload protocol for the Nordic nRF52840-DK board in PlatformIO. This example uses the J-Link protocol.

LANGUAGE: ini
CODE:
[env:nrf52840_dk]
platform = nordicnrf52
board = nrf52840_dk

upload_protocol = jlink

----------------------------------------

TITLE: Configuring Arduino Due Board in PlatformIO INI File
DESCRIPTION: Basic configuration for using the Arduino Due (Programming Port) board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:due]
platform = atmelsam
board = due

----------------------------------------

TITLE: Configuring ST 32F769IDISCOVERY Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST 32F769IDISCOVERY board, including platform and board ID settings.

LANGUAGE: ini
CODE:
[env:disco_f769ni]
platform = ststm32
board = disco_f769ni

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:freenove_esp32_s3_wroom]
platform = espressif32
board = freenove_esp32_s3_wroom

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring ATtiny416 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny416 board in a platformio.ini file. It includes the basic configuration and examples of how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATtiny416]
platform = atmelmegaavr
board = ATtiny416

; change microcontroller
board_build.mcu = attiny416

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Smart Bee Motion
DESCRIPTION: This snippet illustrates how to set a specific upload protocol for the Smart Bee Motion board in PlatformIO configuration. It uses the esptool protocol as an example.

LANGUAGE: ini
CODE:
[env:bee_motion]
platform = espressif32
board = bee_motion

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ST STM32F0DISCOVERY Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f051r8]
platform = ststm32
board = disco_f051r8

; change microcontroller
board_build.mcu = stm32f051r8t6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for Microduino Core STM32
DESCRIPTION: Configuration to specify the upload protocol for the Microduino Core STM32 board. In this example, it sets the protocol to DFU.

LANGUAGE: ini
CODE:
[env:microduino32_flash]
platform = ststm32
board = microduino32_flash

upload_protocol = dfu

----------------------------------------

TITLE: Customizing Heltec Wireless Stick MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:heltec_wireless_stick]
platform = espressif32
board = heltec_wireless_stick

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F7508-DK
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F7508-DK board using the STLink protocol.

LANGUAGE: ini
CODE:
[env:disco_f750n8]
platform = ststm32
board = disco_f750n8

upload_protocol = stlink

----------------------------------------

TITLE: Configuring AVR128DA48 Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure the AVR128DA48 board in a PlatformIO project's configuration file (platformio.ini). It sets the platform, board, and allows for overriding default board settings.

LANGUAGE: ini
CODE:
[env:AVR128DA48]
platform = atmelmegaavr
board = AVR128DA48

; change microcontroller
board_build.mcu = avr128da48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Maple Mini Original Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Maple Mini Original board in the PlatformIO project configuration file. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:maple_mini_origin]
platform = ststm32
board = maple_mini_origin

; change microcontroller
board_build.mcu = stm32f103cbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic ML51TC0AE Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic ML51TC0AE board in the PlatformIO configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:ML51TC0AE]
platform = intel_mcs51
board = ML51TC0AE

----------------------------------------

TITLE: Customizing MightyHat MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:mightyhat]
platform = atmelavr
board = mightyhat

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring BluesWireless Swan R5 Board in platformio.ini
DESCRIPTION: This snippet shows how to configure the BluesWireless Swan R5 board in the platformio.ini file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:bw_swan_r5]
platform = ststm32
board = bw_swan_r5

; change microcontroller
board_build.mcu = stm32l4r5ziy6

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8F2K32S2
DESCRIPTION: Minimal configuration required to set up a PlatformIO project for the STC8F2K32S2 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8F2K32S2]
platform = intel_mcs51
board = STC8F2K32S2

----------------------------------------

TITLE: Setting Upload Protocol for BL653 Development Kit in PlatformIO INI
DESCRIPTION: Configuration to change the upload protocol for the BL653 Development Kit. In this example, it's set to J-Link.

LANGUAGE: ini
CODE:
[env:laird_bl653_dvk]
platform = nordicnrf52
board = laird_bl653_dvk

upload_protocol = jlink

----------------------------------------

TITLE: Setting Upload Protocol for OSHChip in PlatformIO
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the OSHChip board in a PlatformIO project. The default protocol is J-Link, but it can be explicitly specified or changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:oshchip]
platform = nordicnrf51
board = oshchip

upload_protocol = jlink

----------------------------------------

TITLE: Custom MCU Configuration
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:frdm_k64f]
platform = freescalekinetis
board = frdm_k64f

; change microcontroller
board_build.mcu = mk64fn1m0vll12

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring Arduino Ethernet Board in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for Arduino Ethernet board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ethernet]
platform = atmelavr
board = ethernet

----------------------------------------

TITLE: Configuring Basic unPhone 8 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the unPhone 8 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:unphone8]
platform = espressif32
board = unphone8

----------------------------------------

TITLE: Customizing BL653 Development Kit Settings in PlatformIO INI
DESCRIPTION: Example of overriding default board settings for the BL653 Development Kit, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:laird_bl653_dvk]
platform = nordicnrf52
board = laird_bl653_dvk

; change microcontroller
board_build.mcu = nrf52833

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Teensy 2.0 Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for Teensy 2.0, with teensy-gui as the default option.

LANGUAGE: ini
CODE:
[env:teensy2]\nplatform = teensy\nboard = teensy2\n\nupload_protocol = teensy-gui

----------------------------------------

TITLE: Upload Protocol Configuration in PlatformIO
DESCRIPTION: Configuration example showing how to set a specific upload protocol for the B96B-F446VE board.

LANGUAGE: ini
CODE:
[env:b96b_f446ve]
platform = ststm32
board = b96b_f446ve

upload_protocol = stlink

----------------------------------------

TITLE: Basic N79E715 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for the N79E715 board using the intel_mcs51 platform in the project's configuration file.

LANGUAGE: ini
CODE:
[env:N79E715]
platform = intel_mcs51
board = N79E715

----------------------------------------

TITLE: Configuring PanStamp AVR Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the PanStamp AVR board in a PlatformIO project's configuration file. It includes options for specifying the board, platform, and overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:panStampAVR]
platform = atmelavr
board = panStampAVR

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for Particle Xenon
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Particle Xenon board.

LANGUAGE: ini
CODE:
[env:particle_xenon]
platform = nordicnrf52
board = particle_xenon

upload_protocol = nrfutil

----------------------------------------

TITLE: Configuring Basic UBW32 MX795 Board Settings
DESCRIPTION: Basic configuration setup for the UBW32 MX795 board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ubw32_mx795]
platform = microchippic32
board = ubw32_mx795

----------------------------------------

TITLE: Setting Upload Protocol for BluesWireless Swan R5
DESCRIPTION: This code demonstrates how to set the upload protocol for the BluesWireless Swan R5 board in the platformio.ini file. The default protocol is stlink, but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:bw_swan_r5]
platform = ststm32
board = bw_swan_r5

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for Microduino Core STM32
DESCRIPTION: Basic PlatformIO configuration for the Microduino Core STM32 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:microduino32_flash]
platform = ststm32
board = microduino32_flash

----------------------------------------

TITLE: Configuring AVR128DA28 Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the AVR128DA28 board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:AVR128DA28]
platform = atmelmegaavr
board = AVR128DA28

----------------------------------------

TITLE: Setting Upload Protocol for M5Stick-C in PlatformIO INI File
DESCRIPTION: This snippet shows how to set the upload protocol for the M5Stick-C board in the PlatformIO configuration. It demonstrates setting the protocol to esptool.

LANGUAGE: ini
CODE:
[env:m5stick-c]
platform = espressif32
board = m5stick-c

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15F100W Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic STC15F100W board in the PlatformIO configuration file. It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:STC15F100W]
platform = intel_mcs51
board = STC15F100W

; change microcontroller
board_build.mcu = stc15f100w

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the SparkFun ESP32-S2 Thing Plus board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32s2_thing_plus]
platform = espressif32
board = sparkfun_esp32s2_thing_plus

----------------------------------------

TITLE: Configuring PlatformIO for SparkFun Qwiic Micro SAMD21E
DESCRIPTION: Basic PlatformIO configuration for the SparkFun Qwiic Micro board. Sets the platform to atmelsam and specifies the board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_qwiic_micro_samd21e]
platform = atmelsam
board = sparkfun_qwiic_micro_samd21e

----------------------------------------

TITLE: Upload Protocol Configuration for Noduino Quantum
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:quantum]
platform = espressif32
board = quantum

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ST STM8S105K4T6 Breakout Board
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the ST STM8S105K4T6 Breakout Board in the PlatformIO project configuration. The board supports 'serial' and 'stlinkv2' protocols, with 'serial' as the default.

LANGUAGE: ini
CODE:
[env:stm8sblack]
platform = ststm8
board = stm8sblack

upload_protocol = serial

----------------------------------------

TITLE: Overriding Default ATmega48 Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the ATmega48 board in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATmega48]
platform = atmelavr
board = ATmega48

; change microcontroller
board_build.mcu = atmega48

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller model and CPU frequency in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:STC8H2K32T]
platform = intel_mcs51
board = STC8H2K32T

; change microcontroller
board_build.mcu = stc8h2k32t

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8H3K32S2
DESCRIPTION: Basic configuration example for setting up a PlatformIO project with the STC8H3K32S2 board.

LANGUAGE: ini
CODE:
[env:STC8H3K32S2]
platform = intel_mcs51
board = STC8H3K32S2

----------------------------------------

TITLE: Customizing Controllino Mini Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:controllino_mini]
platform = atmelavr
board = controllino_mini

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for FRDM-KW41Z
DESCRIPTION: Basic environment configuration for the FRDM-KW41Z board using the freescalekinetis platform.

LANGUAGE: ini
CODE:
[env:frdm_kw41z]
platform = freescalekinetis
board = frdm_kw41z

----------------------------------------

TITLE: Advanced ML51TB9AE Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration for ML51TB9AE board with custom microcontroller and frequency settings

LANGUAGE: ini
CODE:
[env:ML51TB9AE]
platform = intel_mcs51
board = ML51TB9AE

; change microcontroller
board_build.mcu = ml51tb9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the ATSAMR21-XPRO board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:samr21_xpro]
platform = atmelsam
board = samr21_xpro

----------------------------------------

TITLE: Setting Upload Protocol for Seeed Tiny BLE
DESCRIPTION: Configuration example for specifying the upload protocol, with CMSIS-DAP as the default option.

LANGUAGE: ini
CODE:
[env:seeedTinyBLE]
platform = nordicnrf51
board = seeedTinyBLE

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Basic PlatformIO Configuration for FRDM-KL43Z
DESCRIPTION: Basic environment configuration for FRDM-KL43Z board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:frdm_kl43z]
platform = freescalekinetis
board = frdm_kl43z

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the SODAQ SARA board.

LANGUAGE: ini
CODE:
[env:sodaq_sara]
platform = atmelsam
board = sodaq_sara

; change microcontroller
board_build.mcu = samd21j18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic ATtiny3216 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATtiny3216 project environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny3216]
platform = atmelmegaavr
board = ATtiny3216

----------------------------------------

TITLE: Basic Board Configuration for STC8F2K32S4
DESCRIPTION: Basic PlatformIO configuration for setting up the STC8F2K32S4 board with Intel MCS-51 platform.

LANGUAGE: ini
CODE:
[env:STC8F2K32S4]
platform = intel_mcs51
board = STC8F2K32S4

----------------------------------------

TITLE: Customizing Calliope Mini v3 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:calliopemini_v3]
platform = nordicnrf52
board = calliopemini_v3

; change microcontroller
board_build.mcu = nrf52833

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring ATtiny1626 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the ATtiny1626 board. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny1626]
platform = atmelmegaavr
board = ATtiny1626

; change microcontroller
board_build.mcu = attiny1626

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ubIQio Ardhat Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ubIQio Ardhat board in a PlatformIO project configuration file. It includes the basic board setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:ardhat]
platform = atmelavr
board = ardhat

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for RushUp Cloud-JAM L4
DESCRIPTION: This code snippet demonstrates how to set a specific upload protocol for the RushUp Cloud-JAM L4 board in the PlatformIO configuration. The default protocol is 'stlink', but this can be changed as shown.

LANGUAGE: ini
CODE:
[env:cloud_jam_l4]
platform = ststm32
board = cloud_jam_l4

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Thunderboard Sense 2 in PlatformIO INI
DESCRIPTION: Basic configuration for the Thunderboard Sense 2 board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:tb_sense_12]
platform = siliconlabsefm32
board = tb_sense_12

----------------------------------------

TITLE: Customizing STC15F100 Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the STC15F100 board.

LANGUAGE: ini
CODE:
[env:STC15F100]
platform = intel_mcs51
board = STC15F100

; change microcontroller
board_build.mcu = stc15f100

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Invent One Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Invent One board in the PlatformIO project configuration file. It sets the platform to espressif8266 and the board to inventone.

LANGUAGE: ini
CODE:
[env:inventone]
platform = espressif8266
board = inventone

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST 32F469IDISCOVERY board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:disco_f469ni]
platform = ststm32
board = disco_f469ni

----------------------------------------

TITLE: Configuring Arduino Mini ATmega328 in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino Mini ATmega328 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:miniatmega328]
platform = atmelavr
board = miniatmega328

----------------------------------------

TITLE: Customizing RedBearLab Blend 2 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in a PlatformIO project configuration. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:redbear_blend2]
platform = nordicnrf52
board = redbear_blend2

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F401CD
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32F401CD board.

LANGUAGE: ini
CODE:
[env:genericSTM32F401CD]
platform = ststm32
board = genericSTM32F401CD

upload_protocol = serial

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the Pycom WiPy3 board.

LANGUAGE: ini
CODE:
[env:wipy3]
platform = espressif32
board = wipy3

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for ATtiny13A
DESCRIPTION: Basic environment configuration for ATtiny13A board in platformio.ini file. Sets up the basic board and platform settings.

LANGUAGE: ini
CODE:
[env:attiny13a]
platform = atmelavr
board = attiny13a

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Seeed Studio Edgebox-ESP-100 board setup with ESP32 platform.

LANGUAGE: ini
CODE:
[env:edgebox-esp-100]
platform = espressif32
board = edgebox-esp-100

----------------------------------------

TITLE: Customizing F407VG Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:diymore_f407vgt]
platform = ststm32
board = diymore_f407vgt

; change microcontroller
board_build.mcu = stm32f407vgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing MCU and Clock Settings
DESCRIPTION: Example showing how to override default microcontroller and CPU frequency settings for the Maple Mini board

LANGUAGE: ini
CODE:
[env:maple_mini_b20]
platform = ststm32
board = maple_mini_b20

; change microcontroller
board_build.mcu = stm32f103cbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing ATmega6450 MCU and Clock Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the ATmega6450 board.

LANGUAGE: ini
CODE:
[env:ATmega6450]
platform = atmelavr
board = ATmega6450

; change microcontroller
board_build.mcu = atmega6450

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic STM32 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the 3DP001V1 evaluation board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:st3dp001_eval]
platform = ststm32
board = st3dp001_eval

----------------------------------------

TITLE: Configuring Basic ATtiny417 Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATtiny417 board environment in platformio.ini file. Specifies the platform and board name.

LANGUAGE: ini
CODE:
[env:ATtiny417]
platform = atmelmegaavr
board = ATtiny417

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example of configuring the upload protocol for the WEMOS LOLIN S3 Mini board using esptool.

LANGUAGE: ini
CODE:
[env:lolin_s3_mini]
platform = espressif32
board = lolin_s3_mini

upload_protocol = esptool

----------------------------------------

TITLE: Adding Explicit Breakpoint in Arduino Sketch
DESCRIPTION: This snippet shows how to add an explicit breakpoint in the code using the breakpoint() function, which can be useful if the program doesn't stop on regular breakpoints.

LANGUAGE: cpp
CODE:
void loop()
{
  breakpoint();
  digitalWrite(LED_BUILTIN, HIGH);
  delay(300);
  digitalWrite(LED_BUILTIN, LOW);
  delay(100);
}

----------------------------------------

TITLE: Customizing MS51FB9AE Board Parameters
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:MS51FB9AE]
platform = intel_mcs51
board = MS51FB9AE

; change microcontroller
board_build.mcu = ms51fb9ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Generic W79E659 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic W79E659 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:W79E659]
platform = intel_mcs51
board = W79E659

; change microcontroller
board_build.mcu = w79e659

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Customizing Calliope Mini MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Calliope mini board.

LANGUAGE: ini
CODE:
[env:calliope_mini]
platform = nordicnrf51
board = calliope_mini

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8A8K32S4A12]
platform = intel_mcs51
board = STC8A8K32S4A12

; change microcontroller
board_build.mcu = stc8a8k32s4a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing STC8G2K32S2 Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G2K32S2]
platform = intel_mcs51
board = STC8G2K32S2

; change microcontroller
board_build.mcu = stc8g2k32s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for Nordic nRF52833-DK
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Nordic nRF52833-DK board in the PlatformIO project configuration. It uses the JLink protocol as an example.

LANGUAGE: ini
CODE:
[env:nrf52833_dk]
platform = nordicnrf52
board = nrf52833_dk

upload_protocol = jlink

----------------------------------------

TITLE: Extended Board Configuration with Custom Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:IAP15F106]
platform = intel_mcs51
board = IAP15F106

; change microcontroller
board_build.mcu = iap15f106

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing AVR64DA32 Board Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default settings for the AVR64DA32 board, including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:AVR64DA32]
platform = atmelmegaavr
board = AVR64DA32

; change microcontroller
board_build.mcu = avr64da32

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Generic STC8H8K48U Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC8H8K48U board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H8K48U]
platform = intel_mcs51
board = STC8H8K48U

; change microcontroller
board_build.mcu = stc8h8k48u

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for Circuit Playground Bluefruit
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Default protocol is nrfutil.

LANGUAGE: ini
CODE:
[env:adafruit_cplaynrf52840]
platform = nordicnrf52
board = adafruit_cplaynrf52840

upload_protocol = nrfutil

----------------------------------------

TITLE: Customizing ATmega808 Build Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:ATmega808]
platform = atmelmegaavr
board = ATmega808

; change microcontroller
board_build.mcu = atmega808

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM3210C-EVAL in PlatformIO
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the STM3210C-EVAL board in the PlatformIO configuration. The default protocol is 'stlink', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:eval_f107vc]
platform = ststm32
board = eval_f107vc

upload_protocol = stlink

----------------------------------------

TITLE: Basic STC15F103W Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for the STC15F103W board using the intel_mcs51 platform in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC15F103W]
platform = intel_mcs51
board = STC15F103W

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the Arduino Pro Mini board.

LANGUAGE: ini
CODE:
[env:pro16MHzatmega328]
platform = atmelavr
board = pro16MHzatmega328

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the board, using J-Link as the default option.

LANGUAGE: ini
CODE:
[env:ublox_bmd345eval_nrf52840]
platform = nordicnrf52
board = ublox_bmd345eval_nrf52840

upload_protocol = jlink

----------------------------------------

TITLE: Customizing LilyGo T-Display MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:lilygo-t-display]
platform = espressif32
board = lilygo-t-display

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:nucleo_8s207k8]
platform = ststm8
board = nucleo_8s207k8

upload_protocol = stlinkv21

----------------------------------------

TITLE: Basic M300 Board Configuration
DESCRIPTION: Basic PlatformIO environment configuration for the M300 board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:malyanm300_f070cb]
platform = ststm32
board = malyanm300_f070cb

----------------------------------------

TITLE: Customizing ATtiny204 Board Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the ATtiny204 board.

LANGUAGE: ini
CODE:
[env:ATtiny204]
platform = atmelmegaavr
board = ATtiny204

; change microcontroller
board_build.mcu = attiny204

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Lilka v2 Board in PlatformIO
DESCRIPTION: Basic configuration for the Lilka v2 board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lilka_v2]
platform = espressif32
board = lilka_v2

----------------------------------------

TITLE: Configuring PlatformIO Environment for ML51OB9AE Board
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic ML51OB9AE board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:ML51OB9AE]
platform = intel_mcs51
board = ML51OB9AE

----------------------------------------

TITLE: Configuring BlackPill F303CC Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the BlackPill F303CC board, including platform and board selection. Additional options demonstrate how to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:robotdyn_blackpill_f303cc]
platform = ststm32
board = robotdyn_blackpill_f303cc

; change microcontroller
board_build.mcu = stm32f303cct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO Project for Pololu A-Star 32U4
DESCRIPTION: Example PlatformIO project configuration for the Pololu A-Star 32U4 board. Shows how to set the board ID and override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:a-star32U4]
platform = atmelavr
board = a-star32U4

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring unPhone 9 Board in PlatformIO
DESCRIPTION: Basic configuration for the unPhone 9 board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:unphone9]
platform = espressif32
board = unphone9

----------------------------------------

TITLE: Setting Upload Protocol for Aceinna MTLT335
DESCRIPTION: Example of specifying the upload protocol in platformio.ini. The default protocol is stlink, but this can be changed to blackmagic or jlink.

LANGUAGE: ini
CODE:
[env:OpenIMU335]
platform = aceinna_imu
board = OpenIMU335

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration for STC8F2K60S4
DESCRIPTION: Basic PlatformIO configuration for the STC8F2K60S4 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8F2K60S4]
platform = intel_mcs51
board = STC8F2K60S4

----------------------------------------

TITLE: Custom MCU Configuration for FK407M1
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the FK407M1 board.

LANGUAGE: ini
CODE:
[env:fk407m1]
platform = ststm32
board = fk407m1

; change microcontroller
board_build.mcu = stm32f407vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing ATmega168 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in platformio.ini file.

LANGUAGE: ini
CODE:
[env:diecimilaatmega168]
platform = atmelavr
board = diecimilaatmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Adafruit Feather STM32F405 in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Adafruit Feather STM32F405 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_feather_f405]
platform = ststm32
board = adafruit_feather_f405

----------------------------------------

TITLE: Advanced N79E855 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E855]
platform = intel_mcs51
board = N79E855

; change microcontroller
board_build.mcu = n79e855

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring Adafruit QT Py M0 Board in PlatformIO
DESCRIPTION: Basic configuration for the Adafruit QT Py M0 board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_qt_py_m0]
platform = atmelsam
board = adafruit_qt_py_m0

----------------------------------------

TITLE: Configuring Nordic nRF52840-DK Board in PlatformIO
DESCRIPTION: Basic configuration for using the Nordic nRF52840-DK board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nrf52840_dk]
platform = nordicnrf52
board = nrf52840_dk

----------------------------------------

TITLE: Configuring Basic IAP15F2K61S Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the IAP15F2K61S board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:IAP15F2K61S]
platform = intel_mcs51
board = IAP15F2K61S

----------------------------------------

TITLE: Configuring AVR64DA28 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the AVR64DA28 board in the PlatformIO project configuration file. It demonstrates the basic setup and how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:AVR64DA28]
platform = atmelmegaavr
board = AVR64DA28

; change microcontroller
board_build.mcu = avr64da28

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol for SLSTK3400A Happy Gecko
DESCRIPTION: Configuration to specify the upload protocol for the SLSTK3400A USB-enabled Happy Gecko board. In this example, it's set to 'mbed'.

LANGUAGE: ini
CODE:
[env:efm32hg_stk3400]
platform = siliconlabsefm32
board = efm32hg_stk3400

upload_protocol = mbed

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC15W404AS
DESCRIPTION: Basic configuration setup for STC15W404AS board in platformio.ini

LANGUAGE: ini
CODE:
[env:STC15W404AS]
platform = intel_mcs51
board = STC15W404AS

----------------------------------------

TITLE: Configuring Adafruit Feather nRF52840 Express in PlatformIO
DESCRIPTION: Basic configuration for the Adafruit Feather nRF52840 Express board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52840]
platform = nordicnrf52
board = adafruit_feather_nrf52840

----------------------------------------

TITLE: Configuring PlatformIO for TI LaunchPad MSP-EXP430FR2355LP
DESCRIPTION: Basic PlatformIO configuration for the TI LaunchPad MSP-EXP430FR2355LP board. Specifies the platform and board ID to use in the project configuration file.

LANGUAGE: ini
CODE:
[env:lpmsp430fr2355]
platform = timsp430
board = lpmsp430fr2355

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:robotControl]
platform = atmelavr
board = robotControl

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for WeAct Studio BlackPill V2.0 (STM32F411CE)
DESCRIPTION: Configuration to change the upload protocol for the WeAct Studio BlackPill V2.0 (STM32F411CE) board. This example sets the upload protocol to stlink.

LANGUAGE: ini
CODE:
[env:blackpill_f411ce]
platform = ststm32
board = blackpill_f411ce

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Pinoccio Scout Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Pinoccio Scout board in the PlatformIO project configuration file. It sets the platform to atmelavr and the board to pinoccio.

LANGUAGE: ini
CODE:
[env:pinoccio]
platform = atmelavr
board = pinoccio

----------------------------------------

TITLE: Customizing STC15W408S Board Parameters in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15W408S]
platform = intel_mcs51
board = STC15W408S

; change microcontroller
board_build.mcu = stc15w408s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing STM32F3DISCOVERY MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the STM32F3DISCOVERY board

LANGUAGE: ini
CODE:
[env:disco_f303vc]
platform = ststm32
board = disco_f303vc

; change microcontroller
board_build.mcu = stm32f303vct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing ST 32F769IDISCOVERY Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f769ni]
platform = ststm32
board = disco_f769ni

; change microcontroller
board_build.mcu = stm32f769nih6

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Customizing Linino One Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default Linino One board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:one]
platform = atmelavr
board = one

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for FRDM-K22F
DESCRIPTION: Configuration to specify the upload protocol for the FRDM-K22F board. In this example, it's set to 'mbed'.

LANGUAGE: ini
CODE:
[env:frdm_k22f]
platform = freescalekinetis
board = frdm_k22f

upload_protocol = mbed

----------------------------------------

TITLE: Advanced MCU Configuration
DESCRIPTION: Extended configuration example showing how to customize microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RB]
platform = ststm32
board = genericSTM32F401RB

; change microcontroller
board_build.mcu = stm32f401rbt6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Advanced XinaBox CW02 Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the XinaBox CW02 board.

LANGUAGE: ini
CODE:
[env:xinabox_cw02]
platform = espressif32
board = xinabox_cw02

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing SparkFun Mega Pro Mini 3.3V settings in PlatformIO INI file
DESCRIPTION: Advanced configuration for the SparkFun Mega Pro Mini 3.3V board, demonstrating how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_megamini]
platform = atmelavr
board = sparkfun_megamini

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for Trueverit ESP32 Board
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO. Sets the protocol to esptool, which is the default for this board.

LANGUAGE: ini
CODE:
[env:trueverit-iot-driver-mk2]
platform = espressif32
board = trueverit-iot-driver-mk2

upload_protocol = esptool

----------------------------------------

TITLE: Basic Board Configuration with PlatformIO
DESCRIPTION: Basic configuration setup for the NUCLEO-8S207K8 board using the ststm8 platform.

LANGUAGE: ini
CODE:
[env:nucleo_8s207k8]
platform = ststm8
board = nucleo_8s207k8

----------------------------------------

TITLE: Configuring PlatformIO for Tiny STM103T Board
DESCRIPTION: Basic PlatformIO configuration for the Tiny STM103T board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:hy_tinystm103tb]
platform = ststm32
board = hy_tinystm103tb

----------------------------------------

TITLE: Basic PlatformIO Configuration for Adafruit Pro Trinket
DESCRIPTION: Basic environment configuration for the Adafruit Pro Trinket 5V/16MHz board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:protrinket5]
platform = atmelavr
board = protrinket5

----------------------------------------

TITLE: Customizing Tiny STM103T Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:hy_tinystm103tb]
platform = ststm32
board = hy_tinystm103tb

; change microcontroller
board_build.mcu = stm32f103tbu6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing TI LaunchPad MSP-EXP430FR6989LP Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency for the TI LaunchPad MSP-EXP430FR6989LP.

LANGUAGE: ini
CODE:
[env:lpmsp430fr6989]
platform = timsp430
board = lpmsp430fr6989

; change microcontroller
board_build.mcu = msp430fr6989

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic ESP32 Board Settings
DESCRIPTION: Basic PlatformIO configuration for setting up the VintLabs ESP32 Devkit board environment.

LANGUAGE: ini
CODE:
[env:vintlabs-devkit-v1]
platform = espressif32
board = vintlabs-devkit-v1

----------------------------------------

TITLE: Customizing Generic STC15W4K16S4 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in a PlatformIO project configuration. This snippet demonstrates how to change the microcontroller and MCU frequency for the Generic STC15W4K16S4 board.

LANGUAGE: ini
CODE:
[env:STC15W4K16S4]
platform = intel_mcs51
board = STC15W4K16S4

; change microcontroller
board_build.mcu = stc15w4k16s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO for Maxim Health Sensor Platform
DESCRIPTION: Basic PlatformIO configuration for the Maxim Health Sensor Platform board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:max32620hsp]
platform = maxim32
board = max32620hsp

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8H3K60S2
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the Generic STC8H3K60S2 board. It sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8H3K60S2]
platform = intel_mcs51
board = STC8H3K60S2

----------------------------------------

TITLE: M300 Upload Protocol Configuration
DESCRIPTION: Example showing how to configure a specific upload protocol for the M300 board.

LANGUAGE: ini
CODE:
[env:malyanm300_f070cb]
platform = ststm32
board = malyanm300_f070cb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the Arduino Uno R4 WiFi board.

LANGUAGE: ini
CODE:
[env:uno_r4_wifi]
platform = renesas-ra
board = uno_r4_wifi

; change microcontroller
board_build.mcu = ra4m1

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic Board Configuration for IAP15W1K29S
DESCRIPTION: Basic PlatformIO configuration for setting up the IAP15W1K29S board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:IAP15W1K29S]
platform = intel_mcs51
board = IAP15W1K29S

----------------------------------------

TITLE: Setting Upload Protocol for Ai-Thinker ESP-C3-M1-I-Kit
DESCRIPTION: Configuration to set the upload protocol for the Ai-Thinker ESP-C3-M1-I-Kit board. This example uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:esp32-c3-m1i-kit]
platform = espressif32
board = esp32-c3-m1i-kit

upload_protocol = esptool

----------------------------------------

TITLE: Overriding Default Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings for the Aceinna OpenIMU 300, such as changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:OpenIMU300]
platform = aceinna_imu
board = OpenIMU300

; change microcontroller
board_build.mcu = stm32f405rg

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring RedBearLab nRF51822 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the RedBearLab nRF51822 board in the PlatformIO project configuration file. It demonstrates setting the platform, board, and how to override default board settings.

LANGUAGE: ini
CODE:
[env:redBearLab]
platform = nordicnrf51
board = redBearLab

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Genuino 101 Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genuino101]
platform = intel_arc32
board = genuino101

; change microcontroller
board_build.mcu = ARCv2EM

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Setting Upload Protocol for u-blox C030-R410M IoT
DESCRIPTION: Configuration to specify the upload protocol for the u-blox C030-R410M IoT board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:ublox_c030_r410m]
platform = ststm32
board = ublox_c030_r410m

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic STC8H1K28 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for STC8H1K28 board setup using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H1K28]
platform = intel_mcs51
board = STC8H1K28

----------------------------------------

TITLE: Customizing Arduino Fio MCU Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in PlatformIO's project configuration.

LANGUAGE: ini
CODE:
[env:fio]
platform = atmelavr
board = fio

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Upload Protocol for FRDM-K66F
DESCRIPTION: Configuration example showing how to specify the upload protocol for the FRDM-K66F board using the mbed protocol.

LANGUAGE: ini
CODE:
[env:frdm_k66f]
platform = freescalekinetis
board = frdm_k66f

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Basic Smart Bee Data Logger Environment
DESCRIPTION: Basic configuration for setting up a Smart Bee Data Logger board project using PlatformIO. Specifies the platform and board settings.

LANGUAGE: ini
CODE:
[env:bee_data_logger]
platform = espressif32
board = bee_data_logger

----------------------------------------

TITLE: Overriding Default ATmega2561 Settings in PlatformIO project.ini
DESCRIPTION: This snippet demonstrates how to override default ATmega2561 settings in the PlatformIO project configuration file. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATmega2561]
platform = atmelavr
board = ATmega2561

; change microcontroller
board_build.mcu = atmega2561

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for NXP i.MX RT1064 Evaluation Kit
DESCRIPTION: Configuration example for changing the upload protocol to 'mbed' for the NXP i.MX RT1064 Evaluation Kit in platformio.ini.

LANGUAGE: ini
CODE:
[env:mimxrt1064_evk]
platform = nxpimxrt
board = mimxrt1064_evk

upload_protocol = mbed

----------------------------------------

TITLE: Setting Upload Protocol for Grasshopper-L082CZ
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the Grasshopper-L082CZ board in a PlatformIO project. It uses the DFU (Device Firmware Upgrade) protocol as an example.

LANGUAGE: ini
CODE:
[env:grasshopper_l082cz]
platform = ststm32
board = grasshopper_l082cz

upload_protocol = dfu

----------------------------------------

TITLE: Configuring MSP430FR2433 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the MSP-EXP430FR2433LP board using the timsp430 platform. Sets up the basic board environment.

LANGUAGE: ini
CODE:
[env:lpmsp430fr2433]
platform = timsp430
board = lpmsp430fr2433

----------------------------------------

TITLE: Running PlatformIO Test Command for Semihosting
DESCRIPTION: This snippet demonstrates how to use the PlatformIO CLI to run unit tests with semihosting enabled. It shows the command and its output, including test results and timing information.

LANGUAGE: shell
CODE:
> pio test

Verbose mode can be enabled via `-v, --verbose` option
Collected 1 tests

Processing test_dummy in nucleo_l1521re environment
---------------------------------------------------
Building...
Uploading...
Testing...
Info : clock speed 300 kHz
Info : STLINK V2J29M18 (API v2) VID:PID 0483:374B
Info : Target voltage: 3.272727
Info : stm32l1.cpu: Cortex-M3 r2p0 processor detected
Info : stm32l1.cpu: target has 6 breakpoints, 4 watchpoints
Info : starting gdb server for stm32l1.cpu on 3333
Info : Listening on port 3333 for gdb connections
semihosting is enabled
Info : Unable to match requested speed 300 kHz, using 240 kHz
Info : Unable to match requested speed 300 kHz, using 240 kHz
Info : Listening on port 6666 for tcl connections
Info : Listening on port 4444 for telnet connections
test/test_dummy/test_main.c:19: test_dummy	[PASSED]
-------------------- nucleo_l1521re:test_dummy [PASSED] Took 5.43 seconds --------------------

===================================== SUMMARY =====================================
Environment     Test        Status    Duration
--------------  ----------  --------  ------------
nucleo_l1521re  test_dummy  PASSED    00:00:05.433
==================== 1 test cases: 1 succeeded in 00:00:05.433 ====================

----------------------------------------

TITLE: Configuring Generic ML51FB9AE Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic ML51FB9AE board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML51FB9AE]
platform = intel_mcs51
board = ML51FB9AE

; change microcontroller
board_build.mcu = ml51fb9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the Adafruit pyBadge M4 Express.

LANGUAGE: ini
CODE:
[env:adafruit_pybadge_m4]
platform = atmelsam
board = adafruit_pybadge_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring ATmega8 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega8 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega8]
platform = atmelavr
board = ATmega8

; change microcontroller
board_build.mcu = atmega8

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ESPectro32 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the ESPectro32 board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:espectro32]
platform = espressif32
board = espectro32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit pyBadge AirLift M4
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the Adafruit pyBadge AirLift M4 board in PlatformIO. The default protocol is 'sam-ba', but it can be changed to other supported protocols like 'atmel-ice' or 'jlink'.

LANGUAGE: ini
CODE:
[env:adafruit_pybadge_airlift_m4]
platform = atmelsam
board = adafruit_pybadge_airlift_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Generic STC89C53RC Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC89C53RC board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC89C53RC]
platform = intel_mcs51
board = STC89C53RC

----------------------------------------

TITLE: Configuring Basic Feather 328P Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO project with the Adafruit Feather 328P board. Uses the atmelavr platform with the feather328p board identifier.

LANGUAGE: ini
CODE:
[env:feather328p]
platform = atmelavr
board = feather328p

----------------------------------------

TITLE: Configuring Basic PlatformIO Project for ItsyBitsy
DESCRIPTION: Basic PlatformIO configuration for Adafruit ItsyBitsy 5V/16MHz board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:itsybitsy32u4_5V]
platform = atmelavr
board = itsybitsy32u4_5V

----------------------------------------

TITLE: Configuring Alorium Hinj Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Alorium Hinj board in a PlatformIO project's configuration file. It sets the platform and board type, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:alorium_hinj]
platform = atmelavr
board = alorium_hinj

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing W79E632 Board Parameters in PlatformIO
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:W79E632]
platform = intel_mcs51
board = W79E632

; change microcontroller
board_build.mcu = w79e632

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Generic ML51LD1AE Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration file. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ML51LD1AE]
platform = intel_mcs51
board = ML51LD1AE

; change microcontroller
board_build.mcu = ml51ld1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Customizing Arty FPGA Dev Kit Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. This snippet shows how to change the microcontroller and CPU frequency for the Arty FPGA Dev Kit.

LANGUAGE: ini
CODE:
[env:e310-arty]
platform = sifive
board = e310-arty

; change microcontroller
board_build.mcu = fe310

; change MCU frequency
board_build.f_cpu = 450000000L

----------------------------------------

TITLE: Advanced N76E616 Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:N76E616]
platform = intel_mcs51
board = N76E616

; change microcontroller
board_build.mcu = n76e616

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up an STC15F408AD board project using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15F408AD]
platform = intel_mcs51
board = STC15F408AD

----------------------------------------

TITLE: Setting Upload Protocol for Parashu Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set the upload protocol for the Parashu board in the PlatformIO configuration. It sets the upload protocol to FTDI.

LANGUAGE: ini
CODE:
[env:parashu]
platform = shakti
board = parashu

upload_protocol = ftdi

----------------------------------------

TITLE: Customizing STM32F103T4 MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings

LANGUAGE: ini
CODE:
[env:genericSTM32F103T4]
platform = ststm32
board = genericSTM32F103T4

; change microcontroller
board_build.mcu = stm32f103t4u6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for RedBearLab BLE Nano
DESCRIPTION: Basic configuration setup for RedBearLab BLE Nano 1.5 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:redBearLabBLENano]
platform = nordicnrf51
board = redBearLabBLENano

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the FRDM-K64F board.

LANGUAGE: ini
CODE:
[env:frdm_k64f]
platform = freescalekinetis
board = frdm_k64f

upload_protocol = mbed

----------------------------------------

TITLE: Customizing Adafruit Circuit Playground Express Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_circuitplayground_m0]
platform = atmelsam
board = adafruit_circuitplayground_m0

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing u-blox C030-R410M IoT Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ublox_c030_r410m]
platform = ststm32
board = ublox_c030_r410m

; change microcontroller
board_build.mcu = stm32f437vg

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Configuring PlatformIO for Digilent chipKIT Pro MX7
DESCRIPTION: This code snippet shows how to configure a PlatformIO project for the Digilent chipKIT Pro MX7 board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:chipkit_pro_mx7]
platform = microchippic32
board = chipkit_pro_mx7

----------------------------------------

TITLE: Configuring PlatformIO for Generic W79E2051 Board
DESCRIPTION: This snippet demonstrates how to configure a PlatformIO project for the Generic W79E2051 board. It shows the basic board selection and provides examples of how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:W79E2051]
platform = intel_mcs51
board = W79E2051

; change microcontroller
board_build.mcu = w79e2051

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Setting STM32F103C4 Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for programming the board

LANGUAGE: ini
CODE:
[env:genericSTM32F103C4]
platform = ststm32
board = genericSTM32F103C4

upload_protocol = serial

----------------------------------------

TITLE: Configuring Basic STM32F3DISCOVERY Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F3DISCOVERY board using the ststm32 platform

LANGUAGE: ini
CODE:
[env:disco_f303vc]
platform = ststm32
board = disco_f303vc

----------------------------------------

TITLE: Configuring ATmega328 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega328 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:ATmega328]
platform = atmelavr
board = ATmega328

; change microcontroller
board_build.mcu = atmega328

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol to be used with the board. Default is 'mbed' but can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:lpc1768]
platform = nxplpc
board = lpc1768

upload_protocol = mbed

----------------------------------------

TITLE: Customizing STM32F103VG Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VG]
platform = ststm32
board = genericSTM32F103VG

; change microcontroller
board_build.mcu = stm32f103vgt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing ESP-WROOM-02 MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ESP-WROOM-02 board.

LANGUAGE: ini
CODE:
[env:esp_wroom_02]
platform = espressif8266
board = esp_wroom_02

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic STM32F413CG Board Environment
DESCRIPTION: Basic PlatformIO environment configuration for STM32F413CG board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F413CG]
platform = ststm32
board = genericSTM32F413CG

----------------------------------------

TITLE: Configuring PlatformIO Environment for Adafruit MagTag 2.9 ESP32-S2
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Adafruit MagTag 2.9 board using the ESP32 platform. It demonstrates basic configuration and how to override default board settings.

LANGUAGE: ini
CODE:
[env:adafruit_magtag29_esp32s2]
platform = espressif32
board = adafruit_magtag29_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic chipKIT WF32 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO project targeting the chipKIT WF32 board using the microchippic32 platform.

LANGUAGE: ini
CODE:
[env:chipkit_wf32]
platform = microchippic32
board = chipkit_wf32

----------------------------------------

TITLE: Advanced Board Configuration with MCU Options
DESCRIPTION: Configuration with custom microcontroller and frequency settings for STM32F401CB

LANGUAGE: ini
CODE:
[env:genericSTM32F401CB]
platform = ststm32
board = genericSTM32F401CB

; change microcontroller
board_build.mcu = stm32f401cbu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Configuring Aceinna MTLT335 Board in PlatformIO
DESCRIPTION: Basic configuration for the Aceinna MTLT335 board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:OpenIMU335]
platform = aceinna_imu
board = OpenIMU335

----------------------------------------

TITLE: Customizing Arduino Ethernet MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Arduino Ethernet board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:ethernet]
platform = atmelavr
board = ethernet

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration with custom microcontroller and frequency settings for the IAP15F2K61S2 board using board_build options.

LANGUAGE: ini
CODE:
[env:IAP15F2K61S2]
platform = intel_mcs51
board = IAP15F2K61S2

; change microcontroller
board_build.mcu = iap15f2k61s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Electrosmith Daisy Board in platformio.ini
DESCRIPTION: Basic configuration for the Electrosmith Daisy board in the project's platformio.ini file. This snippet sets the platform and board options.

LANGUAGE: ini
CODE:
[env:electrosmith_daisy]
platform = ststm32
board = electrosmith_daisy

----------------------------------------

TITLE: Customizing Generic N78E517 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic N78E517 board in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:N78E517]
platform = intel_mcs51
board = N78E517

; change microcontroller
board_build.mcu = n78e517

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:STC8H3K64S2]
platform = intel_mcs51
board = STC8H3K64S2

; change microcontroller
board_build.mcu = stc8h3k64s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced STM32F407VG Board Configuration
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the Black STM32F407VG board.

LANGUAGE: ini
CODE:
[env:black_f407vg]
platform = ststm32
board = black_f407vg

; change microcontroller
board_build.mcu = stm32f407vgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Basic N78E366 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for the N78E366 board in platformio.ini project file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:N78E366]
platform = intel_mcs51
board = N78E366

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-S3-USB-OTG
DESCRIPTION: This configuration snippet demonstrates how to set the upload protocol for the Espressif ESP32-S3-USB-OTG board in a PlatformIO project. It uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:esp32s3usbotg]
platform = espressif32
board = esp32s3usbotg

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Arduino NG or older ATmega8 in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino NG or older ATmega8 board in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:atmegangatmega8]
platform = atmelavr
board = atmegangatmega8

----------------------------------------

TITLE: Customizing Nordic nRF51 Dongle Board Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:nrf51_dongle]
platform = nordicnrf51
board = nrf51_dongle

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration snippet for setting up the ST DISCO-L072CZ-LRWAN1 board in platformio.ini with default settings.

LANGUAGE: ini
CODE:
[env:disco_l072cz_lrwan1]
platform = ststm32
board = disco_l072cz_lrwan1

----------------------------------------

TITLE: Configuring PlatformIO for u-blox C030-R410M IoT
DESCRIPTION: Basic PlatformIO configuration for the u-blox C030-R410M IoT board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:ublox_c030_r410m]
platform = ststm32
board = ublox_c030_r410m

----------------------------------------

TITLE: Setting Upload Protocol for Phoenix 1.0
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Phoenix 1.0 board. The board supports both espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:phoenix_v1]
platform = espressif8266
board = phoenix_v1

upload_protocol = esptool

----------------------------------------

TITLE: Basic W79E633 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration example for setting up the W79E633 board in the project's platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:W79E633]
platform = intel_mcs51
board = W79E633

----------------------------------------

TITLE: Configuring Basic ATmega168PB Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega168PB board environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega168PB]
platform = atmelavr
board = ATmega168PB

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the NXP i.MX RT1060 EVK board in platformio.ini. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:mimxrt1060_evk]
platform = nxpimxrt
board = mimxrt1060_evk

----------------------------------------

TITLE: Basic PlatformIO Configuration for ACSIP S76S
DESCRIPTION: Minimal configuration required in platformio.ini to use the ACSIP S76S board.

LANGUAGE: ini
CODE:
[env:acsip_s76s]
platform = ststm32
board = acsip_s76s

----------------------------------------

TITLE: Basic PlatformIO Configuration for ACSIP S76S
DESCRIPTION: Minimal configuration required in platformio.ini to use the ACSIP S76S board.

LANGUAGE: ini
CODE:
[env:acsip_s76s]
platform = ststm32
board = acsip_s76s

----------------------------------------

TITLE: Customizing RGB Station MCU Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default microcontroller and frequency settings for the RGB Station board.

LANGUAGE: ini
CODE:
[env:rgb_station]
platform = microchippic32
board = rgb_station

; change microcontroller
board_build.mcu = 32MX270F256D

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103T8 in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32F103T8 board. Shows how to set the upload protocol to ST-Link.

LANGUAGE: ini
CODE:
[env:genericSTM32F103T8]
platform = ststm32
board = genericSTM32F103T8

upload_protocol = stlink

----------------------------------------

TITLE: Advanced N79E715 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E715]
platform = intel_mcs51
board = N79E715

; change microcontroller
board_build.mcu = n79e715

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC89C516RD+]
platform = intel_mcs51
board = STC89C516RD+

; change microcontroller
board_build.mcu = stc89c516rd+

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Generic ATtiny48 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the Generic ATtiny48 board in the PlatformIO configuration file. It includes the basic setup and examples of overriding default board settings.

LANGUAGE: ini
CODE:
[env:attiny48]
platform = atmelavr
board = attiny48

; change microcontroller
board_build.mcu = attiny48

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to set a specific upload protocol for the Smart Bee S3 board.

LANGUAGE: ini
CODE:
[env:bee_s3]
platform = espressif32
board = bee_s3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC89C58RD+ Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic STC89C58RD+ board in the PlatformIO configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC89C58RD+]
platform = intel_mcs51
board = STC89C58RD+

----------------------------------------

TITLE: Configuring Generic N79E8432 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic N79E8432 board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E8432]
platform = intel_mcs51
board = N79E8432

; change microcontroller
board_build.mcu = n79e8432

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Setting Upload Protocol for WEMOS LOLIN D32 PRO
DESCRIPTION: Configuration to specify the upload protocol for the WEMOS LOLIN D32 PRO board. In this example, it's set to the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:lolin_d32_pro]
platform = espressif32
board = lolin_d32_pro

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Metro Board Settings with PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Adafruit Metro board using the atmelavr platform. Sets up the baseline environment for Metro projects.

LANGUAGE: ini
CODE:
[env:metro]
platform = atmelavr
board = metro

----------------------------------------

TITLE: Customizing Arduino Mega ADK Board Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:megaADK]
platform = atmelavr
board = megaADK

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Demonstrates how to override default board settings including microcontroller type and CPU frequency for the STC15F203EA board.

LANGUAGE: ini
CODE:
[env:STC15F203EA]
platform = intel_mcs51
board = STC15F203EA

; change microcontroller
board_build.mcu = stc15f203ea

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO for Metro nRF52840 Express
DESCRIPTION: Basic PlatformIO configuration for the Metro nRF52840 Express board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_metro_nrf52840]
platform = nordicnrf52
board = adafruit_metro_nrf52840

----------------------------------------

TITLE: Setting Upload Protocol for BlackPill F401CE
DESCRIPTION: Demonstrates how to specify a custom upload protocol for the board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:blackpill_f401ce]
platform = ststm32
board = blackpill_f401ce

upload_protocol = stlink

----------------------------------------

TITLE: Advanced N78E366 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration for N78E366 board with custom microcontroller and frequency settings. Demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:N78E366]
platform = intel_mcs51
board = N78E366

; change microcontroller
board_build.mcu = n78e366

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Econode-L082CZ board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:econode_l082cz]
platform = ststm32
board = econode_l082cz

----------------------------------------

TITLE: Customizing Blues Cygnet MCU Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the Blues Cygnet board.

LANGUAGE: ini
CODE:
[env:blues_cygnet]
platform = ststm32
board = blues_cygnet

; change microcontroller
board_build.mcu = stm32l433cct6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for STM32F401CB board in platformio.ini file

LANGUAGE: ini
CODE:
[env:genericSTM32F401CB]
platform = ststm32
board = genericSTM32F401CB

----------------------------------------

TITLE: Setting Upload Protocol for STM32VLDISCOVERY
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Uses ST-Link as the default upload method.

LANGUAGE: ini
CODE:
[env:disco_f100rb]
platform = ststm32
board = disco_f100rb

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Circuit Playground Express
DESCRIPTION: Configuration to specify the upload protocol for the Adafruit Circuit Playground Express board. In this example, it's set to 'sam-ba'.

LANGUAGE: ini
CODE:
[env:adafruit_circuitplayground_m0]
platform = atmelsam
board = adafruit_circuitplayground_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example showing how to configure the upload protocol for the board

LANGUAGE: ini
CODE:
[env:waveshare_open103z]
platform = ststm32
board = waveshare_open103z

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Bluey nRF52832 IoT
DESCRIPTION: Configuration to specify the upload protocol for the Bluey nRF52832 IoT board. In this example, it's set to J-Link.

LANGUAGE: ini
CODE:
[env:bluey]
platform = nordicnrf52
board = bluey

upload_protocol = jlink

----------------------------------------

TITLE: Configuring PlatformIO for Digilent chipKIT uC32
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Digilent chipKIT uC32 board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:chipkit_uc32]
platform = microchippic32
board = chipkit_uc32

----------------------------------------

TITLE: Customizing MCU Settings for VCCGND F103ZET6
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the board.

LANGUAGE: ini
CODE:
[env:vccgnd_f103zet6]
platform = ststm32
board = vccgnd_f103zet6

; change microcontroller
board_build.mcu = stm32f103zet6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the STM32G0316-DISCO board.

LANGUAGE: ini
CODE:
[env:disco_g031j6]
platform = ststm32
board = disco_g031j6

; change microcontroller
board_build.mcu = stm32g031j6

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Microduino Core Board in PlatformIO INI File
DESCRIPTION: This code snippet shows how to configure the Microduino Core (Atmega168PA@8M,3.3V) board in a PlatformIO project configuration file. It sets the platform to atmelavr and the board to 168pa8m.

LANGUAGE: ini
CODE:
[env:168pa8m]
platform = atmelavr
board = 168pa8m

----------------------------------------

TITLE: Configuring Element14 chipKIT Pi Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Element14 chipKIT Pi board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:chipkit_pi]
platform = microchippic32
board = chipkit_pi

; change microcontroller
board_build.mcu = 32MX250F128B

; change MCU frequency
board_build.f_cpu = 40000000L

----------------------------------------

TITLE: Basic STM32F417VG Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for STM32F417VG board in platformio.ini project file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F417VG]
platform = ststm32
board = genericSTM32F417VG

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m0]
platform = atmelsam
board = adafruit_feather_m0

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic ATtiny861 Environment in PlatformIO
DESCRIPTION: Basic configuration setup for ATtiny861 board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:attiny861]
platform = atmelavr
board = attiny861

----------------------------------------

TITLE: Customizing DFRobot Firebeetle 2 ESP32-E Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates how to change the microcontroller and CPU frequency for the DFRobot Firebeetle 2 ESP32-E board.

LANGUAGE: ini
CODE:
[env:dfrobot_firebeetle2_esp32e]
platform = espressif32
board = dfrobot_firebeetle2_esp32e

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing STC15F105W Board Configuration
DESCRIPTION: Extended PlatformIO configuration showing how to customize microcontroller and frequency settings for the STC15F105W board. Demonstrates overriding default board settings using board_build options.

LANGUAGE: ini
CODE:
[env:STC15F105W]
platform = intel_mcs51
board = STC15F105W

; change microcontroller
board_build.mcu = stc15f105w

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Basic configuration for setting up an environment targeting the MIMXRT1050 EVK board in platformio.ini

LANGUAGE: ini
CODE:
[env:mimxrt1050_evk]
platform = nxpimxrt
board = mimxrt1050_evk

----------------------------------------

TITLE: Customizing ATmega645 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega645]
platform = atmelavr
board = ATmega645

; change microcontroller
board_build.mcu = atmega645

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced PlatformIO Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the STC8A8K16S4A12 board.

LANGUAGE: ini
CODE:
[env:STC8A8K16S4A12]
platform = intel_mcs51
board = STC8A8K16S4A12

; change microcontroller
board_build.mcu = stc8a8k16s4a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Arduino Esplora Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Arduino Esplora board in a PlatformIO project's INI file. It sets the platform to atmelavr and specifies the board as esplora.

LANGUAGE: ini
CODE:
[env:esplora]
platform = atmelavr
board = esplora

----------------------------------------

TITLE: Customizing ATmega328P Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default ATmega328P board settings in the PlatformIO configuration. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATmega328P]
platform = atmelavr
board = ATmega328P

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic W79E632 Board Settings in PlatformIO
DESCRIPTION: Basic configuration example for setting up a W79E632 board project in PlatformIO using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:W79E632]
platform = intel_mcs51
board = W79E632

----------------------------------------

TITLE: Customizing Arduino BT ATmega328 Build Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:btatmega328]
platform = atmelavr
board = btatmega328

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for DevEBox H743VITX
DESCRIPTION: Configuration example showing how to specify the upload protocol for the DevEBox H743VITX board.

LANGUAGE: ini
CODE:
[env:devebox_h743vitx]
platform = ststm32
board = devebox_h743vitx

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic N79E8132 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic N79E8132 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E8132]
platform = intel_mcs51
board = N79E8132

; change microcontroller
board_build.mcu = n79e8132

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Customizing STC8C2K32S2 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC8C2K32S2 board in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8C2K32S2]
platform = intel_mcs51
board = STC8C2K32S2

; change microcontroller
board_build.mcu = stc8c2k32s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic ATmega88PB Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATmega88PB board setup using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ATmega88PB]
platform = atmelavr
board = ATmega88PB

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103VB
DESCRIPTION: Configuration example showing how to specify the upload protocol for programming the STM32F103VB board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VB]
platform = ststm32
board = genericSTM32F103VB

upload_protocol = stlink

----------------------------------------

TITLE: Custom MCU Configuration in PlatformIO
DESCRIPTION: PlatformIO configuration with custom microcontroller and frequency settings for the B96B-F446VE board.

LANGUAGE: ini
CODE:
[env:b96b_f446ve]
platform = ststm32
board = b96b_f446ve

; change microcontroller
board_build.mcu = stm32f446vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring Basic STM32 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST 32L0538DISCOVERY board using the ststm32 platform

LANGUAGE: ini
CODE:
[env:disco_l053c8]
platform = ststm32
board = disco_l053c8

----------------------------------------

TITLE: Configuring Basic ChipKIT WiFire Board Settings
DESCRIPTION: Basic PlatformIO configuration for the ChipKIT WiFire rev. C board using the microchippic32 platform.

LANGUAGE: ini
CODE:
[env:chipkit_wifire_revc]
platform = microchippic32
board = chipkit_wifire_revc

----------------------------------------

TITLE: Customizing ATmega3250P Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega3250P]
platform = atmelavr
board = ATmega3250P

; change microcontroller
board_build.mcu = atmega3250p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Maxim Wireless Sensor Node Demonstrator in platformio.ini
DESCRIPTION: Basic configuration for the Maxim Wireless Sensor Node Demonstrator board in the project's platformio.ini file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:maxwsnenv]
platform = maxim32
board = maxwsnenv

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Example configuration for setting the upload protocol to mbed, which is the default protocol for this board.

LANGUAGE: ini
CODE:
[env:mimxrt1060_evk]
platform = nxpimxrt
board = mimxrt1060_evk

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Basic STC15F2K24S2 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC15F2K24S2 board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC15F2K24S2]
platform = intel_mcs51
board = STC15F2K24S2

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:eduinowifi]
platform = espressif8266
board = eduinowifi

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Advanced WiFi Slot Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the WiFi Slot board.

LANGUAGE: ini
CODE:
[env:wifi_slot]
platform = espressif8266
board = wifi_slot

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Holyiot YJ-16019 board.

LANGUAGE: ini
CODE:
[env:holyiot_yj16019]
platform = nordicnrf52
board = holyiot_yj16019

upload_protocol = jlink

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103ZE in PlatformIO
DESCRIPTION: Configuring the upload protocol for the STM32F103ZE board, with ST-Link as an example.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZE]
platform = ststm32
board = genericSTM32F103ZE

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Controllino Mega Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:controllino_mega]
platform = atmelavr
board = controllino_mega

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic ETBoard Configuration for PlatformIO
DESCRIPTION: Minimal configuration required to use ETBoard with PlatformIO. Sets the platform to espressif32 and specifies the board type.

LANGUAGE: ini
CODE:
[env:etboard]
platform = espressif32
board = etboard

----------------------------------------

TITLE: Setting Upload Protocol for Maple Board in PlatformIO
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Maple board in a PlatformIO project configuration. It uses the DFU protocol as an example.

LANGUAGE: ini
CODE:
[env:maple]
platform = ststm32
board = maple

upload_protocol = dfu

----------------------------------------

TITLE: Configuring STM32F7508-DK Basic Board Settings
DESCRIPTION: Basic configuration for STM32F7508-DK board using PlatformIO, specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_f750n8]
platform = ststm32
board = disco_f750n8

----------------------------------------

TITLE: Configuring Basic STC8A8K64D4 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the STC8A8K64D4 board in the PlatformIO project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8A8K64D4]
platform = intel_mcs51
board = STC8A8K64D4

----------------------------------------

TITLE: Customizing ST 32F429IDISCOVERY Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f429zi]
platform = ststm32
board = disco_f429zi

; change microcontroller
board_build.mcu = stm32f429zit6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Configuring Basic Arduino Pro Mini Environment
DESCRIPTION: Basic PlatformIO environment configuration for Arduino Pro Mini ATmega328 board running at 8MHz

LANGUAGE: ini
CODE:
[env:pro8MHzatmega328]
platform = atmelavr
board = pro8MHzatmega328

----------------------------------------

TITLE: Advanced Teensy 2.0 Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to customize microcontroller and frequency settings for the Teensy 2.0 board.

LANGUAGE: ini
CODE:
[env:teensy2]\nplatform = teensy\nboard = teensy2\n\n; change microcontroller\nboard_build.mcu = atmega32u4\n\n; change MCU frequency\nboard_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced STC15F2K08S2 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration demonstrating how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K08S2]
platform = intel_mcs51
board = STC15F2K08S2

; change microcontroller
board_build.mcu = stc15f2k08s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Raspberry Pi Zero
DESCRIPTION: Basic PlatformIO configuration for Raspberry Pi Zero board using linux_arm platform. Sets up the basic board environment.

LANGUAGE: ini
CODE:
[env:raspberrypi_zero]
platform = linux_arm
board = raspberrypi_zero

----------------------------------------

TITLE: Configuring Basic Board Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up an STM32G071B Discovery board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:disco_g071rb]
platform = ststm32
board = disco_g071rb

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC15W4K48S4
DESCRIPTION: Basic configuration snippet for setting up a PlatformIO project with the STC15W4K48S4 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15W4K48S4]
platform = intel_mcs51
board = STC15W4K48S4

----------------------------------------

TITLE: Configuring Arduino Duemilanove ATmega328 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino Duemilanove or Diecimila ATmega328 board in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:diecimilaatmega328]
platform = atmelavr
board = diecimilaatmega328

----------------------------------------

TITLE: Configuring Talk2 Whisper Node in PlatformIO
DESCRIPTION: This snippet shows how to configure the Talk2 Whisper Node board in a PlatformIO project's configuration file. It sets the platform to ATmega AVR and specifies the board ID.

LANGUAGE: ini
CODE:
[env:whispernode]
platform = atmelavr
board = whispernode

----------------------------------------

TITLE: Configuring STM32F103C8 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the STM32F103C8 board in the PlatformIO project configuration file. It demonstrates setting the platform, board, and optional overrides for microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103C8]
platform = ststm32
board = genericSTM32F103C8

; change microcontroller
board_build.mcu = stm32f103c8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol for STorM32 BGC v1.31 RC
DESCRIPTION: Configuration to change the upload protocol for the STorM32 BGC v1.31 RC board. In this example, it's set to stlink.

LANGUAGE: ini
CODE:
[env:storm32_v1_31_rc]
platform = ststm32
board = storm32_v1_31_rc

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit PyPortal M4
DESCRIPTION: Configuration example for changing the upload protocol to sam-ba for the Adafruit PyPortal M4 board in platformio.ini.

LANGUAGE: ini
CODE:
[env:adafruit_pyportal_m4]
platform = atmelsam
board = adafruit_pyportal_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example of overriding default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:econode_l082cz]
platform = ststm32
board = econode_l082cz

; change microcontroller
board_build.mcu = stm32l082czy6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring SparkFun RedBoard in PlatformIO Project
DESCRIPTION: This code snippet shows how to configure a PlatformIO project for the SparkFun RedBoard. It sets the platform to atmelavr and specifies the board as sparkfun_redboard.

LANGUAGE: ini
CODE:
[env:sparkfun_redboard]
platform = atmelavr
board = sparkfun_redboard

----------------------------------------

TITLE: Basic PlatformIO Configuration for chipKIT MAX32
DESCRIPTION: Basic environment configuration for the Digilent chipKIT MAX32 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:mega_pic32]
platform = microchippic32
board = mega_pic32

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F413ZH
DESCRIPTION: Configuration example for specifying the upload protocol for the ST Nucleo F413ZH board.

LANGUAGE: ini
CODE:
[env:nucleo_f413zh]
platform = ststm32
board = nucleo_f413zh

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ST Nucleo L412RB-P MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the ST Nucleo L412RB-P board.

LANGUAGE: ini
CODE:
[env:nucleo_l412rb_p]
platform = ststm32
board = nucleo_l412rb_p

; change microcontroller
board_build.mcu = stm32l412rbt6p

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring BQ ZUM BT-328 Board in PlatformIO
DESCRIPTION: This code snippet shows how to configure the BQ ZUM BT-328 board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:zumbt328]
platform = atmelavr
board = zumbt328

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Base configuration settings for using the Nexys A7 board with OpenHW platform in PlatformIO project.

LANGUAGE: ini
CODE:
[env:nexys_a7]
platform = openhw
board = nexys_a7

----------------------------------------

TITLE: STM32F417VG Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F417VG board.

LANGUAGE: ini
CODE:
[env:genericSTM32F417VG]
platform = ststm32
board = genericSTM32F417VG

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Metro M4 AirLift Lite
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the Adafruit Metro M4 AirLift Lite board in PlatformIO. The default protocol is 'sam-ba', but this can be changed using the 'upload_protocol' option.

LANGUAGE: ini
CODE:
[env:adafruit_metro_m4_airliftlite]
platform = atmelsam
board = adafruit_metro_m4_airliftlite

upload_protocol = sam-ba

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-PICO-DevKitM-2
DESCRIPTION: Configuration example for specifying the upload protocol (esptool) for firmware deployment to the ESP32-PICO-DevKitM-2 board.

LANGUAGE: ini
CODE:
[env:esp32-pico-devkitm-2]
platform = espressif32
board = esp32-pico-devkitm-2

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for WEMOS LOLIN D32
DESCRIPTION: PlatformIO configuration to set the upload protocol for the WEMOS LOLIN D32 board. The default protocol is 'esptool', but this can be changed using the upload_protocol option.

LANGUAGE: ini
CODE:
[env:lolin_d32]
platform = espressif32
board = lolin_d32

upload_protocol = esptool

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC15F105E board in the PlatformIO environment file.

LANGUAGE: ini
CODE:
[env:STC15F105E]
platform = intel_mcs51
board = STC15F105E

----------------------------------------

TITLE: Setting Upload Protocol for WeMos D1 mini Pro in PlatformIO
DESCRIPTION: This snippet shows how to set the upload protocol for the WeMos D1 mini Pro board in the PlatformIO project configuration file. It uses the 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:d1_mini_pro]
platform = espressif8266
board = d1_mini_pro

upload_protocol = esptool

----------------------------------------

TITLE: Customizing MCU and Frequency Settings for RAK811
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the RAK811 board.

LANGUAGE: ini
CODE:
[env:rak811_tracker_32]
platform = ststm32
board = rak811_tracker_32

; change microcontroller
board_build.mcu = stm32l151rbt6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Setting Upload Protocol for Aceinna OpenIMU 300
DESCRIPTION: This snippet shows how to set the upload protocol for the Aceinna OpenIMU 300 board. The default protocol is 'stlink', but it can be changed to 'blackmagic' or 'jlink'.

LANGUAGE: ini
CODE:
[env:OpenIMU300]
platform = aceinna_imu
board = OpenIMU300

upload_protocol = stlink

----------------------------------------

TITLE: Customizing STM32F423CH Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F423CH]
platform = ststm32
board = genericSTM32F423CH

; change microcontroller
board_build.mcu = stm32f423chu6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring Basic ATtiny816 Board Settings
DESCRIPTION: Basic PlatformIO configuration for ATtiny816 board setup using the atmelmegaavr platform.

LANGUAGE: ini
CODE:
[env:ATtiny816]
platform = atmelmegaavr
board = ATtiny816

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sensesiot_weizen]
platform = espressif32
board = sensesiot_weizen

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring STM32F103TB Board in PlatformIO
DESCRIPTION: Basic configuration for using the STM32F103TB board in a PlatformIO project. Includes options for setting the board ID and platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F103TB]
platform = ststm32
board = genericSTM32F103TB

----------------------------------------

TITLE: Advanced STC89C51RC Board Configuration
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC89C51RC]
platform = intel_mcs51
board = STC89C51RC

; change microcontroller
board_build.mcu = stc89c51rc

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Digilent chipKIT Cmod Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:chipkit_cmod]
platform = microchippic32
board = chipkit_cmod

; change microcontroller
board_build.mcu = 32MX150F128D

; change MCU frequency
board_build.f_cpu = 40000000L

----------------------------------------

TITLE: Customizing Atmel SAMD21-XPRO Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:samd21_xpro]
platform = atmelsam
board = samd21_xpro

; change microcontroller
board_build.mcu = samd21j18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the board using board_build options.

LANGUAGE: ini
CODE:
[env:disco_l072cz_lrwan1]
platform = ststm32
board = disco_l072cz_lrwan1

; change microcontroller
board_build.mcu = stm32l072cz

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring Basic STM32F410C8 Board Settings in PlatformIO
DESCRIPTION: Basic INI configuration for setting up an STM32F410C8 board project using the ststm32 platform in PlatformIO

LANGUAGE: ini
CODE:
[env:genericSTM32F410C8]
platform = ststm32
board = genericSTM32F410C8

----------------------------------------

TITLE: Setting Upload Protocol for NAMote72
DESCRIPTION: Configuration example for setting the upload protocol to mbed for the NAMote72 board

LANGUAGE: ini
CODE:
[env:mote_l152rc]
platform = ststm32
board = mote_l152rc

upload_protocol = mbed

----------------------------------------

TITLE: Upload Protocol Configuration for 96Boards Nitrogen
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, with JLink as the selected protocol.

LANGUAGE: ini
CODE:
[env:96b_nitrogen]
platform = nordicnrf52
board = 96b_nitrogen

upload_protocol = jlink

----------------------------------------

TITLE: Customizing Arduino Pro Mini MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:pro8MHzatmega168]
platform = atmelavr
board = pro8MHzatmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for CubeCell-Capsule
DESCRIPTION: Basic configuration snippet for setting up a PlatformIO project with the CubeCell-Capsule board.

LANGUAGE: ini
CODE:
[env:cubecell_capsule]
platform = heltec-cubecell
board = cubecell_capsule

----------------------------------------

TITLE: Configuring ATmega162 Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure a PlatformIO project to use the ATmega162 board. It sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:ATmega162]
platform = atmelavr
board = ATmega162

----------------------------------------

TITLE: Configuring Basic MS51FB9AE Board Settings
DESCRIPTION: Basic PlatformIO configuration for the MS51FB9AE board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:MS51FB9AE]
platform = intel_mcs51
board = MS51FB9AE

----------------------------------------

TITLE: Configuring Basic STC15F2K52S2 Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for STC15F2K52S2 board setup with Intel MCS-51 platform.

LANGUAGE: ini
CODE:
[env:STC15F2K52S2]
platform = intel_mcs51
board = STC15F2K52S2

----------------------------------------

TITLE: Setting Upload Protocol for WeMos D1 mini Lite
DESCRIPTION: Demonstrates how to change the upload protocol for the WeMos D1 mini Lite board in the PlatformIO configuration. The board supports 'espota' and 'esptool' protocols.

LANGUAGE: ini
CODE:
[env:d1_mini_lite]
platform = espressif8266
board = d1_mini_lite

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for WiFiduino
DESCRIPTION: This snippet shows how to specify the upload protocol for the WiFiduino board in a PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:wifiduino]
platform = espressif8266
board = wifiduino

upload_protocol = esptool

----------------------------------------

TITLE: Customizing STM32F410CB Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F410CB]
platform = ststm32
board = genericSTM32F410CB

; change microcontroller
board_build.mcu = stm32f410cbt6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Basic Board Configuration for ST Nucleo L412KB
DESCRIPTION: Basic PlatformIO configuration for initializing an ST Nucleo L412KB board project using the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_l412kb]
platform = ststm32
board = nucleo_l412kb

----------------------------------------

TITLE: Configuring Arduino LilyPad ATmega328 in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Arduino LilyPad ATmega328 board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:lilypadatmega328]
platform = atmelavr
board = lilypadatmega328

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing ST 32F413HDISCOVERY Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f413zh]
platform = ststm32
board = disco_f413zh

; change microcontroller
board_build.mcu = stm32f413zht6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring Basic MiniWireless Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Anarduino MiniWireless board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:miniwireless]
platform = atmelavr
board = miniwireless

----------------------------------------

TITLE: Setting Upload Protocol for KITS ESP32 EDU
DESCRIPTION: Configuration to change the upload protocol for the KITS ESP32 EDU board. The board supports 'espota' and 'esptool' protocols, with 'esptool' as the default.

LANGUAGE: ini
CODE:
[env:kits-edu]
platform = espressif32
board = kits-edu

upload_protocol = esptool

----------------------------------------

TITLE: Basic ATtiny814 Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to set up an ATtiny814 board project in PlatformIO

LANGUAGE: ini
CODE:
[env:ATtiny814]
platform = atmelmegaavr
board = ATtiny814

----------------------------------------

TITLE: Setting Upload Protocol for Pycom LoPy4 in PlatformIO
DESCRIPTION: Configuration snippet showing how to specify the upload protocol for the Pycom LoPy4 board. In this example, the default 'esptool' protocol is explicitly set.

LANGUAGE: ini
CODE:
[env:lopy4]
platform = espressif32
board = lopy4

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Arduino Pro Mini MCU Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the Arduino Pro Mini board

LANGUAGE: ini
CODE:
[env:pro8MHzatmega328]
platform = atmelavr
board = pro8MHzatmega328

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing Arduino NG Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration demonstrating how to override default board settings like microcontroller type and CPU frequency in platformio.ini

LANGUAGE: ini
CODE:
[env:atmegangatmega168]
platform = atmelavr
board = atmegangatmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing TTGO LoRa32-OLED v2.1.6 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ttgo-lora32-v21]
platform = espressif32
board = ttgo-lora32-v21

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Big Tree Tech EBB42 V1.1
DESCRIPTION: Example of how to set the upload protocol for the Big Tree Tech EBB42 V1.1 board in PlatformIO. The default protocol is stlink, but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:btt_ebb42_v1_1]
platform = ststm32
board = btt_ebb42_v1_1

upload_protocol = stlink

----------------------------------------

TITLE: Advanced MCU Configuration
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:genericSTM32F373RC]
platform = ststm32
board = genericSTM32F373RC

; change microcontroller
board_build.mcu = stm32f373rct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC8A8K60S4A12 Board
DESCRIPTION: Basic configuration for using the Generic STC8A8K60S4A12 board in a PlatformIO project. Sets the platform to intel_mcs51 and specifies the board.

LANGUAGE: ini
CODE:
[env:STC8A8K60S4A12]
platform = intel_mcs51
board = STC8A8K60S4A12

----------------------------------------

TITLE: Configuring Basic Raspberry Pi 3B Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Raspberry Pi 3 Model B board setup using linux_arm platform.

LANGUAGE: ini
CODE:
[env:raspberrypi_3b]
platform = linux_arm
board = raspberrypi_3b

----------------------------------------

TITLE: Customizing STM32F410C8 MCU and Clock Settings
DESCRIPTION: Advanced board configuration showing how to override default microcontroller and CPU frequency settings

LANGUAGE: ini
CODE:
[env:genericSTM32F410C8]
platform = ststm32
board = genericSTM32F410C8

; change microcontroller
board_build.mcu = stm32f410c8t6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Custom MCU Configuration for STM32F103RC
DESCRIPTION: Advanced board configuration showing how to override default microcontroller settings including MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RC]
platform = ststm32
board = genericSTM32F103RC

; change microcontroller
board_build.mcu = stm32f103rct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing STM32F415RG Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F415RG]
platform = ststm32
board = genericSTM32F415RG

; change microcontroller
board_build.mcu = stm32f415rgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Digistump DigiX
DESCRIPTION: Basic project configuration for the Digistump DigiX board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:digix]
platform = atmelsam
board = digix

----------------------------------------

TITLE: Setting Upload Protocol for Tiny STM103T
DESCRIPTION: Configuration example for changing the upload protocol to DFU (Device Firmware Upgrade) for the Tiny STM103T board.

LANGUAGE: ini
CODE:
[env:hy_tinystm103tb]
platform = ststm32
board = hy_tinystm103tb

upload_protocol = dfu

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for Microduino Core+ board in platformio.ini file. Sets the platform to atmelavr and specifies the board model.

LANGUAGE: ini
CODE:
[env:644pa8m]
platform = atmelavr
board = 644pa8m

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration with custom microcontroller and frequency settings for the Adafruit LED Glasses Driver nRF52840

LANGUAGE: ini
CODE:
[env:adafruit_ledglasses_nrf52840]
platform = nordicnrf52
board = adafruit_ledglasses_nrf52840

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103RD
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F103RD board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RD]
platform = ststm32
board = genericSTM32F103RD

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol for the ST Nucleo L4R5ZI board, using the default stlink protocol.

LANGUAGE: ini
CODE:
[env:nucleo_l4r5zi]
platform = ststm32
board = nucleo_l4r5zi

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Engduino 3 Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the Engduino 3 board in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:engduinov3]
platform = atmelavr
board = engduinov3

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for CubeCell-Board Plus
DESCRIPTION: Basic configuration setup for Heltec CubeCell-Board Plus in platformio.ini file

LANGUAGE: ini
CODE:
[env:cubecell_board_plus]
platform = heltec-cubecell
board = cubecell_board_plus

----------------------------------------

TITLE: Customizing Arduino Opta MCU Settings
DESCRIPTION: Example of customizing microcontroller settings including MCU model and frequency for the Arduino Opta board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:opta]
platform = ststm32
board = opta

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Setting Upload Protocol for Atmel SAMD21-XPRO
DESCRIPTION: Configuration to specify the upload protocol for the Atmel SAMD21-XPRO board. In this example, CMSIS-DAP is set as the upload protocol.

LANGUAGE: ini
CODE:
[env:samd21_xpro]
platform = atmelsam
board = samd21_xpro

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Configuring HelvePic32 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the HelvePic32 board in a PlatformIO project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:helvepic32_smd]
platform = microchippic32
board = helvepic32_smd

----------------------------------------

TITLE: Configuring PlatformIO Environment for Labplus mPython
DESCRIPTION: Basic configuration for using the Labplus mPython board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:labplus_mpython]
platform = espressif32
board = labplus_mpython

----------------------------------------

TITLE: Basic N76E885 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up N76E885 board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:N76E885]
platform = intel_mcs51
board = N76E885

----------------------------------------

TITLE: Customizing WEMOS D1 R1 Board Settings
DESCRIPTION: This snippet demonstrates how to override default settings for the WEMOS D1 R1 board in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:d1]
platform = espressif8266
board = d1

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring PYBStick Lite 26 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the PYBStick Lite 26 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:pybstick26_lite]
platform = ststm32
board = pybstick26_lite

; change microcontroller
board_build.mcu = stm32f401ceu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Configuring Basic SAMC21-XPRO Board Settings in PlatformIO
DESCRIPTION: Basic configuration setup for the Atmel SAMC21-XPRO board using PlatformIO. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:samc21_xpro]
platform = atmelsam
board = samc21_xpro

----------------------------------------

TITLE: Advanced ESP-210 Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default MCU and frequency settings for the ESP-210 board.

LANGUAGE: ini
CODE:
[env:esp210]
platform = espressif8266
board = esp210

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:AVR128DA64]
platform = atmelmegaavr
board = AVR128DA64

; change microcontroller
board_build.mcu = avr128da64

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Upload Protocol for Pocket 32
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Pocket 32 board.

LANGUAGE: ini
CODE:
[env:pocket_32]
platform = espressif32
board = pocket_32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic STM32F407VG Board Settings in PlatformIO
DESCRIPTION: Basic configuration for STM32F407VG board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F407VGT6]
platform = ststm32
board = genericSTM32F407VGT6

----------------------------------------

TITLE: Configuring Generic STC8H1K16 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic STC8H1K16 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC8H1K16]
platform = intel_mcs51
board = STC8H1K16

; change microcontroller
board_build.mcu = stc8h1k16

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller model and CPU frequency

LANGUAGE: ini
CODE:
[env:mimxrt1050_evk]
platform = nxpimxrt
board = mimxrt1050_evk

; change microcontroller
board_build.mcu = mimxrt1052dvl6b

; change MCU frequency
board_build.f_cpu = 600000000L

----------------------------------------

TITLE: Advanced DevEBox H750VBTX MCU Configuration
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:devebox_h750vbtx]
platform = ststm32
board = devebox_h750vbtx

; change microcontroller
board_build.mcu = stm32h750vbt6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Customizing STM32F412CG MCU Settings
DESCRIPTION: Advanced board configuration demonstrating how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:genericSTM32F412CG]
platform = ststm32
board = genericSTM32F412CG

; change microcontroller
board_build.mcu = stm32f412cgu6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Blues Swan R5 board

LANGUAGE: ini
CODE:
[env:blues_swan_r5]
platform = ststm32
board = blues_swan_r5

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for MKR Sharky in PlatformIO
DESCRIPTION: Configuration to set the upload protocol for the MKR Sharky board. This example uses the 'mbed' protocol, which is the default for this board.

LANGUAGE: ini
CODE:
[env:mkr_sharky]
platform = ststm32
board = mkr_sharky

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Upload Protocol for SDT52832B
DESCRIPTION: Demonstrates how to set the upload protocol for the SDT52832B board in PlatformIO. The default protocol is 'mbed', but this example shows how to change it.

LANGUAGE: ini
CODE:
[env:sdt52832b]
platform = nordicnrf52
board = sdt52832b

upload_protocol = mbed

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration for STC15F105 board with custom microcontroller and frequency settings. Demonstrates how to override default board parameters.

LANGUAGE: ini
CODE:
[env:STC15F105]
platform = intel_mcs51
board = STC15F105

; change microcontroller
board_build.mcu = stc15f105

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Thunderboard Sense 2 MCU and Frequency
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:tb_sense_12]
platform = siliconlabsefm32
board = tb_sense_12

; change microcontroller
board_build.mcu = EFR32MG12P432F1024

; change MCU frequency
board_build.f_cpu = 40000000L

----------------------------------------

TITLE: Customizing SparkFun Serial 7-Segment Display Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings for the SparkFun Serial 7-Segment Display in PlatformIO. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_serial7seg]
platform = atmelavr
board = sparkfun_serial7seg

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for FRDM-KL25Z
DESCRIPTION: Configuration example for specifying the upload protocol for the FRDM-KL25Z board. The default protocol is 'mbed'.

LANGUAGE: ini
CODE:
[env:frdm_kl25z]
platform = freescalekinetis
board = frdm_kl25z

upload_protocol = mbed

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:agruminolemon]
platform = espressif8266
board = agruminolemon

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing Microduino Core+ Settings in PlatformIO INI
DESCRIPTION: This code demonstrates how to override default board settings in PlatformIO. It shows examples of changing the microcontroller and MCU frequency for the Microduino Core+ board.

LANGUAGE: ini
CODE:
[env:1284p8m]
platform = atmelavr
board = 1284p8m

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for FRDM-K82F in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the FRDM-K82F board. This example sets the upload protocol to 'mbed', which is the default for this board.

LANGUAGE: ini
CODE:
[env:frdm_k82f]
platform = freescalekinetis
board = frdm_k82f

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Olimex ARM-USB-OCD-H in platformio.ini
DESCRIPTION: Example configuration for using the Olimex ARM-USB-OCD-H debugging tool in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = olimex-arm-usb-ocd-h

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo WL55JC
DESCRIPTION: Configuration to set the upload protocol for the ST Nucleo WL55JC board. The default protocol is 'stlink', but this example shows how to explicitly set it.

LANGUAGE: ini
CODE:
[env:nucleo_wl55jc]
platform = ststm32
board = nucleo_wl55jc

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Arduino Mega 2560 Board Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:megaatmega2560]
platform = atmelavr
board = megaatmega2560

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing STM32H747I-DISCO Board Settings
DESCRIPTION: Example of overriding default board settings, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_h747xi]
platform = ststm32
board = disco_h747xi

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 400000000L

----------------------------------------

TITLE: Customizing Smart Bee Motion Board Settings
DESCRIPTION: This code demonstrates how to override default board settings in PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:bee_motion]
platform = espressif32
board = bee_motion

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring AVR128DB32 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the AVR128DB32 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:AVR128DB32]
platform = atmelmegaavr
board = AVR128DB32

; change microcontroller
board_build.mcu = avr128db32

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Upstream TI TIVA Platform Version in PlatformIO
DESCRIPTION: This code snippet demonstrates how to use the latest upstream development version of the TI TIVA platform in a PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-titiva.git
board = ...

----------------------------------------

TITLE: Basic PlatformIO Configuration for Arduino Robot Control
DESCRIPTION: Basic environment configuration snippet for setting up an Arduino Robot Control board project in PlatformIO using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:robotControl]
platform = atmelavr
board = robotControl

----------------------------------------

TITLE: Configuring Basic PlatformIO Environment for Arduino Mega 2560
DESCRIPTION: Basic PlatformIO configuration for Arduino Mega 2560 board setup using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:megaatmega2560]
platform = atmelavr
board = megaatmega2560

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:nrf52832_mdk]
platform = nordicnrf52
board = nrf52832_mdk

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Microduino Core+
DESCRIPTION: Basic PlatformIO environment configuration for the Microduino Core+ board. Sets the platform to atmelavr and specifies the board ID as 1284p16m.

LANGUAGE: ini
CODE:
[env:1284p16m]
platform = atmelavr
board = 1284p16m

----------------------------------------

TITLE: Customizing SeeedStudio LoRa E5 Dev Board Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. It demonstrates how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:lora_e5_dev_board]
platform = ststm32
board = lora_e5_dev_board

; change microcontroller
board_build.mcu = stm32wle5jc

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended environment configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H3K60S4]
platform = intel_mcs51
board = STC8H3K60S4

; change microcontroller
board_build.mcu = stc8h3k60s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Generic STC15F104W Board in PlatformIO
DESCRIPTION: This snippet shows how to set up the Generic STC15F104W board in a PlatformIO project configuration file. It includes the basic configuration and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:STC15F104W]
platform = intel_mcs51
board = STC15F104W

; change microcontroller
board_build.mcu = stc15f104w

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Generic STC8H8K32U Board Settings
DESCRIPTION: This example demonstrates how to override default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H8K32U]
platform = intel_mcs51
board = STC8H8K32U

; change microcontroller
board_build.mcu = stc8h8k32u

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring ST Sensor Node Board in PlatformIO
DESCRIPTION: Basic configuration for using the ST Sensor Node board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:silica_sensor_node]
platform = ststm32
board = silica_sensor_node

----------------------------------------

TITLE: Setting Upload Protocol for RYMCU Nebula Pi F103VE
DESCRIPTION: Configuration to specify the upload protocol for the RYMCU Nebula Pi F103VE board. In this example, it's set to ST-Link.

LANGUAGE: ini
CODE:
[env:rymcu_nebulapi_f103ve]
platform = ststm32
board = rymcu_nebulapi_f103ve

upload_protocol = stlink

----------------------------------------

TITLE: Customizing SparkFun 9DoF Razor IMU M0 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_9dof]
platform = atmelsam
board = sparkfun_samd21_9dof

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring RedBearLab Blend Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the RedBearLab Blend board in a PlatformIO project's configuration file. It sets the platform to atmelavr and the board to blend.

LANGUAGE: ini
CODE:
[env:blend]
platform = atmelavr
board = blend

----------------------------------------

TITLE: Configuring SparkFun ESP8266 Thing Dev Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the SparkFun ESP8266 Thing Dev board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:thingdev]
platform = espressif8266
board = thingdev

----------------------------------------

TITLE: Configuring PlatformIO Environment for nRF52 Board
DESCRIPTION: Basic configuration for setting up a PlatformIO environment for the Taida Century nRF52 mini board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:stct_nrf52_minidev]
platform = nordicnrf52
board = stct_nrf52_minidev

----------------------------------------

TITLE: Setting Upload Protocol for 96Boards Argonkey
DESCRIPTION: Configuration to specify the upload protocol for the 96Boards Argonkey board, with ST-Link as the default option.

LANGUAGE: ini
CODE:
[env:b96b_argonkey]
platform = ststm32
board = b96b_argonkey

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ST Nucleo F722ZE board.

LANGUAGE: ini
CODE:
[env:nucleo_f722ze]
platform = ststm32
board = nucleo_f722ze

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic STC8G1K17A Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic STC8G1K17A board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G1K17A]
platform = intel_mcs51
board = STC8G1K17A

; change microcontroller
board_build.mcu = stc8g1k17a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring TI LaunchPad MSP-EXP430FR5969LP in PlatformIO
DESCRIPTION: This snippet shows how to configure the TI LaunchPad MSP-EXP430FR5969LP board in a PlatformIO project's configuration file. It demonstrates setting the board ID and platform, as well as how to override default board settings.

LANGUAGE: ini
CODE:
[env:lpmsp430fr5969]
platform = timsp430
board = lpmsp430fr5969

; change microcontroller
board_build.mcu = msp430fr5969

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring 96Boards Argonkey Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the 96Boards Argonkey board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:b96b_argonkey]
platform = ststm32
board = b96b_argonkey

----------------------------------------

TITLE: Configuring Seeeduino Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Seeeduino board in the PlatformIO project configuration file. It sets the platform to atmelavr and specifies the board as seeeduino.

LANGUAGE: ini
CODE:
[env:seeeduino]
platform = atmelavr
board = seeeduino

----------------------------------------

TITLE: Configuring PlatformIO for MikroElektronika Clicker 2 Board in INI
DESCRIPTION: This snippet shows how to configure the project environment for the MikroElektronika Clicker 2 board in the PlatformIO configuration file. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:clicker2]
platform = microchippic32
board = clicker2

; change microcontroller
board_build.mcu = 32MX460F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing OLIMEX ESP32-DevKit-LiPo Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency using board_*** options.

LANGUAGE: ini
CODE:
[env:esp32-devkitlipo]
platform = espressif32
board = esp32-devkitlipo

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration Using PlatformIO
DESCRIPTION: Basic configuration for RVfpga Digilent Nexys A7 board in platformio.ini file. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:swervolf_nexys]
platform = chipsalliance
board = swervolf_nexys

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the SparkFun RedBoard Turbo.

LANGUAGE: ini
CODE:
[env:sparkfun_redboard_turbo]
platform = atmelsam
board = sparkfun_redboard_turbo

upload_protocol = sam-ba

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo L496ZG-P
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo L496ZG-P board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:nucleo_l496zg_p]
platform = ststm32
board = nucleo_l496zg_p

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Generic ESP8285 Module
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Generic ESP8285 Module in the PlatformIO configuration. It uses the 'esptool' protocol as an example.

LANGUAGE: ini
CODE:
[env:esp8285]
platform = espressif8266
board = esp8285

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Armstrap Eagle 1024
DESCRIPTION: Configuration for specifying the upload protocol. In this example, it's set to the default 'blackmagic' protocol.

LANGUAGE: ini
CODE:
[env:armstrap_eagle1024]
platform = ststm32
board = armstrap_eagle1024

upload_protocol = blackmagic

----------------------------------------

TITLE: Configuring Basic ATtiny427 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATtiny427 board using the atmelmegaavr platform. Sets up the minimal required configuration for project initialization.

LANGUAGE: ini
CODE:
[env:ATtiny427]
platform = atmelmegaavr
board = ATtiny427

----------------------------------------

TITLE: Customizing LoRa32u4II Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the LoRa32u4II board in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:lora32u4II]
platform = atmelavr
board = lora32u4II

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for MTS Dragonfly F411RE
DESCRIPTION: Configuration to specify the upload protocol for the MTS Dragonfly F411RE board. This example sets it to the default 'mbed' protocol.

LANGUAGE: ini
CODE:
[env:mts_dragonfly_f411re]
platform = ststm32
board = mts_dragonfly_f411re

upload_protocol = mbed

----------------------------------------

TITLE: Customizing SDT32625B Board Parameters in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sdt32625b]
platform = maxim32
board = sdt32625b

; change microcontroller
board_build.mcu = max32625itk

; change MCU frequency
board_build.f_cpu = 96000000L

----------------------------------------

TITLE: Configuring Generic STC15F101E Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15F101E board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F101E]
platform = intel_mcs51
board = STC15F101E

; change microcontroller
board_build.mcu = stc15f101e

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example of overriding default board settings to customize the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nicla_vision]
platform = ststm32
board = nicla_vision

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring STM32F401RD Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the STM32F401RD board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RD]
platform = ststm32
board = genericSTM32F401RD

; change microcontroller
board_build.mcu = stm32f401rdt6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the M5Stack GREY ESP32 board.

LANGUAGE: ini
CODE:
[env:m5stack-grey]
platform = espressif32
board = m5stack-grey

upload_protocol = esptool

----------------------------------------

TITLE: Configuring SODAQ GaLoRa Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for SODAQ GaLoRa board using the atmelavr platform

LANGUAGE: ini
CODE:
[env:sodaq_galora]
platform = atmelavr
board = sodaq_galora

----------------------------------------

TITLE: Configuring MAX32625PICO Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure the MAX32625PICO board in a PlatformIO project's configuration file. It sets the platform to Maxim32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:max32625pico]
platform = maxim32
board = max32625pico

----------------------------------------

TITLE: Advanced STC8H8K64U Board Configuration with Custom Parameters
DESCRIPTION: Extended configuration for the STC8H8K64U board with custom microcontroller and frequency settings in platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC8H8K64U]
platform = intel_mcs51
board = STC8H8K64U

; change microcontroller
board_build.mcu = stc8h8k64u

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing STC8C1K08 Board Parameters in PlatformIO
DESCRIPTION: Extended configuration showing how to override default board settings such as microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:STC8C1K08]
platform = intel_mcs51
board = STC8C1K08

; change microcontroller
board_build.mcu = stc8c1k08

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing MSP430FR2433 Board Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:lpmsp430fr2433]
platform = timsp430
board = lpmsp430fr2433

; change microcontroller
board_build.mcu = msp430fr2433

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring SparkFun SAMD51 Thing Plus in platformio.ini
DESCRIPTION: Basic configuration for the SparkFun SAMD51 Thing Plus board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_samd51_thing_plus]
platform = atmelsam
board = sparkfun_samd51_thing_plus

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Wio Terminal.

LANGUAGE: ini
CODE:
[env:seeed_wio_terminal]
platform = atmelsam
board = seeed_wio_terminal

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced Board Configuration - PlatformIO INI
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the Prusa RAMBo board.

LANGUAGE: ini
CODE:
[env:prusa_rambo]
platform = atmelavr
board = prusa_rambo

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration in platformio.ini
DESCRIPTION: Minimal configuration required to use the STC15F204EA board with PlatformIO.

LANGUAGE: ini
CODE:
[env:STC15F204EA]
platform = intel_mcs51
board = STC15F204EA

----------------------------------------

TITLE: Configuring Basic Nucleo G431KB Board Settings
DESCRIPTION: Basic PlatformIO configuration for the Nucleo G431KB board using the STM32 platform

LANGUAGE: ini
CODE:
[env:nucleo_g431kb]
platform = ststm32
board = nucleo_g431kb

----------------------------------------

TITLE: Advanced NIBObee Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the NIBObee board.

LANGUAGE: ini
CODE:
[env:nibobee]
platform = atmelavr
board = nibobee

; change microcontroller
board_build.mcu = atmega16

; change MCU frequency
board_build.f_cpu = 15000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103R4 in PlatformIO
DESCRIPTION: This configuration snippet demonstrates how to set the upload protocol for the STM32F103R4 board in a PlatformIO project. It uses the 'serial' protocol as an example.

LANGUAGE: ini
CODE:
[env:genericSTM32F103R4]
platform = ststm32
board = genericSTM32F103R4

upload_protocol = serial

----------------------------------------

TITLE: Customizing RepRap RAMBo Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the RepRap RAMBo board in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:reprap_rambo]
platform = atmelavr
board = reprap_rambo

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Seeeduino LoRaWAN
DESCRIPTION: Configuration to set the upload protocol for the Seeeduino LoRaWAN board. The default protocol is sam-ba, but this example shows how to change it.

LANGUAGE: ini
CODE:
[env:seeeduino_lorawan]
platform = atmelsam
board = seeeduino_lorawan

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring TI LaunchPad MSP-EXP430FR4133LP Board in PlatformIO
DESCRIPTION: Basic configuration for the TI LaunchPad MSP-EXP430FR4133LP board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lpmsp430fr4133]
platform = timsp430
board = lpmsp430fr4133

----------------------------------------

TITLE: Setting Upload Protocol for Teensy 3.1 / 3.2 in PlatformIO INI File
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Teensy 3.1 / 3.2 board. The default protocol is 'teensy-gui'.

LANGUAGE: ini
CODE:
[env:teensy31]
platform = teensy
board = teensy31

upload_protocol = teensy-gui

----------------------------------------

TITLE: Customizing ATtiny427 Build Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATtiny427]
platform = atmelmegaavr
board = ATtiny427

; change microcontroller
board_build.mcu = attiny427

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing AVR32DB28 Board Settings in PlatformIO
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the AVR32DB28 board.

LANGUAGE: ini
CODE:
[env:AVR32DB28]
platform = atmelmegaavr
board = AVR32DB28

; change microcontroller
board_build.mcu = avr32db28

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Customizing Board MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the BBC micro:bit V2.

LANGUAGE: ini
CODE:
[env:bbcmicrobit_v2]
platform = nordicnrf52
board = bbcmicrobit_v2

; change microcontroller
board_build.mcu = nrf52833

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring PlatformIO for ST Nucleo F303RE
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo F303RE board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_f303re]
platform = ststm32
board = nucleo_f303re

----------------------------------------

TITLE: Customizing OpenBCI Board Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:openbci]
platform = microchippic32
board = openbci

; change microcontroller
board_build.mcu = 32MX250F128B

; change MCU frequency
board_build.f_cpu = 40000000L

----------------------------------------

TITLE: Configuring RepRap RAMBo Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the RepRap RAMBo board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board as reprap_rambo.

LANGUAGE: ini
CODE:
[env:reprap_rambo]
platform = atmelavr
board = reprap_rambo

----------------------------------------

TITLE: Customizing STM32-H407 MCU Settings
DESCRIPTION: Example of overriding default microcontroller and frequency settings for the STM32-H407 board.

LANGUAGE: ini
CODE:
[env:olimex_h407]
platform = ststm32
board = olimex_h407

; change microcontroller
board_build.mcu = stm32f407zgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the ST Nucleo L010RB board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_l010rb]
platform = ststm32
board = nucleo_l010rb

----------------------------------------

TITLE: Setting Upload Protocol for Munich Labs RedPill ESP32-S3
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Munich Labs RedPill ESP32-S3 board in the PlatformIO configuration. It uses the default 'esptool' protocol.

LANGUAGE: ini
CODE:
[env:redpill_esp32s3]
platform = espressif32
board = redpill_esp32s3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Upload Protocol for SainSmart Due
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:sainSmartDueUSB]
platform = atmelsam
board = sainSmartDueUSB

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing ATtiny828 MCU and Clock Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:attiny828]
platform = atmelavr
board = attiny828

; change microcontroller
board_build.mcu = attiny828

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15W102]
platform = intel_mcs51
board = STC15W102

; change microcontroller
board_build.mcu = stc15w102

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Teensy 3.6 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Teensy 3.6 board in the PlatformIO project configuration file. It includes options for setting the board ID, platform, and overriding default board settings.

LANGUAGE: ini
CODE:
[env:teensy36]
platform = teensy
board = teensy36

; change microcontroller
board_build.mcu = mk66fx1m0

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Setting Upload Protocol for ThunderPack v1.0 in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the ThunderPack v1.0 board. In this example, it sets the protocol to ST-Link.

LANGUAGE: ini
CODE:
[env:thunder_pack]
platform = ststm32
board = thunder_pack

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Nucleo F302R8 board in platformio.ini with default settings.

LANGUAGE: ini
CODE:
[env:nucleo_f302r8]
platform = ststm32
board = nucleo_f302r8

----------------------------------------

TITLE: Basic N79E855 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up an N79E855 board project in platformio.ini. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:N79E855]
platform = intel_mcs51
board = N79E855

----------------------------------------

TITLE: Configuring Generic STC8A4K32S2A12 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC8A4K32S2A12 board in a PlatformIO project configuration file. It sets the platform to intel_mcs51 and the board to STC8A4K32S2A12.

LANGUAGE: ini
CODE:
[env:STC8A4K32S2A12]
platform = intel_mcs51
board = STC8A4K32S2A12

----------------------------------------

TITLE: Customizing 96Boards Argonkey Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:b96b_argonkey]
platform = ststm32
board = b96b_argonkey

; change microcontroller
board_build.mcu = stm32f412cg

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Setting Upload Protocol for WeAct Studio MiniSTM32H750VBTX
DESCRIPTION: Demonstrates how to specify the upload protocol in the PlatformIO configuration. This example sets the protocol to ST-Link.

LANGUAGE: ini
CODE:
[env:weact_mini_h750vbtx]
platform = ststm32
board = weact_mini_h750vbtx

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic Arduino NG Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Arduino NG/ATmega168 board in platformio.ini file. Sets the platform to atmelavr and specifies the board model.

LANGUAGE: ini
CODE:
[env:atmegangatmega168]
platform = atmelavr
board = atmegangatmega168

----------------------------------------

TITLE: Setting Upload Protocol for NXP i.MX RT1015 Evaluation Kit
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the NXP i.MX RT1015 Evaluation Kit in the PlatformIO configuration. The example uses the 'mbed' protocol.

LANGUAGE: ini
CODE:
[env:mimxrt1015_evk]
platform = nxpimxrt
board = mimxrt1015_evk

upload_protocol = mbed

----------------------------------------

TITLE: Customizing ESP32-C6-DevKitC-1 Board Settings
DESCRIPTION: This code snippet shows how to override default board settings in PlatformIO. It demonstrates changing the microcontroller and CPU frequency for the ESP32-C6-DevKitC-1 board.

LANGUAGE: ini
CODE:
[env:esp32-c6-devkitc-1]
platform = espressif32
board = esp32-c6-devkitc-1

; change microcontroller
board_build.mcu = esp32c6

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Configuring Upload Protocol for SAMD21 Pro RF
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using SAM-BA as the selected protocol.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_proRF]
platform = atmelsam
board = sparkfun_samd21_proRF

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring ATtiny404 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ATtiny404 board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny404]
platform = atmelmegaavr
board = ATtiny404

; change microcontroller
board_build.mcu = attiny404

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for L476DMW1K
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using CMSIS-DAP as the protocol.

LANGUAGE: ini
CODE:
[env:rhombio_l476dmw1k]
platform = ststm32
board = rhombio_l476dmw1k

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Setting Upload Protocol for STM32F413RG
DESCRIPTION: Example configuration for setting the upload protocol to serial for the STM32F413RG board

LANGUAGE: ini
CODE:
[env:genericSTM32F413RG]
platform = ststm32
board = genericSTM32F413RG

upload_protocol = serial

----------------------------------------

TITLE: Configuring TI LaunchPad MSP-EXP430FR2311LP in PlatformIO
DESCRIPTION: This code snippet shows how to configure the TI LaunchPad MSP-EXP430FR2311LP board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:lpmsp430fr2311]
platform = timsp430
board = lpmsp430fr2311

; change microcontroller
board_build.mcu = msp430fr2311

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol (stlink) for the ST Nucleo F446ZE board.

LANGUAGE: ini
CODE:
[env:nucleo_f446ze]
platform = ststm32
board = nucleo_f446ze

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for Arduino Nicla Sense ME board in platformio.ini file

LANGUAGE: ini
CODE:
[env:nicla_sense_me]
platform = nordicnrf52
board = nicla_sense_me

----------------------------------------

TITLE: Configuring Basic DFRobot Romeo ESP32-S3 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the DFRobot Romeo ESP32-S3 board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:dfrobot_romeo_esp32s3]
platform = espressif32
board = dfrobot_romeo_esp32s3

----------------------------------------

TITLE: Customizing STM32F446RE Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F446RE]
platform = ststm32
board = genericSTM32F446RE

; change microcontroller
board_build.mcu = stm32f446ret6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32H735G-DK
DESCRIPTION: INI configuration demonstrating how to specify the upload protocol for the STM32H735G-DK board. Shows setting the default stlink protocol.

LANGUAGE: ini
CODE:
[env:disco_h735ig]
platform = ststm32
board = disco_h735ig

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Deneyap Kart G Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:deneyapkartg]
platform = espressif32
board = deneyapkartg

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Configuring Basic ATtiny13 Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATtiny13 board setup with default settings.

LANGUAGE: ini
CODE:
[env:attiny13]
platform = atmelavr
board = attiny13

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8A8K32S4A12
DESCRIPTION: Basic environment configuration for the STC8A8K32S4A12 board in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC8A8K32S4A12]
platform = intel_mcs51
board = STC8A8K32S4A12

----------------------------------------

TITLE: Configuring Basic STC8H1K17 Board Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up the STC8H1K17 board environment. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8H1K17]
platform = intel_mcs51
board = STC8H1K17

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration for IntoRobot Fig with custom microcontroller and frequency settings. Demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:intorobot]
platform = espressif32
board = intorobot

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Custom MKRZERO MCU Configuration
DESCRIPTION: Configuration example showing how to customize microcontroller and frequency settings for the MKRZERO board.

LANGUAGE: ini
CODE:
[env:mkrzero]
platform = atmelsam
board = mkrzero

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Overriding Default ESP8266 ESP-01 Board Settings in PlatformIO
DESCRIPTION: This code demonstrates how to override default board settings for the ESP8266 ESP-01, such as changing the microcontroller and MCU frequency, in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:esp01]
platform = espressif8266
board = esp01

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic NIBObee Board Configuration in PlatformIO
DESCRIPTION: Basic configuration settings for initializing the NIBObee robot board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:nibobee]
platform = atmelavr
board = nibobee

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ST Nucleo L432KC board using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_l432kc]
platform = ststm32
board = nucleo_l432kc

----------------------------------------

TITLE: Customizing SparkFun Pro Micro 5V/16MHz Settings
DESCRIPTION: This code demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_promicro16]
platform = atmelavr
board = sparkfun_promicro16

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring STM32F103RF Board Environment
DESCRIPTION: Basic PlatformIO configuration for setting up an STM32F103RF board environment. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RF]
platform = ststm32
board = genericSTM32F103RF

----------------------------------------

TITLE: Configuring PlatformIO Environment for Generic STC15W204S
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic STC15W204S board using the Intel MCS-51 platform. It demonstrates the basic configuration and how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15W204S]
platform = intel_mcs51
board = STC15W204S

; change microcontroller
board_build.mcu = stc15w204s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic PlatformIO Environment for Raspberry Pi 1B
DESCRIPTION: Basic PlatformIO configuration for Raspberry Pi 1 Model B board using linux_arm platform.

LANGUAGE: ini
CODE:
[env:raspberrypi_1b]
platform = linux_arm
board = raspberrypi_1b

----------------------------------------

TITLE: Customizing ATmega169P Board Parameters in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega169P]
platform = atmelavr
board = ATmega169P

; change microcontroller
board_build.mcu = atmega169p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic ATtiny817 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATtiny817 board project in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny817]
platform = atmelmegaavr
board = ATtiny817

----------------------------------------

TITLE: Setting Upload Protocol for u-blox ODIN-W2
DESCRIPTION: Demonstrates how to specify the upload protocol for the u-blox ODIN-W2 board, using stlink as an example.

LANGUAGE: ini
CODE:
[env:mtb_ublox_odin_w2]
platform = ststm32
board = mtb_ublox_odin_w2

upload_protocol = stlink

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32]
platform = espressif32
board = heltec_wifi_lora_32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration snippet for setting up an ST Nucleo L053R8 board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:nucleo_l053r8]
platform = ststm32
board = nucleo_l053r8

----------------------------------------

TITLE: Customizing Particle Argon MCU Settings
DESCRIPTION: Example of overriding default microcontroller and frequency settings for the Particle Argon board.

LANGUAGE: ini
CODE:
[env:particle_argon]
platform = nordicnrf52
board = particle_argon

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring SeeedStudio LoRa E5 Dev Board in PlatformIO
DESCRIPTION: Basic configuration for the SeeedStudio LoRa E5 Dev Board in the PlatformIO project configuration file. It specifies the platform and board to use.

LANGUAGE: ini
CODE:
[env:lora_e5_dev_board]
platform = ststm32
board = lora_e5_dev_board

----------------------------------------

TITLE: Customizing Arduino Nano ESP32 Board Settings
DESCRIPTION: Demonstrates how to override default board settings such as microcontroller and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:arduino_nano_esp32]
platform = espressif32
board = arduino_nano_esp32

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring ST Nucleo G0B1RE Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the ST Nucleo G0B1RE board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:nucleo_g0b1re]
platform = ststm32
board = nucleo_g0b1re

; change microcontroller
board_build.mcu = stm32g0b1ret6

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Custom MCU Configuration for CNRS AW2ETH
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:cnrs_aw2eth]
platform = espressif32
board = cnrs_aw2eth

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Arduino Tian board.

LANGUAGE: ini
CODE:
[env:tian]
platform = atmelsam
board = tian

upload_protocol = stk500v2

----------------------------------------

TITLE: Customizing ATmega3250 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings such as microcontroller type and CPU frequency in the PlatformIO environment.

LANGUAGE: ini
CODE:
[env:ATmega3250]
platform = atmelavr
board = ATmega3250

; change microcontroller
board_build.mcu = atmega3250

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC15W101
DESCRIPTION: Basic configuration setup for STC15W101 board in platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC15W101]
platform = intel_mcs51
board = STC15W101

----------------------------------------

TITLE: Advanced N76E885 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:N76E885]
platform = intel_mcs51
board = N76E885

; change microcontroller
board_build.mcu = n76e885

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring ST STM32F0308DISCOVERY Board in PlatformIO
DESCRIPTION: Basic configuration for using the ST STM32F0308DISCOVERY board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_f030r8]
platform = ststm32
board = disco_f030r8

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F030R8
DESCRIPTION: Example of how to specify the upload protocol for the ST Nucleo F030R8 board in PlatformIO. The default protocol is 'stlink', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:nucleo_f030r8]
platform = ststm32
board = nucleo_f030r8

upload_protocol = stlink

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:IAP15W4K63S4]
platform = intel_mcs51
board = IAP15W4K63S4

; change microcontroller
board_build.mcu = iap15w4k63s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic N79E815 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration snippet for setting up the N79E815 board in the project's platformio.ini file.

LANGUAGE: ini
CODE:
[env:N79E815]
platform = intel_mcs51
board = N79E815

----------------------------------------

TITLE: Advanced Board Configuration
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:b96b_neonkey]
platform = ststm32
board = b96b_neonkey

; change microcontroller
board_build.mcu = stm32f411ce

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing Microduino Core Board Settings in PlatformIO INI File
DESCRIPTION: This code snippet demonstrates how to override default settings for the Microduino Core board in a PlatformIO project configuration file. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:168pa8m]
platform = atmelavr
board = 168pa8m

; change microcontroller
board_build.mcu = atmega168p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic ATmega4808 Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATmega4808 board setup using the atmelmegaavr platform.

LANGUAGE: ini
CODE:
[env:ATmega4808]
platform = atmelmegaavr
board = ATmega4808

----------------------------------------

TITLE: Customizing NodeMCU-32S Board Settings in PlatformIO
DESCRIPTION: Example of overriding default NodeMCU-32S board settings in PlatformIO. Demonstrates how to change the microcontroller and CPU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:nodemcu-32s]
platform = espressif32
board = nodemcu-32s

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Upload Protocol Configuration for Adafruit Trinket M0
DESCRIPTION: Example showing how to configure the upload protocol for the board

LANGUAGE: ini
CODE:
[env:adafruit_trinket_m0]
platform = atmelsam
board = adafruit_trinket_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing STM32F103VC MCU Settings in PlatformIO
DESCRIPTION: Advanced INI configuration showing how to override default microcontroller and frequency settings for the STM32F103VC board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VC]
platform = ststm32
board = genericSTM32F103VC

; change microcontroller
board_build.mcu = stm32f103vct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for RUMBA32 F446VE
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the RUMBA32 F446VE board. It includes the basic configuration and options to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:rumba32_f446ve]
platform = ststm32
board = rumba32_f446ve

; change microcontroller
board_build.mcu = stm32f446ret6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Configuring BluzDK Board in PlatformIO INI File
DESCRIPTION: Basic PlatformIO configuration for the BluzDK board using the Nordic nRF51 platform. It demonstrates how to specify the board and platform in the project's INI file.

LANGUAGE: ini
CODE:
[env:bluz_dk]
platform = nordicnrf51
board = bluz_dk

----------------------------------------

TITLE: Basic Board Configuration in platformio.ini
DESCRIPTION: Basic PlatformIO configuration for the IBMEthernetKit board using the freescalekinetis platform.

LANGUAGE: ini
CODE:
[env:IBMEthernetKit]
platform = freescalekinetis
board = IBMEthernetKit

----------------------------------------

TITLE: Advanced Board Configuration with MCU Options
DESCRIPTION: Extended PlatformIO configuration demonstrating how to customize microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:nucleo_l412kb]
platform = ststm32
board = nucleo_l412kb

; change microcontroller
board_build.mcu = stm32l412kbu6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Particle Boron Board in PlatformIO
DESCRIPTION: Basic configuration for the Particle Boron board in the project's platformio.ini file. This sets up the board and platform for use with PlatformIO.

LANGUAGE: ini
CODE:
[env:particle_boron]
platform = nordicnrf52
board = particle_boron

----------------------------------------

TITLE: Setting Upload Protocol for LPCXpresso11U68 in PlatformIO
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the LPCXpresso11U68 board in PlatformIO. The default protocol is 'mbed', but this example shows how to explicitly set it.

LANGUAGE: ini
CODE:
[env:lpc11u68]
platform = nxplpc
board = lpc11u68

upload_protocol = mbed

----------------------------------------

TITLE: Customizing SparkFun ESP32 Thing Plus Board Settings
DESCRIPTION: Example of overriding default board settings for the SparkFun ESP32 Thing Plus, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32thing_plus]
platform = espressif32
board = esp32thing_plus

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring STM32F415RG Board in PlatformIO
DESCRIPTION: Basic configuration for the STM32F415RG board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F415RG]
platform = ststm32
board = genericSTM32F415RG

----------------------------------------

TITLE: Customizing Adafruit ItsyBitsy ESP32 Board Settings
DESCRIPTION: Example of overriding default board settings for the Adafruit ItsyBitsy ESP32, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_esp32]
platform = espressif32
board = adafruit_itsybitsy_esp32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Alorium XLR8 Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Alorium XLR8 settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:alorium_xlr8]
platform = atmelavr
board = alorium_xlr8

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Generic MS51PC0AE
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Generic MS51PC0AE board. It sets the platform and board ID, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:MS51PC0AE]
platform = intel_mcs51
board = MS51PC0AE

; change microcontroller
board_build.mcu = ms51pc0ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic N79E823 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the N79E823 board, specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:N79E823]
platform = intel_mcs51
board = N79E823

----------------------------------------

TITLE: Customizing Deneyap Mini Board Settings
DESCRIPTION: Example of overriding default Deneyap Mini settings in PlatformIO configuration. This snippet demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:deneyapmini]
platform = espressif32
board = deneyapmini

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom MCU Settings
DESCRIPTION: Example configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_proxlighttrinkey_m0]
platform = atmelsam
board = adafruit_proxlighttrinkey_m0

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Vajra Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Vajra board settings in a PlatformIO project. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:vajra]
platform = shakti
board = vajra

; change microcontroller
board_build.mcu = C-Class

; change MCU frequency
board_build.f_cpu = 50000000L

----------------------------------------

TITLE: Configuring Basic Board Settings for RAK811 LoRa Tracker
DESCRIPTION: Basic PlatformIO configuration for RAK811 LoRa Tracker board using STM32 platform. Sets up the essential board and platform parameters.

LANGUAGE: ini
CODE:
[env:rak811_tracker_32]
platform = ststm32
board = rak811_tracker_32

----------------------------------------

TITLE: Configuring ATtiny424 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny424 board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny424]
platform = atmelmegaavr
board = ATtiny424

; change microcontroller
board_build.mcu = attiny424

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F103ZG board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZG]
platform = ststm32
board = genericSTM32F103ZG

upload_protocol = serial

----------------------------------------

TITLE: Upload Protocol Configuration for Digistump DigiX
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using sam-ba as the protocol.

LANGUAGE: ini
CODE:
[env:digix]
platform = atmelsam
board = digix

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:frdm_kl43z]
platform = freescalekinetis
board = frdm_kl43z

; change microcontroller
board_build.mcu = mkl43z256vlh4

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Namino Rosso Board Settings
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:namino_rosso]
platform = espressif32
board = namino_rosso

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring AVR32DB48 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR32DB48 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:AVR32DB48]
platform = atmelmegaavr
board = AVR32DB48

; change microcontroller
board_build.mcu = avr32db48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:lolin_c3_mini]
platform = espressif32
board = lolin_c3_mini

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Customizing Generic STC8A4K32S2A12 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC8A4K32S2A12 board in a PlatformIO project. It shows how to change the microcontroller and MCU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:STC8A4K32S2A12]
platform = intel_mcs51
board = STC8A4K32S2A12

; change microcontroller
board_build.mcu = stc8a4k32s2a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Portenta H7 (M7 core)
DESCRIPTION: This snippet shows how to specify the upload protocol in PlatformIO configuration. The default protocol is 'dfu', but this example sets it explicitly.

LANGUAGE: ini
CODE:
[env:portenta_h7_m7]
platform = ststm32
board = portenta_h7_m7

upload_protocol = dfu

----------------------------------------

TITLE: Customizing Adafruit Trinket 5V/16MHz Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It changes the microcontroller to attiny85 and sets the MCU frequency to 16MHz.

LANGUAGE: ini
CODE:
[env:trinket5]
platform = atmelavr
board = trinket5

; change microcontroller
board_build.mcu = attiny85

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing STM32F103RG MCU Settings
DESCRIPTION: Example of overriding default microcontroller settings including MCU model and frequency

LANGUAGE: ini
CODE:
[env:genericSTM32F103RG]
platform = ststm32
board = genericSTM32F103RG

; change microcontroller
board_build.mcu = stm32f103rgt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F411CC
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F411CC board.

LANGUAGE: ini
CODE:
[env:genericSTM32F411CC]
platform = ststm32
board = genericSTM32F411CC

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol for OROCA EduBot in PlatformIO INI File
DESCRIPTION: This snippet shows how to set the upload protocol for the OROCA EduBot board in the PlatformIO project configuration file. It sets the upload protocol to esptool.

LANGUAGE: ini
CODE:
[env:oroca_edubot]
platform = espressif32
board = oroca_edubot

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ATmega6490P Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:ATmega6490P]
platform = atmelavr
board = ATmega6490P

; change microcontroller
board_build.mcu = atmega6490p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing NIBO Burger Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:niboburger_1284]
platform = atmelavr
board = niboburger_1284

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 20000000L

----------------------------------------

TITLE: Configuring Basic ATmega32 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ATmega32 board in platformio.ini file. Specifies the platform and board settings.

LANGUAGE: ini
CODE:
[env:ATmega32]
platform = atmelavr
board = ATmega32

----------------------------------------

TITLE: Customizing ST Nucleo F091RC MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo F091RC board.

LANGUAGE: ini
CODE:
[env:nucleo_f091rc]
platform = ststm32
board = nucleo_f091rc

; change microcontroller
board_build.mcu = stm32f091rct6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32-E407 in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol (e.g., stlink) for the STM32-E407 board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:olimex_e407]
platform = ststm32
board = olimex_e407

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration for N76E616
DESCRIPTION: Basic PlatformIO configuration for setting up the N76E616 board with intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:N76E616]
platform = intel_mcs51
board = N76E616

----------------------------------------

TITLE: Overriding Default Settings for Generic N79E843
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:N79E843]
platform = intel_mcs51
board = N79E843

; change microcontroller
board_build.mcu = n79e843

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring ST B-G431B-ESC1 Discovery Board in PlatformIO
DESCRIPTION: Basic INI configuration for setting up the ST B-G431B-ESC1 Discovery board in PlatformIO. Includes options for specifying the board, changing the microcontroller, and adjusting the MCU frequency.

LANGUAGE: ini
CODE:
[env:disco_b_g431b_esc1]
platform = ststm32
board = disco_b_g431b_esc1

; change microcontroller
board_build.mcu = stm32g431cbu6

; change MCU frequency
board_build.f_cpu = 170000000L

----------------------------------------

TITLE: Basic AT90PWM316 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for AT90PWM316 board in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:at90pwm316]
platform = atmelavr
board = at90pwm316

----------------------------------------

TITLE: Setting Upload Protocol for STM32F4Stamp
DESCRIPTION: Configuration example for specifying the upload protocol (DFU) for the STM32F4Stamp board.

LANGUAGE: ini
CODE:
[env:stm32f4stamp]
platform = ststm32
board = stm32f4stamp

upload_protocol = dfu

----------------------------------------

TITLE: Customizing YeaCreate NSCREEN-32 Board Settings
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nscreen-32]
platform = espressif32
board = nscreen-32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Adafruit ItsyBitsy M0 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_m0]
platform = atmelsam
board = adafruit_itsybitsy_m0

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended INI configuration demonstrating how to override default board settings like microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:STC15W1K24S]
platform = intel_mcs51
board = STC15W1K24S

; change microcontroller
board_build.mcu = stc15w1k24s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for Arty FPGA Dev Kit
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO. This snippet demonstrates how to set the upload protocol to FTDI for the Arty FPGA Dev Kit.

LANGUAGE: ini
CODE:
[env:e310-arty]
platform = sifive
board = e310-arty

upload_protocol = ftdi

----------------------------------------

TITLE: Customizing ST Sensor Node Board Settings
DESCRIPTION: Example of overriding default board settings, such as microcontroller and CPU frequency, in a PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:silica_sensor_node]
platform = ststm32
board = silica_sensor_node

; change microcontroller
board_build.mcu = stm32l476jg

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic Arduino Pro Mini Environment in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for Arduino Pro Mini ATmega168 board using atmelavr platform

LANGUAGE: ini
CODE:
[env:pro8MHzatmega168]
platform = atmelavr
board = pro8MHzatmega168

----------------------------------------

TITLE: Setting Teensy 4.0 Upload Protocol
DESCRIPTION: INI configuration demonstrating how to specify the upload protocol for the Teensy 4.0 board, using the teensy-gui option.

LANGUAGE: ini
CODE:
[env:teensy40]
platform = teensy
board = teensy40

upload_protocol = teensy-gui

----------------------------------------

TITLE: Configuring PYBSTICK26 Duino Board in platformio.ini
DESCRIPTION: Basic configuration for the PYBSTICK26 Duino board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:pybstick26_duino]
platform = ststm32
board = pybstick26_duino

----------------------------------------

TITLE: Customizing HiFive1 Rev B MCU Settings
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:hifive1-revb]
platform = sifive
board = hifive1-revb

; change microcontroller
board_build.mcu = fe310

; change MCU frequency
board_build.f_cpu = 320000000L

----------------------------------------

TITLE: Basic Board Configuration
DESCRIPTION: Basic PlatformIO configuration for Leafony Systems AP03 board using STM32 platform

LANGUAGE: ini
CODE:
[env:leafony_ap03]
platform = ststm32
board = leafony_ap03

----------------------------------------

TITLE: Configuring Basic Generic8051 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a Generic 8051 board project environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:Generic8051]
platform = intel_mcs51
board = Generic8051

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for initializing an Espotel LoRa Module project using the STM32 platform.

LANGUAGE: ini
CODE:
[env:elmo_f411re]
platform = ststm32
board = elmo_f411re

----------------------------------------

TITLE: Setting Upload Protocol for HONEYLemon Board in PlatformIO INI File
DESCRIPTION: Configuration example showing how to set a specific upload protocol (esptool in this case) for the HONEYLemon board in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:honeylemon]
platform = espressif32
board = honeylemon

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Arduino Uno WiFi Rev2 Build Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:uno_wifi_rev2]
platform = atmelmegaavr
board = uno_wifi_rev2

; change microcontroller
board_build.mcu = atmega4809

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic Board Configuration for STC8A8K60D4
DESCRIPTION: Basic PlatformIO environment configuration for STC8A8K60D4 board setup with Intel MCS-51 platform.

LANGUAGE: ini
CODE:
[env:STC8A8K60D4]
platform = intel_mcs51
board = STC8A8K60D4

----------------------------------------

TITLE: Customizing STC8G2K64S2 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC8G2K64S2 board in PlatformIO. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8G2K64S2]
platform = intel_mcs51
board = STC8G2K64S2

; change microcontroller
board_build.mcu = stc8g2k64s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring TinyDuino Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the TinyCircuits TinyDuino Processor Board in a PlatformIO project configuration file. It sets the platform to atmelavr and the board to tinyduino.

LANGUAGE: ini
CODE:
[env:tinyduino]
platform = atmelavr
board = tinyduino

----------------------------------------

TITLE: Advanced Board Configuration - PlatformIO INI
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:adafruit_hallowing]
platform = atmelsam
board = adafruit_hallowing

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing ST Nucleo F446RE Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_f446re]
platform = ststm32
board = nucleo_f446re

; change microcontroller
board_build.mcu = stm32f446ret6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Configuring ATtiny426 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ATtiny426 board in the PlatformIO project configuration file. It demonstrates basic setup and how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny426]
platform = atmelmegaavr
board = ATtiny426

; change microcontroller
board_build.mcu = attiny426

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration for setting the upload protocol to serial for STM32F401CB board

LANGUAGE: ini
CODE:
[env:genericSTM32F401CB]
platform = ststm32
board = genericSTM32F401CB

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol for Aceinna OpenIMU 330
DESCRIPTION: Configuration example for specifying the upload protocol for the Aceinna OpenIMU 330 board. Uses the 'stlink' protocol.

LANGUAGE: ini
CODE:
[env:OpenIMU330]
platform = aceinna_imu
board = OpenIMU330

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for Heltec CubeCell-Module (HTCC-AM01)
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the Heltec CubeCell-Module (HTCC-AM01) board. It sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:cubecell_module]
platform = heltec-cubecell
board = cubecell_module

----------------------------------------

TITLE: Basic STM32F103R6 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for initializing an STM32F103R6 board project.

LANGUAGE: ini
CODE:
[env:genericSTM32F103R6]
platform = ststm32
board = genericSTM32F103R6

----------------------------------------

TITLE: Configuring Arduino Due (USB Native Port) in PlatformIO
DESCRIPTION: Basic configuration for the Arduino Due (USB Native Port) board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:dueUSB]
platform = atmelsam
board = dueUSB

----------------------------------------

TITLE: Configuring Linino One Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Linino One board in the PlatformIO project configuration file. It sets the platform to atmelavr and the board to 'one'.

LANGUAGE: ini
CODE:
[env:one]
platform = atmelavr
board = one

----------------------------------------

TITLE: Customizing Pycom LoPy4 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. This snippet demonstrates how to change the microcontroller and CPU frequency for the Pycom LoPy4.

LANGUAGE: ini
CODE:
[env:lopy4]
platform = espressif32
board = lopy4

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for RYMCU Nebula Pi F103VE
DESCRIPTION: Basic PlatformIO configuration for the RYMCU Nebula Pi F103VE board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:rymcu_nebulapi_f103ve]
platform = ststm32
board = rymcu_nebulapi_f103ve

----------------------------------------

TITLE: Customizing 1Bitsy STM32F415RGT Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:1bitsy_stm32f415rgt]
platform = ststm32
board = 1bitsy_stm32f415rgt

; change microcontroller
board_build.mcu = stm32f415rgt

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring Upload Protocol for ST Nucleo L476RG
DESCRIPTION: PlatformIO configuration demonstrating how to set the upload protocol for the ST Nucleo L476RG board, using stlink as an example.

LANGUAGE: ini
CODE:
[env:nucleo_l476rg]
platform = ststm32
board = nucleo_l476rg

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Adafruit Rotary Trinkey Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_rotarytrinkey_m0]
platform = atmelsam
board = adafruit_rotarytrinkey_m0

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Arduino Portenta H7 (M4 core) Board Settings in PlatformIO INI
DESCRIPTION: Example of overriding default board settings for the Arduino Portenta H7 (M4 core), including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:portenta_h7_m4]
platform = ststm32
board = portenta_h7_m4

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring PlatformIO for Unexpected Maker TinyS2
DESCRIPTION: Basic PlatformIO configuration for the Unexpected Maker TinyS2 board. It sets the platform to espressif32 and the board to um_tinys2.

LANGUAGE: ini
CODE:
[env:um_tinys2]
platform = espressif32
board = um_tinys2

----------------------------------------

TITLE: Customizing ATtiny44 MCU and Clock Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings including microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:attiny44]
platform = atmelavr
board = attiny44

; change microcontroller
board_build.mcu = attiny44

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Configuration with custom microcontroller and frequency settings for Adafruit Hallowing M4

LANGUAGE: ini
CODE:
[env:adafruit_hallowing_m4]
platform = atmelsam
board = adafruit_hallowing_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring Basic STM32F103RD Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an STM32F103RD board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RD]
platform = ststm32
board = genericSTM32F103RD

----------------------------------------

TITLE: Customizing STM32F103ZE Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZE]
platform = ststm32
board = genericSTM32F103ZE

; change microcontroller
board_build.mcu = stm32f103zet6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing Armstrap Eagle 2048 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:armstrap_eagle2048]
platform = ststm32
board = armstrap_eagle2048

; change microcontroller
board_build.mcu = stm32f427vit6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing Generic STC12C5A40S2 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC12C5A40S2 board in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC12C5A40S2]
platform = intel_mcs51
board = STC12C5A40S2

; change microcontroller
board_build.mcu = stc12c5a40s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC8C2K64S4 Board
DESCRIPTION: This snippet shows how to configure the project environment for the Generic STC8C2K64S4 board in the PlatformIO configuration file (platformio.ini). It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8C2K64S4]
platform = intel_mcs51
board = STC8C2K64S4

----------------------------------------

TITLE: Setting Upload Protocol for STEVAL-FCU001V1
DESCRIPTION: Configuration to set the upload protocol for the STEVAL-FCU001V1 board. The default protocol is 'stlink', but this example shows how to explicitly set it.

LANGUAGE: ini
CODE:
[env:steval_fcu001v1]
platform = ststm32
board = steval_fcu001v1

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Board Settings in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:smart7688]
platform = atmelavr
board = smart7688

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing ATmega640 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO environment.

LANGUAGE: ini
CODE:
[env:ATmega640]
platform = atmelavr
board = ATmega640

; change microcontroller
board_build.mcu = atmega640

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Particle Xenon MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Particle Xenon board.

LANGUAGE: ini
CODE:
[env:particle_xenon]
platform = nordicnrf52
board = particle_xenon

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the Adafruit Crickit M0.

LANGUAGE: ini
CODE:
[env:adafruit_crickit_m0]
platform = atmelsam
board = adafruit_crickit_m0

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC8C2K16S4 Board
DESCRIPTION: Basic PlatformIO configuration for the Generic STC8C2K16S4 board using the Intel MCS-51 platform. This snippet shows how to set the board in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8C2K16S4]
platform = intel_mcs51
board = STC8C2K16S4

----------------------------------------

TITLE: Configuring Upload Protocol for ESP32-S3-Box
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ESP32-S3-Box board.

LANGUAGE: ini
CODE:
[env:esp32s3box]
platform = espressif32
board = esp32s3box

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Opta (M4 core)
DESCRIPTION: Configuration to specify the upload protocol for the Arduino Opta (M4 core) board. In this example, it's set to use the DFU protocol.

LANGUAGE: ini
CODE:
[env:opta_m4]
platform = ststm32
board = opta_m4

upload_protocol = dfu

----------------------------------------

TITLE: Customizing Digispark Pro MCU and Frequency Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the Digispark Pro board in PlatformIO.

LANGUAGE: ini
CODE:
[env:digispark-pro32]
platform = atmelavr
board = digispark-pro32

; change microcontroller
board_build.mcu = attiny167

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for CubeCell-Module-V2
DESCRIPTION: Basic PlatformIO environment configuration for the Heltec CubeCell-Module-V2 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:cubecell_module_v2]
platform = heltec-cubecell
board = cubecell_module_v2

----------------------------------------

TITLE: Configuring sakura.io Evaluation Board in PlatformIO
DESCRIPTION: Basic configuration for the sakura.io Evaluation Board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sakuraio_evb_01]
platform = ststm32
board = sakuraio_evb_01

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Feather STM32F405
DESCRIPTION: Demonstrates how to specify the upload protocol for the Adafruit Feather STM32F405 board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:adafruit_feather_f405]
platform = ststm32
board = adafruit_feather_f405

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Electrosmith Daisy Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. This snippet demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:electrosmith_daisy]
platform = ststm32
board = electrosmith_daisy

; change microcontroller
board_build.mcu = stm32h750ibk6

; change MCU frequency
board_build.f_cpu = 400000000L

----------------------------------------

TITLE: Configuring Basic STM32G431CB Board Settings
DESCRIPTION: Basic configuration for setting up an STM32G431CB board project in PlatformIO using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32G431CB]
platform = ststm32
board = genericSTM32G431CB

----------------------------------------

TITLE: Setting Upload Protocol for Nucleo G431RB in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol (ST-Link in this case) for the Nucleo G431RB board in PlatformIO.

LANGUAGE: ini
CODE:
[env:nucleo_g431rb]
platform = ststm32
board = nucleo_g431rb

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32_v2]
platform = espressif32
board = adafruit_feather_esp32_v2

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Adafruit BLM Badge board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:adafruit_blm_badge]
platform = atmelsam
board = adafruit_blm_badge

----------------------------------------

TITLE: Configuring PlatformIO for Generic W79E8213 Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic W79E8213 board. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:W79E8213]
platform = intel_mcs51
board = W79E8213

; change microcontroller
board_build.mcu = w79e8213

; change MCU frequency
board_build.f_cpu = 20000000L

----------------------------------------

TITLE: Configuring Adafruit PyPortal M4 Board in PlatformIO
DESCRIPTION: Basic configuration for the Adafruit PyPortal M4 board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_pyportal_m4]
platform = atmelsam
board = adafruit_pyportal_m4

----------------------------------------

TITLE: Configuring PlatformIO for Adafruit Circuit Playground Express
DESCRIPTION: Basic PlatformIO configuration for the Adafruit Circuit Playground Express board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_circuitplayground_m0]
platform = atmelsam
board = adafruit_circuitplayground_m0

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to use the Heltec CubeCell-Module Plus board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:cubecell_module_plus]
platform = heltec-cubecell
board = cubecell_module_plus

----------------------------------------

TITLE: Customizing ATtiny804 Build Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the ATtiny804 board.

LANGUAGE: ini
CODE:
[env:ATtiny804]
platform = atmelmegaavr
board = ATtiny804

; change microcontroller
board_build.mcu = attiny804

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic STM32F401RE Board Settings in PlatformIO
DESCRIPTION: Basic configuration for STM32F401RE board in platformio.ini file specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RE]
platform = ststm32
board = genericSTM32F401RE

----------------------------------------

TITLE: Configuring Basic Arduino Fio Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up an Arduino Fio board environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:fio]
platform = atmelavr
board = fio

----------------------------------------

TITLE: Configuring PlatformIO Environment for Arty FPGA Dev Kit
DESCRIPTION: Basic PlatformIO configuration for the Arty FPGA Dev Kit using the SiFive platform and e310-arty board. This snippet demonstrates how to set up a project environment for this specific board.

LANGUAGE: ini
CODE:
[env:e310-arty]
platform = sifive
board = e310-arty

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for initializing an ST Nucleo F334R8 project in PlatformIO.

LANGUAGE: ini
CODE:
[env:nucleo_f334r8]
platform = ststm32
board = nucleo_f334r8

----------------------------------------

TITLE: Configuring Arduino MKR1000 Board in PlatformIO
DESCRIPTION: Basic configuration for using the Arduino MKR1000 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:mkr1000USB]
platform = atmelsam
board = mkr1000USB

----------------------------------------

TITLE: Configuring ESP32 Turta IoT Node Upload Protocol
DESCRIPTION: PlatformIO configuration showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:turta_iot_node]
platform = espressif32
board = turta_iot_node

upload_protocol = esptool

----------------------------------------

TITLE: Customizing EFM32GG-STK3700 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:efm32gg_stk3700]
platform = siliconlabsefm32
board = efm32gg_stk3700

; change microcontroller
board_build.mcu = efm32gg990f1024

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the sduino UNO board in platformio.ini file, setting the platform and board type.

LANGUAGE: ini
CODE:
[env:s8uno]
platform = ststm8
board = s8uno

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Default protocol is stlink but others like blackmagic, cmsis-dap, jlink and mbed are supported.

LANGUAGE: ini
CODE:
[env:disco_b_u585i_iot02a]
platform = ststm32
board = disco_b_u585i_iot02a

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for WEMOS LOLIN S2 PICO
DESCRIPTION: Basic PlatformIO configuration for the WEMOS LOLIN S2 PICO board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lolin_s2_pico]
platform = espressif32
board = lolin_s2_pico

----------------------------------------

TITLE: Configuring Basic ESP32-S3 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Adafruit Metro ESP32-S3 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_metro_esp32s3]
platform = espressif32
board = adafruit_metro_esp32s3

----------------------------------------

TITLE: Setting Upload Protocol for BluePill F103C6
DESCRIPTION: PlatformIO configuration demonstrating how to specify the upload protocol for the BluePill F103C6 board.

LANGUAGE: ini
CODE:
[env:bluepill_f103c6]
platform = ststm32
board = bluepill_f103c6

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for INEX OpenKB in PlatformIO INI File
DESCRIPTION: This snippet shows how to specify the upload protocol for the INEX OpenKB board in a PlatformIO project. It sets the upload protocol to esptool, which is the default for this board.

LANGUAGE: ini
CODE:
[env:inex_openkb]
platform = espressif32
board = inex_openkb

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Arduino Industrial 101 Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the Arduino Industrial 101 board in a PlatformIO project configuration file. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:chiwawa]
platform = atmelavr
board = chiwawa

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Generic STC15F2K32S2 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic STC15F2K32S2 board in a PlatformIO project's configuration file (platformio.ini). It sets the platform and board, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K32S2]
platform = intel_mcs51
board = STC15F2K32S2

; change microcontroller
board_build.mcu = stc15f2k32s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic PIC32 CUI32 Board in PlatformIO
DESCRIPTION: Basic project configuration for using the PIC32 CUI32-Development Stick board, specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:cui32]
platform = microchippic32
board = cui32

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F031K6
DESCRIPTION: Configuration to change the upload protocol for the ST Nucleo F031K6 board to ST-Link in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:nucleo_f031k6]
platform = ststm32
board = nucleo_f031k6

upload_protocol = stlink

----------------------------------------

TITLE: Customizing Cricket-L082CZ Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:cricket_l082cz]
platform = ststm32
board = cricket_l082cz

; change microcontroller
board_build.mcu = stm32l082czy6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Basic PlatformIO Board Configuration for STC8A4K64S2A12
DESCRIPTION: Basic configuration example for setting up the STC8A4K64S2A12 board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC8A4K64S2A12]
platform = intel_mcs51
board = STC8A4K64S2A12

----------------------------------------

TITLE: Setting Upload Protocol for STM32F407ZG
DESCRIPTION: Configuration example for specifying the upload protocol (stlink) for the Black STM32F407ZG board.

LANGUAGE: ini
CODE:
[env:black_f407zg]
platform = ststm32
board = black_f407zg

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ATtiny261 Board Settings in PlatformIO INI File
DESCRIPTION: This example demonstrates how to override default board settings for the Generic ATtiny261. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:attiny261]
platform = atmelavr
board = attiny261

; change microcontroller
board_build.mcu = attiny261

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:deneyapkart1A]
platform = espressif32
board = deneyapkart1A

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Metro nRF52840 Express Build Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_metro_nrf52840]
platform = nordicnrf52
board = adafruit_metro_nrf52840

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Basic ATtiny402 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ATtiny402 board setup in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny402]
platform = atmelmegaavr
board = ATtiny402

----------------------------------------

TITLE: Customizing STC8F1K08S Board Parameters
DESCRIPTION: Advanced configuration showing how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8F1K08S]
platform = intel_mcs51
board = STC8F1K08S

; change microcontroller
board_build.mcu = stc8f1k08s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic STC8G2K60S2 Board Settings
DESCRIPTION: Basic PlatformIO configuration for setting up an STC8G2K60S2 board project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8G2K60S2]
platform = intel_mcs51
board = STC8G2K60S2

----------------------------------------

TITLE: Setting Upload Protocol for ESP-WROOM-02
DESCRIPTION: Configuration example for specifying the upload protocol for ESP-WROOM-02, which supports both espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:esp_wroom_02]
platform = espressif8266
board = esp_wroom_02

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Heltec CubeCell-Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Heltec CubeCell-Board (HTCC-AB01) in a PlatformIO project's configuration file. It demonstrates setting the platform, board, and optional overrides for microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:cubecell_board]
platform = heltec-cubecell
board = cubecell_board

; change microcontroller
board_build.mcu = asr6501

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Seeed Studio XIAO ESP32C3 Board Settings
DESCRIPTION: Example of overriding default board settings, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:seeed_xiao_esp32c3]
platform = espressif32
board = seeed_xiao_esp32c3

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Zero
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Arduino Zero board using CMSIS-DAP.

LANGUAGE: ini
CODE:
[env:zero]
platform = atmelsam
board = zero

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Setting Upload Protocol for STM32F401RC
DESCRIPTION: Configuration example for setting the upload protocol for the STM32F401RC board.

LANGUAGE: ini
CODE:
[env:genericSTM32F401RC]
platform = ststm32
board = genericSTM32F401RC

upload_protocol = serial

----------------------------------------

TITLE: Configuring Generic IAP15W4K61S4 Board in PlatformIO
DESCRIPTION: This code snippet demonstrates how to configure the Generic IAP15W4K61S4 board in a PlatformIO project's configuration file. It sets the platform and board ID, and shows how to override default board settings.

LANGUAGE: ini
CODE:
[env:IAP15W4K61S4]
platform = intel_mcs51
board = IAP15W4K61S4

; change microcontroller
board_build.mcu = iap15w4k61s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring STM32F407VE Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F407VE board in the PlatformIO project configuration file. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F407VET6]
platform = ststm32
board = genericSTM32F407VET6

----------------------------------------

TITLE: Customizing PYBSTICK26 Duino Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:pybstick26_duino]
platform = ststm32
board = pybstick26_duino

; change microcontroller
board_build.mcu = stm32f072rb

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:lopy]
platform = espressif32
board = lopy

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Generic STC15F2K40S2 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15F2K40S2 board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC15F2K40S2]
platform = intel_mcs51
board = STC15F2K40S2

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency using board_*** options.

LANGUAGE: ini
CODE:
[env:LowCostRTK]
platform = aceinna_imu
board = LowCostRTK

; change microcontroller
board_build.mcu = stm32f469nih6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Advanced MS51IA9AE Board Configuration
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:MS51IA9AE]
platform = intel_mcs51
board = MS51IA9AE

; change microcontroller
board_build.mcu = ms51ia9ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic ATtiny3227 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATtiny3227 board setup using the atmelmegaavr platform.

LANGUAGE: ini
CODE:
[env:ATtiny3227]
platform = atmelmegaavr
board = ATtiny3227

----------------------------------------

TITLE: Customizing TI LaunchPad MSP-EXP430G2 w/ MSP430G2452 settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the platformio.ini file. It shows how to change the microcontroller and MCU frequency for the TI LaunchPad MSP-EXP430G2 w/ MSP430G2452 board.

LANGUAGE: ini
CODE:
[env:lpmsp430g2452]
platform = timsp430
board = lpmsp430g2452

; change microcontroller
board_build.mcu = msp430g2452

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring AVR32DA48 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR32DA48 board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:AVR32DA48]
platform = atmelmegaavr
board = AVR32DA48

; change microcontroller
board_build.mcu = avr32da48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Customizing STM32F410RB MCU Settings
DESCRIPTION: Example showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F410RB]
platform = ststm32
board = genericSTM32F410RB

; change microcontroller
board_build.mcu = stm32f410rbt6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for ST Nucleo F446RE
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo F446RE board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:nucleo_f446re]
platform = ststm32
board = nucleo_f446re

----------------------------------------

TITLE: Customizing Artix-7 MCU Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:artix7_35t]
platform = shakti
board = artix7_35t

; change microcontroller
board_build.mcu = E-Class

; change MCU frequency
board_build.f_cpu = 50000000L

----------------------------------------

TITLE: Setting Flash Frequency for ESP8266 in PlatformIO
DESCRIPTION: Example of setting the flash frequency to 80MHz using the board_build.f_flash option in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
; set frequency to 80MHz
board_build.f_flash = 80000000L

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the Arduino M0 Pro

LANGUAGE: ini
CODE:
[env:mzeropro]
platform = atmelsam
board = mzeropro

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Customizing Arduino NG or older ATmega8 Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:atmegangatmega8]
platform = atmelavr
board = atmegangatmega8

; change microcontroller
board_build.mcu = atmega8

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:atmegazero_esp32s2]
platform = espressif32
board = atmegazero_esp32s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the Mbed Connect Cloud board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:mbed_connect_odin]
platform = ststm32
board = mbed_connect_odin

----------------------------------------

TITLE: Custom MCU Configuration for STM32F405
DESCRIPTION: PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_micromod_f405]
platform = ststm32
board = sparkfun_micromod_f405

; change microcontroller
board_build.mcu = stm32f405rgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Custom MCU Configuration for STM32
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:mts_mdot_f411re]
platform = ststm32
board = mts_mdot_f411re

; change microcontroller
board_build.mcu = stm32f411ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. The board supports espota and esptool protocols.

LANGUAGE: ini
CODE:
[env:mgbot-iotik32b]
platform = espressif32
board = mgbot-iotik32b

upload_protocol = esptool

----------------------------------------

TITLE: Customizing ftDuino Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default ftDuino settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ftduino]
platform = atmelavr
board = ftduino

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing STC15F2K24AS Board Settings
DESCRIPTION: Example showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K24AS]
platform = intel_mcs51
board = STC15F2K24AS

; change microcontroller
board_build.mcu = stc15f2k24as

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing TI LaunchPad MSP-EXP430FR2476LP Board Settings
DESCRIPTION: This snippet shows how to override default board settings in a PlatformIO project configuration. It demonstrates changing the microcontroller and MCU frequency for the TI LaunchPad MSP-EXP430FR2476LP board.

LANGUAGE: ini
CODE:
[env:lpmsp430fr2476]
platform = timsp430
board = lpmsp430fr2476

; change microcontroller
board_build.mcu = msp430fr2476

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic Board Environment - PlatformIO INI
DESCRIPTION: Basic configuration for setting up the Electrosmith Daisy Patch SM board environment in platformio.ini

LANGUAGE: ini
CODE:
[env:electrosmith_daisy_patch_sm]
platform = ststm32
board = electrosmith_daisy_patch_sm

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103ZC
DESCRIPTION: Configuration example for setting the upload protocol to stlink for the STM32F103ZC board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZC]
platform = ststm32
board = genericSTM32F103ZC

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for Aceinna OpenRTK330L
DESCRIPTION: Basic PlatformIO configuration for the Aceinna OpenRTK330L board. Sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:OpenRTK330L]
platform = aceinna_imu
board = OpenRTK330L

----------------------------------------

TITLE: Setting Upload Protocol for Cricket-L082CZ
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. The board supports blackmagic, dfu, jlink and stlink protocols.

LANGUAGE: ini
CODE:
[env:cricket_l082cz]
platform = ststm32
board = cricket_l082cz

upload_protocol = dfu

----------------------------------------

TITLE: Configuring Basic ATtiny1616 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ATtiny1616 board in platformio.ini file specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny1616]
platform = atmelmegaavr
board = ATtiny1616

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Heltec WiFi LoRa 32 (V3) board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:heltec_wifi_lora_32_V3]
platform = espressif32
board = heltec_wifi_lora_32_V3

----------------------------------------

TITLE: Customizing VNG VBLUno52 Board Settings in PlatformIO INI File
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:vbluno52]
platform = nordicnrf52
board = vbluno52

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing ATmega809 Board Parameters in PlatformIO
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega809]
platform = atmelmegaavr
board = ATmega809

; change microcontroller
board_build.mcu = atmega809

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K16S2A10]
platform = intel_mcs51
board = STC8H1K16S2A10

; change microcontroller
board_build.mcu = stc8h1k16s2a10

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G2K64S4]
platform = intel_mcs51
board = STC8G2K64S4

; change microcontroller
board_build.mcu = stc8g2k64s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic MSP430G2231 Board Settings
DESCRIPTION: Basic PlatformIO configuration for setting up the MSP430G2231 board environment. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lpmsp430g2231]
platform = timsp430
board = lpmsp430g2231

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103VE
DESCRIPTION: Configuration example for specifying the upload protocol. Shows how to set the upload protocol to ST-Link for the STM32F103VE board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VE]
platform = ststm32
board = genericSTM32F103VE

upload_protocol = stlink

----------------------------------------

TITLE: Configuring ST Nucleo F031K6 Board in PlatformIO
DESCRIPTION: Basic configuration for the ST Nucleo F031K6 board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_f031k6]
platform = ststm32
board = nucleo_f031k6

----------------------------------------

TITLE: Configuring Basic STM32F410RB Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F410RB board setup using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F410RB]
platform = ststm32
board = genericSTM32F410RB

----------------------------------------

TITLE: Overriding Default BPI-Bit Settings in PlatformIO Configuration
DESCRIPTION: This snippet demonstrates how to override default BPI-Bit settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:bpi-bit]
platform = espressif32
board = bpi-bit

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Upload Protocol Configuration for Electrosmith Daisy Petal SM
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:electrosmith_daisy_petal_sm]
platform = ststm32
board = electrosmith_daisy_petal_sm

upload_protocol = stlink

----------------------------------------

TITLE: Customizing oddWires IoT-Bus Proteus Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:iotbusproteus]
platform = espressif32
board = iotbusproteus

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Generic STC8H8K32U Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC8H8K32U board in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8H8K32U]
platform = intel_mcs51
board = STC8H8K32U

----------------------------------------

TITLE: Upload Protocol Configuration - PlatformIO INI
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:adafruit_hallowing]
platform = atmelsam
board = adafruit_hallowing

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring NXP i.MX RT1010 Evaluation Kit in platformio.ini
DESCRIPTION: Basic configuration for the NXP i.MX RT1010 Evaluation Kit in the project's platformio.ini file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:mimxrt1010_evk]
platform = nxpimxrt
board = mimxrt1010_evk

----------------------------------------

TITLE: Configuring Digilent Cerebot 32MX7 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Digilent Cerebot 32MX7 board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:cerebot32mx7]
platform = microchippic32
board = cerebot32mx7

; change microcontroller
board_build.mcu = 32MX795F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:trinket3]
platform = atmelavr
board = trinket3

; change microcontroller
board_build.mcu = attiny85

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring TI LaunchPad MSP-EXP430FR6989LP in PlatformIO
DESCRIPTION: This snippet shows how to configure the TI LaunchPad MSP-EXP430FR6989LP board in the PlatformIO project configuration file (platformio.ini). It sets the platform to timsp430 and the board to lpmsp430fr6989.

LANGUAGE: ini
CODE:
[env:lpmsp430fr6989]
platform = timsp430
board = lpmsp430fr6989

----------------------------------------

TITLE: Configuring Basic AVR64DD14 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for AVR64DD14 board using the atmelmegaavr platform.

LANGUAGE: ini
CODE:
[env:AVR64DD14]
platform = atmelmegaavr
board = AVR64DD14

----------------------------------------

TITLE: Setting Upload Protocol for STM32F411RC
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32F411RC board using serial communication.

LANGUAGE: ini
CODE:
[env:genericSTM32F411RC]
platform = ststm32
board = genericSTM32F411RC

upload_protocol = serial

----------------------------------------

TITLE: Configuring Basic RGB Station Board Environment
DESCRIPTION: Basic PlatformIO configuration for RGB Station board setup using the microchippic32 platform.

LANGUAGE: ini
CODE:
[env:rgb_station]
platform = microchippic32
board = rgb_station

----------------------------------------

TITLE: Customizing STC8H1K12 Board Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K12]
platform = intel_mcs51
board = STC8H1K12

; change microcontroller
board_build.mcu = stc8h1k12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic Arduino M0 Pro Board Settings
DESCRIPTION: Basic PlatformIO configuration for Arduino M0 Pro board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:mzeroproUSB]
platform = atmelsam
board = mzeroproUSB

----------------------------------------

TITLE: Basic PlatformIO Configuration for nRF52832 Feather
DESCRIPTION: Basic board configuration for PlatformIO environment settings. Specifies the platform and board ID for the Adafruit Bluefruit nRF52832 Feather.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52832]
platform = nordicnrf52
board = adafruit_feather_nrf52832

----------------------------------------

TITLE: Overriding Default Settings for Generic STC8A8K60S4A12
DESCRIPTION: Example of how to override default board settings in PlatformIO. This snippet demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8A8K60S4A12]
platform = intel_mcs51
board = STC8A8K60S4A12

; change microcontroller
board_build.mcu = stc8a8k60s4a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ST Nucleo F411RE board.

LANGUAGE: ini
CODE:
[env:nucleo_f411re]
platform = ststm32
board = nucleo_f411re

upload_protocol = stlink

----------------------------------------

TITLE: Customizing ATtiny806 Build Settings in PlatformIO
DESCRIPTION: Advanced INI configuration showing how to override default board settings like microcontroller type and CPU frequency for ATtiny806 projects.

LANGUAGE: ini
CODE:
[env:ATtiny806]
platform = atmelmegaavr
board = ATtiny806

; change microcontroller
board_build.mcu = attiny806

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring PlatformIO Project Structure with main folder
DESCRIPTION: Configuration example showing how to specify main as the source directory in platformio.ini for ESP-IDF projects.

LANGUAGE: ini
CODE:
[platformio]
src_dir = main

[env:esp32dev]
platform = platformio/espressif32
framework = espidf
board = esp32dev

----------------------------------------

TITLE: Configuring PlatformIO Environment for u-blox EVK-NINA-B1
DESCRIPTION: Basic PlatformIO configuration for setting up the build environment for the u-blox EVK-NINA-B1 board.

LANGUAGE: ini
CODE:
[env:ublox_evk_nina_b1]
platform = nordicnrf52
board = ublox_evk_nina_b1

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Minimal configuration required to use Arduino Tian board in PlatformIO environment settings.

LANGUAGE: ini
CODE:
[env:tian]
platform = atmelsam
board = tian

----------------------------------------

TITLE: Configuring Basic Arduino Mega ADK Board Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up an Arduino Mega ADK board environment.

LANGUAGE: ini
CODE:
[env:megaADK]
platform = atmelavr
board = megaADK

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC12C5A16S2
DESCRIPTION: Basic configuration for setting up a PlatformIO project targeting the STC12C5A16S2 board on the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC12C5A16S2]
platform = intel_mcs51
board = STC12C5A16S2

----------------------------------------

TITLE: Customizing Nordic nRF52840-DK Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nrf52840_dk]
platform = nordicnrf52
board = nrf52840_dk

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32
DESCRIPTION: Configuration example for specifying the upload protocol for the board, using ST-Link as the default option.

LANGUAGE: ini
CODE:
[env:st3dp001_eval]
platform = ststm32
board = st3dp001_eval

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic STM32F103VB Board Settings in PlatformIO
DESCRIPTION: Basic configuration for STM32F103VB board in platformio.ini to specify the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VB]
platform = ststm32
board = genericSTM32F103VB

----------------------------------------

TITLE: Customizing Adafruit Feather M0 Express Board Settings
DESCRIPTION: Example of overriding default board settings in the platformio.ini file. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m0_express]
platform = atmelsam
board = adafruit_feather_m0_express

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic Maple RET6 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the Maple RET6 board using the STM32 platform

LANGUAGE: ini
CODE:
[env:maple_ret6]
platform = ststm32
board = maple_ret6

----------------------------------------

TITLE: Configuring ATtiny406 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ATtiny406 board in the platformio.ini configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny406]
platform = atmelmegaavr
board = ATtiny406

; change microcontroller
board_build.mcu = attiny406

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Generic ATtiny167 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic ATtiny167 board in a PlatformIO project configuration file. It demonstrates setting the basic board type and platform, as well as how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:attiny167]
platform = atmelavr
board = attiny167

; change microcontroller
board_build.mcu = attiny167

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing DWM1001 Board Settings in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:dwm1001_dev]
platform = nordicnrf52
board = dwm1001_dev

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring SparkFun Qduino Mini Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the SparkFun Qduino Mini board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:sparkfun_qduinomini]
platform = atmelavr
board = sparkfun_qduinomini

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Generic STC15F205EA Board in PlatformIO
DESCRIPTION: This snippet shows how to set up the Generic STC15F205EA board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15F205EA]
platform = intel_mcs51
board = STC15F205EA

; change microcontroller
board_build.mcu = stc15f205ea

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO for Freescale Kinetis FRDM-K82F
DESCRIPTION: Basic PlatformIO configuration for the FRDM-K82F board. This snippet sets the platform and board ID in the project's configuration file.

LANGUAGE: ini
CODE:
[env:frdm_k82f]
platform = freescalekinetis
board = frdm_k82f

----------------------------------------

TITLE: Basic MKRZERO Board Configuration
DESCRIPTION: Minimal configuration required to set up a PlatformIO project for Arduino MKRZERO board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:mkrzero]
platform = atmelsam
board = mkrzero

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ST Nucleo F446ZE board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:nucleo_f446ze]
platform = ststm32
board = nucleo_f446ze

----------------------------------------

TITLE: Configuring Basic DevEBox H743VITX Board Settings
DESCRIPTION: Basic configuration for DevEBox H743VITX board in platformio.ini file, setting the platform and board type.

LANGUAGE: ini
CODE:
[env:devebox_h743vitx]
platform = ststm32
board = devebox_h743vitx

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Example configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:um_feathers2]
platform = espressif32
board = um_feathers2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing SparkFun SAMD51 Thing Plus Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_samd51_thing_plus]
platform = atmelsam
board = sparkfun_samd51_thing_plus

; change microcontroller
board_build.mcu = samd51j20a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:mb208]
platform = ststm8
board = mb208

upload_protocol = serial

----------------------------------------

TITLE: Basic STC15F102E Board Configuration in PlatformIO
DESCRIPTION: Basic configuration example for setting up an STC15F102E board environment in platformio.ini.

LANGUAGE: ini
CODE:
[env:STC15F102E]
platform = intel_mcs51
board = STC15F102E

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:STC8H1K32S2A10]
platform = intel_mcs51
board = STC8H1K32S2A10

; change microcontroller
board_build.mcu = stc8h1k32s2a10

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Adafruit ProxLight Trinkey M0
DESCRIPTION: Basic configuration settings to use the Adafruit ProxLight Trinkey M0 board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:adafruit_proxlighttrinkey_m0]
platform = atmelsam
board = adafruit_proxlighttrinkey_m0

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Circuit Playground Classic board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:circuitplay_classic]
platform = atmelavr
board = circuitplay_classic

----------------------------------------

TITLE: Customizing ATtiny861 Build Configuration
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for ATtiny861 board in PlatformIO.

LANGUAGE: ini
CODE:
[env:attiny861]
platform = atmelavr
board = attiny861

; change microcontroller
board_build.mcu = attiny861

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Hexiwear Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Hexiwear board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:hexiwear]
platform = freescalekinetis
board = hexiwear

; change microcontroller
board_build.mcu = mk64fn1m0vdc12

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Aceinna OpenIMU 300
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the Aceinna OpenIMU 300 board. It includes setting the platform and board ID.

LANGUAGE: ini
CODE:
[env:OpenIMU300]
platform = aceinna_imu
board = OpenIMU300

----------------------------------------

TITLE: Customizing Arduino Nicla Vision (M4 core) Board Settings
DESCRIPTION: Example of overriding default board settings in the platformio.ini file. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nicla_vision_m4]
platform = ststm32
board = nicla_vision_m4

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Advanced MS51BA9AE Board Configuration with Custom Settings
DESCRIPTION: Shows how to customize the MS51BA9AE board configuration by overriding default settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:MS51BA9AE]
platform = intel_mcs51
board = MS51BA9AE

; change microcontroller
board_build.mcu = ms51ba9ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Arduino Leonardo ETH Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino Leonardo ETH board in a PlatformIO project's configuration file. It demonstrates setting the board ID and overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:leonardoeth]
platform = atmelavr
board = leonardoeth

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced CH559 Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:CH559]
platform = intel_mcs51
board = CH559

; change microcontroller
board_build.mcu = ch559

; change MCU frequency
board_build.f_cpu = 12000000L

----------------------------------------

TITLE: Configuring Generic N78E517 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic N78E517 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:N78E517]
platform = intel_mcs51
board = N78E517

----------------------------------------

TITLE: Customizing ATtiny417 Build Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings such as microcontroller type and CPU frequency in the build environment.

LANGUAGE: ini
CODE:
[env:ATtiny417]
platform = atmelmegaavr
board = ATtiny417

; change microcontroller
board_build.mcu = attiny417

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol for the ST Nucleo L031K6 board.

LANGUAGE: ini
CODE:
[env:nucleo_l031k6]
platform = ststm32
board = nucleo_l031k6

upload_protocol = stlink

----------------------------------------

TITLE: Basic PlatformIO Configuration for FYSETC S6
DESCRIPTION: Minimal configuration required to use FYSETC S6 board in PlatformIO projects

LANGUAGE: ini
CODE:
[env:fysetc_s6]
platform = ststm32
board = fysetc_s6

----------------------------------------

TITLE: Configuring Basic Minitronics v2.0 Board Setup
DESCRIPTION: Basic configuration for setting up a Minitronics v2.0 board environment in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:minitronics20]
platform = atmelsam
board = minitronics20

----------------------------------------

TITLE: Sonoff S20 Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Sonoff S20 board

LANGUAGE: ini
CODE:
[env:sonoff_s20]
platform = espressif8266
board = sonoff_s20

upload_protocol = esptool

----------------------------------------

TITLE: Basic PlatformIO Configuration for Raspduino
DESCRIPTION: Basic environment configuration for BitWizard Raspduino board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:raspduino]
platform = atmelavr
board = raspduino

----------------------------------------

TITLE: Advanced STC8C1K12 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8C1K12]
platform = intel_mcs51
board = STC8C1K12

; change microcontroller
board_build.mcu = stc8c1k12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring SparkFun Fio V3 in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the SparkFun Fio V3 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:sparkfun_fiov3]
platform = atmelavr
board = sparkfun_fiov3

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring ST Nucleo L552ZE-Q Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo L552ZE-Q board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:nucleo_l552ze_q]
platform = ststm32
board = nucleo_l552ze_q

----------------------------------------

TITLE: Customizing STM32F103TB Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency using board_build options in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:genericSTM32F103TB]
platform = ststm32
board = genericSTM32F103TB

; change microcontroller
board_build.mcu = stm32f103tbu6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Basic Moteino M0 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Moteino M0 board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:moteino_zero]
platform = atmelsam
board = moteino_zero

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the u-blox C030-N211 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:ublox_c030_n211]
platform = ststm32
board = ublox_c030_n211

----------------------------------------

TITLE: Configuring Basic ATtiny1607 Board Settings in PlatformIO
DESCRIPTION: Basic configuration setup for ATtiny1607 board in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny1607]
platform = atmelmegaavr
board = ATtiny1607

----------------------------------------

TITLE: Setting Upload Protocol for Nordic Thingy:52
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Nordic Thingy:52 board, using JLink as the upload method.

LANGUAGE: ini
CODE:
[env:thingy_52]
platform = nordicnrf52
board = thingy_52

upload_protocol = jlink

----------------------------------------

TITLE: Configuring Generic ATtiny88 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Generic ATtiny88 board. It demonstrates setting the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:attiny88]
platform = atmelavr
board = attiny88

----------------------------------------

TITLE: Configuring Generic MS51XC0BE Board in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the Generic MS51XC0BE board in a PlatformIO project's configuration file. It shows the basic setup and how to override default board settings.

LANGUAGE: ini
CODE:
[env:MS51XC0BE]
platform = intel_mcs51
board = MS51XC0BE

; change microcontroller
board_build.mcu = ms51xc0be

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing ATtiny85 Board Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in platformio.ini.

LANGUAGE: ini
CODE:
[env:attiny85]
platform = atmelavr
board = attiny85

; change microcontroller
board_build.mcu = attiny85

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Lion:Bit S3 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Lion:Bit S3 STEM Dev Board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lionbits3]
platform = espressif32
board = lionbits3

----------------------------------------

TITLE: Configuring Basic STM32-H407 Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32-H407 board setup using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:olimex_h407]
platform = ststm32
board = olimex_h407

----------------------------------------

TITLE: Defining Custom Macros in PlatformIO Library Configuration
DESCRIPTION: This snippet demonstrates how to add custom macros or defines to a PlatformIO library build. It sets a library revision number and a RELEASE flag.

LANGUAGE: javascript
CODE:
"build": {
    "flags": "-D MYLIB_REV=1.2.3 -DRELEASE"
}

----------------------------------------

TITLE: Customizing Board Settings for nicai-systems NIBObee robot
DESCRIPTION: This snippet demonstrates how to override default board settings for the nicai-systems NIBObee robot with Tuning Kit. It shows examples of changing the microcontroller and MCU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:nibobee_1284]
platform = atmelavr
board = nibobee_1284

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 20000000L

----------------------------------------

TITLE: Configuring Advanced chipKIT DP32 Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:chipkit_dp32]
platform = microchippic32
board = chipkit_dp32

; change microcontroller
board_build.mcu = 32MX250F128B

; change MCU frequency
board_build.f_cpu = 40000000L

----------------------------------------

TITLE: Customizing nRF51 DK MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the nRF51 DK board.

LANGUAGE: ini
CODE:
[env:nrf51_dk]
platform = nordicnrf51
board = nrf51_dk

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Customizing Generic ATtiny84 Board Settings in PlatformIO
DESCRIPTION: This code snippet demonstrates how to override default settings for the Generic ATtiny84 board in the PlatformIO project configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:attiny84]
platform = atmelavr
board = attiny84

; change microcontroller
board_build.mcu = attiny84

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Advanced STC8H1K33 Board Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K33]
platform = intel_mcs51
board = STC8H1K33

; change microcontroller
board_build.mcu = stc8h1k33

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for Sino:Bit in PlatformIO INI File
DESCRIPTION: This snippet shows how to set the upload protocol for the Sino:Bit board in the PlatformIO configuration. It sets the protocol to jlink.

LANGUAGE: ini
CODE:
[env:Sinobit]
platform = nordicnrf51
board = Sinobit

upload_protocol = jlink

----------------------------------------

TITLE: Customizing Microduino Core MCU Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in platformio.ini.

LANGUAGE: ini
CODE:
[env:328p16m]
platform = atmelavr
board = 328p16m

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Aceinna OpenRTK330L Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:OpenRTK330L]
platform = aceinna_imu
board = OpenRTK330L

; change microcontroller
board_build.mcu = stm32f469IG

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Configuring PlatformIO for ST Nucleo F303K8
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo F303K8 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_f303k8]
platform = ststm32
board = nucleo_f303k8

----------------------------------------

TITLE: WiFi Slot Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the WiFi Slot board, using esptool as the upload method.

LANGUAGE: ini
CODE:
[env:wifi_slot]
platform = espressif8266
board = wifi_slot

upload_protocol = esptool

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15W4K32S4]
platform = intel_mcs51
board = STC15W4K32S4

; change microcontroller
board_build.mcu = stc15w4k32s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for IAP15W413AS
DESCRIPTION: Basic configuration setup for IAP15W413AS board in platformio.ini project file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:IAP15W413AS]
platform = intel_mcs51
board = IAP15W413AS

----------------------------------------

TITLE: Basic MagicBit Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for MagicBit ESP32 board setup.

LANGUAGE: ini
CODE:
[env:magicbit]
platform = espressif32
board = magicbit

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H3K32S2]
platform = intel_mcs51
board = STC8H3K32S2

; change microcontroller
board_build.mcu = stc8h3k32s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for PX-HER0
DESCRIPTION: Example showing how to configure the upload protocol for the PX-HER0 board, using ST-Link as the default option

LANGUAGE: ini
CODE:
[env:piconomix_px_her0]
platform = ststm32
board = piconomix_px_her0

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to use the Aceinna Low Cost RTK board in a PlatformIO project environment.

LANGUAGE: ini
CODE:
[env:LowCostRTK]
platform = aceinna_imu
board = LowCostRTK

----------------------------------------

TITLE: Basic PlatformIO Configuration for SparkFun Makey Makey
DESCRIPTION: Basic environment configuration for SparkFun Makey Makey board in platformio.ini file. Sets up the platform and board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_makeymakey]\nplatform = atmelavr\nboard = sparkfun_makeymakey

----------------------------------------

TITLE: Configuring Digilent chipKIT WiFire Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Digilent chipKIT WiFire board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:chipkit_wifire]
platform = microchippic32
board = chipkit_wifire

; change microcontroller
board_build.mcu = 32MZ2048ECG100

; change MCU frequency
board_build.f_cpu = 200000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the CubeCell-Board Plus

LANGUAGE: ini
CODE:
[env:cubecell_board_plus]
platform = heltec-cubecell
board = cubecell_board_plus

; change microcontroller
board_build.mcu = asr6502

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the ST Nucleo L152RE board.

LANGUAGE: ini
CODE:
[env:nucleo_l152re]
platform = ststm32
board = nucleo_l152re

upload_protocol = stlink

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for BluePill F103C8 board using the STM32 platform

LANGUAGE: ini
CODE:
[env:bluepill_f103c8]
platform = ststm32
board = bluepill_f103c8

----------------------------------------

TITLE: Customizing Board MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the PHYTEC reel board v2.

LANGUAGE: ini
CODE:
[env:reel_board_v2]
platform = nordicnrf52
board = reel_board_v2

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:ublox_c030_n211]
platform = ststm32
board = ublox_c030_n211

upload_protocol = mbed

----------------------------------------

TITLE: Initializing Basic ATmega3209 Board Configuration in PlatformIO
DESCRIPTION: Basic INI configuration for setting up an ATmega3209 board project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega3209]
platform = atmelmegaavr
board = ATmega3209

----------------------------------------

TITLE: Setting Upload Protocol for Makerdiary nRF52840-MDK
DESCRIPTION: Configuration to specify the upload protocol for the Makerdiary nRF52840-MDK board. This example sets it to CMSIS-DAP.

LANGUAGE: ini
CODE:
[env:nrf52840_mdk]
platform = nordicnrf52
board = nrf52840_mdk

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Configuring Basic ATtiny828 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ATtiny828 board using the atmelavr platform. Sets up the minimal required environment settings.

LANGUAGE: ini
CODE:
[env:attiny828]
platform = atmelavr
board = attiny828

----------------------------------------

TITLE: Overriding Default Arduino LilyPad USB Settings
DESCRIPTION: This example demonstrates how to override default board settings in a PlatformIO project. It changes the microcontroller to atmega32u4 and sets the MCU frequency to 8MHz.

LANGUAGE: ini
CODE:
[env:LilyPadUSB]
platform = atmelavr
board = LilyPadUSB

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol for Smart Bee Motion Mini
DESCRIPTION: This snippet shows how to specify the upload protocol for the Smart Bee Motion Mini board in PlatformIO configuration. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:bee_motion_mini]
platform = espressif32
board = bee_motion_mini

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for sakura.io Evaluation Board
DESCRIPTION: Configuration to change the upload protocol for the sakura.io Evaluation Board. The example sets it to 'mbed', which is also the default protocol.

LANGUAGE: ini
CODE:
[env:sakuraio_evb_01]
platform = ststm32
board = sakuraio_evb_01

upload_protocol = mbed

----------------------------------------

TITLE: Customizing chipKIT WF32 MCU and Clock Settings
DESCRIPTION: Extended configuration demonstrating how to override default microcontroller and CPU frequency settings for the chipKIT WF32 board.

LANGUAGE: ini
CODE:
[env:chipkit_wf32]
platform = microchippic32
board = chipkit_wf32

; change microcontroller
board_build.mcu = 32MX695F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for MAX32600mbed Board in PlatformIO INI File
DESCRIPTION: Configuration to specify the upload protocol for the MAX32600mbed board, using the mbed protocol as an example.

LANGUAGE: ini
CODE:
[env:max32600mbed]
platform = maxim32
board = max32600mbed

upload_protocol = mbed

----------------------------------------

TITLE: Setting Upload Protocol for SEGGER IP Switch Board
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the SEGGER IP Switch Board in the PlatformIO project configuration. The board supports 'jlink' and 'mbed' protocols, with 'jlink' as the default.

LANGUAGE: ini
CODE:
[env:segger_ip_switch]
platform = freescalekinetis
board = segger_ip_switch

upload_protocol = jlink

----------------------------------------

TITLE: Advanced MS51FC0AE Board Configuration with Custom Settings
DESCRIPTION: Shows how to customize the board configuration by overriding default settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:MS51FC0AE]
platform = intel_mcs51
board = MS51FC0AE

; change microcontroller
board_build.mcu = ms51fc0ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for ATmega88P
DESCRIPTION: Base configuration for setting up an ATmega88P project in PlatformIO using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ATmega88P]
platform = atmelavr
board = ATmega88P

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the STC8H4K32TLCD board.

LANGUAGE: ini
CODE:
[env:STC8H4K32TLCD]
platform = intel_mcs51
board = STC8H4K32TLCD

; change microcontroller
board_build.mcu = stc8h4k32tlcd

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Teensy 3.0 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Teensy 3.0 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:teensy30]
platform = teensy
board = teensy30

----------------------------------------

TITLE: Configuring Basic MKR GSM 1400 Board Settings
DESCRIPTION: Basic PlatformIO configuration for Arduino MKR GSM 1400 board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:mkrgsm1400]
platform = atmelsam
board = mkrgsm1400

----------------------------------------

TITLE: Upload Protocol Configuration for FRDM-KL43Z
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:frdm_kl43z]
platform = freescalekinetis
board = frdm_kl43z

upload_protocol = mbed

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F303K8
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo F303K8 board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:nucleo_f303k8]
platform = ststm32
board = nucleo_f303k8

upload_protocol = stlink

----------------------------------------

TITLE: Customizing TAMC Termod S3 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:tamc_termod_s3]
platform = espressif32
board = tamc_termod_s3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic ATmega48PB Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega48PB board project in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega48PB]
platform = atmelavr
board = ATmega48PB

----------------------------------------

TITLE: Setting Upload Protocol for STM32F411RE
DESCRIPTION: This configuration snippet demonstrates how to set the upload protocol for the STM32F411RE board in a PlatformIO project. The default protocol is 'serial', but this can be changed as shown.

LANGUAGE: ini
CODE:
[env:genericSTM32F411RE]
platform = ststm32
board = genericSTM32F411RE

upload_protocol = serial

----------------------------------------

TITLE: Configuring PlatformIO Environment for Generic IRC15W1K31S
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the Generic IRC15W1K31S board. It sets the platform and board ID, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:IRC15W1K31S]
platform = intel_mcs51
board = IRC15W1K31S

; change microcontroller
board_build.mcu = irc15w1k31s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring SODAQ SFF Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the SODAQ SFF board in a PlatformIO project's configuration file. It sets the platform to atmelsam and the board to sodaq_sff.

LANGUAGE: ini
CODE:
[env:sodaq_sff]
platform = atmelsam
board = sodaq_sff

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:mkrvidor4000]
platform = atmelsam
board = mkrvidor4000

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic OpenIMU300ZA Board Settings
DESCRIPTION: Basic PlatformIO configuration for the OpenIMU300ZA board using the aceinna_imu platform.

LANGUAGE: ini
CODE:
[env:OpenIMU300ZA]
platform = aceinna_imu
board = OpenIMU300ZA

----------------------------------------

TITLE: Configuring SparkFun RED-V RedBoard in PlatformIO
DESCRIPTION: This snippet shows how to configure the SparkFun RED-V RedBoard in a PlatformIO project's configuration file. It demonstrates setting the board ID and platform, as well as how to override default board settings.

LANGUAGE: ini
CODE:
[env:sparkfun_redboard_v]
platform = sifive
board = sparkfun_redboard_v

; change microcontroller
board_build.mcu = fe310

; change MCU frequency
board_build.f_cpu = 320000000L

----------------------------------------

TITLE: Configuring Base TinyLily Board Environment
DESCRIPTION: Basic PlatformIO configuration for the TinyLily board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:tinylily]
platform = atmelavr
board = tinylily

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings

LANGUAGE: ini
CODE:
[env:mimxrt1020_evk]
platform = nxpimxrt
board = mimxrt1020_evk

; change microcontroller
board_build.mcu = mimxrt1021dag5a

; change MCU frequency
board_build.f_cpu = 500000000L

----------------------------------------

TITLE: Configuring Adafruit NeoKey Trinkey Board in PlatformIO
DESCRIPTION: This code snippet shows how to configure the Adafruit NeoKey Trinkey board in a PlatformIO project's configuration file. It sets the platform and board name, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_neokeytrinkey_m0]
platform = atmelsam
board = adafruit_neokeytrinkey_m0

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing STC15F2K48S2 Board Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K48S2]
platform = intel_mcs51
board = STC15F2K48S2

; change microcontroller
board_build.mcu = stc15f2k48s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller settings including MCU model and frequency.

LANGUAGE: ini
CODE:
[env:mbed_connect_odin]
platform = ststm32
board = mbed_connect_odin

; change microcontroller
board_build.mcu = stm32f439ziy6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO project for the FRDM-KW24D512 board using the freescalekinetis platform.

LANGUAGE: ini
CODE:
[env:frdm_kw24d]
platform = freescalekinetis
board = frdm_kw24d

----------------------------------------

TITLE: Customizing ATtiny2313 Board Parameters
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:attiny2313]
platform = atmelavr
board = attiny2313

; change microcontroller
board_build.mcu = attiny2313

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic ATmega6490P Board Environment
DESCRIPTION: Basic PlatformIO configuration for ATmega6490P board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:ATmega6490P]
platform = atmelavr
board = ATmega6490P

----------------------------------------

TITLE: Configuring RedBearLab Blend 2 Board in PlatformIO
DESCRIPTION: Basic configuration for the RedBearLab Blend 2 board in a PlatformIO project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:redbear_blend2]
platform = nordicnrf52
board = redbear_blend2

----------------------------------------

TITLE: Configuring Basic ATmega48PB Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega48PB board project in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega48PB]
platform = atmelavr
board = ATmega48PB

----------------------------------------

TITLE: Custom ATtiny814 Board Configuration in PlatformIO
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:ATtiny814]
platform = atmelmegaavr
board = ATtiny814

; change microcontroller
board_build.mcu = attiny814

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8G2K16S2
DESCRIPTION: Basic configuration example for setting up an STC8G2K16S2 board project in PlatformIO using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8G2K16S2]
platform = intel_mcs51
board = STC8G2K16S2

----------------------------------------

TITLE: Customizing Raspberry Pi 2 Model B Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Raspberry Pi 2 Model B in a PlatformIO project. It shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:raspberrypi_2b]
platform = linux_arm
board = raspberrypi_2b

; change microcontroller
board_build.mcu = bcm2836

; change MCU frequency
board_build.f_cpu = 900000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:ttgo-t7-v13-mini32]
platform = espressif32
board = ttgo-t7-v13-mini32

upload_protocol = esptool

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Pinaka board.

LANGUAGE: ini
CODE:
[env:pinaka]
platform = shakti
board = pinaka

upload_protocol = ftdi

----------------------------------------

TITLE: Setting Upload Protocol for Maxim Wireless Sensor Node Demonstrator
DESCRIPTION: Configuration to change the upload protocol for the Maxim Wireless Sensor Node Demonstrator board to 'mbed' in platformio.ini.

LANGUAGE: ini
CODE:
[env:maxwsnenv]
platform = maxim32
board = maxwsnenv

upload_protocol = mbed

----------------------------------------

TITLE: Customizing Alorium Sno MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the Alorium Sno board.

LANGUAGE: ini
CODE:
[env:alorium_sno]
platform = atmelavr
board = alorium_sno

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic IAP15W4K58S4 Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic IAP15W4K58S4 board using the Intel MCS-51 platform. It demonstrates setting the board ID and platform in the project configuration file.

LANGUAGE: ini
CODE:
[env:IAP15W4K58S4]
platform = intel_mcs51
board = IAP15W4K58S4

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8H4K64LCD
DESCRIPTION: Basic INI configuration for setting up an STC8H4K64LCD board project in PlatformIO.

LANGUAGE: ini
CODE:
[env:STC8H4K64LCD]
platform = intel_mcs51
board = STC8H4K64LCD

----------------------------------------

TITLE: Configuring PlatformIO Project for TI LaunchPad MSP-EXP430FR2476LP
DESCRIPTION: This code snippet demonstrates how to configure a PlatformIO project for the TI LaunchPad MSP-EXP430FR2476LP board. It sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:lpmsp430fr2476]
platform = timsp430
board = lpmsp430fr2476

----------------------------------------

TITLE: Setting Upload Protocol for Teensy LC in PlatformIO INI File
DESCRIPTION: Shows how to specify the upload protocol for Teensy LC in the platformio.ini file. The example sets the protocol to 'teensy-gui'.

LANGUAGE: ini
CODE:
[env:teensylc]
platform = teensy
board = teensylc

upload_protocol = teensy-gui

----------------------------------------

TITLE: Upload Protocol Configuration for FRDM-KW41Z
DESCRIPTION: Example showing how to configure the upload protocol for the FRDM-KW41Z board. The board supports cmsis-dap, jlink, and mbed protocols.

LANGUAGE: ini
CODE:
[env:frdm_kw41z]
platform = freescalekinetis
board = frdm_kw41z

upload_protocol = mbed

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F446RE
DESCRIPTION: Configuration example for changing the upload protocol to ST-Link for the ST Nucleo F446RE board.

LANGUAGE: ini
CODE:
[env:nucleo_f446re]
platform = ststm32
board = nucleo_f446re

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Elektor F072CB Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Elektor LoRa Node Core F072C8 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:elektor_f072cb]
platform = ststm32
board = elektor_f072cb

; change microcontroller
board_build.mcu = stm32f072c8t6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Stable Nordic nRF51 Platform
DESCRIPTION: Configuration examples for using stable releases of the Nordic nRF51 platform in PlatformIO projects.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = nordicnrf51
board = ...

; Specific version
[env:custom_stable]
platform = nordicnrf51@x.y.z
board = ...

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency. Demonstrates customization of board-specific parameters.

LANGUAGE: ini
CODE:
[env:IRC15W207S]
platform = intel_mcs51
board = IRC15W207S

; change microcontroller
board_build.mcu = irc15w207s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced STC8F1K08S2A10 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration for STC8F1K08S2A10 board with custom microcontroller and frequency settings. Demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC8F1K08S2A10]
platform = intel_mcs51
board = STC8F1K08S2A10

; change microcontroller
board_build.mcu = stc8f1k08s2A10

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing MSP430G2231 Board Parameters
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:lpmsp430g2231]
platform = timsp430
board = lpmsp430g2231

; change microcontroller
board_build.mcu = msp430g2231

; change MCU frequency
board_build.f_cpu = 1000000L

----------------------------------------

TITLE: Configuring Example Patterns in PlatformIO (JavaScript)
DESCRIPTION: This snippet demonstrates how to configure the 'examples' field in a PlatformIO project. It shows a default configuration with two example patterns: 'Hello' and 'Blink'. Each example specifies a name, base directory, and list of files to include.

LANGUAGE: javascript
CODE:
"examples": [
    {
        "name": "Hello",
        "base": "examples/world",
        "files": [
            "platformio.ini",
            "include/world.h",
            "src/world.c",
            "README",
            "extra.py"
        ]
    },
    {
        "name": "Blink",
        "base": "examples/blink",
        "files": ["blink.cpp", "blink.h"]
    }
]

----------------------------------------

TITLE: Setting Upload Protocol for Lilka v2
DESCRIPTION: Configuration to specify the upload protocol for the Lilka v2 board, using esptool as an example.

LANGUAGE: ini
CODE:
[env:lilka_v2]
platform = espressif32
board = lilka_v2

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Adafruit Trinket 5V/16MHz
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Adafruit Trinket 5V/16MHz board. It sets the platform to atmelavr and the board to trinket5.

LANGUAGE: ini
CODE:
[env:trinket5]
platform = atmelavr
board = trinket5

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration for Pinaka board including microcontroller and frequency settings customization.

LANGUAGE: ini
CODE:
[env:pinaka]
platform = shakti
board = pinaka

; change microcontroller
board_build.mcu = E-Class

; change MCU frequency
board_build.f_cpu = 50000000L

----------------------------------------

TITLE: Customizing BluePill F103C8 (128k) Board Settings
DESCRIPTION: Example of overriding default board settings in the project configuration. It demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:bluepill_f103c8_128k]
platform = ststm32
board = bluepill_f103c8_128k

; change microcontroller
board_build.mcu = stm32f103c8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8A4K16S2A12
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic STC8A4K16S2A12 board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8A4K16S2A12]
platform = intel_mcs51
board = STC8A4K16S2A12

----------------------------------------

TITLE: Setting Upload Protocol for Gnat-L082CZ
DESCRIPTION: Configuration to change the upload protocol for the Gnat-L082CZ board, with DFU as an example.

LANGUAGE: ini
CODE:
[env:gnat_l082cz]
platform = ststm32
board = gnat_l082cz

upload_protocol = dfu

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: INI configuration demonstrating how to specify the upload protocol for the SparkFun MicroMod Teensy board.

LANGUAGE: ini
CODE:
[env:teensymm]
platform = teensy
board = teensymm

upload_protocol = teensy-gui

----------------------------------------

TITLE: Configuring Basic PlatformIO Environment for Microduino Core
DESCRIPTION: Basic PlatformIO configuration to set up a build environment for the Microduino Core board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:168pa16m]
platform = atmelavr
board = 168pa16m

----------------------------------------

TITLE: Setting Upload Protocol for FRDM-KL46Z in PlatformIO
DESCRIPTION: Configuration snippet showing how to set the upload protocol for the FRDM-KL46Z board. In this example, it's set to 'mbed'.

LANGUAGE: ini
CODE:
[env:frdm_kl46z]
platform = freescalekinetis
board = frdm_kl46z

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Calliope Mini v3 Board in PlatformIO
DESCRIPTION: Basic configuration for the Calliope Mini v3 board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:calliopemini_v3]
platform = nordicnrf52
board = calliopemini_v3

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the TI LaunchPad Tiva C board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lptm4c1294ncpdt]
platform = titiva
board = lptm4c1294ncpdt

----------------------------------------

TITLE: Basic WiFi Slot Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up a WiFi Slot board project in PlatformIO using the espressif8266 platform.

LANGUAGE: ini
CODE:
[env:wifi_slot]
platform = espressif8266
board = wifi_slot

----------------------------------------

TITLE: RST Documentation Structure for Build Options
DESCRIPTION: ReStructuredText documentation skeleton outlining the build configuration options available in PlatformIO projects. Includes a table of contents tree with links to individual build option documentation pages.

LANGUAGE: rst
CODE:
.. _projectconf_section_env_build:

Build options
-------------

.. toctree::
    :maxdepth: 1

    build_type
    build_flags
    build_src_flags
    build_unflags
    build_src_filter
    targets

----------------------------------------

TITLE: Configuring Basic Artix-7 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an Artix-7 35T project environment in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:artix7_35t]
platform = shakti
board = artix7_35t

----------------------------------------

TITLE: Customizing SLSTK3701A Giant Gecko S1 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:efm32gg11_stk3701]
platform = siliconlabsefm32
board = efm32gg11_stk3701

; change microcontroller
board_build.mcu = efm32gg11b820f2048gl192

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic Board Configuration for IAP15F106
DESCRIPTION: Basic PlatformIO configuration for setting up the IAP15F106 board with the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:IAP15F106]
platform = intel_mcs51
board = IAP15F106

----------------------------------------

TITLE: Configuring Basic IAP15W105 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the IAP15W105 board in the PlatformIO project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:IAP15W105]
platform = intel_mcs51
board = IAP15W105

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration specifying STLink V2.1 as the upload protocol for NUCLEO-8S208RB board

LANGUAGE: ini
CODE:
[env:nucleo_8s208rb]
platform = ststm8
board = nucleo_8s208rb

upload_protocol = stlinkv21

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:cubecell_module_v2]
platform = heltec-cubecell
board = cubecell_module_v2

; change microcontroller
board_build.mcu = asr6501

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo L031K6 board.

LANGUAGE: ini
CODE:
[env:nucleo_l031k6]
platform = ststm32
board = nucleo_l031k6

; change microcontroller
board_build.mcu = stm32l031k6t6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Customizing Aceinna OpenIMU 330 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:OpenIMU330]
platform = aceinna_imu
board = OpenIMU330

; change microcontroller
board_build.mcu = stm32l431cb

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic ML51TC1AE Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO project environment for the ML51TC1AE board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:ML51TC1AE]
platform = intel_mcs51
board = ML51TC1AE

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended INI configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H4K64LCD]
platform = intel_mcs51
board = STC8H4K64LCD

; change microcontroller
board_build.mcu = stc8h4k64lcd

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example of overriding default board settings to customize the microcontroller and CPU frequency through the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:disco_f334c8]
platform = ststm32
board = disco_f334c8

; change microcontroller
board_build.mcu = stm32f334c8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Multiple Section Extension Behavior in PlatformIO
DESCRIPTION: Illustrates how the extends option handles multiple sections, specifically showing that values from latter sections override earlier ones rather than merging.

LANGUAGE: ini
CODE:
[base]
platform = teensy
framework = arduino
board = teensy31

[lib_deps1]
lib_deps =
    monstrenyatko/ArduinoMqtt @ ^1.5.1
    bblanchon/ArduinoJson @ ^6.18.3
    knolleary/PubSubClient @ ^2.8

[lib_deps2]
lib_deps =
    sstaub/Ticker @ ^4.3.0
    thijse/ArduinoLog @ ^1.1.1
    adafruit/RTClib @ ^1.14.0

[env:final]
extends = base, lib_deps1, lib_deps2

----------------------------------------

TITLE: Configuring Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol (mbed or jlink) for the board.

LANGUAGE: ini
CODE:
[env:frdm_kw24d]
platform = freescalekinetis
board = frdm_kw24d

upload_protocol = mbed

----------------------------------------

TITLE: Setting Upload Protocol for Vajra Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set the upload protocol for the Vajra board in a PlatformIO project. It sets the protocol to FTDI.

LANGUAGE: ini
CODE:
[env:vajra]
platform = shakti
board = vajra

upload_protocol = ftdi

----------------------------------------

TITLE: Configuring ATmega6490 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega6490 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATmega6490]
platform = atmelavr
board = ATmega6490

; change microcontroller
board_build.mcu = atmega6490

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F408AD]
platform = intel_mcs51
board = STC15F408AD

; change microcontroller
board_build.mcu = stc15f408ad

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for 1Bitsy STM32F415RGT
DESCRIPTION: Configuration to specify the upload protocol for the 1Bitsy board. This example uses the default 'blackmagic' protocol.

LANGUAGE: ini
CODE:
[env:1bitsy_stm32f415rgt]
platform = ststm32
board = 1bitsy_stm32f415rgt

upload_protocol = blackmagic

----------------------------------------

TITLE: Configuring Upload Protocol in platformio.ini
DESCRIPTION: Configuration example for using CMSIS-DAP as upload protocol in project configuration file

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = cmsis-dap
upload_protocol = cmsis-dap

----------------------------------------

TITLE: Customizing Sanguino ATmega644 Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sanguino_atmega644]
platform = atmelavr
board = sanguino_atmega644

; change microcontroller
board_build.mcu = atmega644

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:featheresp32-s2]
platform = espressif32
board = featheresp32-s2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F105E]
platform = intel_mcs51
board = STC15F105E

; change microcontroller
board_build.mcu = stc15f105e

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for hackaBLE Board
DESCRIPTION: Configuration example showing how to specify the upload protocol for the hackaBLE board, using JLink as the protocol.

LANGUAGE: ini
CODE:
[env:hackaBLE]
platform = nordicnrf52
board = hackaBLE

upload_protocol = jlink

----------------------------------------

TITLE: Customizing AVR32DA32 Build Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for AVR32DA32 board

LANGUAGE: ini
CODE:
[env:AVR32DA32]
platform = atmelmegaavr
board = AVR32DA32

; change microcontroller
board_build.mcu = avr32da32

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Board in PlatformIO
DESCRIPTION: The 'board' option is a string that specifies the ID of the target board. It allows PlatformIO to use pre-configured settings for popular boards, including build, upload, debugging, and connectivity configurations. Valid board IDs can be found in the boards catalog, Boards Explorer, or using the 'boards' command.

LANGUAGE: ini
CODE:
board = "board_id"

----------------------------------------

TITLE: Customizing Teensy LC Board Settings in PlatformIO INI File
DESCRIPTION: Demonstrates how to override default Teensy LC settings in the platformio.ini file. Shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:teensylc]
platform = teensy
board = teensylc

; change microcontroller
board_build.mcu = mkl26z64

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Olimex ARM-USB-TINY-H Upload Protocol in platformio.ini
DESCRIPTION: Example configuration for using the Olimex ARM-USB-TINY-H as the upload protocol in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = olimex-arm-usb-tiny-h
upload_protocol = olimex-arm-usb-tiny-h

----------------------------------------

TITLE: Configuring Basic IAP12C5A62S2 Board Environment
DESCRIPTION: Basic PlatformIO configuration for setting up the IAP12C5A62S2 board environment.

LANGUAGE: ini
CODE:
[env:IAP12C5A62S2]
platform = intel_mcs51
board = IAP12C5A62S2

----------------------------------------

TITLE: Advanced ML51TD1AE Board Configuration
DESCRIPTION: Extended PlatformIO configuration for ML51TD1AE board with custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ML51TD1AE]
platform = intel_mcs51
board = ML51TD1AE

; change microcontroller
board_build.mcu = ml51td1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol for Seeed Arch Max
DESCRIPTION: Configuration to specify the upload protocol for the Seeed Arch Max board. This example sets the protocol to mbed.

LANGUAGE: ini
CODE:
[env:seeedArchMax]
platform = ststm32
board = seeedArchMax

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Basic LilyPad ATmega168 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Arduino LilyPad ATmega168 board in a PlatformIO project environment. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:lilypadatmega168]
platform = atmelavr
board = lilypadatmega168

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:644pa8m]
platform = atmelavr
board = 644pa8m

; change microcontroller
board_build.mcu = atmega644p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Advanced ML51TC1AE Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO environment.

LANGUAGE: ini
CODE:
[env:ML51TC1AE]
platform = intel_mcs51
board = ML51TC1AE

; change microcontroller
board_build.mcu = ml51tc1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Arduino Pro Mini board setting the platform and board type.

LANGUAGE: ini
CODE:
[env:pro16MHzatmega328]
platform = atmelavr
board = pro16MHzatmega328

----------------------------------------

TITLE: Customizing STM32F103C4 MCU Settings
DESCRIPTION: Example showing how to override default microcontroller settings including MCU model and frequency

LANGUAGE: ini
CODE:
[env:genericSTM32F103C4]
platform = ststm32
board = genericSTM32F103C4

; change microcontroller
board_build.mcu = stm32f103c4t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing FRDM-KL46Z Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:frdm_kl46z]
platform = freescalekinetis
board = frdm_kl46z

; change microcontroller
board_build.mcu = mkl46z256vll4

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Initializing PlatformIO Project for Sublime Text
DESCRIPTION: Command to generate a PlatformIO project configured for Sublime Text IDE. This example creates a project for Arduino UNO board.

LANGUAGE: shell
CODE:
pio project init --ide sublimetext --board uno

----------------------------------------

TITLE: Setting Upload Protocol for Generic AT89S51 in PlatformIO INI
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Generic AT89S51 board in the PlatformIO project configuration file. The default protocol is 'avrdude', but it can be changed to other supported protocols like 'avrisp' or 'usbasp'.

LANGUAGE: ini
CODE:
[env:AT89S51]
platform = intel_mcs51
board = AT89S51

upload_protocol = avrdude

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol (stlink) for the P-Nucleo WB55RG board in PlatformIO.

LANGUAGE: ini
CODE:
[env:nucleo_wb55rg_p]
platform = ststm32
board = nucleo_wb55rg_p

upload_protocol = stlink

----------------------------------------

TITLE: Advanced STC15F102E Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F102E]
platform = intel_mcs51
board = STC15F102E

; change microcontroller
board_build.mcu = stc15f102e

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic Arduino Uno Environment in PlatformIO
DESCRIPTION: Basic configuration for Arduino Uno board in PlatformIO's project configuration file. Sets up the platform and board type.

LANGUAGE: ini
CODE:
[env:uno]
platform = atmelavr
board = uno

----------------------------------------

TITLE: Configuring JTAG-HS1 Debug Tool in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the JTAG-HS1 debugging tool in the PlatformIO project configuration file. It sets the debug_tool option to use JTAG-HS1.

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = digilent-hs1

----------------------------------------

TITLE: Advanced WildFire V2 Board Configuration with Custom Settings
DESCRIPTION: Extended INI configuration demonstrating how to override default board settings like microcontroller type and CPU frequency for the WildFire V2 board.

LANGUAGE: ini
CODE:
[env:wildfirev2]
platform = atmelavr
board = wildfirev2

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended environment configuration with custom microcontroller and frequency settings for ML51BB9AE board

LANGUAGE: ini
CODE:
[env:ML51BB9AE]
platform = intel_mcs51
board = ML51BB9AE

; change microcontroller
board_build.mcu = ml51bb9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for Holyiot YJ-16019 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:holyiot_yj16019]
platform = nordicnrf52
board = holyiot_yj16019

----------------------------------------

TITLE: Configuring PlatformIO Environment for HelvePic32
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the HelvePic32 board. It specifies the platform and board ID to use.

LANGUAGE: ini
CODE:
[env:helvepic32]
platform = microchippic32
board = helvepic32

----------------------------------------

TITLE: Configuring Digilent chipKIT UNO32 in PlatformIO
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Digilent chipKIT UNO32 board. It demonstrates setting the board ID and platform, as well as how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:uno_pic32]
platform = microchippic32
board = uno_pic32

; change microcontroller
board_build.mcu = 32MX320F128H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Initializing PlatformIO Project for Arduino Uno
DESCRIPTION: This command initializes a new PlatformIO project for the Arduino Uno board in the Codeanywhere SSH terminal.

LANGUAGE: bash
CODE:
pio project init --board uno

----------------------------------------

TITLE: Defining Unflags in PlatformIO Configuration
DESCRIPTION: The 'unflags' option is used to remove base or initial flags set by the development platform. It can be specified as either a string or an array in the project configuration.

LANGUAGE: ini
CODE:
unflags = -flag1 -flag2

LANGUAGE: ini
CODE:
unflags = 
    -flag1
    -flag2

----------------------------------------

TITLE: Configuring Generic AT89S51 Board in PlatformIO INI
DESCRIPTION: This snippet shows how to configure the Generic AT89S51 board in the PlatformIO project configuration file. It includes options for specifying the board, platform, and overriding default settings.

LANGUAGE: ini
CODE:
[env:AT89S51]
platform = intel_mcs51
board = AT89S51

; change microcontroller
board_build.mcu = at89s51

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic MS51XB9AE Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up an MS51XB9AE board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:MS51XB9AE]
platform = intel_mcs51
board = MS51XB9AE

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:b96b_aerocore2]
platform = ststm32
board = b96b_aerocore2

upload_protocol = dfu

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for the STC15W104 board using the intel_mcs51 platform in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC15W104]
platform = intel_mcs51
board = STC15W104

----------------------------------------

TITLE: Configuring File Inclusion for PlatformIO Export in JavaScript
DESCRIPTION: This snippet demonstrates how to use the 'include' option in the export configuration to specify which files should be included in the export. It uses glob patterns to match file names and directories.

LANGUAGE: javascript
CODE:
"export": {
    "include":
    [
        "dir/*.[ch]pp",
        "dir/examples/*",
        "*/*/*.h"
    ]
}

----------------------------------------

TITLE: Configuring Generic N79E825 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic N79E825 board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:N79E825]
platform = intel_mcs51
board = N79E825

; change microcontroller
board_build.mcu = n79e825

; change MCU frequency
board_build.f_cpu = 6000000L

----------------------------------------

TITLE: Customizing STM32F103RE Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings for the STM32F103RE, such as changing the microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RE]
platform = ststm32
board = genericSTM32F103RE

; change microcontroller
board_build.mcu = stm32f103ret6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the Adafruit Qualia ESP32-S3 RGB666 board in platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_qualia_s3_rgb666]
platform = espressif32
board = adafruit_qualia_s3_rgb666

----------------------------------------

TITLE: Using PlatformIO Organization Remove Command
DESCRIPTION: Command syntax for removing a user from a PlatformIO organization. Requires organization name and username as parameters.

LANGUAGE: bash
CODE:
pio org remove ORGNAME USERNAME

----------------------------------------

TITLE: Configuring ESP32 Upload Protocol
DESCRIPTION: PlatformIO configuration demonstrating how to specify the upload protocol for the Microduino Core ESP32 board.

LANGUAGE: ini
CODE:
[env:microduino-core-esp32]
platform = espressif32
board = microduino-core-esp32

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8G2K16S4
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic STC8G2K16S4 board. It includes the basic configuration and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:STC8G2K16S4]
platform = intel_mcs51
board = STC8G2K16S4

; change microcontroller
board_build.mcu = stc8g2k16s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring ATmega2561 Board in PlatformIO project.ini
DESCRIPTION: This snippet shows how to configure the ATmega2561 board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:ATmega2561]
platform = atmelavr
board = ATmega2561

----------------------------------------

TITLE: Legacy Library Directory Configuration in PlatformIO
DESCRIPTION: Shows how to configure multiple extra library directories for dependency resolution. This approach is deprecated and will be removed in future versions.

LANGUAGE: ini
CODE:
[env:myenv]
lib_extra_dirs =
    /common/libraries
    /iot/libraries

----------------------------------------

TITLE: Configuring Wicked Device WildFire V3 in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Wicked Device WildFire V3 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:wildfirev3]
platform = atmelavr
board = wildfirev3

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing STC8H3K60S2 Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC8H3K60S2 board in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8H3K60S2]
platform = intel_mcs51
board = STC8H3K60S2

; change microcontroller
board_build.mcu = stc8h3k60s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Adafruit pIRkey Board in PlatformIO
DESCRIPTION: Basic configuration for the Adafruit pIRkey board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_pirkey]
platform = atmelsam
board = adafruit_pirkey

----------------------------------------

TITLE: Basic AT89S52 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration to set up an AT89S52 project environment in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:AT89S52]
platform = intel_mcs51
board = AT89S52

----------------------------------------

TITLE: Customizing Phoenix 2.0 Board Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the Phoenix 2.0 board.

LANGUAGE: ini
CODE:
[env:phoenix_v2]
platform = espressif8266
board = phoenix_v2

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Basic STM32F411CC Board Environment
DESCRIPTION: Basic PlatformIO configuration for initializing an STM32F411CC board project using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F411CC]
platform = ststm32
board = genericSTM32F411CC

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Nano RP2040 Connect
DESCRIPTION: Configuration to specify the upload protocol for the Arduino Nano RP2040 Connect board. In this example, it's set to 'picotool'.

LANGUAGE: ini
CODE:
[env:nanorp2040connect]
platform = raspberrypi
board = nanorp2040connect

upload_protocol = picotool

----------------------------------------

TITLE: Overriding Default Settings for Generic N79E813
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:N79E813]
platform = intel_mcs51
board = N79E813

; change microcontroller
board_build.mcu = n79e813

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring LoRa32u4II Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the LoRa32u4II board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:lora32u4II]
platform = atmelavr
board = lora32u4II

----------------------------------------

TITLE: Setting Upload Protocol for BlackPill F103C8
DESCRIPTION: Example of how to set the upload protocol for the BlackPill F103C8 board in PlatformIO. The default protocol is 'stlink', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:blackpill_f103c8]
platform = ststm32
board = blackpill_f103c8

upload_protocol = stlink

----------------------------------------

TITLE: Customizing TTGO T1 Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration for the TTGO T1 board, demonstrating how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ttgo-t1]
platform = espressif32
board = ttgo-t1

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Generic N79E875 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic N79E875 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:N79E875]
platform = intel_mcs51
board = N79E875

; change microcontroller
board_build.mcu = n79e875

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Setting Upload Protocol for DWM1001
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, with JLink as the default option.

LANGUAGE: ini
CODE:
[env:dwm1001_dev]
platform = nordicnrf52
board = dwm1001_dev

upload_protocol = jlink

----------------------------------------

TITLE: Customizing Arduino Portenta H7 (M7 core) Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:portenta_h7_m7]
platform = ststm32
board = portenta_h7_m7

; change microcontroller
board_build.mcu = stm32h747xih6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring Basic PlatformIO Environment for Cytron Maker Feather AIoT S3
DESCRIPTION: Basic PlatformIO configuration for setting up a build environment targeting the Cytron Maker Feather AIoT S3 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:cytron_maker_feather_aiot_s3]
platform = espressif32
board = cytron_maker_feather_aiot_s3

----------------------------------------

TITLE: Setting Upload Protocol for WeAct Studio BlackPill V2.0 (STM32F401CC)
DESCRIPTION: This code snippet demonstrates how to set the upload protocol for the WeAct Studio BlackPill V2.0 (STM32F401CC) board in the PlatformIO configuration. The default protocol is 'stlink', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:blackpill_f401cc]
platform = ststm32
board = blackpill_f401cc

upload_protocol = stlink

----------------------------------------

TITLE: Basic STC15F103 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for setting up the STC15F103 board with the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15F103]
platform = intel_mcs51
board = STC15F103

----------------------------------------

TITLE: Configuring PlatformIO for ATmega8515 in INI
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the ATmega8515 board. It demonstrates setting the platform and board in the project configuration file.

LANGUAGE: ini
CODE:
[env:ATmega8515]
platform = atmelavr
board = ATmega8515

----------------------------------------

TITLE: Executing Native Programs with PlatformIO
DESCRIPTION: These shell commands demonstrate how to run native programs using PlatformIO, including examples of passing additional arguments to the program.

LANGUAGE: shell
CODE:
> pio run -t exec

# extra args
> pio run -t exec --program-arg "arg1" --program-arg="--option1=value1"

# or short format
> pio run -t exec -a "arg1" -a "--option1=value1"

----------------------------------------

TITLE: Configuring PlatformIO Environment for Connaxio's Espoir
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Connaxio's Espoir board in the project configuration file. It specifies the platform and board to use.

LANGUAGE: ini
CODE:
[env:connaxio_espoir]
platform = espressif32
board = connaxio_espoir

----------------------------------------

TITLE: Configuring Basic Arduino Yun Mini Environment
DESCRIPTION: Basic PlatformIO environment configuration for Arduino Yun Mini board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:yunmini]
platform = atmelavr
board = yunmini

----------------------------------------

TITLE: Configuring Basic STC15W408S Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STC15W408S board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15W408S]
platform = intel_mcs51
board = STC15W408S

----------------------------------------

TITLE: Customizing Adafruit pIRkey Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_pirkey]
platform = atmelsam
board = adafruit_pirkey

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Maxim Health Sensor Platform Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:max32620hsp]
platform = maxim32
board = max32620hsp

; change microcontroller
board_build.mcu = max32620

; change MCU frequency
board_build.f_cpu = 96000000L

----------------------------------------

TITLE: Configuring Upload Protocol - PlatformIO INI
DESCRIPTION: Example configuration for specifying the upload protocol for the board

LANGUAGE: ini
CODE:
[env:electrosmith_daisy_patch_sm]
platform = ststm32
board = electrosmith_daisy_patch_sm

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103T6
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the STM32F103T6 board, using serial as the protocol.

LANGUAGE: ini
CODE:
[env:genericSTM32F103T6]
platform = ststm32
board = genericSTM32F103T6

upload_protocol = serial

----------------------------------------

TITLE: Configuring PlatformIO for Generic N79E843 Board
DESCRIPTION: This snippet shows how to configure the project configuration file (platformio.ini) for the Generic N79E843 board. It sets the platform to intel_mcs51 and the board to N79E843.

LANGUAGE: ini
CODE:
[env:N79E843]
platform = intel_mcs51
board = N79E843

----------------------------------------

TITLE: Configuring Arduino Mega ATmega1280 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino Mega or Mega 2560 ATmega1280 board in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:megaatmega1280]
platform = atmelavr
board = megaatmega1280

----------------------------------------

TITLE: Setting Upload Protocol for Seeeduino Femto M0
DESCRIPTION: Configuration to specify the upload protocol for the Seeeduino Femto M0 board. In this example, the sam-ba protocol is set.

LANGUAGE: ini
CODE:
[env:seeed_femto]
platform = atmelsam
board = seeed_femto

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing WEMOS LOLIN32 Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:lolin32]
platform = espressif32
board = lolin32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC12C5A08S2]
platform = intel_mcs51
board = STC12C5A08S2

; change microcontroller
board_build.mcu = stc12c5a08s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the AVR-IoT WG Development Board.

LANGUAGE: ini
CODE:
[env:avr_iot_wg]
platform = atmelmegaavr
board = avr_iot_wg

; change microcontroller
board_build.mcu = atmega4808

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring SDT32620B Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the SDT32620B board in the PlatformIO project configuration file. It sets the platform to maxim32 and the board to sdt32620b.

LANGUAGE: ini
CODE:
[env:sdt32620b]
platform = maxim32
board = sdt32620b

----------------------------------------

TITLE: Basic PlatformIO Configuration for D-duino-32
DESCRIPTION: Basic environment configuration for D-duino-32 board specifying the platform and board ID.

LANGUAGE: ini
CODE:
[env:d-duino-32]
platform = espressif32
board = d-duino-32

----------------------------------------

TITLE: Configuring STM32F103CB Board in PlatformIO
DESCRIPTION: Sets up the build environment for the STM32F103CB board in the project configuration file. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:genericSTM32F103CB]
platform = ststm32
board = genericSTM32F103CB

; change microcontroller
board_build.mcu = stm32f103cbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC12C5A60S2 Board
DESCRIPTION: Basic PlatformIO configuration for the Generic STC12C5A60S2 board. Sets the platform to intel_mcs51 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:STC12C5A60S2]
platform = intel_mcs51
board = STC12C5A60S2

----------------------------------------

TITLE: Overriding Default ATmega8515 Settings in PlatformIO INI
DESCRIPTION: This code example illustrates how to override default ATmega8515 settings in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ATmega8515]
platform = atmelavr
board = ATmega8515

; change microcontroller
board_build.mcu = atmega8515

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Talk2 Whisper Node Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:whispernode]
platform = atmelavr
board = whispernode

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced STC15W202S Board Configuration with Custom Settings
DESCRIPTION: Extended configuration demonstrating how to override default board settings like microcontroller model and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:STC15W202S]
platform = intel_mcs51
board = STC15W202S

; change microcontroller
board_build.mcu = stc15w202s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting upload protocol for Adafruit Feather M4 Express in PlatformIO INI file
DESCRIPTION: Configuration to specify the upload protocol for the Adafruit Feather M4 Express board. Uses the 'sam-ba' protocol as an example.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m4]
platform = atmelsam
board = adafruit_feather_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring OLIMEX ESP32-PoE-ISO Board in PlatformIO
DESCRIPTION: Basic configuration for using the OLIMEX ESP32-PoE-ISO board in a PlatformIO project. Specifies the board ID and platform.

LANGUAGE: ini
CODE:
[env:esp32-poe-iso]
platform = espressif32
board = esp32-poe-iso

----------------------------------------

TITLE: Configuring Digilent chipKIT MX3 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Digilent chipKIT MX3 board in the PlatformIO project configuration file. It demonstrates setting the board ID and platform, as well as how to override default board settings.

LANGUAGE: ini
CODE:
[env:chipkit_mx3]
platform = microchippic32
board = chipkit_mx3

; change microcontroller
board_build.mcu = 32MX320F128H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring ESP32-S2-Kaluga-1 Board in PlatformIO
DESCRIPTION: Basic configuration for setting up an ESP32-S2-Kaluga-1 board project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:esp32-s2-kaluga-1]
platform = espressif32
board = esp32-s2-kaluga-1

----------------------------------------

TITLE: Setting Upload Protocol for BlackPill F303CC
DESCRIPTION: Example of how to specify the upload protocol for the BlackPill F303CC board in PlatformIO. The default protocol is 'stlink', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:robotdyn_blackpill_f303cc]
platform = ststm32
board = robotdyn_blackpill_f303cc

upload_protocol = stlink

----------------------------------------

TITLE: Customizing STC15F202EA Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration that demonstrates how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F202EA]
platform = intel_mcs51
board = STC15F202EA

; change microcontroller
board_build.mcu = stc15f202ea

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic Adafruit Pro Trinket Environment in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for Adafruit Pro Trinket 3V/12MHz board using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:protrinket3]
platform = atmelavr
board = protrinket3

----------------------------------------

TITLE: Setting Upload Protocol for STM32F410CB in PlatformIO
DESCRIPTION: Configuration snippet showing how to set the upload protocol for the STM32F410CB board. In this example, it's set to 'serial'.

LANGUAGE: ini
CODE:
[env:genericSTM32F410CB]
platform = ststm32
board = genericSTM32F410CB

upload_protocol = serial

----------------------------------------

TITLE: Configuring PlatformIO Environment for unPhone 7
DESCRIPTION: Basic PlatformIO configuration for the unPhone 7 board using the Espressif32 platform. This snippet shows how to set up the environment and override default board settings.

LANGUAGE: ini
CODE:
[env:unphone7]
platform = espressif32
board = unphone7

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic STC15F100 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STC15F100 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15F100]
platform = intel_mcs51
board = STC15F100

----------------------------------------

TITLE: Customizing STC8F2K16S2 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings such as microcontroller model and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:STC8F2K16S2]
platform = intel_mcs51
board = STC8F2K16S2

; change microcontroller
board_build.mcu = stc8f2k16s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic SDT32625B Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the SDT32625B board using the maxim32 platform. Sets up the fundamental board environment.

LANGUAGE: ini
CODE:
[env:sdt32625b]
platform = maxim32
board = sdt32625b

----------------------------------------

TITLE: Customizing OLIMEX ESP32-EVB Board Settings
DESCRIPTION: Example of overriding default board settings for the OLIMEX ESP32-EVB, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:esp32-evb]
platform = espressif32
board = esp32-evb

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Board MCU Settings
DESCRIPTION: Advanced configuration demonstrating how to override default microcontroller and frequency settings for the Arduino Nano 33 BLE.

LANGUAGE: ini
CODE:
[env:nano33ble]
platform = nordicnrf52
board = nano33ble

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Generic STC8H4K48LCD Board in PlatformIO project
DESCRIPTION: This code snippet demonstrates how to configure a PlatformIO project to use the Generic STC8H4K48LCD board. It includes the basic configuration and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC8H4K48LCD]
platform = intel_mcs51
board = STC8H4K48LCD

; change microcontroller
board_build.mcu = stc8h4k48lcd

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring ATmega328PB Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ATmega328PB board in a PlatformIO project configuration file. It demonstrates setting the platform and board ID, as well as how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATmega328PB]
platform = atmelavr
board = ATmega328PB

; change microcontroller
board_build.mcu = atmega328pb

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic ATtiny204 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ATtiny204 board setup in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny204]
platform = atmelmegaavr
board = ATtiny204

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8G2K64S4
DESCRIPTION: Minimal configuration required to set up an STC8G2K64S4 board project in PlatformIO.

LANGUAGE: ini
CODE:
[env:STC8G2K64S4]
platform = intel_mcs51
board = STC8G2K64S4

----------------------------------------

TITLE: Basic Board Configuration for PlatformIO
DESCRIPTION: Basic configuration setup for Adafruit Hallowing M4 board in platformio.ini file

LANGUAGE: ini
CODE:
[env:adafruit_hallowing_m4]
platform = atmelsam
board = adafruit_hallowing_m4

----------------------------------------

TITLE: Configuring PlatformIO Environment for Fishino Piranha ESP-32
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Fishino Piranha ESP-32 board. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:piranha_esp32]
platform = espressif32
board = piranha_esp32

----------------------------------------

TITLE: Customizing PIC32 CUI32 Board Settings
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:cui32]
platform = microchippic32
board = cui32

; change microcontroller
board_build.mcu = 32MX440F512H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic INI configuration for setting up a PlatformIO project with the SparkFun MicroMod Teensy board.

LANGUAGE: ini
CODE:
[env:teensymm]
platform = teensy
board = teensymm

----------------------------------------

TITLE: Configuring ATmega324PA Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega324PA board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATmega324PA]
platform = atmelavr
board = ATmega324PA

; change microcontroller
board_build.mcu = atmega324pa

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Generic STC15W103 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic STC15W103 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15W103]
platform = intel_mcs51
board = STC15W103

; change microcontroller
board_build.mcu = stc15w103

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Quirkbot Board Configuration
DESCRIPTION: Basic PlatformIO configuration for the Quirkbot board using the atmelavr platform

LANGUAGE: ini
CODE:
[env:quirkbot]
platform = atmelavr
board = quirkbot

----------------------------------------

TITLE: Customizing Valetron Systems VALTRACK-V4VTS Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:valtrack_v4_vts_esp32_c3]
platform = espressif32
board = valtrack_v4_vts_esp32_c3

; change microcontroller
board_build.mcu = esp32c3

; change MCU frequency
board_build.f_cpu = 160000000L

----------------------------------------

TITLE: Configuring Basic LightUp Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a LightUp board project in PlatformIO platformio.ini file. Specifies the platform as atmelavr and board as lightup.

LANGUAGE: ini
CODE:
[env:lightup]
platform = atmelavr
board = lightup

----------------------------------------

TITLE: Configuring Basic STC15F2K48S2 Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for STC15F2K48S2 board setup using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15F2K48S2]
platform = intel_mcs51
board = STC15F2K48S2

----------------------------------------

TITLE: Configuring PlatformIO for Microduino Core+ in INI
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Microduino Core+ board. It sets the platform to atmelavr and specifies the board ID as 1284p8m.

LANGUAGE: ini
CODE:
[env:1284p8m]
platform = atmelavr
board = 1284p8m

----------------------------------------

TITLE: Basic STC8H04A10 Board Configuration
DESCRIPTION: Basic PlatformIO configuration for setting up an STC8H04A10 board project using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H04A10]
platform = intel_mcs51
board = STC8H04A10

----------------------------------------

TITLE: MagicBit Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration example showing how to specify the upload protocol for the MagicBit board.

LANGUAGE: ini
CODE:
[env:magicbit]
platform = espressif32
board = magicbit

upload_protocol = esptool

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended INI configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:mhetesp32devkit]
platform = espressif32
board = mhetesp32devkit

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for RedBearLab Blend 2 in PlatformIO
DESCRIPTION: Configuration snippet showing how to specify the upload protocol for the RedBearLab Blend 2 board in a PlatformIO project. It sets the protocol to CMSIS-DAP.

LANGUAGE: ini
CODE:
[env:redbear_blend2]
platform = nordicnrf52
board = redbear_blend2

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Customizing ATmega168 Board Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO environment.

LANGUAGE: ini
CODE:
[env:ATmega168]
platform = atmelavr
board = ATmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Adafruit ItsyBitsy M4 board. The board supports atmel-ice, jlink, and sam-ba protocols.

LANGUAGE: ini
CODE:
[env:adafruit_itsybitsy_m4]
platform = atmelsam
board = adafruit_itsybitsy_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced PlatformIO Board Configuration with Custom Settings
DESCRIPTION: Extended configuration for STC8H1K08S2 board showing how to override default settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K08S2]
platform = intel_mcs51
board = STC8H1K08S2

; change microcontroller
board_build.mcu = stc8h1k08s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Adafruit Metro M0 Express in PlatformIO
DESCRIPTION: Basic configuration for the Adafruit Metro M0 Express board in a PlatformIO project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:adafruit_metro_m0]
platform = atmelsam
board = adafruit_metro_m0

----------------------------------------

TITLE: Basic Board Configuration for ATD1.47-S3
DESCRIPTION: Basic PlatformIO configuration for ATD1.47-S3 board using espressif32 platform

LANGUAGE: ini
CODE:
[env:atd147_s3]
platform = espressif32
board = atd147_s3

----------------------------------------

TITLE: Customizing RHF76 052 Board Settings
DESCRIPTION: Example of overriding default board settings, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:rhf76_052]
platform = ststm32
board = rhf76_052

; change microcontroller
board_build.mcu = stm32l051c8t6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring Basic chipKIT Lenny Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for chipKIT Lenny board using the microchippic32 platform.

LANGUAGE: ini
CODE:
[env:lenny]
platform = microchippic32
board = lenny

----------------------------------------

TITLE: STM32F407VG Upload Protocol Configuration
DESCRIPTION: PlatformIO configuration example showing how to specify the upload protocol for the Black STM32F407VG board.

LANGUAGE: ini
CODE:
[env:black_f407vg]
platform = ststm32
board = black_f407vg

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic STC15W402AS Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15W402AS board in a PlatformIO project's configuration file (platformio.ini). It sets the platform to intel_mcs51 and specifies the board as STC15W402AS.

LANGUAGE: ini
CODE:
[env:STC15W402AS]
platform = intel_mcs51
board = STC15W402AS

----------------------------------------

TITLE: Configuring Basic ATtiny2313 Board Settings
DESCRIPTION: Basic configuration for setting up an ATtiny2313 board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:attiny2313]
platform = atmelavr
board = attiny2313

----------------------------------------

TITLE: Customizing STC8H4K32LCD Board Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H4K32LCD]
platform = intel_mcs51
board = STC8H4K32LCD

; change microcontroller
board_build.mcu = stc8h4k32lcd

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Custom MCU Configuration
DESCRIPTION: Example of overriding default microcontroller settings including MCU model and frequency.

LANGUAGE: ini
CODE:
[env:black_f407ze]
platform = ststm32
board = black_f407ze

; change microcontroller
board_build.mcu = stm32f407zet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15W1K16S
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic STC15W1K16S board. It sets the platform to intel_mcs51 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:STC15W1K16S]
platform = intel_mcs51
board = STC15W1K16S

----------------------------------------

TITLE: Basic Board Configuration for STM32F405
DESCRIPTION: Basic PlatformIO configuration for initializing the SparkFun MicroMod STM32F405 board with default settings.

LANGUAGE: ini
CODE:
[env:sparkfun_micromod_f405]
platform = ststm32
board = sparkfun_micromod_f405

----------------------------------------

TITLE: Basic ML51TB9AE Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ML51TB9AE board setup using the intel_mcs51 platform

LANGUAGE: ini
CODE:
[env:ML51TB9AE]
platform = intel_mcs51
board = ML51TB9AE

----------------------------------------

TITLE: Setting Upload Protocol for RYMCU ESP32-DevKitC
DESCRIPTION: Configuration example for changing the upload protocol for the RYMCU ESP32-DevKitC board. The default protocol is 'esptool'.

LANGUAGE: ini
CODE:
[env:rymcu-esp32-devkitc]
platform = espressif32
board = rymcu-esp32-devkitc

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ESP32-S2
DESCRIPTION: Configuration example for specifying the upload protocol for the Adafruit Feather ESP32-S2 board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2]
platform = espressif32
board = adafruit_feather_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for Nordic nRF51 Dongle
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Nordic nRF51 Dongle board. Sets the protocol to J-Link.

LANGUAGE: ini
CODE:
[env:nrf51_dongle]
platform = nordicnrf51
board = nrf51_dongle

upload_protocol = jlink

----------------------------------------

TITLE: Configuring Basic ATmega168 Board Setup in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATmega168 board environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATmega168]
platform = atmelavr
board = ATmega168

----------------------------------------

TITLE: Configuring Adafruit Matrix Portal M4 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Matrix Portal M4 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:adafruit_matrix_portal_m4]
platform = atmelsam
board = adafruit_matrix_portal_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Advanced STC15F103 Board Configuration
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F103]
platform = intel_mcs51
board = STC15F103

; change microcontroller
board_build.mcu = stc15f103

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring SainSmart Due Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the SainSmart Due (Programming Port) board in the PlatformIO project configuration file. It includes options for setting the platform, board ID, and custom MCU and frequency settings.

LANGUAGE: ini
CODE:
[env:sainSmartDue]
platform = atmelsam
board = sainSmartDue

; change microcontroller
board_build.mcu = at91sam3x8e

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Configuring Basic HealthyPi 4 Build Environment
DESCRIPTION: Basic PlatformIO configuration for HealthyPi 4 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:healthypi4]
platform = espressif32
board = healthypi4

----------------------------------------

TITLE: Configuring Basic STM8S003F3 Board Setup in PlatformIO
DESCRIPTION: Basic configuration for setting up an STM8S003F3 board project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:stm8s003f3]
platform = ststm8
board = stm8s003f3

----------------------------------------

TITLE: Configuring PONTECH UAV100 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the PONTECH UAV100 board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:usbono_pic32]
platform = microchippic32
board = usbono_pic32

; change microcontroller
board_build.mcu = 32MX440F512H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Generic STC8C2K60S4 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic STC8C2K60S4 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:STC8C2K60S4]
platform = intel_mcs51
board = STC8C2K60S4

; change microcontroller
board_build.mcu = stc8c2k60s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing STC8A8K64D4 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO environment.

LANGUAGE: ini
CODE:
[env:STC8A8K64D4]
platform = intel_mcs51
board = STC8A8K64D4

; change microcontroller
board_build.mcu = stc8a8k64d4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Arduino BT ATmega168
DESCRIPTION: Basic environment configuration for Arduino BT ATmega168 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:btatmega168]
platform = atmelavr
board = btatmega168

----------------------------------------

TITLE: Configuring NXP i.MX RT1015 Evaluation Kit in PlatformIO
DESCRIPTION: This snippet shows how to configure the NXP i.MX RT1015 Evaluation Kit in the PlatformIO project configuration file. It demonstrates setting the board ID and platform.

LANGUAGE: ini
CODE:
[env:mimxrt1015_evk]
platform = nxpimxrt
board = mimxrt1015_evk

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit QT Py M0
DESCRIPTION: Configuration to change the upload protocol for the Adafruit QT Py M0 board in the platformio.ini file. The default protocol is sam-ba.

LANGUAGE: ini
CODE:
[env:adafruit_qt_py_m0]
platform = atmelsam
board = adafruit_qt_py_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration with custom microcontroller and frequency settings for STC15W404AS board

LANGUAGE: ini
CODE:
[env:STC15W404AS]
platform = intel_mcs51
board = STC15W404AS

; change microcontroller
board_build.mcu = stc15w404as

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:lolin_c3_mini]
platform = espressif32
board = lolin_c3_mini

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Generic STC15W203S Board in PlatformIO
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic STC15W203S board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC15W203S]
platform = intel_mcs51
board = STC15W203S

----------------------------------------

TITLE: Customizing SparkFun ESP32 Thing Plus C Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32s2_thing_plus_c]
platform = espressif32
board = sparkfun_esp32s2_thing_plus_c

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic PlatformIO Environment for Maple Mini
DESCRIPTION: Basic configuration for setting up a PlatformIO environment for the Maple Mini board with Bootloader 2.0

LANGUAGE: ini
CODE:
[env:maple_mini_b20]
platform = ststm32
board = maple_mini_b20

----------------------------------------

TITLE: Configuring MAX32600mbed Board in PlatformIO INI File
DESCRIPTION: Basic configuration for using the MAX32600mbed board with the Maxim32 platform in a PlatformIO project's platformio.ini file.

LANGUAGE: ini
CODE:
[env:max32600mbed]
platform = maxim32
board = max32600mbed

----------------------------------------

TITLE: Customizing ATmega168PB MCU and Frequency Settings
DESCRIPTION: Advanced configuration example showing how to override default board settings such as microcontroller model and CPU frequency in PlatformIO.

LANGUAGE: ini
CODE:
[env:ATmega168PB]
platform = atmelavr
board = ATmega168PB

; change microcontroller
board_build.mcu = atmega168pb

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Matrix Portal M4
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Adafruit Matrix Portal M4 board in a PlatformIO project configuration. The default protocol is 'sam-ba', but it can be changed to other supported protocols like 'atmel-ice' or 'jlink'.

LANGUAGE: ini
CODE:
[env:adafruit_matrix_portal_m4]
platform = atmelsam
board = adafruit_matrix_portal_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing STC8G1K08T Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default board settings for the STC8G1K08T. It shows how to change the microcontroller and MCU frequency using board-specific options in the project configuration.

LANGUAGE: ini
CODE:
[env:STC8G1K08T]
platform = intel_mcs51
board = STC8G1K08T

; change microcontroller
board_build.mcu = stc8g1k08t

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for SainSmart Due
DESCRIPTION: This code demonstrates how to set the upload protocol for the SainSmart Due board in the PlatformIO configuration. The default protocol is 'sam-ba', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:sainSmartDue]
platform = atmelsam
board = sainSmartDue

upload_protocol = sam-ba

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the IBMEthernetKit board.

LANGUAGE: ini
CODE:
[env:IBMEthernetKit]
platform = freescalekinetis
board = IBMEthernetKit

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Deneyap Kart 1A v2 Board in PlatformIO
DESCRIPTION: Basic configuration for using the Deneyap Kart 1A v2 board in a PlatformIO project. Sets the platform to espressif32 and the board to deneyapkart1Av2.

LANGUAGE: ini
CODE:
[env:deneyapkart1Av2]
platform = espressif32
board = deneyapkart1Av2

----------------------------------------

TITLE: Customizing nRF52840 Board Parameters
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nrf52840_dk_adafruit]
platform = nordicnrf52
board = nrf52840_dk_adafruit

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing ML51TC0AE Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default board settings in the PlatformIO configuration. It shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML51TC0AE]
platform = intel_mcs51
board = ML51TC0AE

; change microcontroller
board_build.mcu = ml51tc0ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8F1K08
DESCRIPTION: Basic environment configuration for the STC8F1K08 board in platformio.ini file. Sets up the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8F1K08]
platform = intel_mcs51
board = STC8F1K08

----------------------------------------

TITLE: Configuring Basic Digispark Pro Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a Digispark Pro board project in PlatformIO platform.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:digispark-pro32]
platform = atmelavr
board = digispark-pro32

----------------------------------------

TITLE: Configuring Sanguino ATmega1284p (8MHz) Board in PlatformIO
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Sanguino ATmega1284p (8MHz) board. It sets the platform to atmelavr and specifies the board ID.

LANGUAGE: ini
CODE:
[env:sanguino_atmega1284_8m]
platform = atmelavr
board = sanguino_atmega1284_8m

----------------------------------------

TITLE: Configuring OTA Update Options for ESP8266 in PlatformIO
DESCRIPTION: Example of setting additional OTA update options using upload_flags in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
upload_protocol = espota
; each flag in a new line
upload_flags =
  --port=8266

----------------------------------------

TITLE: Basic Environment Configuration for STC15W404S
DESCRIPTION: Basic PlatformIO environment configuration for STC15W404S board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15W404S]
platform = intel_mcs51
board = STC15W404S

----------------------------------------

TITLE: Setting Upload Protocol for unPhone 9
DESCRIPTION: Configuration to specify the upload protocol for the unPhone 9 board. In this example, it's set to use the esptool protocol.

LANGUAGE: ini
CODE:
[env:unphone9]
platform = espressif32
board = unphone9

upload_protocol = esptool

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15F2K56S2
DESCRIPTION: Basic PlatformIO configuration for the Generic STC15F2K56S2 board. This snippet sets up the project environment with the correct platform and board ID.

LANGUAGE: ini
CODE:
[env:STC15F2K56S2]
platform = intel_mcs51
board = STC15F2K56S2

----------------------------------------

TITLE: Customizing uPesy ESP32 Wroom DevKit Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:upesy_wroom]
platform = espressif32
board = upesy_wroom

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ttgo-t7-v13-mini32]
platform = espressif32
board = ttgo-t7-v13-mini32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for Maxim Health Sensor Platform
DESCRIPTION: Configuration to specify the upload protocol for the Maxim Health Sensor Platform. In this example, it's set to 'mbed'.

LANGUAGE: ini
CODE:
[env:max32620hsp]
platform = maxim32
board = max32620hsp

upload_protocol = mbed

----------------------------------------

TITLE: Customizing ATmega164P Board Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega164P]
platform = atmelavr
board = ATmega164P

; change microcontroller
board_build.mcu = atmega164p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Adafruit Trellis M4 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Trellis M4 board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_trellis_m4]
platform = atmelsam
board = adafruit_trellis_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Customizing STC8H1K28 Board Parameters in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K28]
platform = intel_mcs51
board = STC8H1K28

; change microcontroller
board_build.mcu = stc8h1k28

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic ATtiny24 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATtiny24 board project in platformio.ini. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:attiny24]
platform = atmelavr
board = attiny24

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8F2K60S2
DESCRIPTION: Basic configuration snippet for setting up an STC8F2K60S2 board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC8F2K60S2]
platform = intel_mcs51
board = STC8F2K60S2

----------------------------------------

TITLE: Changing Upload Protocol for BPI-Bit in PlatformIO Configuration
DESCRIPTION: This snippet shows how to change the upload protocol for the BPI-Bit board in the PlatformIO configuration. It sets the upload protocol to esptool.

LANGUAGE: ini
CODE:
[env:bpi-bit]
platform = espressif32
board = bpi-bit

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic HiFive1 Rev B Board Settings
DESCRIPTION: Basic PlatformIO configuration for setting up a project with the HiFive1 Rev B board using the SiFive platform.

LANGUAGE: ini
CODE:
[env:hifive1-revb]
platform = sifive
board = hifive1-revb

----------------------------------------

TITLE: Defining Framework Documentation Structure in RST
DESCRIPTION: ReStructuredText markup defining the table of contents for framework documentation, including links to individual framework pages like Arduino, CMSIS, ESP-IDF, and others.

LANGUAGE: restructuredtext
CODE:
.. toctree::
    :maxdepth: 1

    arduino
    cmsis
    energia
    esp8266-nonos-sdk
    esp8266-rtos-sdk
    espidf
    freedom-e-sdk
    freertos
    fsp
    libopencm3
    mbed
    pulp-os
    pulp-runtime
    pulp-sdk
    shakti-sdk
    spl
    stm32cube
    wd-riscv-sdk
    wiringpi
    zephyr

----------------------------------------

TITLE: Configuring Basic STC8F1K08S Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the STC8F1K08S board in the project's configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8F1K08S]
platform = intel_mcs51
board = STC8F1K08S

----------------------------------------

TITLE: Configuring Basic ATtiny806 Build Environment in PlatformIO
DESCRIPTION: Basic INI configuration for setting up an ATtiny806 project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny806]
platform = atmelmegaavr
board = ATtiny806

----------------------------------------

TITLE: Configuring PlatformIO for Freescale Kinetis FRDM-KL46Z
DESCRIPTION: Basic PlatformIO configuration for the FRDM-KL46Z board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:frdm_kl46z]
platform = freescalekinetis
board = frdm_kl46z

----------------------------------------

TITLE: Setting Optimization for Smallest Code in Teensy PlatformIO Project
DESCRIPTION: This snippet demonstrates how to configure a PlatformIO project for a Teensy 3.6 board, setting the optimization for the smallest code size using a build flag.

LANGUAGE: ini
CODE:
[env:teensy_hid_device]
platform = teensy
framework = arduino
board = teensy36
build_flags = -D TEENSY_OPT_SMALLEST_CODE

----------------------------------------

TITLE: Configuring Generic STC15W4K40S4 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15W4K40S4 board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15W4K40S4]
platform = intel_mcs51
board = STC15W4K40S4

; change microcontroller
board_build.mcu = stc15w4k40s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic PlatformIO Environment for Pocket 32
DESCRIPTION: Basic PlatformIO environment configuration for the Pocket 32 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:pocket_32]
platform = espressif32
board = pocket_32

----------------------------------------

TITLE: Configuring Generic STC8H4K60LCD Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC8H4K60LCD board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H4K60LCD]
platform = intel_mcs51
board = STC8H4K60LCD

; change microcontroller
board_build.mcu = stc8h4k60lcd

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing N79E823 Board Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E823]
platform = intel_mcs51
board = N79E823

; change microcontroller
board_build.mcu = n79e823

; change MCU frequency
board_build.f_cpu = 6000000L

----------------------------------------

TITLE: Configuring Basic Wio Node Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a Wio Node board project in PlatformIO using the espressif8266 platform.

LANGUAGE: ini
CODE:
[env:wio_node]
platform = espressif8266
board = wio_node

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default board settings for microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mb208]
platform = ststm8
board = mb208

; change microcontroller
board_build.mcu = stm8s208mbt6

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring ATmega48P Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega48P board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATmega48P]
platform = atmelavr
board = ATmega48P

; change microcontroller
board_build.mcu = atmega48p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for MKR Vidor 4000
DESCRIPTION: Minimal configuration required to use the MKR Vidor 4000 board with PlatformIO

LANGUAGE: ini
CODE:
[env:mkrvidor4000]
platform = atmelsam
board = mkrvidor4000

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up the STC8H1K32S2A10 board with the intel_mcs51 platform

LANGUAGE: ini
CODE:
[env:STC8H1K32S2A10]
platform = intel_mcs51
board = STC8H1K32S2A10

----------------------------------------

TITLE: Customizing ATtiny24 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in platformio.ini.

LANGUAGE: ini
CODE:
[env:attiny24]
platform = atmelavr
board = attiny24

; change microcontroller
board_build.mcu = attiny24

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring BL653 Development Kit in PlatformIO INI
DESCRIPTION: Basic configuration for the BL653 Development Kit board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:laird_bl653_dvk]
platform = nordicnrf52
board = laird_bl653_dvk

----------------------------------------

TITLE: Configuring Upload Protocol for DFRobot Romeo ESP32-S3
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:dfrobot_romeo_esp32s3]
platform = espressif32
board = dfrobot_romeo_esp32s3

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the SparkFun RED-V Thing Plus board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_thing_plus_v]
platform = sifive
board = sparkfun_thing_plus_v

----------------------------------------

TITLE: Customizing STC8F2K08S2 Board Parameters
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:STC8F2K08S2]
platform = intel_mcs51
board = STC8F2K08S2

; change microcontroller
board_build.mcu = stc8f2k08s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced ATtiny817 Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:ATtiny817]
platform = atmelmegaavr
board = ATtiny817

; change microcontroller
board_build.mcu = attiny817

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for IoT-Bus Io
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:iotbusio]
platform = espressif32
board = iotbusio

upload_protocol = esptool

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo F413ZH board.

LANGUAGE: ini
CODE:
[env:nucleo_f413zh]
platform = ststm32
board = nucleo_f413zh

; change microcontroller
board_build.mcu = stm32f413zht6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8C2K32S4
DESCRIPTION: Basic environment configuration for STC8C2K32S4 board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8C2K32S4]
platform = intel_mcs51
board = STC8C2K32S4

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration for IAP15W413AS board with custom microcontroller and frequency settings. Demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:IAP15W413AS]
platform = intel_mcs51
board = IAP15W413AS

; change microcontroller
board_build.mcu = iap15w413as

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO environment for STM32F103ZD
DESCRIPTION: Basic PlatformIO configuration for the STM32F103ZD board, specifying the platform and board ID. This snippet sets up the build environment for the STM32F103ZD microcontroller.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZD]
platform = ststm32
board = genericSTM32F103ZD

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15W1K20S
DESCRIPTION: This snippet shows how to configure the project configuration file (platformio.ini) for the Generic STC15W1K20S board. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC15W1K20S]
platform = intel_mcs51
board = STC15W1K20S

----------------------------------------

TITLE: Customizing ML51SD1AE Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic ML51SD1AE board in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ML51SD1AE]
platform = intel_mcs51
board = ML51SD1AE

; change microcontroller
board_build.mcu = ml51sd1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example showing how to specify the upload protocol for the sduino UNO board. Supports serial and stlinkv2 protocols.

LANGUAGE: ini
CODE:
[env:s8uno]
platform = ststm8
board = s8uno

upload_protocol = serial

----------------------------------------

TITLE: Customizing Arduino Mini ATmega328 Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Arduino Mini ATmega328 in the PlatformIO project configuration. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:miniatmega328]
platform = atmelavr
board = miniatmega328

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for NANO 33 IoT in PlatformIO
DESCRIPTION: Configuration example showing how to set the upload protocol for the NANO 33 IoT board to SAM-BA in the PlatformIO project file.

LANGUAGE: ini
CODE:
[env:nano_33_iot]
platform = atmelsam
board = nano_33_iot

upload_protocol = sam-ba

----------------------------------------

TITLE: Example: Removing User from Organization
DESCRIPTION: Practical example showing how to remove a user named 'bob' from the 'platformio' organization.

LANGUAGE: bash
CODE:
> pio org remove platformio bob
The `bob` owner has been successfully removed from the `platformio` organization.

----------------------------------------

TITLE: Configuring HelvePic32 Board in PlatformIO INI File
DESCRIPTION: Basic configuration for using the HelvePic32 board with the microchippic32 platform in a PlatformIO project's INI file. Includes options for overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:helvepic32_breadboardside]
platform = microchippic32
board = helvepic32_breadboardside

; change microcontroller
board_build.mcu = 32MX250F128B

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Trinket 3V/8MHz
DESCRIPTION: Basic environment configuration for the Trinket 3V/8MHz board using PlatformIO. Sets up the platform and board parameters.

LANGUAGE: ini
CODE:
[env:trinket3]
platform = atmelavr
board = trinket3

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo U575ZI-Q
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo U575ZI-Q board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:nucleo_u575zi_q]
platform = ststm32
board = nucleo_u575zi_q

upload_protocol = stlink

----------------------------------------

TITLE: Customizing SparkFun ESP32 IoT RedBoard Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency for the SparkFun ESP32 IoT RedBoard.

LANGUAGE: ini
CODE:
[env:sparkfun_esp32_iot_redboard]
platform = espressif32
board = sparkfun_esp32_iot_redboard

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8G1K12A
DESCRIPTION: Basic configuration for the STC8G1K12A board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8G1K12A]
platform = intel_mcs51
board = STC8G1K12A

----------------------------------------

TITLE: Customizing AVR128DB48 MCU Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in platformio.ini file.

LANGUAGE: ini
CODE:
[env:AVR128DB48]
platform = atmelmegaavr
board = AVR128DB48

; change microcontroller
board_build.mcu = avr128db48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Feather nRF52840 Express
DESCRIPTION: Configuration to specify the upload protocol for the Adafruit Feather nRF52840 Express board. In this example, nrfutil is set as the upload protocol.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52840]
platform = nordicnrf52
board = adafruit_feather_nrf52840

upload_protocol = nrfutil

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8G1K08T
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Generic STC8G1K08T board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8G1K08T]
platform = intel_mcs51
board = STC8G1K08T

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G1K08A]
platform = intel_mcs51
board = STC8G1K08A

; change microcontroller
board_build.mcu = stc8g1k08a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for SparkFun SAMD21
DESCRIPTION: Basic configuration for setting up a PlatformIO project with SparkFun SAMD21 Dev Breakout board.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_dev_usb]
platform = atmelsam
board = sparkfun_samd21_dev_usb

----------------------------------------

TITLE: Configuring Basic L476DMW1K Board Settings in PlatformIO
DESCRIPTION: Basic board configuration using PlatformIO's project configuration file. Sets up the board and platform for STM32.

LANGUAGE: ini
CODE:
[env:rhombio_l476dmw1k]
platform = ststm32
board = rhombio_l476dmw1k

----------------------------------------

TITLE: Basic Board Configuration with PlatformIO
DESCRIPTION: Initial configuration setup for the STC8H1K64S2A10 board using the intel_mcs51 platform in PlatformIO.

LANGUAGE: ini
CODE:
[env:STC8H1K64S2A10]
platform = intel_mcs51
board = STC8H1K64S2A10

----------------------------------------

TITLE: Setting Upload Protocol for AfroFlight Rev5 (8MHz)
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the AfroFlight Rev5 (8MHz) board in a PlatformIO project. The default protocol is 'serial', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:afroflight_f103cb]
platform = ststm32
board = afroflight_f103cb

upload_protocol = serial

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:heltec_wireless_stick_lite]
platform = espressif32
board = heltec_wireless_stick_lite

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Teensy++ 2.0 Board in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set up a PlatformIO project configuration for the Teensy++ 2.0 board. It includes the basic board setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:teensy2pp]
platform = teensy
board = teensy2pp

; change microcontroller
board_build.mcu = at90usb1286

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Arduino Industrial 101 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Arduino Industrial 101 board in a PlatformIO project configuration file. It sets the platform to atmelavr and the board to chiwawa.

LANGUAGE: ini
CODE:
[env:chiwawa]
platform = atmelavr
board = chiwawa

----------------------------------------

TITLE: Configuring Atmel SAMD21-XPRO Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Atmel SAMD21-XPRO board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:samd21_xpro]
platform = atmelsam
board = samd21_xpro

----------------------------------------

TITLE: Customizing chipKIT Lenny MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the chipKIT Lenny board.

LANGUAGE: ini
CODE:
[env:lenny]
platform = microchippic32
board = lenny

; change microcontroller
board_build.mcu = 32MX270F256D

; change MCU frequency
board_build.f_cpu = 40000000L

----------------------------------------

TITLE: Customizing BQ ZUM BT-328 Board Settings
DESCRIPTION: This code snippet demonstrates how to override default board settings in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:zumbt328]
platform = atmelavr
board = zumbt328

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic Arduino Uno Mini Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Arduino Uno Mini board using the atmelavr platform. Sets up the minimal required environment settings.

LANGUAGE: ini
CODE:
[env:uno_mini]
platform = atmelavr
board = uno_mini

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the Espotel LoRa Module.

LANGUAGE: ini
CODE:
[env:elmo_f411re]
platform = ststm32
board = elmo_f411re

; change microcontroller
board_build.mcu = stm32f411ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing Trueverit ESP32 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency using board_*** options in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:trueverit-iot-driver-mk3]
platform = espressif32
board = trueverit-iot-driver-mk3

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Basic PlatformIO Board Configuration for STC8H1K08S2
DESCRIPTION: Basic configuration setup for STC8H1K08S2 board in platformio.ini. Specifies the platform and board selection.

LANGUAGE: ini
CODE:
[env:STC8H1K08S2]
platform = intel_mcs51
board = STC8H1K08S2

----------------------------------------

TITLE: Configuring Basic AVR64DB48 Board Settings in PlatformIO
DESCRIPTION: Basic INI configuration for setting up an AVR64DB48 board project in PlatformIO. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:AVR64DB48]
platform = atmelmegaavr
board = AVR64DB48

----------------------------------------

TITLE: Setting Upload Protocol for Hexiwear in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Hexiwear board in the PlatformIO project configuration file. It uses the 'mbed' protocol, which is the default for this board.

LANGUAGE: ini
CODE:
[env:hexiwear]
platform = freescalekinetis
board = hexiwear

upload_protocol = mbed

----------------------------------------

TITLE: Configuring SparkFun ESP8266 Thing Board in PlatformIO
DESCRIPTION: This snippet demonstrates how to configure the SparkFun ESP8266 Thing board in the PlatformIO project configuration file (platformio.ini). It sets the platform and board, and shows how to override default board settings.

LANGUAGE: ini
CODE:
[env:thing]
platform = espressif8266
board = thing

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Advanced STC8H04 Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings including microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H04]
platform = intel_mcs51
board = STC8H04

; change microcontroller
board_build.mcu = stc8h04

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC15F105
DESCRIPTION: Basic configuration setup for STC15F105 board in platformio.ini file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC15F105]
platform = intel_mcs51
board = STC15F105

----------------------------------------

TITLE: Configuring Basic Tuino 096 Board Settings
DESCRIPTION: Basic PlatformIO configuration for Tuino 096 board using the atmelsam platform.

LANGUAGE: ini
CODE:
[env:tuinozero96]
platform = atmelsam
board = tuinozero96

----------------------------------------

TITLE: Configuring Generic STC8H4K64TLR Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the Generic STC8H4K64TLR board in the PlatformIO project configuration file. It demonstrates the basic setup and how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC8H4K64TLR]
platform = intel_mcs51
board = STC8H4K64TLR

; change microcontroller
board_build.mcu = stc8h4k64tlr

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring STM32F103VD Board in PlatformIO
DESCRIPTION: Basic configuration for the STM32F103VD board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VD]
platform = ststm32
board = genericSTM32F103VD

----------------------------------------

TITLE: Custom Altair Board Configuration in PlatformIO
DESCRIPTION: Advanced configuration for Altair board with custom microcontroller and frequency settings in PlatformIO project.

LANGUAGE: ini
CODE:
[env:altair]
platform = atmelavr
board = altair

; change microcontroller
board_build.mcu = atmega256rfr2

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing emonPi Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the OpenEnergyMonitor emonPi board in a PlatformIO project configuration file. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:emonpi]
platform = atmelavr
board = emonpi

; change microcontroller
board_build.mcu = atmega328p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_dev_usb]
platform = atmelsam
board = sparkfun_samd21_dev_usb

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing ChipKIT WiFire MCU Settings
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:chipkit_wifire_revc]
platform = microchippic32
board = chipkit_wifire_revc

; change microcontroller
board_build.mcu = 32MZ2048EFG100

; change MCU frequency
board_build.f_cpu = 200000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Options
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_megapro8MHz]
platform = atmelavr
board = sparkfun_megapro8MHz

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO project configuration for 96Boards B96B-F446VE board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:b96b_f446ve]
platform = ststm32
board = b96b_f446ve

----------------------------------------

TITLE: Upload Protocol Configuration for CNRS AW2ETH
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:cnrs_aw2eth]
platform = espressif32
board = cnrs_aw2eth

upload_protocol = esptool

----------------------------------------

TITLE: Configuring ng-beacon Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure the ng-beacon board in a PlatformIO project's configuration file. It sets the platform to nordicnrf51 and the board to ng_beacon.

LANGUAGE: ini
CODE:
[env:ng_beacon]
platform = nordicnrf51
board = ng_beacon

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8H1K16S2A10
DESCRIPTION: Minimal configuration required in platformio.ini to use the STC8H1K16S2A10 board with the Intel MCS51 platform.

LANGUAGE: ini
CODE:
[env:STC8H1K16S2A10]
platform = intel_mcs51
board = STC8H1K16S2A10

----------------------------------------

TITLE: Customizing Adafruit QT Py M0 Board Settings
DESCRIPTION: Example of overriding default board settings, such as changing the microcontroller and MCU frequency, in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:adafruit_qt_py_m0]
platform = atmelsam
board = adafruit_qt_py_m0

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing STC15F2K24S2 Board Parameters
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:STC15F2K24S2]
platform = intel_mcs51
board = STC15F2K24S2

; change microcontroller
board_build.mcu = stc15f2k24s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Raspberry Pi Zero Board Settings
DESCRIPTION: Advanced PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:raspberrypi_zero]
platform = linux_arm
board = raspberrypi_zero

; change microcontroller
board_build.mcu = bcm2835

; change MCU frequency
board_build.f_cpu = 1000000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8G2K64S2
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the Generic STC8G2K64S2 board. It sets the platform to intel_mcs51 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:STC8G2K64S2]
platform = intel_mcs51
board = STC8G2K64S2

----------------------------------------

TITLE: Configuring Arduino MKR WAN 1300 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino MKR WAN 1300 board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:mkrwan1300]
platform = atmelsam
board = mkrwan1300

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:electronut_papyr]
platform = nordicnrf52
board = electronut_papyr

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing PHYTEC reel board Settings in PlatformIO INI
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. It demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:reel_board]
platform = nordicnrf52
board = reel_board

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing RedBearLab Blend Micro 3.3V/8MHz Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and MCU frequency for the RedBearLab Blend Micro 3.3V/8MHz.

LANGUAGE: ini
CODE:
[env:blendmicro8]
platform = atmelavr
board = blendmicro8

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Customizing Adafruit Feather M4 Express settings in PlatformIO INI file
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m4]
platform = atmelsam
board = adafruit_feather_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Customizing S.ODI Ultra v1 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:s_odi_ultra]
platform = espressif32
board = s_odi_ultra

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Basic FRDM-K66F Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a PlatformIO environment for the FRDM-K66F board using the freescalekinetis platform.

LANGUAGE: ini
CODE:
[env:frdm_k66f]
platform = freescalekinetis
board = frdm_k66f

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Example of overriding default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:waveshare_ble400]
platform = nordicnrf51
board = waveshare_ble400

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Configuring ATmega324P Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega324P board in the PlatformIO project configuration file. It demonstrates setting the platform and board, as well as overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATmega324P]
platform = atmelavr
board = ATmega324P

; change microcontroller
board_build.mcu = atmega324p

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring BluePill F103C6 Basic Settings
DESCRIPTION: Basic PlatformIO configuration for the BluePill F103C6 board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:bluepill_f103c6]
platform = ststm32
board = bluepill_f103c6

----------------------------------------

TITLE: Setting Upload Protocol for MH ET LIVE ESP32MiniKit
DESCRIPTION: Demonstrates how to set a specific upload protocol for the MH ET LIVE ESP32MiniKit board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:mhetesp32minikit]
platform = espressif32
board = mhetesp32minikit

upload_protocol = esptool

----------------------------------------

TITLE: Customizing STC8H1K17 Board Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K17]
platform = intel_mcs51
board = STC8H1K17

; change microcontroller
board_build.mcu = stc8h1k17

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Minitronics v2.0 Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:minitronics20]
platform = atmelsam
board = minitronics20

; change microcontroller
board_build.mcu = samd21j18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing AVR64DB48 Board Settings in PlatformIO
DESCRIPTION: Advanced INI configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:AVR64DB48]
platform = atmelmegaavr
board = AVR64DB48

; change microcontroller
board_build.mcu = avr64db48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Basic Calliope Mini Board Settings
DESCRIPTION: Basic PlatformIO configuration for the Calliope mini board using the nordicnrf51 platform.

LANGUAGE: ini
CODE:
[env:calliope_mini]
platform = nordicnrf51
board = calliope_mini

----------------------------------------

TITLE: Configuring MakerAsia Nano32 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the build environment for the MakerAsia Nano32 board in the PlatformIO configuration file. It includes the basic board setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:nano32]
platform = espressif32
board = nano32

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Smart Bee Motion Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Smart Bee Motion board in a PlatformIO project's configuration file. It sets the platform to espressif32 and the board to bee_motion.

LANGUAGE: ini
CODE:
[env:bee_motion]
platform = espressif32
board = bee_motion

----------------------------------------

TITLE: Setting Upload Protocol for RedBearLab BLE Nano 2
DESCRIPTION: This configuration snippet demonstrates how to set the upload protocol for the RedBearLab BLE Nano 2 board in a PlatformIO project. It uses the CMSIS-DAP protocol as an example.

LANGUAGE: ini
CODE:
[env:redbear_blenano2]
platform = nordicnrf52
board = redbear_blenano2

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Customizing MCU and Clock Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the STM32G071B Discovery board.

LANGUAGE: ini
CODE:
[env:disco_g071rb]
platform = ststm32
board = disco_g071rb

; change microcontroller
board_build.mcu = stm32g071rbt6

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Configuring Basic SparkFun Pro Micro Board Settings
DESCRIPTION: Basic configuration for setting up a SparkFun Pro Micro 3.3V/8MHz board project in PlatformIO using the atmelavr platform.

LANGUAGE: ini
CODE:
[env:sparkfun_promicro8]
platform = atmelavr
board = sparkfun_promicro8

----------------------------------------

TITLE: Configuring Adafruit pyBadge AirLift M4 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit pyBadge AirLift M4 board in a PlatformIO project's configuration file. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_pybadge_airlift_m4]
platform = atmelsam
board = adafruit_pybadge_airlift_m4

; change microcontroller
board_build.mcu = samd51j20a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Advanced N79E815 Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E815]
platform = intel_mcs51
board = N79E815

; change microcontroller
board_build.mcu = n79e815

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Setting Upload Protocol for Ruuvi Tag
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Ruuvi Tag board. Default protocol is JLink but can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:ruuvitag]
platform = nordicnrf52
board = ruuvitag

upload_protocol = jlink

----------------------------------------

TITLE: Configuring ATmega3290 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the ATmega3290 board in a PlatformIO project configuration file. It demonstrates setting the platform and board, as well as how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATmega3290]
platform = atmelavr
board = ATmega3290

; change microcontroller
board_build.mcu = atmega3290

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Trueverit ESP32 Universal IoT Driver Board Settings
DESCRIPTION: Demonstrates how to override default board settings such as microcontroller and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:trueverit-iot-driver]
platform = espressif32
board = trueverit-iot-driver

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring BluePill F103C8 (128k) Board in PlatformIO
DESCRIPTION: Basic configuration for the BluePill F103C8 (128k) board in the project's platformio.ini file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:bluepill_f103c8_128k]
platform = ststm32
board = bluepill_f103c8_128k

----------------------------------------

TITLE: Structuring FAQ Table of Contents in reStructuredText
DESCRIPTION: This snippet defines the table of contents for the FAQ section using reStructuredText directives. It includes various FAQ categories as separate pages.

LANGUAGE: restructuredtext
CODE:
.. toctree::
    :maxdepth: 2

    general
    arduino-vs-platformio
    install-python
    advanced-serial-monitor
    program-memory-usage
    ino-to-cpp
    custom-scons-cli-options
    troubleshooting

----------------------------------------

TITLE: Basic PlatformIO Board Configuration for STC8H3K64S2
DESCRIPTION: Basic environment configuration for STC8H3K64S2 board using the intel_mcs51 platform in platformio.ini

LANGUAGE: ini
CODE:
[env:STC8H3K64S2]
platform = intel_mcs51
board = STC8H3K64S2

----------------------------------------

TITLE: Customizing MCU and Clock Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Wio Terminal.

LANGUAGE: ini
CODE:
[env:seeed_wio_terminal]
platform = atmelsam
board = seeed_wio_terminal

; change microcontroller
board_build.mcu = samd51p19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Customizing Curiosity Nano AVR128DA48 Build Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:curiosity_nano_da]
platform = atmelmegaavr
board = curiosity_nano_da

; change microcontroller
board_build.mcu = avr128da48

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the RedBearLab BLE Nano 1.5.

LANGUAGE: ini
CODE:
[env:redBearLabBLENano]
platform = nordicnrf51
board = redBearLabBLENano

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Configuring Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the ATMegaZero ESP32-S2 board, using esptool as the default option.

LANGUAGE: ini
CODE:
[env:atmegazero_esp32s2]
platform = espressif32
board = atmegazero_esp32s2

upload_protocol = esptool

----------------------------------------

TITLE: Configuring Basic ESP32 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the Microduino Core ESP32 board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:microduino-core-esp32]
platform = espressif32
board = microduino-core-esp32

----------------------------------------

TITLE: Customizing NXP i.MX RT1064 Evaluation Kit Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mimxrt1064_evk]
platform = nxpimxrt
board = mimxrt1064_evk

; change microcontroller
board_build.mcu = mimxrt1064dvl6a

; change MCU frequency
board_build.f_cpu = 600000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the Adafruit Flora board.

LANGUAGE: ini
CODE:
[env:flora8]\nplatform = atmelavr\nboard = flora8\n\n; change microcontroller\nboard_build.mcu = atmega32u4\n\n; change MCU frequency\nboard_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for NIBO Burger
DESCRIPTION: Basic PlatformIO environment configuration for the NIBO burger robot board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:niboburger_1284]
platform = atmelavr
board = niboburger_1284

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Configuration showing how to override default board settings like microcontroller and CPU frequency

LANGUAGE: ini
CODE:
[env:adafruit_trinket_m0]
platform = atmelsam
board = adafruit_trinket_m0

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Generic N79E854 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic N79E854 board in a PlatformIO project's configuration file. It demonstrates setting the platform and board ID, as well as how to override default board settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:N79E854]
platform = intel_mcs51
board = N79E854

; change microcontroller
board_build.mcu = n79e854

; change MCU frequency
board_build.f_cpu = 22118400L

----------------------------------------

TITLE: Configuring PHYTEC reel board in PlatformIO INI
DESCRIPTION: Basic configuration for the PHYTEC reel board in the PlatformIO project configuration file. It sets the platform to nordicnrf52 and the board to reel_board.

LANGUAGE: ini
CODE:
[env:reel_board]
platform = nordicnrf52
board = reel_board

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for Sanguino ATmega644P board in platformio.ini file

LANGUAGE: ini
CODE:
[env:sanguino_atmega644p_8m]
platform = atmelavr
board = sanguino_atmega644p_8m

----------------------------------------

TITLE: Advanced M5Stack Timer CAM Configuration with MCU Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller settings like MCU type and frequency.

LANGUAGE: ini
CODE:
[env:m5stack-timer-cam]
platform = espressif32
board = m5stack-timer-cam

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol for BluePill F103C8 (128k)
DESCRIPTION: Configuration example showing how to set a specific upload protocol (stlink in this case) for the BluePill F103C8 (128k) board.

LANGUAGE: ini
CODE:
[env:bluepill_f103c8_128k]
platform = ststm32
board = bluepill_f103c8_128k

upload_protocol = stlink

----------------------------------------

TITLE: Custom MCU Configuration for ElectronutLabs Blip
DESCRIPTION: PlatformIO configuration with custom microcontroller and frequency settings for the ElectronutLabs Blip board.

LANGUAGE: ini
CODE:
[env:electronut_blip]
platform = nordicnrf52
board = electronut_blip

; change microcontroller
board_build.mcu = nrf52840

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8H4K64TLCD
DESCRIPTION: Basic environment configuration for the STC8H4K64TLCD board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC8H4K64TLCD]
platform = intel_mcs51
board = STC8H4K64TLCD

----------------------------------------

TITLE: Customizing SODAQ SFF Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sodaq_sff]
platform = atmelsam
board = sodaq_sff

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Custom MCU Configuration for FRDM-KW41Z
DESCRIPTION: Configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:frdm_kw41z]
platform = freescalekinetis
board = frdm_kw41z

; change microcontroller
board_build.mcu = mkw41z512vht4

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic VNG VBLUNO51 Board Settings
DESCRIPTION: Basic PlatformIO configuration for the VNG VBLUNO51 board using the Nordic nRF51 platform.

LANGUAGE: ini
CODE:
[env:vbluno51]
platform = nordicnrf51
board = vbluno51

----------------------------------------

TITLE: Configuring Basic SparkFun SAMD21 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the SparkFun SAMD21 Mini Breakout board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_mini_usb]
platform = atmelsam
board = sparkfun_samd21_mini_usb

----------------------------------------

TITLE: Configuring Basic ATtiny45 Environment in PlatformIO
DESCRIPTION: Basic INI configuration for setting up an ATtiny45 board environment in PlatformIO with default settings.

LANGUAGE: ini
CODE:
[env:attiny45]
platform = atmelavr
board = attiny45

----------------------------------------

TITLE: Configuring Basic SparkFun SAMD21 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the SparkFun SAMD21 Mini Breakout board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_mini_usb]
platform = atmelsam
board = sparkfun_samd21_mini_usb

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nexys_a7]
platform = openhw
board = nexys_a7

; change microcontroller
board_build.mcu = 

; change MCU frequency
board_build.f_cpu = 320000000L

----------------------------------------

TITLE: Advanced ATtiny13A Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:attiny13a]
platform = atmelavr
board = attiny13a

; change microcontroller
board_build.mcu = attiny13a

; change MCU frequency
board_build.f_cpu = 9600000L

----------------------------------------

TITLE: Overriding Default SparkFun Mega Pro 5V/16MHz Settings
DESCRIPTION: This example demonstrates how to override default board settings in a PlatformIO project. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_megapro16MHz]
platform = atmelavr
board = sparkfun_megapro16MHz

; change microcontroller
board_build.mcu = atmega2560

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Upload Protocol Settings
DESCRIPTION: Configuration example for specifying the upload protocol for the board, using sam-ba as the default option.

LANGUAGE: ini
CODE:
[env:adafruit_neotrinkey_m0]
platform = atmelsam
board = adafruit_neotrinkey_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring Basic ML54MD1AE Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ML54MD1AE board using the intel_mcs51 platform. Defines the minimum required settings in the project's configuration file.

LANGUAGE: ini
CODE:
[env:ML54MD1AE]
platform = intel_mcs51
board = ML54MD1AE

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example for specifying the upload protocol for the PHYTEC reel board v2, using CMSIS-DAP as the protocol.

LANGUAGE: ini
CODE:
[env:reel_board_v2]
platform = nordicnrf52
board = reel_board_v2

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Customizing ATmega1609 Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the ATmega1609 board.

LANGUAGE: ini
CODE:
[env:ATmega1609]
platform = atmelmegaavr
board = ATmega1609

; change microcontroller
board_build.mcu = atmega1609

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the SparkFun Blynk Board.

LANGUAGE: ini
CODE:
[env:sparkfunBlynk]
platform = espressif8266
board = sparkfunBlynk

upload_protocol = esptool

----------------------------------------

TITLE: Configuring ST Discovery F072RB Board in PlatformIO
DESCRIPTION: Sets up the basic configuration for using the ST Discovery F072RB board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:disco_f072rb]
platform = ststm32
board = disco_f072rb

----------------------------------------

TITLE: Configuring ATtiny212 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny212 board in the PlatformIO project configuration file. It demonstrates setting the platform and board, as well as overriding default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:ATtiny212]
platform = atmelmegaavr
board = ATtiny212

; change microcontroller
board_build.mcu = attiny212

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing Raspberry Pi 3B Hardware Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for Raspberry Pi 3 Model B.

LANGUAGE: ini
CODE:
[env:raspberrypi_3b]
platform = linux_arm
board = raspberrypi_3b

; change microcontroller
board_build.mcu = bcm2837

; change MCU frequency
board_build.f_cpu = 1200000000L

----------------------------------------

TITLE: Configuring Basic ESP-Mx DevKit Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ESP-Mx DevKit board using PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:espmxdevkit]
platform = espressif8266
board = espmxdevkit

----------------------------------------

TITLE: Configuring BBC micro:bit Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the BBC micro:bit board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:bbcmicrobit]
platform = nordicnrf51
board = bbcmicrobit

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Basic hackaBLE Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up a hackaBLE board project in platformio.ini. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:hackaBLE]
platform = nordicnrf52
board = hackaBLE

----------------------------------------

TITLE: Configuring Basic ESP32 Board Settings
DESCRIPTION: Basic PlatformIO configuration for setting up the AZ-Delivery ESP-32 Dev Kit C V4 board with default settings.

LANGUAGE: ini
CODE:
[env:az-delivery-devkit-v4]
platform = espressif32
board = az-delivery-devkit-v4

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Base configuration for using Adafruit Feather ESP32-S2 Reverse TFT board in PlatformIO projects.

LANGUAGE: ini
CODE:
[env:adafruit_feather_esp32s2_reversetft]
platform = espressif32
board = adafruit_feather_esp32s2_reversetft

----------------------------------------

TITLE: Configuring Basic Board Settings with PlatformIO
DESCRIPTION: Basic configuration for Arduino Uno R4 Minima board using PlatformIO. Sets up the board with the Renesas RA platform.

LANGUAGE: ini
CODE:
[env:uno_r4_minima]
platform = renesas-ra
board = uno_r4_minima

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103RF
DESCRIPTION: Example configuration for specifying the upload protocol. The board supports blackmagic, dfu, jlink, serial, and stlink protocols.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RF]
platform = ststm32
board = genericSTM32F103RF

upload_protocol = serial

----------------------------------------

TITLE: Customizing SODAQ Tatu Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default settings for the SODAQ Tatu board in the PlatformIO configuration. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:sodaq_tatu]
platform = atmelavr
board = sodaq_tatu

; change microcontroller
board_build.mcu = atmega1284p

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Configuration example demonstrating how to specify the upload protocol for the Adafruit Crickit M0 board.

LANGUAGE: ini
CODE:
[env:adafruit_crickit_m0]
platform = atmelsam
board = adafruit_crickit_m0

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing IAP12C5A62S2 Board Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:IAP12C5A62S2]
platform = intel_mcs51
board = IAP12C5A62S2

; change microcontroller
board_build.mcu = iap12c5a62s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for Pinaka board using the Shakti platform in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:pinaka]
platform = shakti
board = pinaka

----------------------------------------

TITLE: Customizing Xplained Pro ATmega4809 Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:xplained_pro_4809]
platform = atmelmegaavr
board = xplained_pro_4809

; change microcontroller
board_build.mcu = atmega4809

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing SparkFun ESP8266 Thing Dev Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings such as microcontroller and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:thingdev]
platform = espressif8266
board = thingdev

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for 32F723EDISCOVERY
DESCRIPTION: Minimal configuration required to use the 32F723EDISCOVERY board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:disco_f723ie]
platform = ststm32
board = disco_f723ie

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo G0B1RE
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the ST Nucleo G0B1RE board in a PlatformIO project. It uses the ST-Link protocol, which is the default for this board.

LANGUAGE: ini
CODE:
[env:nucleo_g0b1re]
platform = ststm32
board = nucleo_g0b1re

upload_protocol = stlink

----------------------------------------

TITLE: Customizing MAX32600mbed Board Settings in PlatformIO INI File
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency for the MAX32600mbed board in the platformio.ini file.

LANGUAGE: ini
CODE:
[env:max32600mbed]
platform = maxim32
board = max32600mbed

; change microcontroller
board_build.mcu = max32600

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Setting Upload Protocol for Invent One
DESCRIPTION: This configuration snippet shows how to set a specific upload protocol for the Invent One board. In this case, it sets the upload protocol to esptool.

LANGUAGE: ini
CODE:
[env:inventone]
platform = espressif8266
board = inventone

upload_protocol = esptool

----------------------------------------

TITLE: Configuring pyupdi Upload Settings
DESCRIPTION: PlatformIO configuration for using pyupdi to upload firmware to an ATmega3209 device

LANGUAGE: ini
CODE:
[env:ATmega3209_pyupdi_upload]
platform = atmelmegaavr
framework = arduino
board = ATmega3209
upload_speed = 115200
upload_flags =
    -d
    mega3209
    -c
    $UPLOAD_PORT
    -b
    $UPLOAD_SPEED
upload_command = pyupdi $UPLOAD_FLAGS -f $SOURCE

----------------------------------------

TITLE: Customizing Generic IAP15W4K58S4 Board Settings in PlatformIO
DESCRIPTION: This snippet illustrates how to override default board settings for the Generic IAP15W4K58S4 in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:IAP15W4K58S4]
platform = intel_mcs51
board = IAP15W4K58S4

; change microcontroller
board_build.mcu = iap15w4k58s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Parashu Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Parashu board in the PlatformIO project configuration file. It sets the platform to Shakti and the board to Parashu.

LANGUAGE: ini
CODE:
[env:parashu]
platform = shakti
board = parashu

----------------------------------------

TITLE: Configuring Basic Board Settings for Arduino Uno R4 WiFi
DESCRIPTION: Basic PlatformIO configuration for Arduino Uno R4 WiFi board using the Renesas RA platform. Sets up the basic environment with board identifier.

LANGUAGE: ini
CODE:
[env:uno_r4_wifi]
platform = renesas-ra
board = uno_r4_wifi

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8G2K32S4
DESCRIPTION: This snippet shows how to configure the PlatformIO environment for the Generic STC8G2K32S4 board. It sets the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8G2K32S4]
platform = intel_mcs51
board = STC8G2K32S4

----------------------------------------

TITLE: Configuring PlatformIO Environment for Arduino Yun
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the Arduino Yun board. It sets the platform to atmelavr and the board to yun.

LANGUAGE: ini
CODE:
[env:yun]
platform = atmelavr
board = yun

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Base configuration for SparkFun SAMD21 Pro RF board in platformio.ini. Sets up the basic environment with atmelsam platform.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_proRF]
platform = atmelsam
board = sparkfun_samd21_proRF

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example demonstrating how to customize the microcontroller and frequency settings for the STC15F101 board in PlatformIO.

LANGUAGE: ini
CODE:
[env:STC15F101]
platform = intel_mcs51
board = STC15F101

; change microcontroller
board_build.mcu = stc15f101

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Parashu Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default Parashu board settings in the PlatformIO configuration. It changes the microcontroller to E-Class and sets the MCU frequency to 50MHz.

LANGUAGE: ini
CODE:
[env:parashu]
platform = shakti
board = parashu

; change microcontroller
board_build.mcu = E-Class

; change MCU frequency
board_build.f_cpu = 50000000L

----------------------------------------

TITLE: Customizing Digilent chipKIT uC32 Build Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project configuration. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:chipkit_uc32]
platform = microchippic32
board = chipkit_uc32

; change microcontroller
board_build.mcu = 32MX340F512H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for BBC micro:bit in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the BBC micro:bit board in the PlatformIO project configuration file. It uses the CMSIS-DAP protocol as an example.

LANGUAGE: ini
CODE:
[env:bbcmicrobit]
platform = nordicnrf51
board = bbcmicrobit

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Setting Upload Protocol for ST 32L476GDISCOVERY
DESCRIPTION: Configuration to set the upload protocol for the ST 32L476GDISCOVERY board. The default protocol is 'stlink', but this example shows how to explicitly set it.

LANGUAGE: ini
CODE:
[env:disco_l476vg]
platform = ststm32
board = disco_l476vg

upload_protocol = stlink

----------------------------------------

TITLE: Customizing 4D Systems GEN4-ESP32 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:4d_systems_esp32s3_gen4_r8n16]
platform = espressif32
board = 4d_systems_esp32s3_gen4_r8n16

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring Nordic Beacon Kit in PlatformIO
DESCRIPTION: Basic configuration for the Nordic Beacon Kit (PCA20006) in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:nrf51_beacon]
platform = nordicnrf51
board = nrf51_beacon

----------------------------------------

TITLE: Customizing Generic8051 Board Settings in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings including microcontroller type and CPU frequency in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:Generic8051]
platform = intel_mcs51
board = Generic8051

; change microcontroller
board_build.mcu = 8051

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the ST Nucleo L4R5ZI board.

LANGUAGE: ini
CODE:
[env:nucleo_l4r5zi]
platform = ststm32
board = nucleo_l4r5zi

; change microcontroller
board_build.mcu = stm32l4r5zit6

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring NXP LPCXpresso54114 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the NXP LPCXpresso54114 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lpc54114]
platform = nxplpc
board = lpc54114

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15W4K48S4]
platform = intel_mcs51
board = STC15W4K48S4

; change microcontroller
board_build.mcu = stc15w4k48s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Arduino Portenta H7 (M7 core) in PlatformIO
DESCRIPTION: This snippet shows the basic PlatformIO configuration for the Arduino Portenta H7 (M7 core) board. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:portenta_h7_m7]
platform = ststm32
board = portenta_h7_m7

----------------------------------------

TITLE: Configuring PlatformIO Environment for Arty A7-100 Board
DESCRIPTION: Basic PlatformIO configuration for the Arty A7-100 board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:artix7_100t]
platform = shakti
board = artix7_100t

----------------------------------------

TITLE: Configuring Advanced Board Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the Smart Bee Data Logger board.

LANGUAGE: ini
CODE:
[env:bee_data_logger]
platform = espressif32
board = bee_data_logger

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Setting Upload Protocol in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol for the board, using sam-ba as the selected protocol.

LANGUAGE: ini
CODE:
[env:adafruit_monster_m4sk]
platform = atmelsam
board = adafruit_monster_m4sk

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing ATtiny402 Board Settings in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the ATtiny402 board.

LANGUAGE: ini
CODE:
[env:ATtiny402]
platform = atmelmegaavr
board = ATtiny402

; change microcontroller
board_build.mcu = attiny402

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Demonstrates how to override default board settings like microcontroller model and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:STC15F205A]
platform = intel_mcs51
board = STC15F205A

; change microcontroller
board_build.mcu = stc15f205a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring HiFive Unleashed Board in platformio.ini
DESCRIPTION: Basic configuration for the HiFive Unleashed board in the project's platformio.ini file. This sets up the build environment with the correct platform and board ID.

LANGUAGE: ini
CODE:
[env:hifive-unleashed]
platform = sifive
board = hifive-unleashed

----------------------------------------

TITLE: Configuring Pontech NoFire Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Pontech NoFire board in a PlatformIO project's configuration file. It sets the platform and board ID, and demonstrates how to override default board settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nofire]
platform = microchippic32
board = nofire

; change microcontroller
board_build.mcu = 32MZ2048EFG100

; change MCU frequency
board_build.f_cpu = 200000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for Digilent OpenScope
DESCRIPTION: This snippet demonstrates how to set up a PlatformIO environment for the Digilent OpenScope board. It specifies the platform and board ID, and shows how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:openscope]
platform = microchippic32
board = openscope

; change microcontroller
board_build.mcu = 32MZ2048EFG124

; change MCU frequency
board_build.f_cpu = 200000000L

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration for specifying the upload protocol (supports blackmagic, dfu, jlink, and stlink).

LANGUAGE: ini
CODE:
[env:econode_l082cz]
platform = ststm32
board = econode_l082cz

upload_protocol = dfu

----------------------------------------

TITLE: Configuring Generic STC8F1K17S2 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic STC8F1K17S2 board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8F1K17S2]
platform = intel_mcs51
board = STC8F1K17S2

; change microcontroller
board_build.mcu = stc8f1k17s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for ST Discovery F072RB
DESCRIPTION: Shows how to specify the upload protocol for the ST Discovery F072RB board, using stlink as an example.

LANGUAGE: ini
CODE:
[env:disco_f072rb]
platform = ststm32
board = disco_f072rb

upload_protocol = stlink

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:IAP15W1K29S]
platform = intel_mcs51
board = IAP15W1K29S

; change microcontroller
board_build.mcu = iap15w1k29s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for Sonoff SV in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the Sonoff SV board. This example sets it to 'esptool', which is the default protocol.

LANGUAGE: ini
CODE:
[env:sonoff_sv]
platform = espressif8266
board = sonoff_sv

upload_protocol = esptool

----------------------------------------

TITLE: Configuring GAPuino GAP8 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the GAPuino GAP8 board in a PlatformIO project's ini file. It includes the basic board setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:gapuino]
platform = riscv_gap
board = gapuino

; change microcontroller
board_build.mcu = gap8

; change MCU frequency
board_build.f_cpu = 250000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for Olimex MOD-WIFI-ESP8266
DESCRIPTION: Basic board configuration for PlatformIO project using the Olimex MOD-WIFI-ESP8266(-DEV) board.

LANGUAGE: ini
CODE:
[env:modwifi]
platform = espressif8266
board = modwifi

----------------------------------------

TITLE: Configuring BlackPill F103C8 Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the BlackPill F103C8 board, including platform and board selection. Additional options demonstrate how to override default microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:blackpill_f103c8]
platform = ststm32
board = blackpill_f103c8

; change microcontroller
board_build.mcu = stm32f103c8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol for Arty A7-100 Board
DESCRIPTION: Configuration example for specifying the upload protocol. Shows how to set the protocol to FTDI.

LANGUAGE: ini
CODE:
[env:artix7_100t]
platform = shakti
board = artix7_100t

upload_protocol = ftdi

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration for STC8H3K32S4 board with custom microcontroller and frequency settings using board_build options.

LANGUAGE: ini
CODE:
[env:STC8H3K32S4]
platform = intel_mcs51
board = STC8H3K32S4

; change microcontroller
board_build.mcu = stc8h3k32s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Adafruit Gemma M0 settings in PlatformIO INI file
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. It demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_gemma_m0]
platform = atmelsam
board = adafruit_gemma_m0

; change microcontroller
board_build.mcu = samd21e18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Generic STC15F2K60S2 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic STC15F2K60S2 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K60S2]
platform = intel_mcs51
board = STC15F2K60S2

; change microcontroller
board_build.mcu = stc15f2k60s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board.

LANGUAGE: ini
CODE:
[env:cloud_jam]
platform = ststm32
board = cloud_jam

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic PICadillo 35T Board Settings
DESCRIPTION: Basic PlatformIO configuration for setting up the PICadillo 35T board with the microchippic32 platform.

LANGUAGE: ini
CODE:
[env:picadillo_35t]
platform = microchippic32
board = picadillo_35t

----------------------------------------

TITLE: Customizing HelvePic32 Board Settings in PlatformIO
DESCRIPTION: This code demonstrates how to override default HelvePic32 settings in a PlatformIO environment. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:helvepic32]
platform = microchippic32
board = helvepic32

; change microcontroller
board_build.mcu = 32MX250F128B

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic STM32F103C4 Board Settings
DESCRIPTION: Basic board configuration showing how to specify the platform and board type for an STM32F103C4 project

LANGUAGE: ini
CODE:
[env:genericSTM32F103C4]
platform = ststm32
board = genericSTM32F103C4

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for using the ST 32F3348DISCOVERY board with the STM32 platform in PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:disco_f334c8]
platform = ststm32
board = disco_f334c8

----------------------------------------

TITLE: Basic ML56MD1AE Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up the ML56MD1AE board in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ML56MD1AE]
platform = intel_mcs51
board = ML56MD1AE

----------------------------------------

TITLE: Customizing Arduino Mini ATmega168 MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the Arduino Mini ATmega168 board.

LANGUAGE: ini
CODE:
[env:miniatmega168]
platform = atmelavr
board = miniatmega168

; change microcontroller
board_build.mcu = atmega168

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing STM32F407ZG MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Black STM32F407ZG board.

LANGUAGE: ini
CODE:
[env:black_f407zg]
platform = ststm32
board = black_f407zg

; change microcontroller
board_build.mcu = stm32f407zgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing Deneyap Mini v2 Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:deneyapminiv2]
platform = espressif32
board = deneyapminiv2

; change microcontroller
board_build.mcu = esp32s2

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring AVR64DB28 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AVR64DB28 board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:AVR64DB28]
platform = atmelmegaavr
board = AVR64DB28

; change microcontroller
board_build.mcu = avr64db28

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Customizing STM32373C-EVAL MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the STM32373C-EVAL board

LANGUAGE: ini
CODE:
[env:eval_f373vc]
platform = ststm32
board = eval_f373vc

; change microcontroller
board_build.mcu = stm32f373vct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing STC8G2K60S2 Board Parameters
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8G2K60S2]
platform = intel_mcs51
board = STC8G2K60S2

; change microcontroller
board_build.mcu = stc8g2k60s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Board MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the Adafruit Feather M4 CAN board.

LANGUAGE: ini
CODE:
[env:adafruit_feather_m4_can]
platform = atmelsam
board = adafruit_feather_m4_can

; change microcontroller
board_build.mcu = same51j19a

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring LPCXpresso11U68 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the LPCXpresso11U68 board in the PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lpc11u68]
platform = nxplpc
board = lpc11u68

; change microcontroller
board_build.mcu = lpc11u68

; change MCU frequency
board_build.f_cpu = 50000000L

----------------------------------------

TITLE: Customizing STC8A8K32D4 Board Settings in PlatformIO
DESCRIPTION: This code demonstrates how to override default settings for the Generic STC8A8K32D4 board in a PlatformIO environment. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8A8K32D4]
platform = intel_mcs51
board = STC8A8K32D4

; change microcontroller
board_build.mcu = stc8a8k32d4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO Environment for STM32F103RE
DESCRIPTION: This snippet shows how to configure a PlatformIO environment for the STM32F103RE board in the project configuration file. It specifies the platform and board to use.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RE]
platform = ststm32
board = genericSTM32F103RE

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZG]
platform = ststm32
board = genericSTM32F103ZG

; change microcontroller
board_build.mcu = stm32f103zgt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring HelvePic32 MX270 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the HelvePic32 MX270 board in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:helvepic32_mx270]
platform = microchippic32
board = helvepic32_mx270

; change microcontroller
board_build.mcu = 32MX270F256B

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Black STM32F407VE Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:black_f407ve]
platform = ststm32
board = black_f407ve

; change microcontroller
board_build.mcu = stm32f407vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing ST 32F401CDISCOVERY Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. It demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_f401vc]
platform = ststm32
board = disco_f401vc

; change microcontroller
board_build.mcu = stm32f401vct6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Advanced MS51XB9AE Board Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:MS51XB9AE]
platform = intel_mcs51
board = MS51XB9AE

; change microcontroller
board_build.mcu = ms51xb9ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic STC15F204A Board Configuration
DESCRIPTION: Minimal configuration required to set up STC15F204A board in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC15F204A]
platform = intel_mcs51
board = STC15F204A

----------------------------------------

TITLE: Custom MCU Configuration
DESCRIPTION: PlatformIO configuration with custom microcontroller and frequency settings for BluePill F103C8

LANGUAGE: ini
CODE:
[env:bluepill_f103c8]
platform = ststm32
board = bluepill_f103c8

; change microcontroller
board_build.mcu = stm32f103c8t6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol Configuration
DESCRIPTION: Example showing how to specify the upload protocol for the ST Nucleo L053R8 board, with stlink as the selected protocol.

LANGUAGE: ini
CODE:
[env:nucleo_l053r8]
platform = ststm32
board = nucleo_l053r8

upload_protocol = stlink

----------------------------------------

TITLE: Configuring ATmega328P Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATmega328P board in the PlatformIO project configuration file. It sets the platform to atmelavr and specifies the board as ATmega328P.

LANGUAGE: ini
CODE:
[env:ATmega328P]
platform = atmelavr
board = ATmega328P

----------------------------------------

TITLE: Configuring Gnat-L082CZ Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the Gnat-L082CZ board, including platform and board selection.

LANGUAGE: ini
CODE:
[env:gnat_l082cz]
platform = ststm32
board = gnat_l082cz

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103C6 in PlatformIO
DESCRIPTION: Example of specifying the upload protocol for the STM32F103C6 board. The default protocol is 'serial'.

LANGUAGE: ini
CODE:
[env:genericSTM32F103C6]
platform = ststm32
board = genericSTM32F103C6

upload_protocol = serial

----------------------------------------

TITLE: Basic STC8H04 Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up an STC8H04 board project. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:STC8H04]
platform = intel_mcs51
board = STC8H04

----------------------------------------

TITLE: Setting Upload Protocol for SparkFun 9DoF Razor IMU M0
DESCRIPTION: Configuration to specify the upload protocol for the SparkFun 9DoF Razor IMU M0 board. In this example, it's set to use the SAM-BA bootloader.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_9dof]
platform = atmelsam
board = sparkfun_samd21_9dof

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:mimxrt1060_evk]
platform = nxpimxrt
board = mimxrt1060_evk

; change microcontroller
board_build.mcu = mimxrt1062dvl6a

; change MCU frequency
board_build.f_cpu = 600000000L

----------------------------------------

TITLE: Overriding Default STC8G2K60S4 Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic STC8G2K60S4 board in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8G2K60S4]
platform = intel_mcs51
board = STC8G2K60S4

; change microcontroller
board_build.mcu = stc8g2k60s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Malyan M200 V1 Board in PlatformIO
DESCRIPTION: Basic configuration for using the Malyan M200 V1 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:malyanm200_f103cb]
platform = ststm32
board = malyanm200_f103cb

----------------------------------------

TITLE: Basic PlatformIO Configuration for PIC32-PINGUINO
DESCRIPTION: Basic configuration using the pinguino32 board ID in the PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:pinguino32]
platform = microchippic32
board = pinguino32

----------------------------------------

TITLE: Customizing STC8H1K24 Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default board settings for the STC8H1K24. It shows how to change the microcontroller and MCU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:STC8H1K24]
platform = intel_mcs51
board = STC8H1K24

; change microcontroller
board_build.mcu = stc8h1k24

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F417VE in PlatformIO
DESCRIPTION: Configuration example for specifying the upload protocol in PlatformIO. It sets the protocol to serial, which is the default for this board.

LANGUAGE: ini
CODE:
[env:genericSTM32F417VE]
platform = ststm32
board = genericSTM32F417VE

upload_protocol = serial

----------------------------------------

TITLE: Setting Upload Protocol for ST 32F429IDISCOVERY
DESCRIPTION: Configuration to specify the upload protocol for the ST 32F429IDISCOVERY board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:disco_f429zi]
platform = ststm32
board = disco_f429zi

upload_protocol = stlink

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F102]
platform = intel_mcs51
board = STC15F102

; change microcontroller
board_build.mcu = stc15f102

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to use the FRDM-K64F board with PlatformIO build system.

LANGUAGE: ini
CODE:
[env:frdm_k64f]
platform = freescalekinetis
board = frdm_k64f

----------------------------------------

TITLE: Configuring ST 32L100DISCOVERY Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the ST 32L100DISCOVERY board in a PlatformIO project's configuration file. It includes options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:disco_l100rc]
platform = ststm32
board = disco_l100rc

; change microcontroller
board_build.mcu = stm32l100rct6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Customizing FeatherS3 MCU Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the FeatherS3 board.

LANGUAGE: ini
CODE:
[env:um_feathers3]
platform = espressif32
board = um_feathers3

; change microcontroller
board_build.mcu = esp32s3

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring ATtiny824 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny824 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny824]
platform = atmelmegaavr
board = ATtiny824

; change microcontroller
board_build.mcu = attiny824

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring STM32F103T8 Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F103T8 board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F103T8]
platform = ststm32
board = genericSTM32F103T8

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103CB
DESCRIPTION: Configures the upload protocol for the STM32F103CB board in the project configuration file. The default protocol is 'stlink', but this example shows how to change it.

LANGUAGE: ini
CODE:
[env:genericSTM32F103CB]
platform = ststm32
board = genericSTM32F103CB

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Grand Central M4
DESCRIPTION: This configuration demonstrates how to set the upload protocol for the Adafruit Grand Central M4 board in PlatformIO. The default protocol is 'sam-ba', but it can be changed to other supported protocols like 'atmel-ice' or 'jlink'.

LANGUAGE: ini
CODE:
[env:adafruit_grandcentral_m4]
platform = atmelsam
board = adafruit_grandcentral_m4

upload_protocol = sam-ba

----------------------------------------

TITLE: Customizing Ruuvi Tag MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the Ruuvi Tag board.

LANGUAGE: ini
CODE:
[env:ruuvitag]
platform = nordicnrf52
board = ruuvitag

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO INI
DESCRIPTION: Basic configuration for setting up the STC8H1K32S2 board in platformio.ini project file.

LANGUAGE: ini
CODE:
[env:STC8H1K32S2]
platform = intel_mcs51
board = STC8H1K32S2

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for the Demo F030F4 board using the ststm32 platform in PlatformIO

LANGUAGE: ini
CODE:
[env:demo_f030f4]
platform = ststm32
board = demo_f030f4

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Initial configuration setup for STC8F1K08S2 board in platformio.ini config file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8F1K08S2]
platform = intel_mcs51
board = STC8F1K08S2

----------------------------------------

TITLE: Configuring Basic STM32F103V8 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the STM32F103V8 board in platformio.ini, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:genericSTM32F103V8]
platform = ststm32
board = genericSTM32F103V8

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Seeeduino XIAO board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:seeed_xiao]
platform = atmelsam
board = seeed_xiao

----------------------------------------

TITLE: Setting Upload Protocol
DESCRIPTION: Configuration example for specifying the upload protocol (stlink, jlink, mbed, etc.) for the board.

LANGUAGE: ini
CODE:
[env:disco_f469ni]
platform = ststm32
board = disco_f469ni

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic STC15F202A Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15F202A board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15F202A]
platform = intel_mcs51
board = STC15F202A

; change microcontroller
board_build.mcu = stc15f202a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8F2K16S4]
platform = intel_mcs51
board = STC8F2K16S4

; change microcontroller
board_build.mcu = stc8f2k16s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F103RE in PlatformIO
DESCRIPTION: This snippet shows how to specify the upload protocol for the STM32F103RE board in the PlatformIO configuration. In this case, it sets the protocol to 'stlink'.

LANGUAGE: ini
CODE:
[env:genericSTM32F103RE]
platform = ststm32
board = genericSTM32F103RE

upload_protocol = stlink

----------------------------------------

TITLE: Configuring SG-O AirMon Board in PlatformIO
DESCRIPTION: Basic configuration for using the SG-O AirMon board in a PlatformIO project's environment. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sg-o_airMon]
platform = espressif32
board = sg-o_airMon

----------------------------------------

TITLE: Customizing ATmega88PB Board Settings in PlatformIO
DESCRIPTION: Advanced PlatformIO configuration showing how to override default microcontroller and frequency settings for the ATmega88PB board.

LANGUAGE: ini
CODE:
[env:ATmega88PB]
platform = atmelavr
board = ATmega88PB

; change microcontroller
board_build.mcu = atmega88pb

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting upload protocol for STM32F103ZD in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the STM32F103ZD board. This example sets the upload protocol to ST-Link, which is the default for this board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZD]
platform = ststm32
board = genericSTM32F103ZD

upload_protocol = stlink

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC15F203A
DESCRIPTION: This snippet shows how to configure the build environment for the Generic STC15F203A board in the project's platformio.ini file. It sets the platform and board, and demonstrates how to override default settings.

LANGUAGE: ini
CODE:
[env:STC15F203A]
platform = intel_mcs51
board = STC15F203A

; change microcontroller
board_build.mcu = stc15f203a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Adafruit Crickit M0 board in platformio.ini file. Sets up the board and platform.

LANGUAGE: ini
CODE:
[env:adafruit_crickit_m0]
platform = atmelsam
board = adafruit_crickit_m0

----------------------------------------

TITLE: Setting Upload Protocol for u-blox EVK-NINA-B1
DESCRIPTION: Configuration example for specifying the upload protocol used to program the board.

LANGUAGE: ini
CODE:
[env:ublox_evk_nina_b1]
platform = nordicnrf52
board = ublox_evk_nina_b1

upload_protocol = jlink

----------------------------------------

TITLE: Customizing STorM32 BGC v1.31 RC Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:storm32_v1_31_rc]
platform = ststm32
board = storm32_v1_31_rc

; change microcontroller
board_build.mcu = stm32f103rct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing STC8H2K64T Board Settings
DESCRIPTION: This example demonstrates how to override default board settings in the PlatformIO environment. It shows how to change the microcontroller and MCU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:STC8H2K64T]
platform = intel_mcs51
board = STC8H2K64T

; change microcontroller
board_build.mcu = stc8h2k64t

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing STM32F407VG MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings like MCU model and frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F407VGT6]
platform = ststm32
board = genericSTM32F407VGT6

; change microcontroller
board_build.mcu = stm32f407vgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Advanced Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8F1K08S2]
platform = intel_mcs51
board = STC8F1K08S2

; change microcontroller
board_build.mcu = stc8f1k08s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic STM32F401CE Board Settings
DESCRIPTION: Basic PlatformIO configuration for STM32F401CE board using the ststm32 platform

LANGUAGE: ini
CODE:
[env:genericSTM32F401CE]
platform = ststm32
board = genericSTM32F401CE

----------------------------------------

TITLE: Setting Upload Protocol for Armed v1 Board
DESCRIPTION: PlatformIO configuration example showing how to set a specific upload protocol (ST-Link in this case) for the Armed v1 board.

LANGUAGE: ini
CODE:
[env:armed_v1]
platform = ststm32
board = armed_v1

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for STM32F401CE
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32F401CE board

LANGUAGE: ini
CODE:
[env:genericSTM32F401CE]
platform = ststm32
board = genericSTM32F401CE

upload_protocol = serial

----------------------------------------

TITLE: Customizing Generic STC15F2K16S2 Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default board settings in PlatformIO for the Generic STC15F2K16S2. It shows how to change the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K16S2]
platform = intel_mcs51
board = STC15F2K16S2

; change microcontroller
board_build.mcu = stc15f2k16s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Options
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the Digispark Pro board

LANGUAGE: ini
CODE:
[env:digispark-pro64]
platform = atmelavr
board = digispark-pro64

; change microcontroller
board_build.mcu = attiny167

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing STM32F103VB MCU and Frequency Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the STM32F103VB board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103VB]
platform = ststm32
board = genericSTM32F103VB

; change microcontroller
board_build.mcu = stm32f103vbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Basic Generic8052 Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up a Generic 8052 board environment in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:Generic8052]
platform = intel_mcs51
board = Generic8052

----------------------------------------

TITLE: Configuring STM3210C-EVAL Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the STM3210C-EVAL board in the PlatformIO project configuration file. It includes options for setting the board, platform, and optional microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:eval_f107vc]
platform = ststm32
board = eval_f107vc

; change microcontroller
board_build.mcu = stm32f107vct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32F407VG
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board using the stlink option.

LANGUAGE: ini
CODE:
[env:genericSTM32F407VGT6]
platform = ststm32
board = genericSTM32F407VGT6

upload_protocol = stlink

----------------------------------------

TITLE: Customizing STM32F4Stamp MCU Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the STM32F4Stamp board.

LANGUAGE: ini
CODE:
[env:stm32f4stamp]
platform = ststm32
board = stm32f4stamp

; change microcontroller
board_build.mcu = stm32f405rgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing Pontech Quick240 Board Settings in PlatformIO
DESCRIPTION: This snippet shows how to override default board settings in a PlatformIO project. It demonstrates changing the microcontroller and MCU frequency for the Pontech Quick240 board.

LANGUAGE: ini
CODE:
[env:quick240_usb]
platform = microchippic32
board = quick240_usb

; change microcontroller
board_build.mcu = 32MX795F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring PlatformIO for Fubarino Mini 2.0 in INI
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Fubarino Mini 2.0 board. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:fubarino_mini_20]
platform = microchippic32
board = fubarino_mini_20

; change microcontroller
board_build.mcu = 32MX270F256D

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Generic STC8H3K48S4 Board Settings in PlatformIO
DESCRIPTION: This snippet illustrates how to override default settings for the Generic STC8H3K48S4 board in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:STC8H3K48S4]
platform = intel_mcs51
board = STC8H3K48S4

; change microcontroller
board_build.mcu = stc8h3k48s4

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for Waveshare Open103Z board in platformio.ini file

LANGUAGE: ini
CODE:
[env:waveshare_open103z]
platform = ststm32
board = waveshare_open103z

----------------------------------------

TITLE: Customizing STC8G1K12 Board Settings in PlatformIO
DESCRIPTION: This example demonstrates how to override default board settings for the STC8G1K12. It shows how to change the microcontroller model and CPU frequency using board-specific options.

LANGUAGE: ini
CODE:
[env:STC8G1K12]
platform = intel_mcs51
board = STC8G1K12

; change microcontroller
board_build.mcu = stc8g1k12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Basic Board Configuration for ThunderPack
DESCRIPTION: Basic PlatformIO configuration to use the ThunderPack v1.1+ board with the STM32 platform

LANGUAGE: ini
CODE:
[env:thunder_pack_f411]
platform = ststm32
board = thunder_pack_f411

----------------------------------------

TITLE: Setting Upload Protocol for STM32F410R8
DESCRIPTION: Configuration example for specifying the upload protocol for the STM32F410R8 board.

LANGUAGE: ini
CODE:
[env:genericSTM32F410R8]
platform = ststm32
board = genericSTM32F410R8

upload_protocol = serial

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8F2K64S2
DESCRIPTION: Basic configuration snippet for setting up an STC8F2K64S2 build environment in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC8F2K64S2]
platform = intel_mcs51
board = STC8F2K64S2

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8F2K64S2
DESCRIPTION: Basic configuration snippet for setting up an STC8F2K64S2 build environment in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:STC8F2K64S2]
platform = intel_mcs51
board = STC8F2K64S2

----------------------------------------

TITLE: Customizing STM32F413RG MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the STM32F413RG board

LANGUAGE: ini
CODE:
[env:genericSTM32F413RG]
platform = ststm32
board = genericSTM32F413RG

; change microcontroller
board_build.mcu = stm32f413rgt6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing STC8A4K16S2A12 Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in the PlatformIO environment. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:STC8A4K16S2A12]
platform = intel_mcs51
board = STC8A4K16S2A12

; change microcontroller
board_build.mcu = stc8a4k16s2a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Arduino Robot Motor in PlatformIO INI File
DESCRIPTION: This snippet shows how to set up the build environment for the Arduino Robot Motor board in the PlatformIO configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:robotMotor]
platform = atmelavr
board = robotMotor

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Setting Upload Protocol for BL652 Development Kit
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the BL652 Development Kit in the PlatformIO configuration file. The default protocol is 'jlink', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:laird_bl652_dvk]
platform = nordicnrf52
board = laird_bl652_dvk

upload_protocol = jlink

----------------------------------------

TITLE: Customizing STM32F411RC MCU and Frequency Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the STM32F411RC board.

LANGUAGE: ini
CODE:
[env:genericSTM32F411RC]
platform = ststm32
board = genericSTM32F411RC

; change microcontroller
board_build.mcu = stm32f411rct6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for using Armstrap Eagle 512 board in PlatformIO project configuration file.

LANGUAGE: ini
CODE:
[env:armstrap_eagle512]
platform = ststm32
board = armstrap_eagle512

----------------------------------------

TITLE: Configuring ATtiny807 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny807 board in a PlatformIO project's configuration file (platformio.ini). It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATtiny807]
platform = atmelmegaavr
board = ATtiny807

; change microcontroller
board_build.mcu = attiny807

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for SeeedStudio LoRa-E5 mini
DESCRIPTION: Basic PlatformIO configuration for the SeeedStudio LoRa-E5 mini board. Sets the platform to ststm32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:lora_e5_mini]
platform = ststm32
board = lora_e5_mini

----------------------------------------

TITLE: Setting Upload Protocol for BL652 Development Kit
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the BL652 Development Kit in the PlatformIO configuration file. The default protocol is 'jlink', but this can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:laird_bl652_dvk]
platform = nordicnrf52
board = laird_bl652_dvk

upload_protocol = jlink

----------------------------------------

TITLE: Configuring ATtiny3226 Basic Board Settings
DESCRIPTION: Basic PlatformIO configuration for ATtiny3226 board setup defining the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny3226]
platform = atmelmegaavr
board = ATtiny3226

----------------------------------------

TITLE: Configuring SeeedStudio CUI32stem Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the SeeedStudio CUI32stem board in a PlatformIO project configuration file. It sets the platform and board, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:cui32stem]
platform = microchippic32
board = cui32stem

; change microcontroller
board_build.mcu = 32MX795F512H

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Customizing Digilent chipKIT Pro MX7 Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in PlatformIO. It shows examples of changing the microcontroller and MCU frequency for the Digilent chipKIT Pro MX7 board.

LANGUAGE: ini
CODE:
[env:chipkit_pro_mx7]
platform = microchippic32
board = chipkit_pro_mx7

; change microcontroller
board_build.mcu = 32MX795F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration showing how to customize microcontroller and frequency settings for the STM32F413CH board.

LANGUAGE: ini
CODE:
[env:genericSTM32F413CH]
platform = ststm32
board = genericSTM32F413CH

; change microcontroller
board_build.mcu = stm32f413chu6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring Generic ML51EB9AE Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Generic ML51EB9AE board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings such as the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML51EB9AE]
platform = intel_mcs51
board = ML51EB9AE

; change microcontroller
board_build.mcu = ml51eb9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring RushUp Cloud-JAM L4 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the RushUp Cloud-JAM L4 board in a PlatformIO project's configuration file. It includes the basic setup and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:cloud_jam_l4]
platform = ststm32
board = cloud_jam_l4

; change microcontroller
board_build.mcu = stm32l476rgt6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring STM32F413CG with Custom MCU Settings
DESCRIPTION: PlatformIO configuration showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F413CG]
platform = ststm32
board = genericSTM32F413CG

; change microcontroller
board_build.mcu = stm32f413cgu6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Customizing ThunderPack v1.0 MCU and Frequency in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Changes the microcontroller model and CPU frequency for the ThunderPack v1.0.

LANGUAGE: ini
CODE:
[env:thunder_pack]
platform = ststm32
board = thunder_pack

; change microcontroller
board_build.mcu = stm32l072kz

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Custom MCU Configuration
DESCRIPTION: Example showing how to customize microcontroller and frequency settings for the Leafony AP03 board

LANGUAGE: ini
CODE:
[env:leafony_ap03]
platform = ststm32
board = leafony_ap03

; change microcontroller
board_build.mcu = stm32l452ret6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8A8K32D4 Board
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic STC8A8K32D4 board in the project configuration file. It specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:STC8A8K32D4]
platform = intel_mcs51
board = STC8A8K32D4

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC8H1K08S2A10
DESCRIPTION: Basic configuration setup for the STC8H1K08S2A10 board in platformio.ini file.

LANGUAGE: ini
CODE:
[env:STC8H1K08S2A10]
platform = intel_mcs51
board = STC8H1K08S2A10

----------------------------------------

TITLE: Configuring STM32H750VBT6 Board in PlatformIO
DESCRIPTION: Basic configuration for using the STM32H750VBT6 board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32H750VB]
platform = ststm32
board = genericSTM32H750VB

----------------------------------------

TITLE: Setting Upload Protocol for RAK811 LoRa Tracker
DESCRIPTION: Example of changing the upload protocol for the RAK811 LoRa Tracker board in PlatformIO. The default protocol is 'stlink', but this snippet demonstrates how to change it.

LANGUAGE: ini
CODE:
[env:rak811_tracker]
platform = ststm32
board = rak811_tracker

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up an NXP mbed LPC1768 board project in platformio.ini. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:lpc1768]
platform = nxplpc
board = lpc1768

----------------------------------------

TITLE: Setting Upload Protocol for Malyan M200 V1
DESCRIPTION: Configuration example for specifying the upload protocol (e.g., stlink) for the Malyan M200 V1 board in a PlatformIO project.

LANGUAGE: ini
CODE:
[env:malyanm200_f103cb]
platform = ststm32
board = malyanm200_f103cb

upload_protocol = stlink

----------------------------------------

TITLE: Customizing SAMC21-XPRO MCU Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller and frequency settings for the SAMC21-XPRO board.

LANGUAGE: ini
CODE:
[env:samc21_xpro]
platform = atmelsam
board = samc21_xpro

; change microcontroller
board_build.mcu = samc21j18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency in the PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:sparkfun_thing_plus_v]
platform = sifive
board = sparkfun_thing_plus_v

; change microcontroller
board_build.mcu = fe310

; change MCU frequency
board_build.f_cpu = 320000000L

----------------------------------------

TITLE: Configuring PlatformIO for MikroElektronika Flip N Click MZ
DESCRIPTION: This snippet shows how to configure the project environment for the MikroElektronika Flip N Click MZ board in the PlatformIO configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:flipnclickmz]
platform = microchippic32
board = flipnclickmz

; change microcontroller
board_build.mcu = 32MZ2048EFH100

; change MCU frequency
board_build.f_cpu = 252000000L

----------------------------------------

TITLE: Setting Upload Protocol for Delta DFBM-NQ620
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board, using CMSIS-DAP as an example.

LANGUAGE: ini
CODE:
[env:delta_dfbm_nq620]
platform = nordicnrf52
board = delta_dfbm_nq620

upload_protocol = cmsis-dap

----------------------------------------

TITLE: Setting Upload Protocol for STM32F423RH
DESCRIPTION: Configuration to specify the upload protocol for the STM32F423RH board. In this example, it's set to serial.

LANGUAGE: ini
CODE:
[env:genericSTM32F423RH]
platform = ststm32
board = genericSTM32F423RH

upload_protocol = serial

----------------------------------------

TITLE: Configuring Generic ML51DB9AE Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic ML51DB9AE board in a PlatformIO project's configuration file. It sets the platform and board, and demonstrates how to override default settings such as microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ML51DB9AE]
platform = intel_mcs51
board = ML51DB9AE

; change microcontroller
board_build.mcu = ml51db9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Basic Board Configuration for STM32
DESCRIPTION: Basic PlatformIO configuration for RushUp Cloud-JAM board using STM32 platform.

LANGUAGE: ini
CODE:
[env:cloud_jam]
platform = ststm32
board = cloud_jam

----------------------------------------

TITLE: Configuring STM32F417VE Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F417VE board in the PlatformIO project configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F417VE]
platform = ststm32
board = genericSTM32F417VE

----------------------------------------

TITLE: Configuring ATmega169A Board in PlatformIO Project
DESCRIPTION: This snippet shows how to set up the ATmega169A board in a PlatformIO project configuration file. It includes the basic configuration and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:ATmega169A]
platform = atmelavr
board = ATmega169A

; change microcontroller
board_build.mcu = atmega169a

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing MXChip AZ3166 MCU Settings
DESCRIPTION: Advanced configuration showing how to override default microcontroller and frequency settings for the MXChip AZ3166 board.

LANGUAGE: ini
CODE:
[env:mxchip_az3166]
platform = ststm32
board = mxchip_az3166

; change microcontroller
board_build.mcu = stm32f412zgt6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8A8K64S4A12]
platform = intel_mcs51
board = STC8A8K64S4A12

; change microcontroller
board_build.mcu = stc8a8k64s4a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO for Microduino Core USB in INI
DESCRIPTION: This snippet shows how to configure a PlatformIO project's environment for the Microduino Core USB board. It sets the platform to atmelavr and the board to 32u416m.

LANGUAGE: ini
CODE:
[env:32u416m]
platform = atmelavr
board = 32u416m

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example for setting the upload protocol for Leafony AP03 board

LANGUAGE: ini
CODE:
[env:leafony_ap03]
platform = ststm32
board = leafony_ap03

upload_protocol = serial

----------------------------------------

TITLE: Configuring SparkFun 9DoF Razor IMU M0 Board in platformio.ini
DESCRIPTION: Basic configuration for the SparkFun 9DoF Razor IMU M0 board in the platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_samd21_9dof]
platform = atmelsam
board = sparkfun_samd21_9dof

----------------------------------------

TITLE: Configuring Engduino 3 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Engduino 3 board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board as engduinov3.

LANGUAGE: ini
CODE:
[env:engduinov3]
platform = atmelavr
board = engduinov3

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example showing how to specify the upload protocol for the board. The board supports blackmagic, cmsis-dap, jlink, and stlink protocols.

LANGUAGE: ini
CODE:
[env:mbed_connect_odin]
platform = ststm32
board = mbed_connect_odin

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for LOLIN S3
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board. Uses esptool as the default protocol.

LANGUAGE: ini
CODE:
[env:lolin_s3]
platform = espressif32
board = lolin_s3

upload_protocol = esptool

----------------------------------------

TITLE: Customizing Lattice iCEstick FPGA Board Settings in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to override default board settings for the Lattice iCEstick FPGA Evaluation Kit. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:icestick]
platform = lattice_ice40
board = icestick

; change microcontroller
board_build.mcu = iCE40-HX1K-TQ144

; change MCU frequency
board_build.f_cpu = 12000000L

----------------------------------------

TITLE: Configuring Nordic Thingy:52 Basic Settings
DESCRIPTION: Basic configuration for the Nordic Thingy:52 board using PlatformIO. Sets up the core board environment with the nordicnrf52 platform.

LANGUAGE: ini
CODE:
[env:thingy_52]
platform = nordicnrf52
board = thingy_52

----------------------------------------

TITLE: Configuring ST 32F411EDISCOVERY Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the ST 32F411EDISCOVERY board using the STM32 platform. Includes options to override default microcontroller and CPU frequency settings.

LANGUAGE: ini
CODE:
[env:disco_f411ve]
platform = ststm32
board = disco_f411ve

; change microcontroller
board_build.mcu = stm32f411vet6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Advanced IRC15W415AS Board Configuration with Custom Settings
DESCRIPTION: Extended configuration example showing how to override default board settings such as microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:IRC15W415AS]
platform = intel_mcs51
board = IRC15W415AS

; change microcontroller
board_build.mcu = irc15w415as

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for MultiTech xDot in PlatformIO
DESCRIPTION: Configuration to specify the upload protocol for the MultiTech xDot board. This example sets the upload protocol to ST-Link.

LANGUAGE: ini
CODE:
[env:xdot_l151cc]
platform = ststm32
board = xdot_l151cc

upload_protocol = stlink

----------------------------------------

TITLE: Configuring STM32F446RE Board in PlatformIO
DESCRIPTION: Basic configuration for using the STM32F446RE board in a PlatformIO project. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F446RE]
platform = ststm32
board = genericSTM32F446RE

----------------------------------------

TITLE: Basic Board Configuration for STM32F103ZG
DESCRIPTION: Basic PlatformIO configuration for initializing an STM32F103ZG board project using the ststm32 platform.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZG]
platform = ststm32
board = genericSTM32F103ZG

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the Arduino Nicla Vision board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:nicla_vision]
platform = ststm32
board = nicla_vision

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Options
DESCRIPTION: Extended configuration showing how to customize microcontroller and frequency settings for the STC8F1K08 board.

LANGUAGE: ini
CODE:
[env:STC8F1K08]
platform = intel_mcs51
board = STC8F1K08

; change microcontroller
board_build.mcu = stc8f1k08

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring PlatformIO Environment for FRDM-KL25Z
DESCRIPTION: Basic PlatformIO configuration for the Freescale Kinetis FRDM-KL25Z board. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:frdm_kl25z]
platform = freescalekinetis
board = frdm_kl25z

----------------------------------------

TITLE: Setting Upload Protocol for SeeedStudio LoRa E5 Dev Board
DESCRIPTION: Configuration example showing how to set the upload protocol for the SeeedStudio LoRa E5 Dev Board. In this case, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:lora_e5_dev_board]
platform = ststm32
board = lora_e5_dev_board

upload_protocol = stlink

----------------------------------------

TITLE: Basic CH559 Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for the CH559 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:CH559]
platform = intel_mcs51
board = CH559

----------------------------------------

TITLE: Configuring PlatformIO for Arduino Nano Every
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Arduino Nano Every board. It sets the platform to atmelmegaavr and the board to nano_every.

LANGUAGE: ini
CODE:
[env:nano_every]
platform = atmelmegaavr
board = nano_every

----------------------------------------

TITLE: Configuring Arduino Nicla Vision (M4 core) Board in PlatformIO
DESCRIPTION: Basic configuration for the Arduino Nicla Vision (M4 core) board in the project's platformio.ini file. It sets the platform to STM32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:nicla_vision_m4]
platform = ststm32
board = nicla_vision_m4

----------------------------------------

TITLE: Customizing STC8A4K60S2A12 Board Parameters
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller model and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:STC8A4K60S2A12]
platform = intel_mcs51
board = STC8A4K60S2A12

; change microcontroller
board_build.mcu = stc8a4k60s2a12

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing HiFive Unleashed Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini. This demonstrates how to change the microcontroller and CPU frequency for the HiFive Unleashed board.

LANGUAGE: ini
CODE:
[env:hifive-unleashed]
platform = sifive
board = hifive-unleashed

; change microcontroller
board_build.mcu = fu540

; change MCU frequency
board_build.f_cpu = 1500000000L

----------------------------------------

TITLE: Customizing NXP i.MX RT1015 Evaluation Kit Settings
DESCRIPTION: This code snippet illustrates how to override default board settings in the PlatformIO configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:mimxrt1015_evk]
platform = nxpimxrt
board = mimxrt1015_evk

; change microcontroller
board_build.mcu = mimxrt1015daf5a

; change MCU frequency
board_build.f_cpu = 500000000L

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic board configuration for STM32F373RC using the ststm32 platform in platformio.ini

LANGUAGE: ini
CODE:
[env:genericSTM32F373RC]
platform = ststm32
board = genericSTM32F373RC

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration example showing how to override default board settings like microcontroller type and CPU frequency

LANGUAGE: ini
CODE:
[env:cubecell_board_v2]
platform = heltec-cubecell
board = cubecell_board_v2

; change microcontroller
board_build.mcu = asr6501

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Nicla Vision (M4 core)
DESCRIPTION: Configuration to change the upload protocol for the Arduino Nicla Vision (M4 core) board. In this example, it sets the protocol to DFU (Device Firmware Upgrade).

LANGUAGE: ini
CODE:
[env:nicla_vision_m4]
platform = ststm32
board = nicla_vision_m4

upload_protocol = dfu

----------------------------------------

TITLE: Customizing SeeedStudio LoRa-E5 mini Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lora_e5_mini]
platform = ststm32
board = lora_e5_mini

; change microcontroller
board_build.mcu = stm32wle5jc

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring Basic Phoenix 1.0 Board Settings in PlatformIO
DESCRIPTION: Basic configuration for the Phoenix 1.0 board in the project's platformio.ini file. Sets the platform to espressif8266 and specifies the board model.

LANGUAGE: ini
CODE:
[env:phoenix_v1]
platform = espressif8266
board = phoenix_v1

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo F103RB board.

LANGUAGE: ini
CODE:
[env:nucleo_f103rb]
platform = ststm32
board = nucleo_f103rb

; change microcontroller
board_build.mcu = stm32f103rbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Generic STC8G1K17T Board in PlatformIO
DESCRIPTION: This snippet shows how to set up the Generic STC8G1K17T board in a PlatformIO project configuration file. It includes the basic configuration and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC8G1K17T]
platform = intel_mcs51
board = STC8G1K17T

; change microcontroller
board_build.mcu = stc8g1k17t

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for NodeMCU 1.0 (ESP-12E Module) in PlatformIO
DESCRIPTION: This code demonstrates how to specify the upload protocol for the NodeMCU 1.0 (ESP-12E Module) in the PlatformIO configuration. The default protocol is 'esptool', but it can be changed to 'espota' if needed.

LANGUAGE: ini
CODE:
[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2

upload_protocol = esptool

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo F303RE
DESCRIPTION: Example of specifying the upload protocol (ST-Link) for the ST Nucleo F303RE board in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_f303re]
platform = ststm32
board = nucleo_f303re

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic Digispark USB Board Settings in PlatformIO
DESCRIPTION: Basic configuration for Digispark USB board using the PlatformIO platform. Specifies the platform and board ID required for project configuration.

LANGUAGE: ini
CODE:
[env:digispark-tiny]
platform = atmelavr
board = digispark-tiny

----------------------------------------

TITLE: Basic Board Configuration - PlatformIO INI
DESCRIPTION: Basic configuration for setting up a Prusa RAMBo board project in PlatformIO's configuration file.

LANGUAGE: ini
CODE:
[env:prusa_rambo]
platform = atmelavr
board = prusa_rambo

----------------------------------------

TITLE: Customizing MCU and Frequency Settings
DESCRIPTION: Example showing how to override default microcontroller and frequency settings for the ST Nucleo F072RB board.

LANGUAGE: ini
CODE:
[env:nucleo_f072rb]
platform = ststm32
board = nucleo_f072rb

; change microcontroller
board_build.mcu = stm32f072rbt6

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing Generic8052 Board Settings in PlatformIO
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the Generic 8052 board in PlatformIO project configuration.

LANGUAGE: ini
CODE:
[env:Generic8052]
platform = intel_mcs51
board = Generic8052

; change microcontroller
board_build.mcu = 8052

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for OpenRTK Board
DESCRIPTION: PlatformIO configuration showing how to specify the upload protocol for the OpenRTK board. Uses ST-Link as the upload method.

LANGUAGE: ini
CODE:
[env:OpenRTK]
platform = aceinna_imu
board = OpenRTK

upload_protocol = stlink

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example showing how to configure the upload protocol for the board

LANGUAGE: ini
CODE:
[env:mimxrt1020_evk]
platform = nxpimxrt
board = mimxrt1020_evk

upload_protocol = mbed

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example demonstrating how to set the upload protocol for the Espotel LoRa Module board.

LANGUAGE: ini
CODE:
[env:elmo_f411re]
platform = ststm32
board = elmo_f411re

upload_protocol = stlink

----------------------------------------

TITLE: Customizing MSP-EXP430FR5994LP Board Settings
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:lpmsp430fr5994]
platform = timsp430
board = lpmsp430fr5994

; change microcontroller
board_build.mcu = msp430fr5994

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Customizing MCU Settings for ST Nucleo L010RB
DESCRIPTION: Advanced configuration showing how to override default microcontroller settings including MCU model and frequency.

LANGUAGE: ini
CODE:
[env:nucleo_l010rb]
platform = ststm32
board = nucleo_l010rb

; change microcontroller
board_build.mcu = stm32l010rbt6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Customizing Microduino Core STM32 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Shows how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:microduino32_flash]
platform = ststm32
board = microduino32_flash

; change microcontroller
board_build.mcu = stm32f103cbt6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Customizing Arduino MKR WAN 1310 Board Settings
DESCRIPTION: Example of overriding default board settings for the Arduino MKR WAN 1310, including changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:mkrwan1310]
platform = atmelsam
board = mkrwan1310

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo H753ZI
DESCRIPTION: Example configuration for setting the upload protocol to stlink for the ST Nucleo H753ZI board.

LANGUAGE: ini
CODE:
[env:nucleo_h753zi]
platform = ststm32
board = nucleo_h753zi

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Generic STC8H4K60TLCD Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC8H4K60TLCD board in a PlatformIO project's configuration file (platformio.ini). It sets the platform to intel_mcs51 and specifies the board as STC8H4K60TLCD.

LANGUAGE: ini
CODE:
[env:STC8H4K60TLCD]
platform = intel_mcs51
board = STC8H4K60TLCD

----------------------------------------

TITLE: Customizing FRDM-K66F MCU and Clock Settings
DESCRIPTION: Extended configuration showing how to override default microcontroller and frequency settings for the FRDM-K66F board.

LANGUAGE: ini
CODE:
[env:frdm_k66f]
platform = freescalekinetis
board = frdm_k66f

; change microcontroller
board_build.mcu = mk66fn2m0vmd18

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Customizing Nucleo G474RE Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_g474re]
platform = ststm32
board = nucleo_g474re

; change microcontroller
board_build.mcu = stm32g474ret6

; change MCU frequency
board_build.f_cpu = 170000000L

----------------------------------------

TITLE: Overriding Default MAX32625PICO Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the MAX32625PICO board in a PlatformIO project. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:max32625pico]
platform = maxim32
board = max32625pico

; change microcontroller
board_build.mcu = max32625

; change MCU frequency
board_build.f_cpu = 96000000L

----------------------------------------

TITLE: Configuring ATtiny202 Board in PlatformIO
DESCRIPTION: Basic configuration for setting up an ATtiny202 board environment in platformio.ini configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ATtiny202]
platform = atmelmegaavr
board = ATtiny202

----------------------------------------

TITLE: Customizing ST Nucleo L476RG MCU and Frequency Settings
DESCRIPTION: PlatformIO configuration showing how to override default microcontroller and frequency settings for the ST Nucleo L476RG board.

LANGUAGE: ini
CODE:
[env:nucleo_l476rg]
platform = ststm32
board = nucleo_l476rg

; change microcontroller
board_build.mcu = stm32l476rgt6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for Deneyap Kart 1A v2
DESCRIPTION: Configuration to change the upload protocol for Deneyap Kart 1A v2 board. In this example, it's set to esptool, which is also the default.

LANGUAGE: ini
CODE:
[env:deneyapkart1Av2]
platform = espressif32
board = deneyapkart1Av2

upload_protocol = esptool

----------------------------------------

TITLE: AT89S52 Advanced Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration example showing how to customize microcontroller and frequency settings for the AT89S52 board.

LANGUAGE: ini
CODE:
[env:AT89S52]
platform = intel_mcs51
board = AT89S52

; change microcontroller
board_build.mcu = at89s52

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:mimxrt1050_evk]
platform = nxpimxrt
board = mimxrt1050_evk

upload_protocol = mbed

----------------------------------------

TITLE: Customizing Nucleo G431RB Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_g431rb]
platform = ststm32
board = nucleo_g431rb

; change microcontroller
board_build.mcu = stm32g431rbt6

; change MCU frequency
board_build.f_cpu = 170000000L

----------------------------------------

TITLE: Configuring Basic STM8S Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for STM8S103F3 board setup using the ststm8 platform.

LANGUAGE: ini
CODE:
[env:stm8sblue]
platform = ststm8
board = stm8sblue

----------------------------------------

TITLE: Customizing STM32F103T8 Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in the PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F103T8]
platform = ststm32
board = genericSTM32F103T8

; change microcontroller
board_build.mcu = stm32f103t8u6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for the ST Nucleo F042K6 board using the ststm32 platform

LANGUAGE: ini
CODE:
[env:nucleo_f042k6]
platform = ststm32
board = nucleo_f042k6

----------------------------------------

TITLE: Customizing ST Nucleo L011K4 Board Settings
DESCRIPTION: Example of overriding default board settings such as microcontroller and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:nucleo_l011k4]
platform = ststm32
board = nucleo_l011k4

; change microcontroller
board_build.mcu = stm32l011k4t6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Advanced PlatformIO Configuration with Custom Settings
DESCRIPTION: Extended configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H4K64TLCD]
platform = intel_mcs51
board = STC8H4K64TLCD

; change microcontroller
board_build.mcu = stc8h4k64tlcd

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting Upload Protocol for RUMBA32 F446VE
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the RUMBA32 F446VE board in PlatformIO. The default protocol is 'stlink', but it can be changed to other supported protocols.

LANGUAGE: ini
CODE:
[env:rumba32_f446ve]
platform = ststm32
board = rumba32_f446ve

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for ST Nucleo L452RE
DESCRIPTION: Configuration to specify the upload protocol for the ST Nucleo L452RE board. In this example, it's set to use the ST-Link protocol.

LANGUAGE: ini
CODE:
[env:nucleo_l452re]
platform = ststm32
board = nucleo_l452re

upload_protocol = stlink

----------------------------------------

TITLE: Basic PlatformIO Configuration for AVR128DA64
DESCRIPTION: Basic project configuration for AVR128DA64 board in platformio.ini file specifying the platform and board.

LANGUAGE: ini
CODE:
[env:AVR128DA64]
platform = atmelmegaavr
board = AVR128DA64

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the Olimexino STM32F3.

LANGUAGE: ini
CODE:
[env:olimexino_stm32f3]
platform = ststm32
board = olimexino_stm32f3

; change microcontroller
board_build.mcu = stm32f303rct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol for Teensy++ 2.0 in PlatformIO INI File
DESCRIPTION: This snippet shows how to specify the upload protocol for the Teensy++ 2.0 board in a PlatformIO project configuration. It sets the protocol to 'teensy-gui', which is the default option.

LANGUAGE: ini
CODE:
[env:teensy2pp]
platform = teensy
board = teensy2pp

upload_protocol = teensy-gui

----------------------------------------

TITLE: Configuring Generic ML54SD1AE Board in PlatformIO
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the Generic ML54SD1AE board. It includes the basic setup and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:ML54SD1AE]
platform = intel_mcs51
board = ML54SD1AE

; change microcontroller
board_build.mcu = ml54sd1ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring Arduino Nano RP2040 Connect in PlatformIO
DESCRIPTION: Basic configuration for the Arduino Nano RP2040 Connect board in the project's platformio.ini file. Sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:nanorp2040connect]
platform = raspberrypi
board = nanorp2040connect

----------------------------------------

TITLE: Using PlatformIO Library Statistics Command
DESCRIPTION: Shows how to use the 'pio lib stats' command to display PlatformIO Library Registry statistics. This command is deprecated and will be removed in future releases.

LANGUAGE: bash
CODE:
pio lib stats

----------------------------------------

TITLE: Customizing Armstrap Eagle 1024 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:armstrap_eagle1024]
platform = ststm32
board = armstrap_eagle1024

; change microcontroller
board_build.mcu = stm32f417vgt6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Customizing STM8S Board MCU and Frequency Settings
DESCRIPTION: Extended PlatformIO configuration showing how to override default microcontroller and frequency settings for the STM8S103F3 board.

LANGUAGE: ini
CODE:
[env:stm8sblue]
platform = ststm8
board = stm8sblue

; change microcontroller
board_build.mcu = stm8s103f3p6

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Example of configuring the upload protocol for the Demo F030F4 board, setting it to use ST-Link

LANGUAGE: ini
CODE:
[env:demo_f030f4]
platform = ststm32
board = demo_f030f4

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for ST Nucleo L031K6 board in platformio.ini file, setting up the platform and board ID.

LANGUAGE: ini
CODE:
[env:nucleo_l031k6]
platform = ststm32
board = nucleo_l031k6

----------------------------------------

TITLE: Customizing UBW32 MX795 MCU Settings
DESCRIPTION: Advanced configuration example showing how to override default microcontroller settings including MCU model and frequency.

LANGUAGE: ini
CODE:
[env:ubw32_mx795]
platform = microchippic32
board = ubw32_mx795

; change microcontroller
board_build.mcu = 32MX795F512L

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for XinaBox CW01
DESCRIPTION: Minimal configuration required to set up a PlatformIO project for XinaBox CW01 board using ESP8266 platform.

LANGUAGE: ini
CODE:
[env:xinabox_cw01]
platform = espressif8266
board = xinabox_cw01

----------------------------------------

TITLE: Setting Upload Protocol for OLIMEXINO-STM32
DESCRIPTION: Configuration to specify the upload protocol for the OLIMEXINO-STM32 board. In this example, ST-Link is set as the upload protocol.

LANGUAGE: ini
CODE:
[env:olimexino]
platform = ststm32
board = olimexino

upload_protocol = stlink

----------------------------------------

TITLE: Configuring SparkFun Digital Sandbox Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the SparkFun Digital Sandbox board in a PlatformIO project's configuration file. It sets the platform to ATmega AVR and specifies the board ID.

LANGUAGE: ini
CODE:
[env:sparkfun_digitalsandbox]
platform = atmelavr
board = sparkfun_digitalsandbox

----------------------------------------

TITLE: Configuring Basic ATtiny44 Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for ATtiny44 board setup using the atmelavr platform. Sets the basic board identifier in the project configuration file.

LANGUAGE: ini
CODE:
[env:attiny44]
platform = atmelavr
board = attiny44

----------------------------------------

TITLE: Customizing MCU Settings for ST Nucleo F439ZI
DESCRIPTION: Example of overriding default microcontroller settings including MCU model and frequency in PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:nucleo_f439zi]
platform = ststm32
board = nucleo_f439zi

; change microcontroller
board_build.mcu = stm32f439zit6

; change MCU frequency
board_build.f_cpu = 180000000L

----------------------------------------

TITLE: Configuring AT90CAN64 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the AT90CAN64 board in the PlatformIO project configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:AT90CAN64]
platform = atmelavr
board = AT90CAN64

; change microcontroller
board_build.mcu = at90can64

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic ML51UC0AE Board Configuration in PlatformIO
DESCRIPTION: Basic configuration setup for ML51UC0AE board in platformio.ini project file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:ML51UC0AE]
platform = intel_mcs51
board = ML51UC0AE

----------------------------------------

TITLE: Setting Upload Protocol for Artix-7 Board
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Artix-7 board, using FTDI as the selected protocol.

LANGUAGE: ini
CODE:
[env:artix7_35t]
platform = shakti
board = artix7_35t

upload_protocol = ftdi

----------------------------------------

TITLE: Basic FK407M1 Board Configuration in PlatformIO
DESCRIPTION: Basic configuration for setting up an FK407M1 board project using the STM32 platform in PlatformIO.

LANGUAGE: ini
CODE:
[env:fk407m1]
platform = ststm32
board = fk407m1

----------------------------------------

TITLE: Setting upload protocol for NXP i.MX RT1010 Evaluation Kit
DESCRIPTION: Configuration to change the upload protocol for the NXP i.MX RT1010 Evaluation Kit. In this example, it's set to 'mbed'.

LANGUAGE: ini
CODE:
[env:mimxrt1010_evk]
platform = nxpimxrt
board = mimxrt1010_evk

upload_protocol = mbed

----------------------------------------

TITLE: Configuring MSP Debug Tool
DESCRIPTION: Basic configuration for enabling MSP Debug tool in PlatformIO project configuration file

LANGUAGE: ini
CODE:
[env:myenv]
platform = ...
board = ...
debug_tool = mspdebug

----------------------------------------

TITLE: Customizing TI LaunchPad (Tiva C) Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings in a PlatformIO project configuration. It shows examples of changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:lptm4c123gh6pm]
platform = titiva
board = lptm4c123gh6pm

; change microcontroller
board_build.mcu = lptm4c123gh6pm

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Setting Upload Protocol for Arduino Opta
DESCRIPTION: Configuration example showing how to specify the upload protocol (DFU) for Arduino Opta board in PlatformIO.

LANGUAGE: ini
CODE:
[env:opta]
platform = ststm32
board = opta

upload_protocol = dfu

----------------------------------------

TITLE: Customizing ng-beacon Board Settings in PlatformIO
DESCRIPTION: This code demonstrates how to override default ng-beacon settings in a PlatformIO project. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ng_beacon]
platform = nordicnrf51
board = ng_beacon

; change microcontroller
board_build.mcu = nrf51822

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Basic PlatformIO Configuration for STC15F101
DESCRIPTION: Basic configuration example showing how to set up a PlatformIO environment for the STC15F101 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC15F101]
platform = intel_mcs51
board = STC15F101

----------------------------------------

TITLE: Configuring Basic Arduino Opta Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for Arduino Opta board using the STM32 platform. Sets up the fundamental board environment.

LANGUAGE: ini
CODE:
[env:opta]
platform = ststm32
board = opta

----------------------------------------

TITLE: Configuring Arduino Pro Mini ATmega168 in PlatformIO
DESCRIPTION: This snippet shows how to configure the Arduino Pro or Pro Mini ATmega168 (5V, 16 MHz) board in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:pro16MHzatmega168]
platform = atmelavr
board = pro16MHzatmega168

----------------------------------------

TITLE: Basic Board Configuration in PlatformIO
DESCRIPTION: Basic PlatformIO environment configuration for the Adafruit MatrixPortal ESP32-S3 board.

LANGUAGE: ini
CODE:
[env:adafruit_matrixportal_esp32s3]
platform = espressif32
board = adafruit_matrixportal_esp32s3

----------------------------------------

TITLE: Customizing u-blox EVK-ODIN-W2 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:ublox_evk_odin_w2]
platform = ststm32
board = ublox_evk_odin_w2

; change microcontroller
board_build.mcu = stm32f439ziy6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Advanced Environment Configuration with MCU Settings
DESCRIPTION: Extended PlatformIO environment configuration demonstrating how to override default board settings such as microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15W404S]
platform = intel_mcs51
board = STC15W404S

; change microcontroller
board_build.mcu = stc15w404s

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing ML51OB9AE Board Settings in PlatformIO
DESCRIPTION: This snippet demonstrates how to override default settings for the Generic ML51OB9AE board in a PlatformIO project. It includes examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:ML51OB9AE]
platform = intel_mcs51
board = ML51OB9AE

; change microcontroller
board_build.mcu = ml51ob9ae

; change MCU frequency
board_build.f_cpu = 24000000L

----------------------------------------

TITLE: Configuring PlatformIO Environment for SLSTK3701A Giant Gecko S1
DESCRIPTION: Basic PlatformIO configuration for the SLSTK3701A Giant Gecko S1 board. Specifies the platform and board ID to use.

LANGUAGE: ini
CODE:
[env:efm32gg11_stk3701]
platform = siliconlabsefm32
board = efm32gg11_stk3701

----------------------------------------

TITLE: Setting Upload Protocol for ST 32L496GDISCOVERY
DESCRIPTION: Configuration to set the upload protocol for the ST 32L496GDISCOVERY board. The default protocol is stlink, but this example shows how to explicitly set it.

LANGUAGE: ini
CODE:
[env:disco_l496ag]
platform = ststm32
board = disco_l496ag

upload_protocol = stlink

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for WeMos D1 ESP-WROOM-02 board in platformio.ini file, specifying the platform and board type.

LANGUAGE: ini
CODE:
[env:d1_wroom_02]
platform = espressif8266
board = d1_wroom_02

----------------------------------------

TITLE: Advanced Board Configuration with MCU Options
DESCRIPTION: Demonstrates how to override default board settings including microcontroller and CPU frequency specifications.

LANGUAGE: ini
CODE:
[env:nucleo_f756zg]
platform = ststm32
board = nucleo_f756zg

; change microcontroller
board_build.mcu = stm32f756zg

; change MCU frequency
board_build.f_cpu = 216000000L

----------------------------------------

TITLE: Basic Teensy 2.0 Board Configuration in PlatformIO
DESCRIPTION: Minimal configuration required to set up a Teensy 2.0 board project in PlatformIO's project configuration file.

LANGUAGE: ini
CODE:
[env:teensy2]\nplatform = teensy\nboard = teensy2

----------------------------------------

TITLE: Configuring Basic PX-HER0 Board Settings
DESCRIPTION: Basic PlatformIO configuration for using the Piconomix PX-HER0 board with STM32 platform

LANGUAGE: ini
CODE:
[env:piconomix_px_her0]
platform = ststm32
board = piconomix_px_her0

----------------------------------------

TITLE: Advanced Board Configuration with MCU and Frequency Settings
DESCRIPTION: Extended configuration example showing how to override default microcontroller and frequency settings for the 96Boards Nitrogen.

LANGUAGE: ini
CODE:
[env:96b_nitrogen]
platform = nordicnrf52
board = 96b_nitrogen

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Setting Upload Protocol for EFM32GG-STK3700
DESCRIPTION: Configuration to specify the upload protocol for the EFM32GG-STK3700 board. The example uses the mbed protocol.

LANGUAGE: ini
CODE:
[env:efm32gg_stk3700]
platform = siliconlabsefm32
board = efm32gg_stk3700

upload_protocol = mbed

----------------------------------------

TITLE: Setting Upload Protocol for PYBSTICK26 Duino
DESCRIPTION: Configuration to change the upload protocol for the PYBSTICK26 Duino board. The example sets it to 'stlink'.

LANGUAGE: ini
CODE:
[env:pybstick26_duino]
platform = ststm32
board = pybstick26_duino

upload_protocol = stlink

----------------------------------------

TITLE: Configuring STM32F423CH Board in PlatformIO INI File
DESCRIPTION: Basic configuration for the STM32F423CH board in the PlatformIO project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:genericSTM32F423CH]
platform = ststm32
board = genericSTM32F423CH

----------------------------------------

TITLE: Configuring WeAct Studio MiniSTM32H743VITX Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the WeAct Studio MiniSTM32H743VITX board using the STM32 platform. This snippet sets up the board ID and platform.

LANGUAGE: ini
CODE:
[env:weact_mini_h743vitx]
platform = ststm32
board = weact_mini_h743vitx

----------------------------------------

TITLE: Customizing Adafruit Metro M0 Express Board Settings
DESCRIPTION: Example of overriding default board settings in a PlatformIO project configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:adafruit_metro_m0]
platform = atmelsam
board = adafruit_metro_m0

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Overriding Default Generic IAP15F206A Board Settings
DESCRIPTION: This snippet demonstrates how to override default board settings for the Generic IAP15F206A in the PlatformIO project configuration. It shows examples of changing the microcontroller and MCU frequency.

LANGUAGE: ini
CODE:
[env:IAP15F206A]
platform = intel_mcs51
board = IAP15F206A

; change microcontroller
board_build.mcu = iap15f206a

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic configuration for setting up the VCCGND F407ZGT6 Mini board in PlatformIO's project configuration file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:vccgnd_f407zg_mini]
platform = ststm32
board = vccgnd_f407zg_mini

----------------------------------------

TITLE: Setting Upload Protocol for EFM32WG-STK3800
DESCRIPTION: Configuration to specify the upload protocol for the EFM32WG-STK3800 board. The example sets it to 'mbed', which is the default protocol.

LANGUAGE: ini
CODE:
[env:efm32wg_stk3800]
platform = siliconlabsefm32
board = efm32wg_stk3800

upload_protocol = mbed

----------------------------------------

TITLE: Configuring PlatformIO for ST Nucleo L452RE
DESCRIPTION: Basic PlatformIO configuration for the ST Nucleo L452RE board. Sets the platform to STM32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:nucleo_l452re]
platform = ststm32
board = nucleo_l452re

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Shows how to configure the upload protocol for the board, with stlink as the default option.

LANGUAGE: ini
CODE:
[env:nucleo_f756zg]
platform = ststm32
board = nucleo_f756zg

upload_protocol = stlink

----------------------------------------

TITLE: Basic M5Stamp-Pico Board Configuration
DESCRIPTION: Basic PlatformIO configuration for M5Stamp-Pico board using the espressif32 platform.

LANGUAGE: ini
CODE:
[env:m5stamp-pico]
platform = espressif32
board = m5stamp-pico

----------------------------------------

TITLE: Customizing RYMCU Nebula Pi F103VE Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, including changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:rymcu_nebulapi_f103ve]
platform = ststm32
board = rymcu_nebulapi_f103ve

; change microcontroller
board_build.mcu = stm32f103vet6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Configuring Adafruit Feather Bluefruit Sense Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Adafruit Feather Bluefruit Sense board in a PlatformIO project configuration file. It sets the platform to nordicnrf52 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52840_sense]
platform = nordicnrf52
board = adafruit_feather_nrf52840_sense

----------------------------------------

TITLE: Setting Upload Protocol for Teensy 3.6 in PlatformIO INI File
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the Teensy 3.6 board in the PlatformIO project configuration file. The default protocol is 'teensy-gui', but it can be changed to 'jlink' or 'teensy-cli'.

LANGUAGE: ini
CODE:
[env:teensy36]
platform = teensy
board = teensy36

upload_protocol = teensy-gui

----------------------------------------

TITLE: Customizing u-blox NINA-W10 series board settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nina_w10]
platform = espressif32
board = nina_w10

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Configuring ATmega8535 Board in PlatformIO Project
DESCRIPTION: This snippet shows how to configure the ATmega8535 board in a PlatformIO project's configuration file. It sets the platform to atmelavr and specifies the board as ATmega8535.

LANGUAGE: ini
CODE:
[env:ATmega8535]
platform = atmelavr
board = ATmega8535

----------------------------------------

TITLE: Configuring PlatformIO for Generic STC89C52RC
DESCRIPTION: This snippet shows how to configure the project environment for the Generic STC89C52RC board in the PlatformIO configuration file. It sets the platform and board options.

LANGUAGE: ini
CODE:
[env:STC89C52RC]
platform = intel_mcs51
board = STC89C52RC

----------------------------------------

TITLE: Setting Upload Protocol for STM8S Board
DESCRIPTION: Configuration example for specifying the upload protocol (serial or stlinkv2) for the STM8S103F3 board.

LANGUAGE: ini
CODE:
[env:stm8sblue]
platform = ststm8
board = stm8sblue

upload_protocol = serial

----------------------------------------

TITLE: Customizing ST Nucleo L452RE Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO. Demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:nucleo_l452re]
platform = ststm32
board = nucleo_l452re

; change microcontroller
board_build.mcu = stm32l452ret6

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring WeAct Studio BlackPill V2.0 (STM32F401CC) in PlatformIO
DESCRIPTION: This snippet shows how to configure the WeAct Studio BlackPill V2.0 (STM32F401CC) board in the PlatformIO project configuration file. It includes the basic setup and options for changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:blackpill_f401cc]
platform = ststm32
board = blackpill_f401cc

; change microcontroller
board_build.mcu = stm32f401ccu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Setting Upload Protocol for STM32-H407
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32-H407 board.

LANGUAGE: ini
CODE:
[env:olimex_h407]
platform = ststm32
board = olimex_h407

upload_protocol = stlink

----------------------------------------

TITLE: Advanced PlatformIO Configuration with MCU Settings
DESCRIPTION: Extended configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:wt32-eth01]
platform = espressif32
board = wt32-eth01

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L

----------------------------------------

TITLE: Customizing Seeed Arch Max Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. This snippet demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:seeedArchMax]
platform = ststm32
board = seeedArchMax

; change microcontroller
board_build.mcu = stm32f407vet6

; change MCU frequency
board_build.f_cpu = 168000000L

----------------------------------------

TITLE: Setting Upload Protocol for Adafruit Feather Bluefruit Sense
DESCRIPTION: This snippet shows how to set the upload protocol for the Adafruit Feather Bluefruit Sense board in a PlatformIO project. It specifies the use of the nrfutil protocol for uploading.

LANGUAGE: ini
CODE:
[env:adafruit_feather_nrf52840_sense]
platform = nordicnrf52
board = adafruit_feather_nrf52840_sense

upload_protocol = nrfutil

----------------------------------------

TITLE: Configuring EFM32WG-STK3800 Board in platformio.ini
DESCRIPTION: Basic configuration for the EFM32WG-STK3800 Wonder Gecko board in the project's platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:efm32wg_stk3800]
platform = siliconlabsefm32
board = efm32wg_stk3800

----------------------------------------

TITLE: Running PlatformIO CI for Multiple Boards in Drone
DESCRIPTION: This snippet shows how to install PlatformIO and run CI tests for multiple boards in Drone. It uses the 'pio ci' command, which is suitable for library projects.

LANGUAGE: bash
CODE:
pip install -U platformio
pio ci --board=<ID_1> --board=<ID_2> --board=<ID_N>

----------------------------------------

TITLE: Configuring Heltec CubeCell-Board PRO in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Heltec CubeCell-Board PRO (HTCC-AB03) in a PlatformIO project's configuration file. It includes the basic setup and examples of how to override default board settings.

LANGUAGE: ini
CODE:
[env:cubecell_board_pro]
platform = heltec-cubecell
board = cubecell_board_pro

; change microcontroller
board_build.mcu = asr6601

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Configuring PlatformIO for MAX32625MBED Board
DESCRIPTION: This snippet shows how to configure a PlatformIO project for the MAX32625MBED board. It sets the platform to maxim32 and specifies the board ID.

LANGUAGE: ini
CODE:
[env:max32625mbed]
platform = maxim32
board = max32625mbed

----------------------------------------

TITLE: Customizing STC15F2K52S2 Board Settings in PlatformIO
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC15F2K52S2]
platform = intel_mcs51
board = STC15F2K52S2

; change microcontroller
board_build.mcu = stc15f2k52s2

; change MCU frequency
board_build.f_cpu = 6000000L

----------------------------------------

TITLE: Setting Upload Protocol for Teensy 3.5
DESCRIPTION: Configuration example showing how to specify the upload protocol for the Teensy 3.5 board, using the teensy-gui protocol.

LANGUAGE: ini
CODE:
[env:teensy35]
platform = teensy
board = teensy35

upload_protocol = teensy-gui

----------------------------------------

TITLE: STM32F103ZF Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the STM32F103ZF board.

LANGUAGE: ini
CODE:
[env:genericSTM32F103ZF]
platform = ststm32
board = genericSTM32F103ZF

upload_protocol = serial

----------------------------------------

TITLE: Configuring Xplained Pro ATmega4809 in PlatformIO
DESCRIPTION: This snippet shows how to configure the Xplained Pro ATmega4809 board in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:xplained_pro_4809]
platform = atmelmegaavr
board = xplained_pro_4809

----------------------------------------

TITLE: Configuring Basic Board Settings in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the VCCGND F103ZET6 Mini board using the STM32 platform.

LANGUAGE: ini
CODE:
[env:vccgnd_f103zet6]
platform = ststm32
board = vccgnd_f103zet6

----------------------------------------

TITLE: Advanced STC15F103W Board Configuration with Custom Settings
DESCRIPTION: Extended configuration for the STC15F103W board with custom microcontroller and frequency settings using board_build options.

LANGUAGE: ini
CODE:
[env:STC15F103W]
platform = intel_mcs51
board = STC15F103W

; change microcontroller
board_build.mcu = stc15f103w

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Configuring Sparky V1 F303 Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Sparky V1 F303 board in the PlatformIO project configuration file. It includes options for setting the platform, board ID, and overriding default board settings.

LANGUAGE: ini
CODE:
[env:sparky_v1]
platform = ststm32
board = sparky_v1

; change microcontroller
board_build.mcu = stm32f303cct6

; change MCU frequency
board_build.f_cpu = 72000000L

----------------------------------------

TITLE: Setting Upload Protocol for ST STM8S-DISCOVERY
DESCRIPTION: This snippet demonstrates how to set the upload protocol for the ST STM8S-DISCOVERY board in the PlatformIO project configuration. It shows setting the upload protocol to 'stlink', which is the default for this board.

LANGUAGE: ini
CODE:
[env:stm8sdisco]
platform = ststm8
board = stm8sdisco

upload_protocol = stlink

----------------------------------------

TITLE: Setting Upload Protocol for Moteino M0
DESCRIPTION: Configuration example showing how to specify the upload protocol for Moteino M0, using sam-ba as the protocol.

LANGUAGE: ini
CODE:
[env:moteino_zero]
platform = atmelsam
board = moteino_zero

upload_protocol = sam-ba

----------------------------------------

TITLE: Configuring RAM Running Mode for GAPuino in PlatformIO
DESCRIPTION: Shows the configuration for running a program from RAM on a GAPuino board without bridge interaction. This setup modifies the upload commands in the PlatformIO configuration.

LANGUAGE: ini
CODE:
[env:gapuino]
platform = riscv_gap
board = gapuino
framework = ...
board_upload.commands = load start

----------------------------------------

TITLE: Customizing OpenIMU300ZA MCU Settings
DESCRIPTION: Example showing how to override default microcontroller settings including MCU model and frequency.

LANGUAGE: ini
CODE:
[env:OpenIMU300ZA]
platform = aceinna_imu
board = OpenIMU300ZA

; change microcontroller
board_build.mcu = stm32f405rg

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Customizing Wio Link Board Settings in PlatformIO
DESCRIPTION: Example of overriding default Wio Link board settings in a PlatformIO project configuration. This snippet demonstrates how to change the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:wio_link]
platform = espressif8266
board = wio_link

; change microcontroller
board_build.mcu = esp8266

; change MCU frequency
board_build.f_cpu = 80000000L

----------------------------------------

TITLE: Configuring Generic STC15F103E Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the Generic STC15F103E board in the PlatformIO project configuration file. It sets the platform and board ID, and demonstrates how to override default board settings.

LANGUAGE: ini
CODE:
[env:STC15F103E]
platform = intel_mcs51
board = STC15F103E

; change microcontroller
board_build.mcu = stc15f103e

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing Aceinna MTLT335 Board Settings
DESCRIPTION: Example of overriding default board settings in platformio.ini, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:OpenIMU335]
platform = aceinna_imu
board = OpenIMU335

; change microcontroller
board_build.mcu = stm32f405rg

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Customizing WeAct Studio MiniSTM32H743VITX Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency. This demonstrates how to customize the build environment.

LANGUAGE: ini
CODE:
[env:weact_mini_h743vitx]
platform = ststm32
board = weact_mini_h743vitx

; change microcontroller
board_build.mcu = stm32h743vit6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring ATtiny414 Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ATtiny414 board in a PlatformIO project configuration file. It includes the basic setup and examples of how to override default settings.

LANGUAGE: ini
CODE:
[env:ATtiny414]
platform = atmelmegaavr
board = ATtiny414

; change microcontroller
board_build.mcu = attiny414

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring PlatformIO for MultiTech xDot Board
DESCRIPTION: Basic PlatformIO configuration for the MultiTech xDot board using the STM32 platform. This snippet sets the board ID and platform.

LANGUAGE: ini
CODE:
[env:xdot_l151cc]
platform = ststm32
board = xdot_l151cc

----------------------------------------

TITLE: Configuring M5Stack-ATOM Board in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for using the M5Stack-ATOM board with the ESP32 platform. Specifies the board ID and platform.

LANGUAGE: ini
CODE:
[env:m5stack-atom]
platform = espressif32
board = m5stack-atom

----------------------------------------

TITLE: Custom MCU Configuration
DESCRIPTION: PlatformIO configuration with custom microcontroller and frequency settings for NUCLEO-8S208RB board

LANGUAGE: ini
CODE:
[env:nucleo_8s208rb]
platform = ststm8
board = nucleo_8s208rb

; change microcontroller
board_build.mcu = stm8s208rbt6

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Configuring Upstream OpenHW Platform Version
DESCRIPTION: Configuration for using the latest upstream development version of the OpenHW platform directly from GitHub.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-openhw.git
board = ...

----------------------------------------

TITLE: Configuring ftDuino Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the ftDuino board in the PlatformIO project configuration file. It sets the platform to atmelavr and specifies the board as ftduino.

LANGUAGE: ini
CODE:
[env:ftduino]
platform = atmelavr
board = ftduino

----------------------------------------

TITLE: Configuring Freedom E SDK Framework
DESCRIPTION: RST configuration snippet showing how to enable the Freedom E SDK framework in a PlatformIO project's environment configuration.

LANGUAGE: rst
CODE:
:Configuration:
  :ref:`projectconf_env_framework` = ``freedom-e-sdk``

----------------------------------------

TITLE: Basic Board Configuration
DESCRIPTION: Basic PlatformIO configuration for the Adafruit CLUE nRF52840 board using the Nordic nRF52 platform.

LANGUAGE: ini
CODE:
[env:adafruit_clue_nrf52840]
platform = nordicnrf52
board = adafruit_clue_nrf52840

----------------------------------------

TITLE: Customizing STC8H3K48S2 Board Parameters
DESCRIPTION: Advanced PlatformIO configuration demonstrating how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H3K48S2]
platform = intel_mcs51
board = STC8H3K48S2

; change microcontroller
board_build.mcu = stc8h3k48s2

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Setting SDK Version for ESP8266 in PlatformIO
DESCRIPTION: Example of setting the SDK version to pre-3.0 using a build flag in platformio.ini

LANGUAGE: ini
CODE:
[env:myenv]
...
build_flags = -D PIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3

----------------------------------------

TITLE: Setting Upload Protocol for STM32373C-EVAL
DESCRIPTION: Configuration example for setting the upload protocol to ST-Link for the STM32373C-EVAL board

LANGUAGE: ini
CODE:
[env:eval_f373vc]
platform = ststm32
board = eval_f373vc

upload_protocol = stlink

----------------------------------------

TITLE: Customizing nRF52 Board Settings
DESCRIPTION: Example of overriding default board settings including microcontroller type and CPU frequency using board_build options.

LANGUAGE: ini
CODE:
[env:stct_nrf52_minidev]
platform = nordicnrf52
board = stct_nrf52_minidev

; change microcontroller
board_build.mcu = nrf52832

; change MCU frequency
board_build.f_cpu = 64000000L

----------------------------------------

TITLE: Customizing Teensy 4.0 MCU and Frequency Settings
DESCRIPTION: Extended INI configuration showing how to override default microcontroller and frequency settings for the Teensy 4.0 board.

LANGUAGE: ini
CODE:
[env:teensy40]
platform = teensy
board = teensy40

; change microcontroller
board_build.mcu = imxrt1062

; change MCU frequency
board_build.f_cpu = 600000000L

----------------------------------------

TITLE: Customizing SparkFun Pro Micro Board Parameters
DESCRIPTION: Advanced configuration example showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:sparkfun_promicro8]
platform = atmelavr
board = sparkfun_promicro8

; change microcontroller
board_build.mcu = atmega32u4

; change MCU frequency
board_build.f_cpu = 8000000L

----------------------------------------

TITLE: Configuring Basic Teensy 3.5 Build Environment in PlatformIO
DESCRIPTION: Basic configuration for setting up a Teensy 3.5 project in PlatformIO's project configuration file. Specifies the platform and board type.

LANGUAGE: ini
CODE:
[env:teensy35]
platform = teensy
board = teensy35

----------------------------------------

TITLE: Configuring Upstream Windows x86 Platform in PlatformIO
DESCRIPTION: Configuration for using the latest upstream development version of the Windows x86 platform directly from GitHub repository.

LANGUAGE: ini
CODE:
[env:upstream_develop]
platform = https://github.com/platformio/platform-windows_x86.git

----------------------------------------

TITLE: Basic CurrentRanger Board Configuration in PlatformIO
DESCRIPTION: Basic configuration snippet for setting up the CurrentRanger board in platformio.ini configuration file.

LANGUAGE: ini
CODE:
[env:current_ranger]
platform = atmelsam
board = current_ranger

----------------------------------------

TITLE: Upload Protocol Configuration
DESCRIPTION: Configuration example showing how to specify the upload protocol for the board

LANGUAGE: ini
CODE:
[env:seeedArchPro]
platform = nxplpc
board = seeedArchPro

upload_protocol = mbed

----------------------------------------

TITLE: Configuring Basic STC8H1K33 Board Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for the STC8H1K33 board using the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8H1K33]
platform = intel_mcs51
board = STC8H1K33

----------------------------------------

TITLE: Customizing STM32H750VBT6 Board Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32H750VB]
platform = ststm32
board = genericSTM32H750VB

; change microcontroller
board_build.mcu = stm32h750vbt6

; change MCU frequency
board_build.f_cpu = 480000000L

----------------------------------------

TITLE: Configuring Vajra Board in PlatformIO INI File
DESCRIPTION: This snippet shows how to configure the Vajra board in a PlatformIO project's INI file. It sets the platform to Shakti and the board to Vajra.

LANGUAGE: ini
CODE:
[env:vajra]
platform = shakti
board = vajra

----------------------------------------

TITLE: Configuring TI LaunchPad (Tiva C) Board in PlatformIO
DESCRIPTION: This snippet shows how to configure the TI LaunchPad (Tiva C) board with tm4c123 microcontroller in a PlatformIO project's configuration file. It sets the platform and board ID.

LANGUAGE: ini
CODE:
[env:lptm4c123gh6pm]
platform = titiva
board = lptm4c123gh6pm

----------------------------------------

TITLE: Customizing STM32F401CD Board Settings
DESCRIPTION: Example showing how to override default board settings like microcontroller model and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F401CD]
platform = ststm32
board = genericSTM32F401CD

; change microcontroller
board_build.mcu = stm32f401cdu6

; change MCU frequency
board_build.f_cpu = 84000000L

----------------------------------------

TITLE: Customizing Board Parameters in PlatformIO
DESCRIPTION: Advanced configuration showing how to override default board settings like microcontroller type and CPU frequency in the project configuration.

LANGUAGE: ini
CODE:
[env:lptm4c1294ncpdt]
platform = titiva
board = lptm4c1294ncpdt

; change microcontroller
board_build.mcu = lptm4c1294ncpdt

; change MCU frequency
board_build.f_cpu = 120000000L

----------------------------------------

TITLE: Configuring EFM32GG-STK3700 Board in platformio.ini
DESCRIPTION: Basic configuration for the EFM32GG-STK3700 Giant Gecko board in the platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:efm32gg_stk3700]
platform = siliconlabsefm32
board = efm32gg_stk3700

----------------------------------------

TITLE: Configuring EFM32GG-STK3700 Board in platformio.ini
DESCRIPTION: Basic configuration for the EFM32GG-STK3700 Giant Gecko board in the platformio.ini file. Specifies the platform and board ID.

LANGUAGE: ini
CODE:
[env:efm32gg_stk3700]
platform = siliconlabsefm32
board = efm32gg_stk3700

----------------------------------------

TITLE: Customizing Arduino M0 Pro MCU Settings
DESCRIPTION: Configuration example showing how to override default microcontroller and frequency settings for the Arduino M0 Pro board.

LANGUAGE: ini
CODE:
[env:mzeroproUSB]
platform = atmelsam
board = mzeroproUSB

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L

----------------------------------------

TITLE: Customizing STC8H1K08 Board Parameters
DESCRIPTION: Extended PlatformIO configuration showing how to override default board settings like microcontroller type and CPU frequency.

LANGUAGE: ini
CODE:
[env:STC8H1K08]
platform = intel_mcs51
board = STC8H1K08

; change microcontroller
board_build.mcu = stc8h1k08

; change MCU frequency
board_build.f_cpu = 11059200L

----------------------------------------

TITLE: Customizing MultiTech xDot Board Settings in PlatformIO
DESCRIPTION: Example of overriding default board settings in PlatformIO configuration. This snippet demonstrates changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:xdot_l151cc]
platform = ststm32
board = xdot_l151cc

; change microcontroller
board_build.mcu = stm32l151ccu6

; change MCU frequency
board_build.f_cpu = 32000000L

----------------------------------------

TITLE: Setting Upload Protocol - PlatformIO INI
DESCRIPTION: Configuration example for specifying the upload protocol (DFU) for the Arduino Portenta C33.

LANGUAGE: ini
CODE:
[env:portenta_c33]
platform = renesas-ra
board = portenta_c33

upload_protocol = dfu

----------------------------------------

TITLE: Configuring PlatformIO Environment for STC8H2K64T
DESCRIPTION: This snippet shows how to set up a PlatformIO environment for the Generic STC8H2K64T board. It specifies the platform and board ID in the project configuration file.

LANGUAGE: ini
CODE:
[env:STC8H2K64T]
platform = intel_mcs51
board = STC8H2K64T

----------------------------------------

TITLE: Configuring Basic STC8G2K32S2 Board Environment in PlatformIO
DESCRIPTION: Basic PlatformIO configuration for setting up the STC8G2K32S2 board with the intel_mcs51 platform.

LANGUAGE: ini
CODE:
[env:STC8G2K32S2]
platform = intel_mcs51
board = STC8G2K32S2

----------------------------------------

TITLE: List All Libraries Example
DESCRIPTION: Example showing how to list all available libraries in the registry with their details including ID, description, keywords, and compatibility information

LANGUAGE: bash
CODE:
> pio lib search

----------------------------------------

TITLE: Customizing STM32F412RE Build Settings
DESCRIPTION: Example of overriding default board settings in PlatformIO, such as changing the microcontroller and CPU frequency.

LANGUAGE: ini
CODE:
[env:genericSTM32F412RE]
platform = ststm32
board = genericSTM32F412RE

; change microcontroller
board_build.mcu = stm32f412ret6

; change MCU frequency
board_build.f_cpu = 100000000L

----------------------------------------

TITLE: Configuring Stable Linux i686 Platform Versions in PlatformIO
DESCRIPTION: Demonstrates how to configure stable versions of the Linux i686 platform in a PlatformIO project. It shows setting the latest stable version and pinning to a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = linux_i686

; Specific version
[env:custom_stable]
platform = linux_i686@x.y.z

----------------------------------------

TITLE: Configuring Stable Shakti Platform Version in PlatformIO
DESCRIPTION: This snippet shows how to configure a PlatformIO project to use a stable version of the Shakti platform. It includes options for using the latest stable version or pinning to a specific version.

LANGUAGE: ini
CODE:
; Latest stable version, NOT recommended
; Pin the version as shown below
[env:latest_stable]
platform = shakti
board = ...

; Specific version
[env:custom_stable]
platform = shakti@x.y.z
board = ...

----------------------------------------

TITLE: Advanced MS51DA9AE Board Configuration with Custom Settings
DESCRIPTION: Extended PlatformIO configuration for MS51DA9AE board with custom microcontroller and frequency settings.

LANGUAGE: ini
CODE:
[env:MS51DA9AE]
platform = intel_mcs51
board = MS51DA9AE

; change microcontroller
board_build.mcu = ms51da9ae

; change MCU frequency
board_build.f_cpu = 16000000L

----------------------------------------

TITLE: Advanced Board Configuration with MCU Settings
DESCRIPTION: Extended INI configuration showing how to override default microcontroller and frequency settings for the SparkFun MicroMod Teensy board.

LANGUAGE: ini
CODE:
[env:teensymm]
platform = teensy
board = teensymm

; change microcontroller
board_build.mcu = imxrt1062

; change MCU frequency
board_build.f_cpu = 600000000L