TITLE: Basic Usage of YouTube Transcript API in Python
DESCRIPTION: Demonstrates how to import and use the YouTubeTranscriptApi class to fetch a transcript for a given video ID.

LANGUAGE: python
CODE:
from youtube_transcript_api import YouTubeTranscriptApi

ytt_api = YouTubeTranscriptApi()
ytt_api.fetch(video_id)

----------------------------------------

TITLE: Installing YouTube Transcript API with pip
DESCRIPTION: Command to install the YouTube Transcript API module using pip package manager.

LANGUAGE: bash
CODE:
pip install youtube-transcript-api

----------------------------------------

TITLE: Listing Available Transcripts for a Video
DESCRIPTION: Shows how to retrieve a list of all available transcripts for a given YouTube video.

LANGUAGE: python
CODE:
ytt_api = YouTubeTranscriptApi()
transcript_list = ytt_api.list(video_id)

----------------------------------------

TITLE: Fetching Transcripts in Specific Languages
DESCRIPTION: Shows how to retrieve transcripts in desired languages by specifying language codes.

LANGUAGE: python
CODE:
YouTubeTranscriptApi().fetch(video_id, languages=['de', 'en'])

----------------------------------------

TITLE: Translating Transcripts to Different Languages
DESCRIPTION: Demonstrates how to translate a transcript to a different language using the YouTube Transcript API.

LANGUAGE: python
CODE:
transcript = transcript_list.find_transcript(['en'])
translated_transcript = transcript.translate('de')
print(translated_transcript.fetch())

----------------------------------------

TITLE: Using Formatters to Process Transcripts
DESCRIPTION: Demonstrates how to use formatters to convert fetched transcripts into different formats like JSON.

LANGUAGE: python
CODE:
from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.formatters import JSONFormatter

ytt_api = YouTubeTranscriptApi()
transcript = ytt_api.fetch(video_id)

formatter = JSONFormatter()
json_formatted = formatter.format_transcript(transcript)

with open('your_filename.json', 'w', encoding='utf-8') as json_file:
    json_file.write(json_formatted)

----------------------------------------

TITLE: Preserving Formatting in Fetched Transcripts
DESCRIPTION: Demonstrates how to keep HTML formatting elements like italics and bold in the retrieved transcript.

LANGUAGE: python
CODE:
YouTubeTranscriptApi().fetch(video_ids, languages=['de', 'en'], preserve_formatting=True)

----------------------------------------

TITLE: Using Proxies to Bypass IP Blocks
DESCRIPTION: Shows how to use Webshare proxies to work around IP bans when fetching transcripts.

LANGUAGE: python
CODE:
from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.proxies import WebshareProxyConfig

ytt_api = YouTubeTranscriptApi(
    proxy_config=WebshareProxyConfig(
        proxy_username="<proxy-username>",
        proxy_password="<proxy-password>",
    )
)

ytt_api.fetch(video_id)

----------------------------------------

TITLE: Setting HTTP Cookies for YouTube API Authentication
DESCRIPTION: Cookie configuration in Netscape/Mozilla format with example values. Demonstrates proper cookie field formatting with domain, path, secure flag, expiration, and key-value pairs.

LANGUAGE: txt
CODE:
# HTTP Cookie File downloaded with cookies.txt by Genuinous @genuinous
# This file can be used by wget, curl, aria2c and other standard compliant tools.
# Usage Examples:
#   1) wget -x --load-cookies cookies.txt "https://www.youtube.com/"
#   2) curl --cookie cookies.txt "https://www.youtube.com/"
#   3) aria2c --load-cookies cookies.txt "https://www.youtube.com/"
#
.example.com	TRUE	/	TRUE	3594431874	TEST_FIELD	TEST_VALUE
.example.com	TRUE	/	TRUE	31874	BAD_TEST_FIELD	BAD_TEST_VALUE

----------------------------------------

TITLE: Configuring HTTP Cookies for YouTube Transcript API
DESCRIPTION: This snippet defines HTTP cookie settings for use with the YouTube Transcript API. It includes a sample cookie entry and demonstrates the format for specifying domain, path, expiration, and key-value pairs.

LANGUAGE: plaintext
CODE:
.example.com	TRUE	/	TRUE	31874	BAD_TEST_FIELD	BAD_TEST_VALUE