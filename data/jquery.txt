TITLE: Including jQuery via CDN Script Tag
DESCRIPTION: Basic method to include jQuery in a web page using a CDN-hosted script.

LANGUAGE: html
CODE:
<script src="https://code.jquery.com/jquery-@VERSION.min.js"></script>

----------------------------------------

TITLE: NPM Installation of jQuery
DESCRIPTION: Command to install jQuery via npm package manager.

LANGUAGE: sh
CODE:
npm install jquery

----------------------------------------

TITLE: Importing jQuery as ES Module
DESCRIPTION: Modern approach to import jQuery using ES modules, showing different import patterns including named and default imports.

LANGUAGE: html
CODE:
<script type="module">
	import { $ } from "https://code.jquery.com/jquery-@VERSION.module.min.js";
</script>

LANGUAGE: html
CODE:
<script type="module">
	import { jQuery } from "https://code.jquery.com/jquery-@VERSION.module.min.js";
</script>

LANGUAGE: html
CODE:
<script type="module">
	import $ from "https://code.jquery.com/jquery-@VERSION.module.min.js";
</script>

----------------------------------------

TITLE: Building jQuery from Source
DESCRIPTION: Commands to clone the jQuery repository, install dependencies, and build the project. This process creates the main jQuery distribution files.

LANGUAGE: bash
CODE:
cd jquery
npm install
npm run build

----------------------------------------

TITLE: Including jQuery Slim Version
DESCRIPTION: Instructions for including the slim version of jQuery that excludes ajax, callbacks, deferred, effects & queue modules.

LANGUAGE: html
CODE:
<script src="https://code.jquery.com/jquery-@VERSION.slim.min.js"></script>

LANGUAGE: html
CODE:
<script type="module">
	import { $ } from "https://code.jquery.com/jquery-@VERSION.module.slim.min.js";
</script>

----------------------------------------

TITLE: jQuery Node.js Integration
DESCRIPTION: Examples of importing jQuery in Node.js environment using both ES modules and CommonJS syntax with jsdom.

LANGUAGE: javascript
CODE:
import { JSDOM } from "jsdom";
const { window } = new JSDOM( "" );
import { jQueryFactory } from "jquery/factory";
const $ = jQueryFactory( window );

LANGUAGE: javascript
CODE:
const { JSDOM } = require( "jsdom" );
const { window } = new JSDOM( "" );
const { jQueryFactory } = require( "jquery/factory" );
const $ = jQueryFactory( window );

----------------------------------------

TITLE: jQuery Import Map Configuration
DESCRIPTION: Setup for import maps to simplify jQuery imports and provide better version management.

LANGUAGE: html
CODE:
<script type="importmap">
	{
		"imports": {
			"jquery": "https://code.jquery.com/jquery-@VERSION.module.min.js",
			"jquery/slim": "https://code.jquery.com/jquery-@VERSION.module.slim.min.js"
		}
	}
</script>

----------------------------------------

TITLE: Customizing jQuery Build with Module Exclusion
DESCRIPTION: Example of using the build script to create a custom version of jQuery by excluding specific modules. This allows for tailoring jQuery to specific project needs.

LANGUAGE: bash
CODE:
npm run build -- -e ajax/jsonp -e css -e deprecated -e dimensions -e effects -e offset -e wrap

----------------------------------------

TITLE: Creating jQuery Slim Build
DESCRIPTION: Command to generate the official jQuery Slim build, which is a lighter version of jQuery with certain features excluded.

LANGUAGE: bash
CODE:
npm run build -- --filename=jquery.slim.js --slim

----------------------------------------

TITLE: Building All jQuery Release Files
DESCRIPTION: Command to build all variants of jQuery, including standard, slim, and module versions, along with their minified counterparts and sourcemaps.

LANGUAGE: bash
CODE:
npm run build:all

----------------------------------------

TITLE: Setting up Local jQuery Development Environment - Bash Commands
DESCRIPTION: Series of commands to clone, build and test jQuery locally. Includes repository setup, dependency installation, and test server initialization.

LANGUAGE: bash
CODE:
$ git clone git@github.com:username/jquery.git

LANGUAGE: bash
CODE:
$ cd jquery

LANGUAGE: bash
CODE:
$ git remote add upstream git@github.com:jquery/jquery.git

LANGUAGE: bash
CODE:
$ git pull upstream main

LANGUAGE: bash
CODE:
$ npm install

LANGUAGE: bash
CODE:
$ npm run build:all

LANGUAGE: bash
CODE:
$ npm run test:server

----------------------------------------

TITLE: jQuery Test Suite Convenience Methods
DESCRIPTION: Custom helper functions used in jQuery's test suite to simplify common testing operations, such as selecting elements and firing native DOM events.

LANGUAGE: javascript
CODE:
q( "main", "foo", "bar" );

t("Check for something", "//[a]", ["foo", "bar"]);

fireNative( jQuery( "#elem" )[ 0 ], "click" );

url( "index.html" );

testIframe( testName, fileName,
  function testCallback(
      assert, jQuery, window, document,
	  [ additional args ] ) {
	...
  } );

----------------------------------------

TITLE: QUnit Test Assertions in jQuery
DESCRIPTION: Examples of QUnit test assertions used in jQuery's test suite. These methods are used to validate the behavior of jQuery functions and modules.

LANGUAGE: javascript
CODE:
ok( value, [message] );
equal( actual, expected, [message] );
notEqual( actual, expected, [message] );
deepEqual( actual, expected, [message] );
notDeepEqual( actual, expected, [message] );
strictEqual( actual, expected, [message] );
notStrictEqual( actual, expected, [message] );
throws( block, [expected], [message] );

----------------------------------------

TITLE: Running jQuery Unit Tests
DESCRIPTION: Instructions for setting up and running jQuery's unit test suite, which requires a local PHP server and specific directory structure.

LANGUAGE: bash
CODE:
npm install
npm start

----------------------------------------

TITLE: Running jQuery Tests - Bash Commands
DESCRIPTION: Commands for running and managing jQuery test suite, including port configuration, test preparation, and module-specific testing.

LANGUAGE: bash
CODE:
$ npm run test:server -- --port 8000

LANGUAGE: bash
CODE:
$ npm start

LANGUAGE: bash
CODE:
$ npm run pretest

LANGUAGE: bash
CODE:
$ npm run test:unit

LANGUAGE: bash
CODE:
$ npm run test:unit -- --help

LANGUAGE: bash
CODE:
$ npm run test:unit -- --flag module=css

LANGUAGE: bash
CODE:
$ npm run test:unit -- -f module=css -f module=effects

LANGUAGE: bash
CODE:
$ npm run test:unit -- -f dev

----------------------------------------

TITLE: Cloning jQuery Repository in Shell
DESCRIPTION: Commands to clone the jQuery repository and navigate to the project directory.

LANGUAGE: sh
CODE:
git clone git@github.com:jquery/jquery.git
cd jquery

----------------------------------------

TITLE: Executing jQuery Release Process
DESCRIPTION: Command to run the full jQuery release process, including pre-release checks, tag creation, and publishing.

LANGUAGE: sh
CODE:
BLOG_URL=https://blog.jquery.com/... npm run release

----------------------------------------

TITLE: Running Dry Run for jQuery Release
DESCRIPTION: Command to perform a dry run of the jQuery release process, requiring a blog post URL.

LANGUAGE: sh
CODE:
BLOG_URL=https://blog.jquery.com/... npm run release -- -d

----------------------------------------

TITLE: Running Pre-release for jQuery
DESCRIPTION: Command to run a pre-release (beta, alpha, or rc) version of jQuery.

LANGUAGE: sh
CODE:
BLOG_URL=https://blog.jquery.com/... npm run release -- --preRelease=beta

----------------------------------------

TITLE: Executing Post-release Script for jQuery
DESCRIPTION: Command to run the post-release script, which pushes release files to CDN and jquery-dist repos, and updates the main jQuery repo.

LANGUAGE: sh
CODE:
./build/release/post-release.sh $VERSION $BLOG_URL

----------------------------------------

TITLE: Updating jQuery Version on jquery.com
DESCRIPTION: Commands to update the shipping version of jQuery on the jquery.com website.

LANGUAGE: sh
CODE:
git pull jquery/jquery.com
# Edit index.html and download.md
git commit
npm version patch
git push origin main --tags

----------------------------------------

TITLE: Setting GitHub Token for jQuery Release
DESCRIPTION: Command to set the JQUERY_GITHUB_TOKEN environment variable, required for publishing release notes and generating contributor lists.

LANGUAGE: sh
CODE:
export JQUERY_GITHUB_TOKEN=...

----------------------------------------

TITLE: Logging into npm for jQuery Release
DESCRIPTION: Command to log into npm with a user that has access to the 'jquery' package.

LANGUAGE: sh
CODE:
npm login

----------------------------------------

TITLE: Installing Dependencies for jQuery Release
DESCRIPTION: Command to install the necessary dependencies for the jQuery release process using npm.

LANGUAGE: sh
CODE:
npm install