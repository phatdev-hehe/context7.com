TITLE: Basic Animation with Anime.js V4
DESCRIPTION: Example of importing and using the animate and stagger functions from Anime.js V4 to create an animation with rotation, duration, delay, and easing effects on elements with the 'square' class.

LANGUAGE: javascript
CODE:
import {
  animate,
  stagger,
} from 'animejs';

animate('.square', {
  x: 320,
  rotate: { from: -180 },
  duration: 1250,
  delay: stagger(65, { from: 'center' }),
  ease: 'inOutQuint',
  loop: true,
  alternate: true
});

----------------------------------------

TITLE: V4 API Breaking Changes: Animation Configuration
DESCRIPTION: A diff showing the API changes from Anime.js V3 to V4 for basic animation configuration, including changes to imports, animation targets, property values, easing functions, direction controls, and event callbacks.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { animate, createSpring, utils } from 'animejs';

- anime({
-   targets: 'div',
+ animate('div', {
    translateX: 100,
      rotate: {
-     value: 360,
+     to: 360,
-     easing: 'spring(.7, 80, 10, .5)',
+     ease: createSpring({ mass: .7, damping: 80, stiffness: 10, velocity: .5}),
    },
-   easing: 'easeinOutExpo',
+   ease: 'inOutExpo',
-   easing: () => t => Math.cos(t),
+   ease: t => Math.cos(t),
-   direction: 'reverse',
+   reversed: true,
-   direction: 'alternate',
+   alternate: true,
-   loop: 1,
+   loop: 0,
-   round: 100,
+   modifier: utils.round(2),
-   begin: () => {},
+   onBegin: () => {},
-   update: () => {},
+   onUpdate: () => {},
-   change: () => {},
+   onRender: () => {},
-   changeBegin: () => {},
-   changeComplete: () => {},
-   loopBegin: () => {},
-   loopComplete: () => {},
+   onLoop: () => {},
-   complete: () => {},
+   onComplete: () => {},
  });

----------------------------------------

TITLE: V4 API Breaking Changes: Timelines
DESCRIPTION: Changes to the timeline API in Anime.js V4, demonstrating how to create and configure animation timelines with the new createTimeline function and stagger utility.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { createTimeline, stagger } from 'animejs';

- anime.timeline({
+ createTimeline({
-   duration: 500,
-   easing: 'easeInOutQuad',
+   defaults: {
+     duration: 500,
+     ease: 'inOutQuad',
+   }
-   loop: 2,
+   loop: 1,
- }).add({
-   targets: 'div',
+ }).add('div', {
    rotate: 90,
  })
- .add('.target:nth-child(1)', { opacity: 0, onComplete }, 0)
- .add('.target:nth-child(2)', { opacity: 0, onComplete }, 100)
- .add('.target:nth-child(3)', { opacity: 0, onComplete }, 200)
- .add('.target:nth-child(4)', { opacity: 0, onComplete }, 300)
+ .add('.target', { opacity: 0, onComplete }, stagger(100))

----------------------------------------

TITLE: V4 API Breaking Changes: Stagger
DESCRIPTION: Changes to the stagger utility in Anime.js V4, showing how to create staggered animations with different configurations.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { animate, stagger } from 'animejs';

- anime({
-   targets: 'div',
+ animate('div', {
-   translateX: anime.stagger(100),
+   translateX: stagger(100),
-   delay: anime.stagger(100, { direction: 'reversed' }),
+   translateX: stagger(100, { reversed: true }),
  });

----------------------------------------

TITLE: V4 API Breaking Changes: SVG
DESCRIPTION: Changes to the SVG animation capabilities in Anime.js V4, showing how to create motion paths, morph SVG shapes, and animate SVG properties with the new svg utility.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { animate, svg } from 'animejs';

- const path = anime.path('path');
+ const { x, y, angle } = svg.createMotionPath('path');

- anime({
-   targets: '#shape1',
+ animate('#shape1', {
-   points: '70 41 118.574 59.369 111.145 132.631 60.855 84.631 20.426 60.369',
+   points: svg.morphTo('#shape2'),
-   strokeDashoffset: [anime.setDashoffset, 0],
+   strokeDashoffset: svg.drawLine(),
-   translateX: path('x'),
-   translateY: path('y'),
-   rotate: path('angle'),
+   translateX: x,
+   translateY: y,
+   rotate: angle,
  });

----------------------------------------

TITLE: V4 API Breaking Changes: Promises
DESCRIPTION: Changes to the promises API in Anime.js V4, showing how to handle animation completion with promises compared to the previous version.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { animate, utils } from 'animejs';

- anime({ targets: target, prop: x }).finished.then(() => {});
+ animate(target, { prop: x }).then(() => {});

----------------------------------------

TITLE: V4 API Breaking Changes: Timers
DESCRIPTION: Changes to the timers API in Anime.js V4, showing how to create and configure animation timers with the new createTimer function.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { createTimer } from 'animejs';

- anime({
+ createTimer({
-   duration: Infinity,
-   update: () => {},
+   onUpdate: () => {},
  });

----------------------------------------

TITLE: V4 API Breaking Changes: Utils
DESCRIPTION: Changes to the utility functions in Anime.js V4, showing how to get and set element properties, remove animations, and round values with the utils object.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { utils } from 'animejs';

- const value = anime.get('#target1', 'translateX');
+ const value = utils.get('#target1', 'translateX');

- anime.set('#target1', { translateX: 100 });
+ utils.set('#target1', { translateX: 100 });

- anime.remove('#target1');
+ utils.remove('#target1');

- const rounded = anime.round(value);
+ const rounded = utils.round(value, 0);

----------------------------------------

TITLE: V4 API Breaking Changes: Engine
DESCRIPTION: Changes to the animation engine configuration in Anime.js V4, showing how to control document visibility behavior and animation speed.

LANGUAGE: javascript
CODE:
- import anime from 'animejs';
+ import { engine } from 'animejs';

- anime.suspendWhenDocumentHidden = false;
+ engine.pauseWhenHidden = false;

- anime.speed = .5;
+ engine.playbackRate = .5;