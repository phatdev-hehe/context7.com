TITLE: Using Semantic Cache in a Node.js Application
DESCRIPTION: This snippet shows how to initialize and use Semantic Cache in a Node.js application. It demonstrates setting a value, waiting for the index to update, and then retrieving a semantically similar query.

LANGUAGE: typescript
CODE:
import { SemanticCache } from "@upstash/semantic-cache";
import { Index } from "@upstash/vector";

// ðŸ‘‡ your vector database
const index = new Index();

// ðŸ‘‡ your semantic cache
const semanticCache = new SemanticCache({ index, minProximity: 0.95 });

async function runDemo() {
  await semanticCache.set("Capital of Turkey", "Ankara");
  await delay(1000);

  // ðŸ‘‡ outputs: "Ankara"
  const result = await semanticCache.get("What is Turkey's capital?");
  console.log(result);
}

function delay(ms: number) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

runDemo();

----------------------------------------

TITLE: Using Semantic Cache with Namespace Support
DESCRIPTION: This snippet demonstrates how to use Semantic Cache with namespace support. It shows how to initialize the cache with a specific namespace to separate data into partitions.

LANGUAGE: typescript
CODE:
import { SemanticCache } from "@upstash/semantic-cache";
import { Index } from "@upstash/vector";

// ðŸ‘‡ your vector database
const index = new Index();

// ðŸ‘‡ your semantic cache
const semanticCache = new SemanticCache({ index, minProximity: 0.95, namespace: "user1" });

await semanticCache.set("Capital of Turkey", "Ankara");

----------------------------------------

TITLE: Configuring Environment Variables for Upstash Vector
DESCRIPTION: This snippet demonstrates how to set up the necessary environment variables for connecting to an Upstash Vector database. It includes the URL and token required for authentication.

LANGUAGE: plaintext
CODE:
UPSTASH_VECTOR_REST_URL=https://example.upstash.io
UPSTASH_VECTOR_REST_TOKEN=your_secret_token_here

----------------------------------------

TITLE: Installing Semantic Cache and Upstash Vector in Node.js
DESCRIPTION: This snippet shows how to install the Semantic Cache and Upstash Vector packages using npm. These are the required dependencies for using Semantic Cache in a Node.js application.

LANGUAGE: bash
CODE:
npm install @upstash/semantic-cache @upstash/vector