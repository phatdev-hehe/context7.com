TITLE: Next.js App Directory Implementation
DESCRIPTION: Implementation of ThemeProvider in Next.js app directory using layout component.

LANGUAGE: jsx
CODE:
// app/layout.jsx
import { ThemeProvider } from 'next-themes'

export default function Layout({ children }) {
  return (
    <html suppressHydrationWarning>
      <head />
      <body>
        <ThemeProvider>{children}</ThemeProvider>
      </body>
    </html>
  )
}

----------------------------------------

TITLE: Theme Switcher Component Implementation
DESCRIPTION: React component implementation for switching between light and dark themes using useTheme hook

LANGUAGE: jsx
CODE:
import { useTheme } from 'next-themes'

const ThemeChanger = () => {
  const { theme, setTheme } = useTheme()

  return (
    <div>
      The current theme is: {theme}
      <button onClick={() => setTheme('light')}>Light Mode</button>
      <button onClick={() => setTheme('dark')}>Dark Mode</button>
    </div>
  )
}

----------------------------------------

TITLE: Theme Switcher Component
DESCRIPTION: React component implementing theme switching functionality using useTheme hook.

LANGUAGE: jsx
CODE:
import { useTheme } from 'next-themes'

const ThemeChanger = () => {
  const { theme, setTheme } = useTheme()

  return (
    <div>
      The current theme is: {theme}
      <button onClick={() => setTheme('light')}>Light Mode</button>
      <button onClick={() => setTheme('dark')}>Dark Mode</button>
    </div>
  )
}

----------------------------------------

TITLE: Basic CSS Theme Implementation
DESCRIPTION: CSS implementation for light and dark theme using CSS variables and data attributes

LANGUAGE: css
CODE:
:root {
  /* Your default theme */
  --background: white;
  --foreground: black;
}

[data-theme='dark'] {
  --background: black;
  --foreground: white;
}

----------------------------------------

TITLE: Theme CSS Configuration
DESCRIPTION: CSS configuration for implementing light and dark themes using CSS variables.

LANGUAGE: css
CODE:
:root {
  /* Your default theme */
  --background: white;
  --foreground: black;
}

[data-theme='dark'] {
  --background: black;
  --foreground: white;
}

----------------------------------------

TITLE: Basic Next.js Pages Implementation
DESCRIPTION: Implementation of ThemeProvider in Next.js pages directory using custom App component.

LANGUAGE: jsx
CODE:
// pages/_app.js
import { ThemeProvider } from 'next-themes'

function MyApp({ Component, pageProps }) {
  return (
    <ThemeProvider>
      <Component {...pageProps} />
    </ThemeProvider>
  )
}

----------------------------------------

TITLE: Implementing Dark Mode in Next.js Pages Directory
DESCRIPTION: Implementation of ThemeProvider in Next.js pages directory with basic dark mode support

LANGUAGE: jsx
CODE:
import { ThemeProvider } from 'next-themes'

function MyApp({ Component, pageProps }) {
  return (
    <ThemeProvider>
      <Component {...pageProps} />
    </ThemeProvider>
  )
}

export default MyApp

----------------------------------------

TITLE: Markdown Documentation for Next-Themes Setup
DESCRIPTION: Documentation header and description for implementing multiple themes using next-themes package with Next.js app directory structure.

LANGUAGE: markdown
CODE:
# multi-theme example

> An example on how to handle multiple-themes with `next-themes` using `next.js` app directory.

----------------------------------------

TITLE: Basic Next.js Custom App Setup
DESCRIPTION: Minimal setup for a custom Next.js _app.js file before adding theme support

LANGUAGE: jsx
CODE:
function MyApp({ Component, pageProps }) {
  return <Component {...pageProps} />
}

export default MyApp

----------------------------------------

TITLE: Installing next-themes
DESCRIPTION: Commands to install next-themes package using npm or yarn package managers.

LANGUAGE: bash
CODE:
$ npm install next-themes
# or
$ yarn add next-themes

----------------------------------------

TITLE: Installing next-themes package
DESCRIPTION: Commands to install next-themes using npm or yarn package managers

LANGUAGE: bash
CODE:
$ npm install next-themes
# or
$ yarn add next-themes