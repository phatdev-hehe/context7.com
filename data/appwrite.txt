TITLE: Automating Appwrite Version Release Process in Shell
DESCRIPTION: This script automates the process of updating the Appwrite website for a new version release. It replaces all version references in documentation, updates manual installation files, and prepares a new branch for a pull request. The script requires a version number as an input parameter.

LANGUAGE: shell
CODE:
#!/bin/bash

# exit on error
set -e

if [ -z "$1" ]
  then
    echo "Usage: $0 <version>"
    exit 1
fi

VERSION=$1

git stash
git checkout main
git pull
git checkout -b feat-$VERSION-release

# Replace all references of appwrite/appwrite:x.y.z with appwrite/appwrite:$VERSION
PATHS=(
  'src/routes/docs/advanced/self-hosting'
  'src/routes/blog/post'
)
for p in "${PATHS[@]}"; do
  grep -rl "appwrite/appwrite:[0-9]*\.[0-9]*\.[0-9]*" "$p" | xargs sed -i.bak "s#appwrite/appwrite:.*#appwrite/appwrite:$VERSION#g"
  git add "$p/**/*.markdoc"
  git add "$p/*.markdoc"
done

# Update manual installation files
cd static/install
docker run -it --rm \
    --volume /var/run/docker.sock:/var/run/docker.sock \
    --volume "$(pwd)"/appwrite:/usr/src/code/appwrite:rw \
    --entrypoint="install" \
    appwrite/appwrite:$VERSION --http-port=80 --https-port=443 --interactive=N --no-start=true
cp appwrite/docker-compose.yml compose
cp appwrite/.env env
sed -i.bak "s#_APP_OPENSSL_KEY_V1=.*#_APP_OPENSSL_KEY_V1=your-secret-key#g" env
sed -i.bak "s#_APP_DB_PASS=.*#_APP_DB_PASS=password#g" env
sed -i.bak "s#_APP_DB_ROOT_PASS=.*#_APP_DB_ROOT_PASS=rootsecretpassword#g" env
git add compose env
rm -rf appwrite
cd -

# Bump appwrite repo so latest main commit is used
pnpm update @appwrite.io/repo
git add pnpm-lock.yaml

git commit -m "Bump Appwrite version to $VERSION"

read -p "Ready to push? (y/n) " -n 1 -r
if [[ $REPLY =~ ^[Yy]$ ]]; then
  git push -u origin HEAD
fi
echo PR Link:
echo "https://github.com/appwrite/website/compare/main...feat-$VERSION-release?expand=1&title=Bump%20Appwrite%20version%20to%20$VERSION&body=%23%23%20What%20does%20this%20PR%20do%3F%0A%0AUpdate%20installation%20and%20upgrade%20instructions%20to%20use%20the%20latest%20Appwrite%20version%0A%0A%23%23%20Test%20Plan%0A%0AManual%0A%0A%23%23%20Related%20PRs%20and%20Issues%0A%0ANone%0A%0A%23%23%23%20Have%20you%20read%20the%20%5BContributing%20Guidelines%20on%20issues%5D%28https%3A%2F%2Fgithub.com%2Fappwrite%2Fappwrite%2Fblob%2Fmaster%2FCONTRIBUTING.md%29%3F%0A%0AYes"
echo
echo PR Subject:
echo "Bump Appwrite version to $VERSION"
echo
echo PR Body:
echo "## What does this PR do?

Update installation and upgrade instructions to use the latest Appwrite version

## Test Plan

Manual

## Related PRs and Issues

None

### Have you read the [Contributing Guidelines on issues](https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md)?

Yes"

----------------------------------------

TITLE: Deploying Functions with Appwrite CLI
DESCRIPTION: Command to push your function to Appwrite after adding any dependencies. This deploys your function code to the Appwrite platform, making it available for execution.

LANGUAGE: sh
CODE:
appwrite push functions

----------------------------------------

TITLE: Initializing Functions with Appwrite CLI
DESCRIPTION: Command to create a starter function and its folder structure using the Appwrite CLI. This generates the necessary files and templates that can be modified with your custom code.

LANGUAGE: sh
CODE:
appwrite init functions

----------------------------------------

TITLE: Deploying Appwrite Project Changes Using CLI Push Command
DESCRIPTION: This command pushes local changes to your Appwrite project. The command must be executed in the directory that contains your appwrite.json configuration file, which defines your project structure.

LANGUAGE: bash
CODE:
push

----------------------------------------

TITLE: Recreating Appwrite Stack with Docker Compose
DESCRIPTION: Command to recreate the Appwrite stack after making changes to configuration files. This applies any modifications made to docker-compose.yml or .env files.

LANGUAGE: sh
CODE:
docker compose up -d

----------------------------------------

TITLE: Verifying Appwrite Configuration Changes
DESCRIPTION: Command to verify if configuration changes have been successfully applied to the Appwrite stack. This displays the current environment variables in use by Appwrite.

LANGUAGE: sh
CODE:
docker compose exec appwrite vars

----------------------------------------

TITLE: Creating Multicode Examples in Appwrite Docs
DESCRIPTION: Demonstrates how to show code examples in multiple programming languages using the multicode component.

LANGUAGE: md
CODE:
{% multicode %}
```js
console.log('test');
```

```php
echo 'test';
```

```dart
print('test');
```
{% /multicode %}

----------------------------------------

TITLE: Creating Tabbed Content in Appwrite Docs
DESCRIPTION: Shows how to use the tabs component to organize content into different programming language tabs.

LANGUAGE: md
CODE:
{% tabs %}
{% tabsitem #js title="Javascript" %}
Lorem ipsum dolor sit amet consectetur.
{% /tabsitem %}

{% tabsitem #flutter title="Flutter" %}
Lorem ipsum dolor sit amet consectetur.
{% /tabsitem %}
{% /tabs %}

----------------------------------------

TITLE: Creating Code Blocks with Language Highlighting
DESCRIPTION: Shows a Python code example with syntax highlighting using triple backticks and language identifier.

LANGUAGE: python
CODE:
def hello_world():
    print("Hello, World!")

----------------------------------------

TITLE: Executing Appwrite Version Release Script in Shell
DESCRIPTION: A simple example showing how to run the release preparation script. It demonstrates passing the target Appwrite version as a command-line argument to the script.

LANGUAGE: shell
CODE:
./prep_release.sh 1.5.7

----------------------------------------

TITLE: Installing and Running Appwrite Website Development Environment
DESCRIPTION: Command to start the local development server after installing dependencies with pnpm. This is used to run the Appwrite website locally for development purposes.

LANGUAGE: bash
CODE:
pnpm run dev

----------------------------------------

TITLE: Installing Dependencies with PNPM for Appwrite Website Development
DESCRIPTION: Command to install project dependencies using PNPM package manager. This should be run after cloning the repository and before starting development.

LANGUAGE: shell
CODE:
pnpm i

----------------------------------------

TITLE: Starting Development Server for Appwrite Website
DESCRIPTION: Command to run a local development server. This allows contributors to see changes in real-time while developing the Appwrite website.

LANGUAGE: shell
CODE:
pnpm run dev

----------------------------------------

TITLE: Building Appwrite Website for Production
DESCRIPTION: Command to build the website for production. Contributors should run this before committing changes to ensure the website builds successfully.

LANGUAGE: shell
CODE:
pnpm run build

----------------------------------------

TITLE: Creating Step Sections in Appwrite Docs
DESCRIPTION: Shows how to create step-by-step documentation using the section component with numbered steps.

LANGUAGE: md
CODE:
{% section #featured-products-1 step=1 title="Title" %}
Lorem ipsum dolor sit amet consectetur.
{% /section %}

{% section #featured-products-2 step=2 title="Title" %}
Lorem ipsum dolor sit amet consectetur.
{% /section %}

{% section #featured-products-3 step=3 title="Title" %}
Lorem ipsum dolor sit amet consectetur.
{% /section %}

----------------------------------------

TITLE: Creating Info Boxes in Appwrite Docs
DESCRIPTION: Demonstrates how to create informational callout boxes using the info component.

LANGUAGE: md
CODE:
{% info title="Public Service Announcement" %}
Lorem ipsum dolor sit amet consectetur.
{% /info %}

----------------------------------------

TITLE: Creating Accordion Components in Appwrite Docs
DESCRIPTION: Demonstrates how to create collapsible accordion elements to save space in documentation.

LANGUAGE: md
CODE:
{% accordion %}
{% accordion_item title="Team ID" %}
{% /accordion_item %}

{% accordion_item title="Bundle ID" %}
{% /accordion_item %}
{% /accordion %}

----------------------------------------

TITLE: Creating Icon Cards in Appwrite Docs
DESCRIPTION: Shows how to create card-based navigation with icons for visual enhancement.

LANGUAGE: md
CODE:
{% cards %}

{% cards_item href="/docs/products/messaging/apns" title="APNS" icon="icon-apple" %}
Configure APNs for push notification to Apple devices.
{% /cards_item %}

{% cards_item href="/docs/products/messaging/fcm" title="FCM" icon="web-icon-firebase" %}
Configure FCM for push notification to Android and Apple devices.
{% /cards_item %}

{% /cards %}

----------------------------------------

TITLE: Creating Navigation Cards in Appwrite Docs
DESCRIPTION: Demonstrates how to create card-based navigation links to different sections of documentation.

LANGUAGE: md
CODE:
{% cards %}

{% cards_item href="/docs/quick-starts/react" title="React" %}
Get started with Appwrite and React
{% /cards_item %}

{% cards_item href="/docs/quick-starts/vue" title="Vue.js" %}
Get started with Appwrite and Vue.js
{% /cards_item %}

{% cards_item href="/docs/quick-starts/nuxt" title="Nuxt" %}
Get started with Appwrite and Nuxt
{% /cards_item %}

{% cards_item href="/docs/quick-starts/sveltekit" title="SvelteKit" %}
Get started with Appwrite and SvelteKit
{% /cards_item %}

{% /cards %}

----------------------------------------

TITLE: Creating Theme-Specific Images in Appwrite Docs
DESCRIPTION: Shows how to embed images that display differently in light and dark modes using custom components.

LANGUAGE: md
CODE:
{% only_dark %}
![Project settings screen](/images/docs/platform/dark/create-api-key.png)
{% /only_dark %}
{% only_light %}
![Project settings screen](/images/docs/platform/create-api-key.png)
{% /only_light %}

----------------------------------------

TITLE: Creating Theme-Specific Content in Appwrite Docs
DESCRIPTION: Shows how to create content that displays differently in light and dark themes.

LANGUAGE: md
CODE:
{% only_dark %}
![Project settings screen](/images/docs/platform/dark/create-api-key.png)
{% /only_dark %}
{% only_light %}
![Project settings screen](/images/docs/platform/create-api-key.png)
{% /only_light %}

----------------------------------------

TITLE: Creating a New Branch for Feature Development
DESCRIPTION: Git command to create and switch to a new branch. The example shows the recommended branch naming convention for the Appwrite project.

LANGUAGE: shell
CODE:
git checkout -b [name_of_your_new_branch]

----------------------------------------

TITLE: Pushing Changes to GitHub for Pull Request
DESCRIPTION: Git command to push your local branch changes to your GitHub repository. This is necessary before creating a pull request for review.

LANGUAGE: shell
CODE:
git push origin [name_of_your_new_branch]

----------------------------------------

TITLE: Pulling Latest Changes from Upstream Repository
DESCRIPTION: Git command to pull the latest changes from the upstream repository. This ensures your local branch is up to date before creating a new branch.

LANGUAGE: shell
CODE:
git pull

----------------------------------------

TITLE: Creating Tables with Markdoc Syntax
DESCRIPTION: Shows an alternative method for creating tables using Appwrite's custom Markdoc table component.

LANGUAGE: md
CODE:
{% table %}

- Heading 1
- Heading 2

---

- Row 1 Cell 1
- Row 1 Cell 2

---

- Row 2 Cell 1
- Row 2 cell 2

{% /table %}

----------------------------------------

TITLE: Creating Tables in Markdown
DESCRIPTION: Demonstrates how to create structured data tables using Markdown syntax with pipes and hyphens.

LANGUAGE: md
CODE:
| Header 1     | Header 2     | Header 3     |
| ------------ | ------------ | ------------ |
| Row 1, Col 1 | Row 1, Col 2 | Row 1, Col 3 |
| Row 2, Col 1 | Row 2, Col 2 | Row 2, Col 3 |

----------------------------------------

TITLE: Embedding Icon Images in Appwrite Docs
DESCRIPTION: Demonstrates how to embed custom icon images of different sizes using the icon_image component.

LANGUAGE: md
CODE:
{% icon_image src="/icon.png" alt="Icon" /%}
{% icon_image src="/icon.png" alt="Icon" size="m" /%}
{% icon_image src="/icon.png" alt="Icon" size="l" /%}
{% icon_image src="/icon.png" alt="Icon" size="xl" /%}

----------------------------------------

TITLE: Embedding Icons in Appwrite Docs
DESCRIPTION: Shows how to embed icons of different sizes using the icon component.

LANGUAGE: md
CODE:
{% icon icon="github" /%}
{% icon icon="github" size="m" /%}
{% icon icon="github" size="l" /%}
{% icon icon="github" size="xl" /%}

----------------------------------------

TITLE: Embedding Images in Markdown
DESCRIPTION: Demonstrates the syntax for embedding images in Markdown documentation.

LANGUAGE: md
CODE:
![Logo](https://example.com/logo.png)

----------------------------------------

TITLE: Creating Links in Markdown
DESCRIPTION: Shows how to create hyperlinks to external websites or internal section references.

LANGUAGE: md
CODE:
[Google](https://www.google.com)
[Link to Section](#section-name)

----------------------------------------

TITLE: Creating Block Quotes in Markdown
DESCRIPTION: Demonstrates how to create block quotes for emphasizing or highlighting text in documentation.

LANGUAGE: md
CODE:
> This is a block quote.
> It can span multiple lines.

----------------------------------------

TITLE: Creating Inline Code in Markdown
DESCRIPTION: Demonstrates how to highlight inline code snippets using backticks.

LANGUAGE: md
CODE:
Use the `print()` function to display text.

----------------------------------------

TITLE: Creating Headers with Custom IDs in Markdown
DESCRIPTION: Demonstrates how to create headers with custom IDs for linking and table of contents inclusion.

LANGUAGE: md
CODE:
# Header with ID {% #header-with-id %}

----------------------------------------

TITLE: Formatting Text Emphasis in Markdown
DESCRIPTION: Shows how to create italic and bold text for emphasis in Markdown.

LANGUAGE: md
CODE:
_Italic Text_ or _Italic Text_
**Bold Text** or **Bold Text**

----------------------------------------

TITLE: Creating Unordered Lists in Markdown
DESCRIPTION: Demonstrates how to create bulleted lists in Markdown using hyphens.

LANGUAGE: md
CODE:
- Apple
- Banana
- Cherry

----------------------------------------

TITLE: Creating Ordered Lists in Markdown
DESCRIPTION: Shows how to create numbered lists in Markdown using numerical prefixes.

LANGUAGE: md
CODE:
1. First item
2. Second item
3. Third item

----------------------------------------

TITLE: Creating Headers in Markdown
DESCRIPTION: Shows how to create headers of different levels using hashtags in Markdown syntax.

LANGUAGE: md
CODE:
# Header 1

## Header 2

### Header 3

----------------------------------------

TITLE: Creating Paragraphs in Markdown
DESCRIPTION: Demonstrates how to create paragraphs in Markdown by leaving a blank line between text blocks.

LANGUAGE: md
CODE:
This is the first paragraph.

This is the second paragraph.