TITLE: Using Type-Checking Functions in JavaScript for PostHog
DESCRIPTION: This snippet demonstrates the use of custom type-checking functions like 'isNull' or 'isBoolean' in PostHog's JavaScript code. These functions are used to reduce bundle size by 1% compared to standard type checks.

LANGUAGE: JavaScript
CODE:
isNull(value)
isBoolean(value)

----------------------------------------

TITLE: Managing Sourcemaps for PostHog in Shell
DESCRIPTION: This set of commands demonstrates the process of generating build artifacts, injecting snippets into sources and sourcemaps, uploading sourcemaps to PostHog, and running the application locally. It includes options for both standard and NextJS-based applications.

LANGUAGE: shell
CODE:
# Generate build artifacts and use posthog-cli to inject snippets into sources and sourcemaps
VITE_POSTHOG_KEY='<your-project-key>' VITE_POSTHOG_HOST='http://localhost:8010' pnpm run build

# For NextJS based app use
NEXT_PUBLIC_POSTHOG_KEY='<your-project-key>' NEXT_PUBLIC_HOST='http://localhost:8010' pnpm run build

# Use posthog-cli to inject snippets into sources and sourcemaps
pnpm run inject

# Upload sourcemaps to PostHog
pnpm run upload

# Run application locally with newly generated minified build and sourcemaps
# Start sending exceptions to PostHog
pnpm run preview

----------------------------------------

TITLE: Running Unit Tests for PostHog.js React Components
DESCRIPTION: This command executes the unit tests for the PostHog.js React Components project using pnpm. It's essential for verifying the functionality of individual components and ensuring code quality.

LANGUAGE: bash
CODE:
pnpm test

----------------------------------------

TITLE: Building PostHog.js React Components Project
DESCRIPTION: This command builds the PostHog.js React Components project using pnpm. It compiles and prepares the components for deployment or further integration into other projects.

LANGUAGE: bash
CODE:
pnpm build

----------------------------------------

TITLE: Setting Up PostHog Project Dependencies in Shell
DESCRIPTION: These commands install project dependencies and build a local version of posthog-js. They should be run from the project root directory.

LANGUAGE: shell
CODE:
# Install deps
pnpm install

# Build local version of posthog-js
pnpm run build-posthog

----------------------------------------

TITLE: Running PostHog with Local Instance
DESCRIPTION: Command to run PostHog development server connected to a locally running PostHog instance on port 8010.

LANGUAGE: bash
CODE:
NEXT_PUBLIC_POSTHOG_KEY='<your-local-api-key>' NEXT_PUBLIC_POSTHOG_HOST='http://localhost:8010' pnpm dev

----------------------------------------

TITLE: Local Development with Environment Variables
DESCRIPTION: Command to run PostHog with specific environment variables for local development and testing.

LANGUAGE: bash
CODE:
NEXT_PUBLIC_POSTHOG_KEY='<your-local-api-key>' NEXT_PUBLIC_POSTHOG_HOST='http://localhost:8000' pnpm dev

----------------------------------------

TITLE: Installing PostHog CLI in Shell
DESCRIPTION: This command installs the PostHog CLI globally using Cargo, the Rust package manager. It's a prerequisite for working with the PostHog project.

LANGUAGE: shell
CODE:
# Install PostHog CLI globally
cargo install posthog-cli

----------------------------------------

TITLE: Running Next.js Example App
DESCRIPTION: Command for starting the Next.js example application with PostHog configuration.

LANGUAGE: bash
CODE:
NEXT_PUBLIC_POSTHOG_KEY='<your-local-api-key>' NEXT_PUBLIC_POSTHOG_HOST='http://localhost:8000' pnpm dev

----------------------------------------

TITLE: Publishing PreRelease Versions
DESCRIPTION: Commands for publishing alpha/beta versions of the package to NPM.

LANGUAGE: bash
CODE:
npm version [premajor | preminor | prepatch] --preid=beta
npm publish --tag beta
git push --tags

----------------------------------------

TITLE: Starting Cross-domain Development Server
DESCRIPTION: Command to start the PostHog server with cross-domain support and self-signed certificate generation.

LANGUAGE: bash
CODE:
NEXT_PUBLIC_POSTHOG_KEY='<your-local-api-key>' NEXT_PUBLIC_POSTHOG_HOST='http://localhost:8000' pnpm dev-crossdomain

----------------------------------------

TITLE: Starting PostHog Development Server
DESCRIPTION: Basic command to run the PostHog development server with a local API key.

LANGUAGE: bash
CODE:
NEXT_PUBLIC_POSTHOG_KEY='<your-local-api-key>' pnpm dev

----------------------------------------

TITLE: Starting Development Server for PostHog Vite Surveys
DESCRIPTION: This command uses pnpm to run the development server for the Vite Surveys playground, allowing for local testing and development.

LANGUAGE: shell
CODE:
pnpm run dev

----------------------------------------

TITLE: Running PostHog Nuxt Demo Project
DESCRIPTION: Command to start the development server for the PostHog Nuxt demo project using npm.

LANGUAGE: Shell
CODE:
npm run dev

----------------------------------------

TITLE: Installing Dependencies for PostHog Nuxt Demo
DESCRIPTION: Command to install the necessary packages for the PostHog Nuxt demo project using npm.

LANGUAGE: Shell
CODE:
npm install

----------------------------------------

TITLE: Running TestCafe with BrowserStack Credentials
DESCRIPTION: Commands for exporting BrowserStack credentials and running TestCafe E2E tests.

LANGUAGE: bash
CODE:
export BROWSERSTACK_USERNAME=xxx BROWSERSTACK_ACCESS_KEY=xxx
npx testcafe "browserstack:ie" testcafe/e2e.spec.js

----------------------------------------

TITLE: Installing Dependencies with PNPM
DESCRIPTION: Command for installing the package manager PNPM globally and using it for package management.

LANGUAGE: bash
CODE:
npm install -g pnpm@latest-9

----------------------------------------

TITLE: Installing Dependencies with pnpm for PostHog Vite Surveys
DESCRIPTION: This command uses pnpm to install all required dependencies for the Vite Surveys playground project.

LANGUAGE: shell
CODE:
pnpm install

----------------------------------------

TITLE: Host File Configuration for Cross-domain Testing
DESCRIPTION: DNS configuration entries for testing cross-domain functionality locally.

LANGUAGE: bash
CODE:
127.0.0.1 www.posthog.dev
127.0.0.1 app.posthog.dev

----------------------------------------

TITLE: Restarting MacOS DNS Server
DESCRIPTION: Command to restart the DNS server on MacOS after updating host file configurations.

LANGUAGE: bash
CODE:
sudo killall -HUP mDNSResponder

----------------------------------------

TITLE: Navigating to Vite Surveys Playground Directory
DESCRIPTION: This command changes the current working directory to the Vite Surveys playground folder within the PostHog project.

LANGUAGE: shell
CODE:
cd playground/vite-surveys