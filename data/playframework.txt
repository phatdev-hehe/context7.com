TITLE: Implementing Safe JavaScript Router in Scala for Play Framework
DESCRIPTION: This code snippet demonstrates a workaround for the XSS vulnerability by using an alternate version of JavaScriptReverseRouter that accepts an explicit, sanitized host. This ensures that an attacker cannot execute the XSS attack.

LANGUAGE: scala
CODE:
@Html(play.api.routing.JavaScriptReverseRouter(
  name = "Router",
  ajaxMethod = Some("jQuery.ajax"),
  host = "example.com", // should either be constant or sanitized value
  routes.javascript.Users.list,
  routes.javascript.Application.index
).body.replace("/", "\\/"))

----------------------------------------

TITLE: Configuring CSRF Content Type Settings in Play Framework
DESCRIPTION: Configuration snippet for Play Framework's application.conf to implement a CSRF vulnerability workaround. This configuration modifies content type filtering to enforce CSRF checks on all POST requests.

LANGUAGE: hocon
CODE:
play.filters.csrf.contentType {
  blackList = []
  whiteList = ["none"]
}

----------------------------------------

TITLE: Implementing Secure SAXParserFactory in Java for Play Framework
DESCRIPTION: This code snippet provides a custom SAXParserFactory implementation that disables XML external entities to mitigate the vulnerability. It extends the SAXParserFactory class and overrides key methods to ensure secure XML parsing.

LANGUAGE: java
CODE:
package xml;

import org.xml.sax.*;
import javax.xml.parsers.*;

public class SecureSAXParserFactory extends SAXParserFactory {
    private final SAXParserFactory platformDefault = new com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl();

    public SecureSAXParserFactory() throws SAXNotSupportedException, SAXNotRecognizedException, ParserConfigurationException {
        platformDefault.setFeature("http://xml.org/sax/features/external-general-entities", false);
        platformDefault.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
        platformDefault.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
    }

    public SAXParser newSAXParser() throws ParserConfigurationException, SAXException {
        return platformDefault.newSAXParser();
    }

    public void setFeature(String name, boolean value) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException {
        platformDefault.setFeature(name, value);
    }

    public boolean getFeature(String name) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException {
        return platformDefault.getFeature(name);
    }
}

----------------------------------------

TITLE: Encoding URL Parameter to Prevent XSS in Play Framework
DESCRIPTION: This code snippet demonstrates a workaround to prevent XSS injection by encoding the parameter before using it in URL rendering. It uses the urlEncode() method to sanitize the input.

LANGUAGE: java
CODE:
@{Controller.action(parameterWithInjection?.urlEncode())}

----------------------------------------

TITLE: Secure XML Parsing with DocumentBuilderFactory in Java
DESCRIPTION: This code snippet demonstrates how to securely configure a DocumentBuilderFactory to prevent XML external entity (XXE) attacks, as recommended by OWASP.

LANGUAGE: Java
CODE:
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
dbf.setFeature("http://xml.org/sax/features/external-general-entities", false);
dbf.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
dbf.setXIncludeAware(false);
dbf.setExpandEntityReferences(false);

----------------------------------------

TITLE: Implementing Secure SAX Parser Factory in Java for Play Framework
DESCRIPTION: Custom SAXParserFactory implementation that disables XML external entities and DOCTYPE declarations to prevent XXE attacks. This implementation needs to be specified via system property when starting the application in production mode.

LANGUAGE: java
CODE:
package xml;

import org.xml.sax.*;
import javax.xml.parsers.*;

public class SecureSAXParserFactory extends SAXParserFactory {
    private final SAXParserFactory platformDefault = new com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl();

    public SecureSAXParserFactory() throws SAXNotSupportedException, SAXNotRecognizedException, ParserConfigurationException {
        platformDefault.setFeature("http://xml.org/sax/features/external-general-entities", false);
        platformDefault.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
    }

    public SAXParser newSAXParser() throws ParserConfigurationException, SAXException {
        return platformDefault.newSAXParser();
    }

    public void setFeature(String name, boolean value) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException {
        platformDefault.setFeature(name, value);
    }

    public boolean getFeature(String name) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException {
        return platformDefault.getFeature(name);
    }
}

----------------------------------------

TITLE: Fixing XSS Vulnerability in Play Framework Secure Module Login Page (HTML)
DESCRIPTION: This code snippet shows the necessary changes to fix the XSS vulnerability in the Secure module login page. It replaces vulnerable HTML syntax with safer message retrieval methods.

LANGUAGE: html
CODE:
&{flash.error}

LANGUAGE: html
CODE:
${messages.get(flash.error)}

LANGUAGE: html
CODE:
&{flash.success}

LANGUAGE: html
CODE:
${messages.get(flash.success)}

----------------------------------------

TITLE: Upgrading HTTPClient Library in Scala for Play Framework Vulnerability Workaround
DESCRIPTION: This code snippet demonstrates how to upgrade the HTTPClient library to version 4.5.2 as a workaround for the OAuth 1.0 denial of service vulnerability in Play Framework. This upgrade addresses the issue where the HTTP request connection hangs when using OAuth over HTTPS and the server doesn't respond to the TLS handshake.

LANGUAGE: scala
CODE:
libraryDependencies += "org.apache.httpcomponents" % "httpclient" % "4.5.2"

----------------------------------------

TITLE: Upgrading Netty Dependency Fix - Scala
DESCRIPTION: Dependency upgrade workaround to fix the httpOnly cookie bypass vulnerability by updating to Netty 3.9.8.Final

LANGUAGE: scala
CODE:
libraryDependencies += "io.netty" % "netty" % "3.9.8.Final"

----------------------------------------

TITLE: Adding Logback Classic Dependency in Play Framework
DESCRIPTION: This snippet shows how to add the Logback Classic library dependency to a Play Framework project's build file. It specifies version 1.2.3, which addresses the deserialization vulnerability.

LANGUAGE: scala
CODE:
// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
libraryDependencies += "ch.qos.logback" % "logback-classic" % "1.2.3"

----------------------------------------

TITLE: Cloning and Linking Repositories for Play Framework Website Development
DESCRIPTION: Shell commands for cloning the necessary repositories and creating symlinks for the Play Framework website development environment. This includes the main playframework repo, play-generated-docs, and translation repositories.

LANGUAGE: shell
CODE:
# Assuming you are in the $HOME folder
cd ~

# Clone this website repo
git clone -o origin https://github.com/playframework/playframework.com.git

# Install docs and its translation files
mkdir ~/play-docs-translations
cd ~/play-docs-translations
git clone -o origin https://github.com/playframework/play-generated-docs.git generated
git clone -o origin https://github.com/playframework-ja/translation-project.git ja
git clone -o origin https://github.com/PlayFrameworkTR/translation-project tr
git clone -o origin https://github.com/cheleb/playframework-fr fr
git clone -o origin https://github.com/antonsarov/translation-project bg

# Now you need to link the translation files from the ~/playframework.com/data folder:
cd ~/playframework.com/data/
ln -s ../../play-docs-translations/generated generated

----------------------------------------

TITLE: Downloading Play1 Modules for Play Framework Website
DESCRIPTION: Shell script to download a comprehensive list of Play1 modules from the Typesafe server. These modules are required for the Play Framework website functionality.

LANGUAGE: shell
CODE:
cd ~/play-docs-translations
mkdir modules
cd modules

curl -X GET https://downloads.typesafe.com/play1/modules/router-head.zip -o router-head.zip
curl -X GET https://downloads.typesafe.com/play1/modules/router-1.0.zip -o router-1.0.zip
# ... [truncated for brevity] ...
curl -X GET https://downloads.typesafe.com/play1/modules/externalconfig-0.2.zip -o externalconfig-0.2.zip