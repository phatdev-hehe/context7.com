TITLE: Basic Subscribe Usage Example
DESCRIPTION: Demonstrates core functionality including event listening, emitting, and handling with various patterns.

LANGUAGE: javascript
CODE:
import {Emitter} from 'subscribe'
// OR
const {Emitter} = require('subscribe')

const eventbus = new Emitter()

// listen to an event
eventbus.on('foo', e => console.log('foo', e) )

// listen to all events
// This will fire first the 'type' event if it exists
eventbus.on('*', (type, e) => console.log(type, e) )

// fire an event
eventbus.emit('foo', { a: 'b' })

// working with handler references:
function onFoo() {}
eventbus.on('foo', onFoo)   // listen
eventbus.off('foo', onFoo)  // unlisten

// remove all listeners for specific event
eventbus.off('foo')

// Fire event listener only once
eventbus.once('knock knock', (data) => console.log("I will be fired only once"))
eventbus.emit('knock knock', null)
// This will not fire
eventbus.emit('knock knock', null)

----------------------------------------

TITLE: TypeScript Usage Example
DESCRIPTION: Shows how to use Subscribe with TypeScript for better type checking and autocompletion.

LANGUAGE: typescript
CODE:
import {Emitter} from 'subscribe'
const emitter = new Emitter<'foo' | 'bar'>()
emitter.on('foo', e => console.log('foo', e) )
emitter.on('bar', e => console.log('foo', e) )
// Will throw an error: (on typescript typecheck NOT ON RUNTIME!)
emitter.on('bar2', e => console.log('foo', e) )

----------------------------------------

TITLE: Importing Subscribe Module
DESCRIPTION: Different ways to import the Emitter class using ES6 modules and CommonJS.

LANGUAGE: javascript
CODE:
// using ES6 modules
import { Emitter } from 'subscribe'

// using CommonJS modules
var { Emitter } = require('subscribe')

----------------------------------------

TITLE: Installing Subscribe Package
DESCRIPTION: NPM installation command for the Subscribe package.

LANGUAGE: sh
CODE:
$ npm install --save subscribe

----------------------------------------

TITLE: Loading Subscribe via CDN
DESCRIPTION: Loading the UMD build through unpkg CDN in HTML.

LANGUAGE: html
CODE:
<script src="https://esm.sh/subscribe"></script>