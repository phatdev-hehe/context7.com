TITLE: Basic HTML to Markdown Conversion
DESCRIPTION: Demonstrates how to convert HTML to Markdown using the markdownify function.

LANGUAGE: python
CODE:
from markdownify import markdownify as md
md('<b>Yay</b> <a href="http://github.com">GitHub</a>')  # > '**Yay** [GitHub](http://github.com)'

----------------------------------------

TITLE: Creating a Custom Image Block Converter
DESCRIPTION: Demonstrates how to create a custom Markdown converter by extending MarkdownConverter to add newlines after images.

LANGUAGE: python
CODE:
from markdownify import MarkdownConverter

class ImageBlockConverter(MarkdownConverter):
    """
    Create a custom MarkdownConverter that adds two newlines after an image
    """
    def convert_img(self, el, text, parent_tags):
        return super().convert_img(el, text, parent_tags) + '\n\n'

# Create shorthand method for conversion
def md(html, **options):
    return ImageBlockConverter(**options).convert(html)

----------------------------------------

TITLE: Converting BeautifulSoup Objects to Markdown
DESCRIPTION: Shows how to convert BeautifulSoup objects directly to Markdown.

LANGUAGE: python
CODE:
from markdownify import MarkdownConverter

# Create shorthand method for conversion
def md(soup, **options):
    return MarkdownConverter(**options).convert_soup(soup)

----------------------------------------

TITLE: Excluding Tags from Conversion
DESCRIPTION: Shows how to exclude specific HTML tags from being converted to Markdown.

LANGUAGE: python
CODE:
from markdownify import markdownify as md
md('<b>Yay</b> <a href="http://github.com">GitHub</a>', strip=['a'])  # > '**Yay** GitHub'

----------------------------------------

TITLE: Including Only Specific Tags for Conversion
DESCRIPTION: Demonstrates how to specify which HTML tags should be converted to Markdown.

LANGUAGE: python
CODE:
from markdownify import markdownify as md
md('<b>Yay</b> <a href="http://github.com">GitHub</a>', convert=['b'])  # > '**Yay** GitHub'

----------------------------------------

TITLE: Creating a Custom Paragraph-Ignoring Converter
DESCRIPTION: Example of a custom converter that ignores paragraph tags in the conversion process.

LANGUAGE: python
CODE:
from markdownify import MarkdownConverter

class IgnoreParagraphsConverter(MarkdownConverter):
    """
    Create a custom MarkdownConverter that ignores paragraphs
    """
    def convert_p(self, el, text, parent_tags):
        return ''

# Create shorthand method for conversion
def md(html, **options):
    return IgnoreParagraphsConverter(**options).convert(html)

----------------------------------------

TITLE: Installing Markdownify with pip
DESCRIPTION: Simple pip command to install the markdownify package.

LANGUAGE: bash
CODE:
pip install markdownify