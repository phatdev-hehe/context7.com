TITLE: Basic Stripe Customer Creation
DESCRIPTION: Example showing how to create a new Stripe customer using the PHP client library.

LANGUAGE: php
CODE:
$stripe = new \Stripe\StripeClient('sk_test_BQokikJOvBiI2HlWgH4olfQ2');
$customer = $stripe->customers->create([
    'description' => 'example customer',
    'email' => 'email@example.com',
    'payment_method' => 'pm_card_visa',
]);
echo $customer;

----------------------------------------

TITLE: Installing Stripe PHP via Composer
DESCRIPTION: Command to install the Stripe PHP library using Composer package manager.

LANGUAGE: bash
CODE:
composer require stripe/stripe-php

----------------------------------------

TITLE: Configuring Custom Request Timeouts
DESCRIPTION: Shows how to modify request timeouts by configuring a custom CurlClient instance.

LANGUAGE: php
CODE:
// set up your tweaked Curl client
$curl = new \Stripe\HttpClient\CurlClient();
$curl->setTimeout(10); // default is \Stripe\HttpClient\CurlClient::DEFAULT_TIMEOUT
$curl->setConnectTimeout(5); // default is \Stripe\HttpClient\CurlClient::DEFAULT_CONNECT_TIMEOUT

echo $curl->getTimeout(); // 10
echo $curl->getConnectTimeout(); // 5

// tell Stripe to use the tweaked client
\Stripe\ApiRequestor::setHttpClient($curl);

----------------------------------------

TITLE: Setting Custom cURL Options
DESCRIPTION: Demonstrates how to configure custom cURL options like proxies for API requests.

LANGUAGE: php
CODE:
// set up your tweaked Curl client
$curl = new \Stripe\HttpClient\CurlClient([CURLOPT_PROXY => 'proxy.local:80']);
// tell Stripe to use the tweaked client
\Stripe\ApiRequestor::setHttpClient($curl);

----------------------------------------

TITLE: Running PHP Examples in Stripe
DESCRIPTION: Commands to execute PHP example files from the examples directory

LANGUAGE: bash
CODE:
php your_example.php

LANGUAGE: bash
CODE:
php ThinEventWebhookHandler.php

----------------------------------------

TITLE: Configuring Custom OpenAPI Specification and Fixtures for Stripe Testing
DESCRIPTION: Place custom OpenAPI specification and fixtures files named 'spec3.json' and 'fixtures3.json' in the specified directory. The test suite will use these files to start a stripe-mock process on a random port. Ensure stripe-mock is available in the PATH of the test environment.

LANGUAGE: json
CODE:
{
  "spec3": "spec3.json",
  "fixtures3": "fixtures3.json"
}