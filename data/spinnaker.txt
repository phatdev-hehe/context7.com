TITLE: Basic Spinnaker Delivery Config Template
DESCRIPTION: YAML template for creating a basic delivery config file that defines managed resources in Spinnaker.

LANGUAGE: yaml
CODE:
name: a-manifest-name # change me
application: yourapp # change me
artifacts: []
environments: 
  - name: testing # this is a fine default but you can change it
    constraints: []
    notifications: []
    resources: []

----------------------------------------

TITLE: Configuring Kubernetes provider for Spinnaker
DESCRIPTION: This snippet enables the Kubernetes provider in Spinnaker, sets up the kubectl context, creates a service account, and adds the EKS cluster as a Kubernetes provider in Halyard.

LANGUAGE: bash
CODE:
# Enable the Kubernetes provider
hal config provider kubernetes enable

# Set the current kubectl context to the cluster for Spinnaker
kubectl config use-context eks-spinnaker

# Assign the Kubernetes context to CONTEXT
CONTEXT=$(kubectl config current-context)

# Create service account
kubectl apply --context $CONTEXT -f https://www.spinnaker.io/downloads/kubernetes/service-account.yml

# Extract service account token
TOKEN=$(kubectl get secret --context $CONTEXT \
   $(kubectl get serviceaccount spinnaker-service-account \
       --context $CONTEXT \
       -n spinnaker \
       -o jsonpath='{.secrets[0].name}') \
   -n spinnaker \
   -o jsonpath='{.data.token}' | base64 --decode)

# Set kubeconfig
kubectl config set-credentials ${CONTEXT}-token-user --token $TOKEN

kubectl config set-context $CONTEXT --user ${CONTEXT}-token-user

# Add EKS cluster as Kubernetes provider
hal config provider kubernetes account add eks-spinnaker --context $CONTEXT

----------------------------------------

TITLE: Configuring RBAC for Spinnaker Kubernetes Integration
DESCRIPTION: YAML configuration defining ClusterRole, ClusterRoleBinding, and ServiceAccount for Spinnaker's Kubernetes integration with RBAC permissions.

LANGUAGE: yaml
CODE:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
 name: spinnaker-role
rules:
- apiGroups: [""]
  resources: ["namespaces", "configmaps", "events", "replicationcontrollers", "serviceaccounts", "pods/log"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods", "services", "secrets"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["list", "get"]
- apiGroups: ["apps"]
  resources: ["controllerrevisions", "statefulsets"]
  verbs: ["list"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "deployments/scale", "replicasets", "ingresses"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["services/proxy", "pods/portforward"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
 name: spinnaker-role-binding
roleRef:
 apiGroup: rbac.authorization.k8s.io
 kind: ClusterRole
 name: spinnaker-role
subjects:
- namespace: spinnaker
  kind: ServiceAccount
  name: spinnaker-service-account
---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: spinnaker-service-account
 namespace: spinnaker

----------------------------------------

TITLE: Configuring Halyard for G Suite OAuth in YAML
DESCRIPTION: This YAML configuration sets up OAuth2 authentication for Spinnaker using G Suite. It includes settings for the client ID, client secret, OAuth endpoints, and user information mapping.

LANGUAGE: yaml
CODE:
security:
  authn:
    oauth2:
      enabled: true
      client:
        clientId: # client ID from above
        clientSecret: # client secret from above
        accessTokenUri: https://www.googleapis.com/oauth2/v4/token
        userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
        scope: profile email
      resource:
        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
      userInfoRequirements:
        # You almost certainly want to restrict access to your Spinnaker to
        # users whose account is from your hosted domain; without this any
        # user with a Google account will have access.
        hd: # hosted domain
      userInfoMapping:
        email: email
        firstName: given_name
        lastName: family_name
      provider: GOOGLE

----------------------------------------

TITLE: Configuring Spinnaker with Halyard
DESCRIPTION: Configures Spinnaker using Halyard, including setting up GCS storage, GCR integration, and Kubernetes provider.

LANGUAGE: bash
CODE:
hal config version edit --version $(hal version latest -q)

hal config storage gcs edit \
    --project $(gcloud config get-value project) \
    --json-path ~/.gcp/gcp.json

hal config storage edit --type gcs

hal config provider docker-registry enable

hal config provider docker-registry account add my-gcr-account \
    --address gcr.io \
    --password-file ~/.gcp/gcp.json \
    --username _json_key

hal config provider kubernetes enable

hal config provider kubernetes account add my-k8s-account \
    --docker-registries my-gcr-account \
    --context $(kubectl config current-context)

hal config deploy edit \
    --account-name my-k8s-account \
    --type distributed

hal deploy apply

hal deploy connect

----------------------------------------

TITLE: Visualizing Spinnaker System Dependencies with Mermaid
DESCRIPTION: This Mermaid diagram illustrates the dependencies between Spinnaker's microservices, external components, and Halyard components. It shows how different services interact and depend on each other within the Spinnaker ecosystem.

LANGUAGE: mermaid
CODE:
graph TB

deck(Deck) --> gate;
api(Custom Script/API Caller) --> gate(Gate);
gate --> kayenta(Kayenta);
gate --> orca(Orca);
gate --> clouddriver(Clouddriver);
orca --> clouddriver;
gate --> rosco(Rosco);
orca --> front50;
orca --> rosco;
gate --> front50(Front50);
gate --> fiat(Fiat);
orca --> kayenta;
clouddriver --> fiat;
orca --> fiat;
front50 --> fiat;
echo(Echo) --> orca;
echo --> front50;
gate --> echo;
gate --> igor(Igor);
igor(Igor) --> echo;

keel(Keel) --> clouddriver;
keel --> orca;
keel --> front50;
keel --> fiat;
keel --> echo;
keel --> igor;
gate --> keel;

hal(Halyard CLI) --> halyard(Halyard Daemon);

classDef default fill:#d8e8ec,stroke:#39546a;
linkStyle default stroke:#39546a,stroke-width:1px,fill:none;

classDef halStyle fill:#eebb3c,stroke:#39546a;
class halyard,hal halStyle;

classDef external fill:#c0d89d,stroke:#39546a;
class deck,api external;

----------------------------------------

TITLE: Configuring Encryption Key for Config Server in YAML
DESCRIPTION: This YAML snippet demonstrates how to configure an encryption key for the Config Server, along with Git backend settings, to enable encryption and decryption of secrets.

LANGUAGE: yaml
CODE:
spring:
  profiles:
    include: git
  cloud:
    config:
      server:
        git:
          uri: https://github.com/example/spinnaker-config
          basedir: /tmp/config-repo
          refresh-rate: 10
encrypt:
  key: mykey

----------------------------------------

TITLE: Setting up GCP Service Accounts for Halyard
DESCRIPTION: Creates and configures a service account for the Halyard VM with necessary IAM permissions.

LANGUAGE: bash
CODE:
GCP_PROJECT=$(gcloud config get-value project)
HALYARD_SERVICE_ACCOUNT_NAME=halyard-vm-account

gcloud iam service-accounts create $HALYARD_SERVICE_ACCOUNT_NAME \
    --project=$GCP_PROJECT \
    --display-name $HALYARD_SERVICE_ACCOUNT_NAME

HALYARD_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list \
    --project=$GCP_PROJECT \
    --filter="displayName:$HALYARD_SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

gcloud projects add-iam-policy-binding $GCP_PROJECT \
    --role roles/iam.serviceAccountKeyAdmin \
    --member serviceAccount:$HALYARD_SERVICE_ACCOUNT_EMAIL

----------------------------------------

TITLE: Creating GCE Service Account and Permissions
DESCRIPTION: Script to create a service account for Spinnaker with necessary IAM roles and generate credentials. Sets up permissions for instance management, networking, security, storage, and service account operations.

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_NAME=spinnaker-gce-account
SERVICE_ACCOUNT_DEST=~/.gcp/gce-account.json

gcloud iam service-accounts create \
    $SERVICE_ACCOUNT_NAME \
    --display-name $SERVICE_ACCOUNT_NAME

SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

PROJECT=$(gcloud config get-value project)

# permission to create/modify instances in your project
gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/compute.instanceAdmin

# permission to create/modify network settings in your project
gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/compute.networkAdmin

# permission to create/modify firewall rules in your project
gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/compute.securityAdmin

# permission to create/modify images & disks in your project
gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/compute.storageAdmin

# permission to download service account keys in your project
# this is needed by packer to bake GCE images remotely
gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/iam.serviceAccountActor

mkdir -p $(dirname $SERVICE_ACCOUNT_DEST)

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \
    --iam-account $SA_EMAIL

----------------------------------------

TITLE: Installing Halyard on Debian/Ubuntu
DESCRIPTION: Commands to download and install Halyard on Debian/Ubuntu systems. Requires Java 11 as a prerequisite.

LANGUAGE: bash
CODE:
curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh

----------------------------------------

TITLE: Visualizing Spinnaker Authentication Workflow with Mermaid
DESCRIPTION: This Mermaid diagram illustrates the interaction between Deck (Spinnaker's UI), Gate (API Gateway), and the Identity Provider in Spinnaker's authentication workflow.

LANGUAGE: mermaid
CODE:
graph LR
classDef default fill:#d8e8ec,stroke:#7a8288;
linkStyle default stroke:#7a8288, stroke-width:2px, fill:none;

gate(Gate)
idp(IdentityProvider)
deck(Deck/Browser)

deck-->gate
gate-->deck
deck-->idp
idp-->deck

----------------------------------------

TITLE: Configuring GitHub OAuth in Spinnaker's Halyard YAML
DESCRIPTION: This YAML snippet configures GitHub OAuth 2.0 authentication for Spinnaker. It includes settings for client credentials, OAuth endpoints, and user information mapping.

LANGUAGE: yaml
CODE:
security:
  authn:
    oauth2:
      enabled: true
      client:
        clientId: # client ID from above
        clientSecret: # client secret from above
        accessTokenUri: https://github.com/login/oauth/access_token
        userAuthorizationUri: https://github.com/login/oauth/authorize
        scope: user:email
      resource:
        userInfoUri: https://api.github.com/user
      # You almost certainly want to restrict access to your Spinnaker by adding
      # userInfoRequirements; otherwise any user with a GitHub account will be
      # able to access it.
      userInfoRequirements: {}
      userInfoMapping:
        email: email
        firstName: ''
        lastName: name
        username: login
      provider: GITHUB

----------------------------------------

TITLE: Configuring OAuth2.0 Authentication in Spinnaker
DESCRIPTION: Halyard commands to configure Google OAuth2.0 authentication for Spinnaker, including setting client ID, client secret, and domain requirements.

LANGUAGE: bash
CODE:
hal config security authn oauth2 edit --provider google \
    --client-id $CLIENT_ID \
    --client-secret $CLIENT_SECRET \
    --user-info-requirements hd=$DOMAIN

hal config security authn oauth2 enable

----------------------------------------

TITLE: Running Halyard Docker Container
DESCRIPTION: Docker command to run Halyard in a container with mounted configuration directory. Exposes ports 8084 and 9000.

LANGUAGE: bash
CODE:
docker run -p 8084:8084 -p 9000:9000 \
    --name halyard --rm \
    -v ~/.hal:/home/spinnaker/.hal \
    -it \
    us-docker.pkg.dev/spinnaker-community/docker/halyard:stable

----------------------------------------

TITLE: Creating Kubernetes Service Account for Spinnaker
DESCRIPTION: Bash script to create a Spinnaker service account in Kubernetes, generate an authentication token, and configure kubectl context to use it. Requires an existing Kubernetes context.

LANGUAGE: bash
CODE:
CONTEXT=$(kubectl config current-context)

kubectl apply --context $CONTEXT \
    -f https://www.spinnaker.io/downloads/kubernetes/service-account.yml

TOKEN=$(kubectl get secret --context $CONTEXT \
   $(kubectl get serviceaccount spinnaker-service-account \
       --context $CONTEXT \
       -n spinnaker \
       -o jsonpath='{.secrets[0].name}') \
   -n spinnaker \
   -o jsonpath='{.data.token}' | base64 --decode)

kubectl config set-credentials ${CONTEXT}-token-user --token $TOKEN

kubectl config set-context $CONTEXT --user ${CONTEXT}-token-user

----------------------------------------

TITLE: Implementing BeginChapTask Class in Java
DESCRIPTION: A task class that implements RetryableTask interface to initiate a ChAP experiment. Handles retrieving test case ID and making REST API calls to the ChAP service.

LANGUAGE: java
CODE:
package com.netflix.spinnaker.orca.chap.tasks;

import com.netflix.spinnaker.orca.*;
import com.netflix.spinnaker.orca.chap.ChapService;
import com.netflix.spinnaker.orca.chap.Run;
import com.netflix.spinnaker.orca.pipeline.model.Stage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;

@Component
public class BeginChapTask implements RetryableTask {

  @Override
  public TaskResult execute(Stage stage) {
    Map<String, Object> ctx = stage.getContext();
    Object testCaseId = ctx.get("testCaseId");

    if(testCaseId == null || !(testCaseId instanceof String)) {
      throw new RuntimeException("Cannot begin ChAP experiment without a testCaseId.");
    }

    Map<String, Object> params = new HashMap<>();
    params.put("testCaseId", testCaseId);
    Run chapRun = chapService.startChap(params);

    Map<String, Object> map = new HashMap<>();
    map.put("run", chapRun);
    return new DefaultTaskResult(ExecutionStatus.SUCCEEDED, map);
  }

  public ChapService getChapService() {
    return chapService;
  }

  public void setChapService(ChapService chapService) {
    this.chapService = chapService;
  }

  @Autowired
  private ChapService chapService;

  @Override
  public long getBackoffPeriod() {
    return TimeUnit.SECONDS.toMillis(5);
  }

  @Override
  public long getTimeout() {
    return TimeUnit.MINUTES.toMillis(1);
  }
}

----------------------------------------

TITLE: Basic Pipeline Expression Syntax
DESCRIPTION: Shows the basic syntax for a Spinnaker pipeline expression using ${} notation.

LANGUAGE: text
CODE:
${expression here}

----------------------------------------

TITLE: SSL Certificate Generation Commands
DESCRIPTION: Comprehensive set of OpenSSL and Keytool commands for generating SSL certificates and keystores for Spinnaker components.

LANGUAGE: bash
CODE:
openssl genrsa \
  -des3 \
  -out ca.key \
  -passout pass:${CA_KEY_PASSWORD} \
  4096

----------------------------------------

TITLE: ReplicaSet Configuration for Blue/Green Deployment
DESCRIPTION: Complete ReplicaSet manifest with Spinnaker-specific annotations for version history and load balancer management.

LANGUAGE: yaml
CODE:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    strategy.spinnaker.io/max-version-history: '2'
    traffic.spinnaker.io/load-balancers: '["service my-service"]'
  labels:
    app: myapp
  name: myapp-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - image: 'gcr.io/google_samples/gb-frontend:v3'
          name: frontend

----------------------------------------

TITLE: Structuring Pipeline Template JSON in Spinnaker
DESCRIPTION: This JSON structure represents a complete pipeline template in Spinnaker. It includes the schema version, variable declarations, template metadata, and the pipeline definition with parameterized fields.

LANGUAGE: json
CODE:
{
  "schema": "v2",
  "variables": [
    {
      "type": "int",
      "defaultValue": 42,
      "description": "The time a wait stage shall pauseth",
      "name": "timeToWait"
    }
  ],
  "id": "newSpelTemplate",
  "protect": false,
  "metadata": {
    "name": "Variable Wait",
    "description": "A demonstrative Wait Pipeline.",
    "owner": "example@example.com",
    "scopes": ["global"]
  },
  "pipeline": {
    "lastModifiedBy": "anonymous",
    "updateTs": "0",
    "parameterConfig": [],
    "limitConcurrent": true,
    "keepWaitingPipelines": false,
    "description": "",
    "triggers": [],
    "notifications": [],
    "stages": [
      {
        "waitTime": "${ templateVariables.timeToWait }",
        "name": "My Wait Stage",
        "type": "wait",
        "refId": "wait1",
        "requisiteStageRefIds": []
      }
    ]
  }
}

----------------------------------------

TITLE: Enabling Canary Analysis with Google Cloud Platform in Spinnaker
DESCRIPTION: This code snippet demonstrates how to enable Kayenta (Spinnaker's canary analysis service) and configure it to use Google Cloud Platform for metrics (Stackdriver) and storage (GCS).

LANGUAGE: bash
CODE:
hal config canary enable
hal config canary google enable
hal config canary google account add my-google-account \
  --project $PROJECT_ID \
  --json-path $JSON_PATH \
  --bucket $MY_SPINNAKER_BUCKET
hal config canary google edit --gcs-enabled true \
  --stackdriver-enabled true

----------------------------------------

TITLE: Deploying Spinnaker with Halyard
DESCRIPTION: Command to deploy Spinnaker using the configured settings. May require sudo privileges for local machine deployment.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Creating service accounts for Halyard and GCS
DESCRIPTION: Creates service accounts for Halyard and GCS, and assigns necessary IAM roles.

LANGUAGE: bash
CODE:
GCP_PROJECT=$(gcloud config get-value project)
HALYARD_SA=halyard-service-account

gcloud iam service-accounts create $HALYARD_SA \
    --project=$GCP_PROJECT \
    --display-name $HALYARD_SA

HALYARD_SA_EMAIL=$(gcloud iam service-accounts list \
    --project=$GCP_PROJECT \
    --filter="displayName:$HALYARD_SA" \
    --format='value(email)')

gcloud projects add-iam-policy-binding $GCP_PROJECT \
    --role roles/iam.serviceAccountKeyAdmin \
    --member serviceAccount:$HALYARD_SA_EMAIL

gcloud projects add-iam-policy-binding $GCP_PROJECT \
    --role roles/container.admin \
    --member serviceAccount:$HALYARD_SA_EMAIL

GCS_SA=gcs-service-account

gcloud iam service-accounts create $GCS_SA \
    --project=$GCP_PROJECT \
    --display-name $GCS_SA

GCS_SA_EMAIL=$(gcloud iam service-accounts list \
    --project=$GCP_PROJECT \
    --filter="displayName:$GCS_SA" \
    --format='value(email)')

gcloud projects add-iam-policy-binding $GCP_PROJECT \
    --role roles/storage.admin \
    --member serviceAccount:$GCS_SA_EMAIL

gcloud projects add-iam-policy-binding $GCP_PROJECT \
    --member serviceAccount:$GCS_SA_EMAIL \
    --role roles/browser

----------------------------------------

TITLE: Configuring GitHub OAuth using Halyard CLI
DESCRIPTION: These Bash commands use Halyard CLI to configure GitHub OAuth 2.0 authentication for Spinnaker. They set the provider, client ID, client secret, and enable OAuth authentication.

LANGUAGE: bash
CODE:
hal config security authn oauth2 edit --provider github \
  --client-id (client ID from above) \
  --client-secret (client secret from above)

hal config security authn oauth2 enable

----------------------------------------

TITLE: Configuring Fiat for GitHub Teams Authorization using Halyard in Bash
DESCRIPTION: This snippet demonstrates how to use Halyard commands to configure Fiat for GitHub Teams-based authorization in Spinnaker. It sets the personal access token, organization, and base URL for the GitHub API, enables GitHub as the authorization type, and activates authorization.

LANGUAGE: bash
CODE:
TOKEN=b22a54...  # Personal access token under admin account
ORG=myorg        # GitHub Organization

hal config security authz github edit \
    --accessToken $TOKEN \
    --organization $ORG \
    --baseUrl https://api.github.com

hal config security authz edit --type github

hal config security authz enable

----------------------------------------

TITLE: Configuring Kubernetes Account with External kubeconfig in YAML
DESCRIPTION: This YAML snippet shows how to configure a Kubernetes account in Clouddriver, loading the kubeconfig file from an external source using the Config Server.

LANGUAGE: yaml
CODE:
kubernetes:
  enabled: true
  accounts:
    - name: default
      kubeconfigFile: configserver:kubeconfig.yml
      dockerRegistries:
        - accountName: dockerhub
          namespaces: []
      context: default

----------------------------------------

TITLE: Installing eksctl for EKS cluster management
DESCRIPTION: This snippet installs eksctl, a command-line tool for creating and managing EKS clusters. It downloads the binary, makes it executable, and moves it to a directory in the system PATH.

LANGUAGE: bash
CODE:
# Download and configure eksctl
curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp

sudo mv /tmp/eksctl /usr/local/bin

# Verify the installation
eksctl help

----------------------------------------

TITLE: Defining Environment Constraints in Spinnaker Delivery Config YAML
DESCRIPTION: This snippet demonstrates how to define environment constraints in a Spinnaker Delivery Config YAML file. It shows a 'depends-on' constraint and an 'allowed-times' constraint for the staging environment.

LANGUAGE: yaml
CODE:
environments:
- name: staging
  resources: # omitted for brevity
  notifications: # omitted for brevity
  constraints: 
  - type: depends-on
    environment: testing
  - type: allowed-times
    windows:
    - days: Monday-Thursday
      hours: 8-16

----------------------------------------

TITLE: Creating Amazon EKS cluster for Spinnaker
DESCRIPTION: This snippet uses eksctl to create an Amazon EKS cluster named 'eks-spinnaker' with 2 nodes in the us-west-2 region.

LANGUAGE: bash
CODE:
eksctl create cluster --name=eks-spinnaker --nodes=2 --region=us-west-2 --write-kubeconfig=false

----------------------------------------

TITLE: Adding Kubernetes Account to Spinnaker
DESCRIPTION: Bash commands to enable the Kubernetes provider and add a new Kubernetes account to Spinnaker using Halyard.

LANGUAGE: bash
CODE:
hal config provider kubernetes enable

CONTEXT=$(kubectl config current-context)

hal config provider kubernetes account add my-k8s-account \
    --context $CONTEXT

----------------------------------------

TITLE: Defining Pipeline Template JSON Structure in Spinnaker
DESCRIPTION: This snippet outlines the JSON structure for creating a pipeline template in Spinnaker. It includes fields for schema version, variables, template ID, protection settings, metadata, and the pipeline configuration itself with stages.

LANGUAGE: json
CODE:
{
  "schema": "v2",
  "variables": [
    {
      "type": "<type>",
      "defaultValue": <value>,
      "description": "<description>",
      "name": "<varName>"
    }
  ],
  "id": "<templateName>",           # The pipeline instance references the template using this
  "protect": <true | false>,
  "metadata": {
    "name": "displayName",          # The display name shown in Deck
    "description": "<description>",
    "owner": "example@example.com",
    "scopes": ["global"]            # Not used
  },
  "pipeline": {                     # Contains the templatized pipeline itself
    "lastModifiedBy": "anonymous",  # Not used
    "updateTs": "0",                # Not used
    "parameterConfig": [],          # Same as in a regular pipeline
    "limitConcurrent": true,        # Same as in a regular pipeline
    "keepWaitingPipelines": false,  # Same as in a regular pipeline
    "description": "",              # Same as in a regular pipeline
    "triggers": [],                 # Same as in a regular pipeline
    "notifications": [],            # Same as in a regular pipeline
    "stages": [                     # Contains the templated stages
      {
        # This one is an example stage:
        "waitTime": "${ templateVariables.waitTime }",  # Templated field.
        "name": "My Wait Stage",
        "type": "wait",
        "refId": "wait1",
        "requisiteStageRefIds": []
      }
    ]
  }
}

----------------------------------------

TITLE: Generating X.509 Client Certificate
DESCRIPTION: Series of OpenSSL commands to generate client certificates and keys for authentication.

LANGUAGE: bash
CODE:
openssl genrsa -des3 -out client.key 4096

LANGUAGE: bash
CODE:
openssl req -new -key client.key -out client.csr

LANGUAGE: bash
CODE:
openssl x509 -req -days 365 -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client.crt

LANGUAGE: bash
CODE:
openssl pkcs12 -export -clcerts -in client.crt -inkey client.key -out client.p12

----------------------------------------

TITLE: Configuring Distributed Kubernetes Deployment with Halyard
DESCRIPTION: Command to configure Halyard for a distributed Spinnaker installation on Kubernetes. Requires a pre-configured cloud provider account.

LANGUAGE: bash
CODE:
hal config deploy edit --type distributed --account-name $ACCOUNT

----------------------------------------

TITLE: Configuring Halyard for Cloud Build Integration
DESCRIPTION: Halyard commands to set up Google Cloud Build account and enable the integration

LANGUAGE: bash
CODE:
    hal config pubsub google enable

    hal config ci gcb account add $ACCOUNT_NAME \
      --project $PROJECT_ID \
      --subscription-name $SUBSCRIPTION_NAME \
      --json-key $SERVICE_ACCOUNT_KEY

    hal config ci gcb enable
    
    hal deploy apply

----------------------------------------

TITLE: Configuring Spinnaker Authorization with Halyard
DESCRIPTION: Commands to configure Spinnaker's Fiat service with Google Groups authorization using Halyard CLI. Requires administrator email, service account credentials, and organization domain.

LANGUAGE: bash
CODE:
ADMIN=admin@your.org              # An administrator's email address
CREDENTIALS=/path/to/creds.json   # The downloaded service account credentials
DOMAIN=your.org                   # Your organization's domain.

hal config security authz google edit \
    --admin-username $ADMIN \
    --credential-path $CREDENTIALS \
    --domain $DOMAIN

hal config security authz edit --type google

hal config security authz enable

----------------------------------------

TITLE: Migrating Halyard from Debian to JAR Installation in Bash
DESCRIPTION: This bash script performs the migration of Halyard from a Debian-based installation to a JAR-based installation. It creates a backup, removes the old installation, updates the system, downloads and installs the new JAR-based Halyard, and restores the backup.

LANGUAGE: bash
CODE:
HALYARD_BACKUP_PATH=$(hal backup create -q)

sudo apt remove spinnaker-halyard/trusty-stable -y < /dev/null
sudo rm /etc/apt/sources.list.d/halyard.list && sudo rm /etc/apt/sources.list.d/halyard.list.save
sudo apt update

curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh
sudo bash InstallHalyard.sh

hal backup restore --backup-path=$HALYARD_BACKUP_PATH

----------------------------------------

TITLE: Listing Available Spinnaker Versions with Halyard
DESCRIPTION: Command to display all available versions of Spinnaker that can be installed using Halyard.

LANGUAGE: bash
CODE:
hal version list

----------------------------------------

TITLE: Example OAuth 2.0 User Profile JSON
DESCRIPTION: This JSON snippet illustrates a sample user profile structure from an OAuth 2.0 provider's system. It's used to demonstrate how to map provider-specific fields to Spinnaker-specific fields.

LANGUAGE: json
CODE:
{
  "user": "fmercury",
  "mail": "fmercury@queen.com",
  "fName": "Freddie",
  "lName": "Mercury"
}

----------------------------------------

TITLE: Configuring Account Permissions in Spinnaker using Halyard
DESCRIPTION: This snippet demonstrates how to use Halyard commands to manage READ and WRITE permissions for cloud provider accounts in Spinnaker. It shows adding and removing individual permissions, as well as overwriting the entire permission list.

LANGUAGE: bash
CODE:
PROVIDER= # Your cloud provider

hal config provider $PROVIDER account edit $ACCOUNT \
  --add-read-permission role1 \ # Adds a READ permission
  --add-write-permission role2 \ # Adds a WRITE permission
  --remove-read-permission role3 \ # Removes a READ permission
  --remove-write-permission role4 # Removes a WRITE permission

# Alternatively, you can overwrite the whole read or write list, comma delimited.
hal config provider $PROVIDER account edit $ACCOUNT \
  --read-permissions role1,role2,role3 \
  --write-permissions role1,role2,role3

----------------------------------------

TITLE: Configuring Oracle Object Storage Artifact Account in Spinnaker
DESCRIPTION: Halyard command to add an Oracle Object Storage artifact account to Spinnaker. Requires namespace, fingerprint, region, SSH private key file, tenancy ID, and user ID as parameters.

LANGUAGE: bash
CODE:
hal config artifact oracle account add $ARTIFACT_ACCOUNT_NAME \
    --namespace $TENANCY_NAME \
    --fingerprint $API_KEY_FINGERPRINT \
    --region $REGION \
    --ssh-private-key-file-path $PRIVATE_KEY_FILE \
    --tenancy-id $TENANCY_OCID \
    --user-id $USER_OCID

----------------------------------------

TITLE: Configuring OAuth 2.0 Settings in Spinnaker Using YAML
DESCRIPTION: Complete YAML schema for configuring OAuth 2.0 authentication settings in Spinnaker via Halyard. Includes client configuration, resource settings, and user information mapping options.

LANGUAGE: yaml
CODE:
security:
  authn:
    oauth2:
      # Whether OAuth 2.0 is enabled.
      enabled: boolean
      client:
        # The OAuth client ID you have configured with your OAuth 2.0 provider.
        clientId: string
        
        # The OAuth client secret you have configured with your OAuth provider.
        clientSecret: string 
          
        # The access token URI for your OAuth provider.
        accessTokenUri: string
          
        # The user authorization URI for your OAuth 2.0 provider.
        userAuthorizationUri: string
          
        # The scope to request when obtaining an access token from your
        # OAuth 2.0 provider.
        scope: string

        # The externally accessible URL for Gate. For use with load balancers
        # that do any kind of address manipulation for Gate traffic, such as an
        # SSL terminating load balancer.
        preEstablishedRedirectUri: string
          
        # The method used to transmit authentication credentials to your
        # OAuth 2.0 provider; defaults to header.
        clientAuthenticationScheme: [header|query|form|none]
          
        # Whether the current URI in the request should be preferred over the
        # pre-established redirect URI.
        useCurrentUri: boolean
        
      resource:
        # The user info URI for your OAuth 2.0 provider.
        userInfoUri: string
        
      # Mapping of user attributes to fields returned by your OAuth 2.0 provider.
      # This field controls how the fields returned from the OAuth 2.0 provider's
      # user info endpoint are translated into a Spinnaker user.
      userInfoMapping:
        email: string
        firstName: string
        lastName: string
        username: string
        
      # The map of requirements the userInfo request must have. This is used to
      # restrict user login to specific domains or to users having a specific attribute.
      userInfoRequirements: map<string, string>

----------------------------------------

TITLE: Configuring Halyard with New Kubernetes Provider
DESCRIPTION: Sets up the new Kubernetes provider in Halyard and applies the changes to Spinnaker.

LANGUAGE: bash
CODE:
gcloud container clusters get-credentials $K8_TEST --project $GCP_TEST --zone us-central1-f

TEST_USER_PROFILE=`kubectl config current-context`
kubectl config set-credentials $TEST_USER_PROFILE --token replace-with-your-token-here

hal config provider kubernetes account add my-test-account \
  --context $(kubectl config current-context)

hal deploy apply

----------------------------------------

TITLE: Configuring LDAP Authentication with Halyard
DESCRIPTION: Example of using Halyard commands to enable and configure LDAP authentication in Spinnaker, including setting the user DN pattern and LDAP URL.

LANGUAGE: bash
CODE:
hal config security authn ldap edit --user-dn-pattern="uid={0},ou=users" \ 
       --url=ldaps://ldap.my-organization.com:636/dc=my-organization,dc=com

hal config security authn ldap enable

----------------------------------------

TITLE: Mapping OAuth 2.0 User Info to Spinnaker Fields in YAML
DESCRIPTION: This YAML configuration shows how to map fields from the OAuth 2.0 provider's user info to Spinnaker-specific fields. It corresponds to the example user profile JSON provided earlier.

LANGUAGE: yaml
CODE:
userInfoMapping:
  email: mail
  firstName: fName
  lastName: lName
  username: user

----------------------------------------

TITLE: Configuring Orca Sharding in Gate
DESCRIPTION: Configuration for sharding Orca requests based on application patterns. Defines multiple base URLs with priority levels and application-specific routing rules.

LANGUAGE: yaml
CODE:
services:
  orca:
    shards:
      baseUrls:
        - baseUrl: https://orca.example.com
        - baseUrl: https://orca-shard1.example.com
          priority: 10
          config:
            selectorClass: com.netflix.spinnaker.kork.web.selector.ByApplicationServiceSelector
            applicationPattern: xxxxyyyapp |demo.*xxxxyyyy

----------------------------------------

TITLE: Configuring Custom Kubernetes Echo Job Stage in Spinnaker
DESCRIPTION: YAML configuration example for creating a custom Echo job stage in Spinnaker using Kubernetes. This configuration defines a simple job that echoes a user-provided phrase, demonstrating parameter configuration, container setup, and job specifications.

LANGUAGE: yaml
CODE:
job:
  preconfigured:
    kubernetes:
      - label: Echo
        type: echoPhrase
        description: Echo a configured phrase
        cloudProvider: kubernetes
        account: kubernetes
        credentials: kubernetes
        waitForCompletion: true
        application: k8s2
        parameters:
          - name: PHRASE
            label: Phrase to say
            description: Phrase to be echoed.
            mapping: manifest.spec.template.spec.containers[0].env[0].value
            defaultValue: "Hello world!"
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: say-hello
            namespace: spinnaker
          spec:
            backoffLimit: 0
            template:
              spec:
                restartPolicy: Never
                containers: 
                  - name: hello
                    image: alpine:latest
                    env:
                      - name: PHRASE
                        value: placeholder
                    command: ["echo", $(PHRASE)]

----------------------------------------

TITLE: Configuring SAML in Halyard
DESCRIPTION: Halyard commands to configure SAML authentication settings including keystore, metadata, and service URL configuration.

LANGUAGE: bash
CODE:
KEYSTORE_PATH= # /path/to/keystore.jks
KEYSTORE_PASSWORD=hunter2
METADATA_PATH= # /path/to/metadata.xml
SERVICE_ADDR_URL=https://localhost:8084
ISSUER_ID=spinnaker.test

hal config security authn saml edit \
  --keystore $KEYSTORE_PATH \
  --keystore-alias saml \
  --keystore-password $KEYSTORE_PASSWORD \
  --metadata $METADATA_PATH \
  --issuer-id $ISSUER_ID \
  --service-address-url $SERVICE_ADDR_URL
  
hal config security authn saml enable

----------------------------------------

TITLE: Defining External Secrets in YAML
DESCRIPTION: This YAML snippet demonstrates how to define external secrets, such as a Jenkins password, in a separate configuration file.

LANGUAGE: yaml
CODE:
ci:
  my-jenkins:
    password: 'secret'

----------------------------------------

TITLE: Setting up Azure Key Vault
DESCRIPTION: Commands to create and configure a key vault with VM credentials

LANGUAGE: bash
CODE:
VAULT_NAME=<Insert Vault Name>
az keyvault create --enabled-for-template-deployment true --resource-group $RESOURCE_GROUP --name $VAULT_NAME
az keyvault set-policy --secret-permissions get --name $VAULT_NAME --spn $APP_ID
az keyvault secret set --name VMUsername --vault-name $VAULT_NAME --value <Insert default username>
az keyvault secret set --name VMSshPublicKey --vault-name $VAULT_NAME --value <Insert default SSH public key>

----------------------------------------

TITLE: Implementing CiBuildService Interface in Igor for CI Integration
DESCRIPTION: Create a new service in Igor that implements the CiBuildService interface with two required endpoints: ci/builds to return GenericBuild objects and ci/builds/{buildId}/output to return build logs.

LANGUAGE: java
CODE:
public class SomeCiService implements CiBuildService[..]

----------------------------------------

TITLE: Bake Manifest Stage Configuration in JSON
DESCRIPTION: Complete JSON configuration for a Spinnaker Bake Manifest stage using Helm2 templating engine. Includes input artifacts, overrides, and expected output artifacts.

LANGUAGE: json
CODE:
{
  "type": "bakeManifest",
  "templateRenderer": "HELM2",
  "name": "Bake nginx helm template",
  "outputName": "nginx",
  "inputArtifacts": [
    {
      "account": "gcs",
      "id": "template-id"
    },
    {
      "account": "gcs",
      "id": "value-id"
    }
  ],
  "overrides": {
    "replicas": "3"
  },
  "expectedArtifacts": [
    {
      "defaultArtifact": {},
      "id": "baked-template",
      "matchArtifact": {
        "kind": "base64",
        "name": "nginx",
        "type": "embedded/base64"
      },
      "useDefaultArtifact": false
    }
  ]
}

----------------------------------------

TITLE: Configuring Halyard for GCS Storage
DESCRIPTION: Halyard command to configure GCS storage settings for Spinnaker, including the project, bucket location, and path to the service account JSON key.

LANGUAGE: bash
CODE:
hal config storage gcs edit --project $PROJECT \
    --bucket-location $BUCKET_LOCATION \
    --json-path $SERVICE_ACCOUNT_DEST

----------------------------------------

TITLE: Configuring Redis Infrastructure Caching in Clouddriver
DESCRIPTION: Configuration settings for adjusting Redis caching behavior in Clouddriver service. Controls the frequency of cache updates and timeout settings for cache agents.

LANGUAGE: yaml
CODE:
# How many seconds (default 30s) between runs of agent. Lowering this number
# means the resources in the Spinnaker UI will be updated more frequently,
# at the cost higher API/quota usage of your cloud provider.
redis.poll.intervalSeconds:


# How many seconds (default 300s, 5 minutes) Clouddriver will wait to reschedule
# an agent that never completes (never throws an error or returns cache data).
# If your agents are taking a long time to complete their cache cycles
# successfully and Clouddriver is prematurely rescheduling them, you can try to
# raise this number.
redis.poll.timeoutSeconds:

----------------------------------------

TITLE: Syncing Fiat Roles in Spinnaker using Bash
DESCRIPTION: This snippet demonstrates how to trigger a Fiat sync in Spinnaker to update user permissions after creating or modifying service accounts.

LANGUAGE: bash
CODE:
FIAT=http://fiat.url:7003

curl -X POST $FIAT/roles/sync

----------------------------------------

TITLE: Setting Google Container Registry Address
DESCRIPTION: Sets the registry address for Google Container Registry (GCR) to a bash variable.

LANGUAGE: bash
CODE:
ADDRESS=gcr.io

----------------------------------------

TITLE: Jenkins Master Configuration in Halyard YAML
DESCRIPTION: Example YAML configuration for a Jenkins master in Spinnaker's Halyard configuration, including CSRF protection.

LANGUAGE: yaml
CODE:
jenkins:
      enabled: true
      masters:
      - name: <jenkins master name>
        address: http://<jenkins ip>/jenkins
        username: <jenkins admin user>
        password: <admin password>
        csrf: true

----------------------------------------

TITLE: Adding Jenkins Account Configuration using Halyard CLI
DESCRIPTION: This bash command shows how to add a Jenkins account configuration using the Halyard CLI, with a placeholder for the password.

LANGUAGE: bash
CODE:
$ hal config provider jenkins account add \
   my-jenkins-master \
   --address http://my-jenkins.ci.example.com \
   --username myuser \
   --password ${ci.my-jenkins.password}

----------------------------------------

TITLE: Authenticating gcloud CLI
DESCRIPTION: Authenticates the gcloud CLI with your Google Cloud account and sets the default project.

LANGUAGE: bash
CODE:
gcloud auth login
gcloud config set project <PROJECT_NAME>

----------------------------------------

TITLE: Testing LDAP Configuration with ldapsearch
DESCRIPTION: Examples of using ldapsearch to test LDAP configuration with different parameters such as user search filter, user search base, and user DN pattern.

LANGUAGE: bash
CODE:
ldapsearch -D "MANAGER_DN" -w 'MANAGER_PASSWORD' -H ldaps://1.2.3.4 -x -b "DC=USERS,OU=Y,O=io" "(UID=USERNAME)"

LANGUAGE: bash
CODE:
ldapsearch -D "MANAGER_DN" -w 'MANAGER_PASSWORD' -H ldaps://1.2.3.4 -x   "(UID=USERNAME})"

LANGUAGE: bash
CODE:
ldapsearch -D "MANAGER_DN" -w 'MANAGER_PASSWORD' -H ldaps://1.2.3.4/OU=Y,O=io -x "(CN=USERNAME,OU=users,OU=Y,O=IO))"

----------------------------------------

TITLE: Clouddriver YAML Configuration
DESCRIPTION: YAML configuration for setting up AWS and ECS accounts in Clouddriver without using Halyard.

LANGUAGE: yaml
CODE:
aws:
  enabled: true

  accounts:
    - name: aws-account-name
      accountId: "123456789012"
      regions:
        - name: us-east-1
  defaultAssumeRole: role/SpinnakerManaged

ecs:
  enabled: true
  accounts:
    - name: ecs-account-name
      awsAccount: aws-account-name

----------------------------------------

TITLE: Adding GCR Account to Spinnaker
DESCRIPTION: Adds a Google Container Registry account to Spinnaker using Halyard, specifying the address, username, and password file.

LANGUAGE: bash
CODE:
hal config provider docker-registry account add my-docker-registry \
 --address $ADDRESS \
 --username _json_key \
 --password-file $PASSWORD_FILE

----------------------------------------

TITLE: Enabling Prometheus Metric Store in Halyard
DESCRIPTION: Command to enable Prometheus metric store integration in Spinnaker using Halyard

LANGUAGE: bash
CODE:
hal config metric-stores prometheus enable

----------------------------------------

TITLE: Webhook Payload with Artifacts
DESCRIPTION: This JSON payload demonstrates how to include artifacts in a webhook trigger. It specifies a GCS object artifact with a name and reference URL.

LANGUAGE: json
CODE:
{
  "artifacts": [
    {
      "type": "gcs/object",
      "name": "manifest.yml",
      "reference": "gs://lw-artifacts/manifest.yml"
    }
  ]
}

----------------------------------------

TITLE: Setting DockerHub Credentials
DESCRIPTION: Sets username and password variables for authenticating with DockerHub when accessing private images.

LANGUAGE: bash
CODE:
USERNAME=yourusername
PASSWORD=hunter2

----------------------------------------

TITLE: Defining Pub/Sub Message Payload with Parameters in JSON
DESCRIPTION: Example of a Pub/Sub message payload containing parameters to pass to a Spinnaker pipeline. The 'parameters' object allows specifying values for pipeline parameters.

LANGUAGE: json
CODE:
{
  "parameters": {
    "stack": "prod"
  }
}

----------------------------------------

TITLE: Adding Cloud Foundry Account to Spinnaker
DESCRIPTION: This Halyard command adds a Cloud Foundry account to Spinnaker. It requires the API host, user credentials, environment, and optional URLs for apps manager and metrics. SSL validation can be skipped if needed.

LANGUAGE: bash
CODE:
hal config provider cloudfoundry account add my-cf-account \
  --api-host=[api.sys.endpoint.for.foundation] \
  --user=[user-account] \
  --password=[user-password] \
  --environment=[dev,prod,...] \
  --apps-manager-url=[http://apps.sys.endpoint.for.foundation] \
  --metrics-url=[http://metrics.sys.endpoint.for.foundation] \
  --skip-ssl-validation=[true|false] (optional, default: false)

----------------------------------------

TITLE: Sample Service Configuration for Blue/Green Deployment
DESCRIPTION: Kubernetes Service manifest with specific selector for blue/green deployment scenario.

LANGUAGE: yaml
CODE:
kind: Service
apiVersion: v1
metadata:
  name: my-service
spec:
  selector:
    frontedBy: my-service
  ports:
  - protocol: TCP
    port: 80

----------------------------------------

TITLE: Defining Pub/Sub Account Configuration in YAML
DESCRIPTION: This snippet demonstrates how to define a Google Pub/Sub account configuration in YAML format for external storage. It includes subscription details and JSON key path.

LANGUAGE: yaml
CODE:
pubsub:
  enabled: true
  google:
    enabled: true
    pubsubType: GOOGLE
    subscriptions:
    - name: my-gcs-subscription
      project: my-project
      subscriptionName: my-gcs-subscription
      jsonPath: /path/to/my-gce-account.json
      ackDeadlineSeconds: 10
      messageFormat: GCS
    publishers: []

----------------------------------------

TITLE: Enabling High Availability for Clouddriver in Spinnaker
DESCRIPTION: This command enables high availability for the Clouddriver service in Spinnaker, splitting it into four logical services: clouddriver-caching, clouddriver-rw, clouddriver-ro, and clouddriver-ro-deck.

LANGUAGE: bash
CODE:
hal config deploy ha clouddriver enable

----------------------------------------

TITLE: Adding Jenkins Master to Spinnaker Configuration
DESCRIPTION: Bash command to add a Jenkins master to Spinnaker's configuration using Halyard. It sets the address, username, and reads the API key from standard input.

LANGUAGE: bash
CODE:
echo $APIKEY | hal config ci jenkins master add my-jenkins-master \
    --address $BASEURL \
    --username $USERNAME \
    --password

----------------------------------------

TITLE: Configuring REST Webhook Endpoints
DESCRIPTION: YAML configuration for setting up webhook endpoints in Spinnaker to forward events to external listeners.

LANGUAGE: yaml
CODE:
rest:
  enabled: true
  endpoints:
    -
      wrap: false
      url: http://listener.com
    -
      wrap: false
      url: http://listener2.com

----------------------------------------

TITLE: Configuring Spinnaker Orca Settings
DESCRIPTION: YAML configuration to specify custom Jenkins master and job name in Spinnaker's orca-local.yml file.

LANGUAGE: yaml
CODE:
script:
  master: your-jenkins-master
  job: $JOB_NAME

----------------------------------------

TITLE: Configuring Active Directory with Halyard
DESCRIPTION: Example of Halyard commands for configuring Active Directory authentication, including setting manager DN, user search filter, and LDAP URL.

LANGUAGE: bash
CODE:
hal config security authn ldap enable
hal config security authn ldap edit \
  --manager-dn 'CN=blah,OU=blah,OU=blah,O=blah' \
  --user-search-filter '(&(objectClass=user)(sAMAccountName={0}))' \
  --url ldaps://blah:686/searchbase
## This one will prompt you for the password don't set it on the command
hal config security authn ldap edit --manager-password

----------------------------------------

TITLE: Enabling Pipeline Permissions in Deck JavaScript Settings
DESCRIPTION: JavaScript configuration in settings-local.js to enable the managed service accounts feature in the Spinnaker UI

LANGUAGE: javascript
CODE:
window.spinnakerSettings.feature.managedServiceAccounts = true;

----------------------------------------

TITLE: Storing JSON Configuration in Vault using CLI
DESCRIPTION: This bash command demonstrates how to store a JSON configuration file in HashiCorp Vault using the vault CLI tool.

LANGUAGE: bash
CODE:
$ vault kv put secret/echo @echo.json

----------------------------------------

TITLE: AWS CLI Commands for Managing Account Setup
DESCRIPTION: Commands to deploy CloudFormation stack for the managing account using AWS CLI, including options for using access keys or instance profiles.

LANGUAGE: bash
CODE:
curl -O -L https://spinnaker.io/downloads/aws/managing.yaml
aws cloudformation deploy --stack-name spinnaker-managing-infrastructure-setup --template-file managing.yaml \
--parameter-overrides UseAccessKeyForAuthentication=true --capabilities CAPABILITY_NAMED_IAM --region us-west-2

----------------------------------------

TITLE: Configuring Datadog Metrics Store with Halyard
DESCRIPTION: These commands enable the Datadog metrics store and configure it with API and App keys using Halyard.

LANGUAGE: bash
CODE:
hal config metric-stores datadog enable
hal config metric-stores datadog edit --api-key <API_KEY>
hal config metric-stores datadog edit --app-key <APP_KEY>

----------------------------------------

TITLE: Configuring Halyard for Stackdriver in Bash
DESCRIPTION: These Halyard commands configure Stackdriver for Spinnaker monitoring using the previously created service account credentials.

LANGUAGE: bash
CODE:
hal config metric-stores stackdriver edit \
    --credentials-path $SERVICE_ACCOUNT_DEST

hal config metric-stores stackdriver enable

----------------------------------------

TITLE: Installing Halyard for Spinnaker management
DESCRIPTION: This snippet installs Halyard, the tool used to install and manage Spinnaker. It downloads the installation script, creates a halyard user, runs the script, and verifies the installation.

LANGUAGE: bash
CODE:
# Download and configure Halyard
curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh

sudo useradd halyard

sudo bash InstallHalyard.sh

sudo update-halyard

# Verify the installation
hal -v

----------------------------------------

TITLE: AWS IAM Policy for Managed Role Access
DESCRIPTION: IAM policy that grants PassRole and ListServerCertificates permissions to the managed role.

LANGUAGE: json
CODE:
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Action": [
                "iam:ListServerCertificates",
                "iam:PassRole"
            ],
            "Resource": [
                "*"
            ],
            "Effect": "Allow"
        }
    ]
}

----------------------------------------

TITLE: Installing kubectl and aws-iam-authenticator for EKS
DESCRIPTION: This snippet installs kubectl to manage Kubernetes and aws-iam-authenticator for cluster authentication. It downloads the binaries, makes them executable, and adds them to the system PATH.

LANGUAGE: bash
CODE:
# Download and install kubectl
`curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl

# Verify the installation of kubectl
kubectl help

# Download and install aws-iam-authenticator
curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
chmod +x ./aws-iam-authenticator
mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH 
echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc

#Verify the installation of aws-iam-authenticator
aws-iam-authenticator help`

----------------------------------------

TITLE: Extension Event Listener Implementation
DESCRIPTION: Demonstrates how to listen for extension creation events to maintain a list of available extensions. This approach is preferred when additional processing is needed before extensions can be used.

LANGUAGE: kotlin
CODE:
@Component
class MyServiceComponent(
  private val extensions: MutableList<MyExtensionPoint> = mutableListOf()
) {

  @EventListener(ExtensionCreated::class)
  private fun onExtensionCreated(e: ExtensionCreated) {
    extensions.add(e.bean)
  }

  fun doingSomeBusiness() {
    extensions.forEach { it.doStuff() }
  }  
}

----------------------------------------

TITLE: Configuring Spinnaker Storage and Provider
DESCRIPTION: Sets up Spinnaker configuration including GCS storage and GCE provider settings.

LANGUAGE: bash
CODE:
hal config version edit --version $(hal version latest -q)

hal config storage gcs edit \
    --project $(gcloud config get-value project) \
    --json-path $GCS_SERVICE_ACCOUNT_DEST

hal config storage edit --type gcs

hal config provider google account add my-gce-account \
    --project $(gcloud config get-value project) \
    --json-path $GCE_SERVICE_ACCOUNT_DEST

hal config provider google enable

----------------------------------------

TITLE: Adding Generic Docker Registry Account
DESCRIPTION: Adds a generic Docker Registry account to Spinnaker using Halyard, prompting for password input.

LANGUAGE: bash
CODE:
hal config provider docker-registry account add my-docker-registry \
    --address $ADDRESS \
    --repositories $REPOSITORIES \
    --username $USERNAME \
    --password # Do not supply your password as a flag, you will be prompted for your
               # password on STDIN

----------------------------------------

TITLE: IAM Role Permissions for CodeBuild Integration
DESCRIPTION: IAM policy document defining the required permissions for Spinnaker to interact with AWS CodeBuild services.

LANGUAGE: json
CODE:
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "codebuild:StopBuild",
        "codebuild:ListProjects",
        "codebuild:StartBuild",
        "codebuild:BatchGetBuilds"
      ],
      "Resource": "*"
    }
  ]
}

----------------------------------------

TITLE: Sample Delivery Config with Manual Judgement Constraint in Spinnaker YAML
DESCRIPTION: This snippet provides a complete example of a Spinnaker Delivery Config that includes a manual judgement constraint and Slack notifications for the test environment.

LANGUAGE: yaml
CODE:
name: myspinapp
application: myspinapp
serviceAccount: myteam@mycompany.com
artifacts:
- name: myspinapp
  type: deb
environments:
- name: test
  constraints:
  - type: manual-judgement
  notifications:
  - type: slack
    address: "#myteam"
    frequency: verbose
  resources:
  - apiVersion: bakery.spinnaker.netflix.com/v1
    kind: image
    spec:
      artifactName: myspinapp
      baseLabel: RELEASE
      baseOs: xenial
      regions:
      - us-east-1
      storeType: EBS
      application: myspinapp  
  - apiVersion: "ec2.spinnaker.netflix.com/v1"
    kind: "cluster"
    spec:
      moniker:
        app: "myspinapp"
      imageProvider:
        deliveryArtifact:
          name: "myspinapp"
          type: "deb"
      locations:
        account: "test"
        regions:
        - name: "us-east-1"

----------------------------------------

TITLE: Configuring Orca Pipeline Permissions in YAML
DESCRIPTION: Configuration required in orca-local.yml to enable managed service accounts for pipeline permissions

LANGUAGE: yaml
CODE:
tasks:
  useManagedServiceAccounts: true

----------------------------------------

TITLE: Configuring Rollout Strategy Options in Spinnaker
DESCRIPTION: Markdown documentation outlining the configuration options for rollout strategies in Spinnaker's Deploy (Manifest) stage. Includes service namespace, service selection, traffic routing, and strategy selection.

LANGUAGE: markdown
CODE:
- __Service namespace__

  Select the namespace containing the service(s) you would like to associate with the workload.
  
- __Service(s)__
  
  Select one or more services you would like to associate with the workload. Spinnaker will
  add a `traffic.spinnaker.io/load-balancers` annotation listing the selected services.
  
- __Traffic__

  Check this box if you would like the workload to begin receiving traffic from the selected
  services as soon as it is ready.
  
- __Strategy__

  Select a strategy if you would like Spinnaker to handle previous versions of the workload
  currently deployed to the same cluster and namespace.

----------------------------------------

TITLE: Setting up Token Authentication for Git Repo Account
DESCRIPTION: Commands to store the access token and add a new artifact account using token authentication.

LANGUAGE: bash
CODE:
echo $TOKEN > $TOKEN_FILE

hal config artifact gitrepo account add $ARTIFACT_ACCOUNT_NAME \
    --token-file $TOKEN_FILE

----------------------------------------

TITLE: Adding User-Password Authentication for Git Repo Account
DESCRIPTION: Command to add a new artifact account using username-password authentication.

LANGUAGE: bash
CODE:
hal config artifact gitrepo account add $ARTIFACT_ACCOUNT_NAME \
 --username-password-file $PASSWORD_FILE

----------------------------------------

TITLE: Setting GCS as Spinnaker's Storage Type
DESCRIPTION: Halyard command to set GCS as the storage type for Spinnaker's persistent data.

LANGUAGE: bash
CODE:
hal config storage edit --type gcs

----------------------------------------

TITLE: Basic Webhook Stage Configuration in YAML
DESCRIPTION: Basic configuration example for setting up a custom webhook stage in orca-local.yml. Demonstrates core properties including label, type, method, and URL configuration.

LANGUAGE: yaml
CODE:
webhook:
  preconfigured:
  - label: Github - Github Commit Status
    type: githubStatus
    enabled: true
    description: Update a Github Commit Status
    method: GET
    url: https://api.example.com

----------------------------------------

TITLE: Deck SSL Configuration with Halyard
DESCRIPTION: Commands to configure SSL for Deck using Halyard with certificate and key files.

LANGUAGE: bash
CODE:
hal config security ui ssl edit \
  --ssl-certificate-file ${SERVER_CERT} \
  --ssl-certificate-key-file ${SERVER_KEY} \
  --ssl-certificate-passphrase

hal config security ui ssl enable

----------------------------------------

TITLE: Configuring LDAP Authorization in Spinnaker using Halyard
DESCRIPTION: Commands to configure LDAP authorization in Spinnaker using Halyard CLI. Sets up the LDAP server connection, manager credentials, user pattern matching, and group search parameters. Enables LDAP authorization after configuration.

LANGUAGE: bash
CODE:
hal config security authz ldap edit \
    --url ldaps://ldap.mydomain.net:636/dc=mydomain,dc=net \
    --manager-dn uid=admin,ou=system \
    --manager-password \
    --user-dn-pattern uid={0},ou=users \
    --group-search-base ou=groups \
    --group-search-filter "(uniqueMember={0})" \
    --group-role-attributes cn
      
 hal config security authz edit --type ldap
 hal config security authz enable

----------------------------------------

TITLE: Configuring Orca for SQL in YAML
DESCRIPTION: YAML configuration for Orca to use SQL instead of Redis. Includes settings for connection pools, migration, execution repository, and work queue.

LANGUAGE: yaml
CODE:
sql:
  enabled: true
  connectionPools:
    default:
      default: true
      jdbcUrl: jdbc:mysql://localhost:3306/orca
      user: orca_service
      password: hunter2
      maxPoolSize: 50
  migration:
    jdbcUrl: jdbc:mysql://localhost:3306/orca
    user: orca_migrate
    password: hunter2

executionRepository:
  sql:
    enabled: true
  redis:
    enabled: false

monitor:
  activeExecutions:
    redis: false

keiko:
  queue:
    sql:
      enabled: true
    redis:
      enabled: false

queue:
  zombieCheck:
    enabled: true
  pendingExecutionService:
    sql:
      enabled: true
    redis:
      enabled: false

----------------------------------------

TITLE: Creating Azure Storage Account
DESCRIPTION: Commands to create a storage account and retrieve its access key

LANGUAGE: bash
CODE:
STORAGE_ACCOUNT_NAME=<Insert name>
az storage account create --resource-group $RESOURCE_GROUP --sku STANDARD_LRS --name $STORAGE_ACCOUNT_NAME
STORAGE_ACCOUNT_KEY=$(az storage account keys list --resource-group $RESOURCE_GROUP --account-name $STORAGE_ACCOUNT_NAME --query [0].value | tr -d '"')

----------------------------------------

TITLE: Configuring Front50 MySQL Connection Settings
DESCRIPTION: YAML configuration for connecting Front50 to MySQL, including connection pool settings and migration user credentials.

LANGUAGE: yaml
CODE:
sql:
  enabled: true
  connectionPools:
    default:
      default: true
      jdbcUrl: jdbc:mysql://your.database:3306/front50
      user: front50_service
  migration:
    user: front50_migrate
    jdbcUrl: jdbc:mysql://your.database:3306/front50

----------------------------------------

TITLE: Configuring Echo Service Settings
DESCRIPTION: YAML configuration for Echo service specifying custom port and Java memory options.

LANGUAGE: yaml
CODE:
port: 443
env:
  JAVA_OPTS: "-Xms256m -Xmx512m"

----------------------------------------

TITLE: Enabling Kustomize Feature Flag in Spinnaker (JavaScript)
DESCRIPTION: Adds a feature flag to enable Kustomize support in Spinnaker versions 1.16 to 1.19. This code should be added to the settings-local.js file in the Halyard deployment directory.

LANGUAGE: javascript
CODE:
window.spinnakerSettings.feature.kustomizeEnabled = true;

----------------------------------------

TITLE: Setting Environment Variables for GCS Configuration
DESCRIPTION: Commands to set environment variables required for configuring GCS storage in Spinnaker. These include the GCP project ID, bucket location, and path to the service account JSON key.

LANGUAGE: bash
CODE:
PROJECT=$(gcloud config get-value project)
# see https://cloud.google.com/storage/docs/bucket-locations
BUCKET_LOCATION=us
SERVICE_ACCOUNT_DEST=# see Prerequisites section above

----------------------------------------

TITLE: Installing Spin CLI on MacOS
DESCRIPTION: Commands to download, make executable, and install the Spin CLI on a MacOS system.

LANGUAGE: bash
CODE:
curl -LO https://storage.googleapis.com/spinnaker-artifacts/spin/$(curl -s https://storage.googleapis.com/spinnaker-artifacts/spin/latest)/darwin/amd64/spin

chmod +x spin

sudo mv spin /usr/local/bin/spin

----------------------------------------

TITLE: Creating Server Group with AWS Best Practices for EC2 Spot in Spinnaker
DESCRIPTION: This curl command shows how to create a server group following AWS recommended best practices for EC2 Spot instances, including multiple instance types, capacity-optimized allocation, and proactive capacity rebalancing.

LANGUAGE: bash
CODE:
curl -H 'Content-Type: application/json' -d '{ "job": [ 
  {
    "type": "createServerGroup",
    "cloudProvider": "aws",
    "account": "my_aws_account",
    "application": "myAwsApp",
    "stack": "myStack",
    "credentials": "my_aws_account",
    "availabilityZones": {"us-west-1": ["us-west-1a","us-west-1b","us-west-1c"]},
    "amiName": "ami-12345",
    "capacity": {"desired": 5,"max": 7,"min": 5},
    "iamRole":"BaseInstanceProfile",
    "instanceType":"m4.large",
    "setLaunchTemplate": true,
    "onDemandPercentageAboveBaseCapacity":50,
    "onDemandBaseCapacity":1,
    "spotAllocationStrategy":"capacity-optimized",
    "capacityRebalance": true,
    "launchTemplateOverridesForInstanceType": [
      {"instanceType":"m4.large","weightedCapacity":"1"},
      {"instanceType":"m5.large","weightedCapacity":"1"},
      {"instanceType":"m4.xlarge","weightedCapacity":"2"},
      {"instanceType":"m5.xlarge","weightedCapacity":"2"}] 
  }], "application": "myAwsApp", "description": "Create New Server Group in cluster myAwsApp"}' -X POST http://localhost:8084/tasks

----------------------------------------

TITLE: Installing Datadog Operational Dashboards
DESCRIPTION: This command runs a script to install Datadog operational dashboards for Spinnaker monitoring.

LANGUAGE: bash
CODE:
/opt/spinnaker-monitoring/third_party/datadog/install.sh --dashboards_only

----------------------------------------

TITLE: Configuring S3 Storage Settings with Halyard in Bash
DESCRIPTION: This command uses Halyard to configure S3 storage settings for Spinnaker. It sets the access key ID, prompts for the secret access key, and specifies the AWS region for the S3 bucket.

LANGUAGE: bash
CODE:
hal config storage s3 edit \
    --access-key-id $YOUR_ACCESS_KEY_ID \
    --secret-access-key \
    --region $REGION

----------------------------------------

TITLE: Adding Maven Artifact Account in Spinnaker
DESCRIPTION: Command to add a new Maven artifact account with a specified repository URL using Halyard CLI. This allows Spinnaker to authenticate and access artifacts from the configured Maven repository.

LANGUAGE: bash
CODE:
hal config artifact maven account add my-maven-account \
    --repository-url https://my.repo.example.com

----------------------------------------

TITLE: Configuring Spinnaker Storage Settings
DESCRIPTION: Halyard commands to configure Azure Storage settings and set it as the storage type

LANGUAGE: bash
CODE:
hal config storage azs edit \
  --storage-account-name $STORAGE_ACCOUNT_NAME \
  --storage-account-key $STORAGE_ACCOUNT_KEY

hal config storage edit --type azs

----------------------------------------

TITLE: Publishing Kork to Local Maven Repository
DESCRIPTION: Command to build and publish Kork changes to local Maven repository with version output example.

LANGUAGE: bash
CODE:
$ ./gradlew -PenablePublishing=true publishToMavenLocal
Inferred project: kork, version: 0.1.0-SNAPSHOT

----------------------------------------

TITLE: Configuring Redis Storage in Spinnaker using Halyard
DESCRIPTION: Command to configure Redis as the storage type for Spinnaker using the Halyard CLI. This sets up Redis as the persistent storage backend, though it's not recommended for production environments.

LANGUAGE: bash
CODE:
hal config storage edit --type redis

----------------------------------------

TITLE: Restarting Spinnaker Service in Bash
DESCRIPTION: Command to restart a specific Spinnaker service using Halyard. This is used after making code changes to reflect updates in the running system.

LANGUAGE: bash
CODE:
hal deploy apply --service-names clouddriver

----------------------------------------

TITLE: Enabling Google Provider in Halyard
DESCRIPTION: Command to enable the Google Cloud provider in Spinnaker using Halyard.

LANGUAGE: bash
CODE:
hal config provider google enable

----------------------------------------

TITLE: Basic Clouddriver SQL Configuration
DESCRIPTION: YAML configuration for Clouddriver to use MySQL instead of Redis, including connection pools, cache settings, and task repository configuration.

LANGUAGE: yaml
CODE:
sql:
  enabled: true
  read-only: false
  taskRepository:
    enabled: true
  cache:
    enabled: true
    readBatchSize: 500
    writeBatchSize: 300
  scheduler:
    enabled: true
  unknown-agent-cleanup-agent:
    enabled: false
  connectionPools:
    default:
      default: true
      jdbcUrl: jdbc:mysql://your.database:3306/clouddriver
      user: clouddriver_service
    tasks:
      user: clouddriver_service
      jdbcUrl: jdbc:mysql://your.database:3306/clouddriver
  migration:
    user: clouddriver_migrate
    jdbcUrl: jdbc:mysql://your.database:3306/clouddriver

redis:
  enabled: false
  cache:
    enabled: false
  scheduler:
    enabled: false
  taskRepository:
    enabled: false

----------------------------------------

TITLE: Adding Oracle Cloud Account in Spinnaker using Halyard
DESCRIPTION: This command adds an Oracle Cloud account to Spinnaker using Halyard. It requires various Oracle Cloud credentials and identifiers as parameters.

LANGUAGE: bash
CODE:
hal config provider oracle account add my-oci-acct \
    --compartment-id $COMPARTMENT_OCID \
    --fingerprint $API_KEY_FINGERPRINT \
    --region $REGION \
    --ssh-private-key-file-path $PRIVATE_KEY_FILE \
    --tenancyId $TENANCY_OCID \
    --user-id $USER_OCID

----------------------------------------

TITLE: Updating Halyard on Debian/Ubuntu/macOS
DESCRIPTION: Command to update an existing Halyard installation on Debian/Ubuntu or macOS systems.

LANGUAGE: bash
CODE:
sudo update-halyard

----------------------------------------

TITLE: Configuring Jenkins Master with Fiat Permissions in YAML
DESCRIPTION: This YAML snippet demonstrates how to configure a Jenkins master in Spinnaker with Fiat READ and WRITE permissions. It includes settings for enabling Jenkins, specifying master details, and defining role-based access controls.

LANGUAGE: yaml
CODE:
jenkins:
  enabled: true
  masters:
  - name: <jenkins master name>
    address: http://<jenkins ip>/jenkins
    username: <jenkins admin user>
    password: <admin password>
    csrf: true
    permissions:
      READ:
      - foo
      - bar
      WRITE:
      - bar

----------------------------------------

TITLE: Configuring Kubernetes Service Selectors for Spinnaker Load Balancers
DESCRIPTION: This YAML snippet shows how Spinnaker sets selectors on Kubernetes Services when creating a Load Balancer. It includes a selector for the load balancer name.

LANGUAGE: yaml
CODE:
spec:
 selector:
   # added by Spinnaker
   load-balancer-${LOAD-BALANCER}: true

----------------------------------------

TITLE: Enabling and Disabling Canary Analysis in Spinnaker
DESCRIPTION: These commands show how to enable or disable canary analysis in Spinnaker using Halyard.

LANGUAGE: bash
CODE:
hal config canary enable

hal config canary disable

----------------------------------------

TITLE: Adding Custom Base Images for OCI Bakery in Spinnaker
DESCRIPTION: This command adds a custom base image for use in the Oracle Cloud Infrastructure bakery. It specifies the base image ID (OCID), SSH username, and package type. These custom images will be available in the bake stage UI of Spinnaker.

LANGUAGE: bash
CODE:
hal config provider oracle bakery base-image add $BASE_IMAGE \
    --base-image-id $OCI_IMAGE_OCID \
    --ssh-user-name $SSH_USER_NAME \
    --package-type deb

----------------------------------------

TITLE: Username-Password Format for Git Authentication
DESCRIPTION: Format specification for username-password authentication file.

LANGUAGE: text
CODE:
<username>:<password>

----------------------------------------

TITLE: Connecting to Spinnaker UI
DESCRIPTION: Command to establish connection to Spinnaker UI by forwarding ports 9000 (Deck UI) and 8084 (Gate API service).

LANGUAGE: bash
CODE:
hal deploy connect

----------------------------------------

TITLE: Deploying Docker Image by Digest in Kubernetes Manifest
DESCRIPTION: This snippet demonstrates how to reference a Docker image by its digest in a Kubernetes manifest, which ensures consistent deployments by using a content-addressable reference.

LANGUAGE: yaml
CODE:
gcr.io/my-image@sha256:95ff090...

----------------------------------------

TITLE: Installing Spinnaker Monitoring Daemon
DESCRIPTION: These commands update the package list and install the Spinnaker monitoring daemon on a Debian-based system.

LANGUAGE: bash
CODE:
sudo apt-get update -y
sudo apt-get install spinnaker-monitoring-daemon -y

----------------------------------------

TITLE: Configuring Gradle Properties for Spinnaker Plugin
DESCRIPTION: Defines essential version properties for Spinnaker plugin development including Gradle, PF4J, Kork, Orca and Kotlin versions.

LANGUAGE: properties
CODE:
spinnakerGradleVersion=8.10.1
pf4jVersion=3.2.0
korkVersion=7.99.1
orcaVersion=2.19.0-20210209140018
kotlinVersion=1.3.50

----------------------------------------

TITLE: Creating Service Account for Stackdriver Monitoring in Bash
DESCRIPTION: This script creates a service account with necessary roles for Stackdriver monitoring, generates a key file, and sets up the required permissions.

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_NAME=spinnaker-monitoring-account
SERVICE_ACCOUNT_DEST=~/.gcp/gce-monitoring-account.json

gcloud iam service-accounts create \
    $SERVICE_ACCOUNT_NAME \
    --display-name $SERVICE_ACCOUNT_NAME

SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

PROJECT=$(gcloud config get-value project)

# permission to read existing configured metrics
gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/monitoring.viewer

# permission to write new metrics
gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/monitoring.metricWriter

mkdir -p $(dirname $SERVICE_ACCOUNT_DEST)

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \
    --iam-account $SA_EMAIL

----------------------------------------

TITLE: Basic BOM Structure in YAML
DESCRIPTION: The core structure of a Spinnaker Bill of Materials (BOM) file that defines versions, dependencies and artifact sources for a Spinnaker release.

LANGUAGE: yaml
CODE:
version:                  # the version this corresponds to
timestamp:                # when this version was assembled
services:
  ${SUBCOMPONENT}:        # for each subcomponent
    version:              # the subcomponent version
    commit:               # the commit the version corresponds to
    artifactSources:      # (optional) overrides for where the artifacts are stored
      debianRepository:   # (optional) debian repository storing the built deb
      dockerRegistry:     # (optional) docker registry storing the build image
      gitPrefix:          # (optional) git repository this is stored in
dependencies:
  ${DEPENDENCY}:          # for each required 3rd party service
    version:              # dependency version
artifactSources:
  debianRepository:       # debian repository storing all built debs
  dockerRegistry:         # docker registry storing all built images
  gitPrefix:              # git org all repos are in

----------------------------------------

TITLE: Installing Halyard on macOS
DESCRIPTION: Commands to download and install Halyard on macOS systems. Requires Java 11 as a prerequisite.

LANGUAGE: bash
CODE:
curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/macos/InstallHalyard.sh

----------------------------------------

TITLE: AWS IAM Policy for Managing Account
DESCRIPTION: IAM policy that allows the managing account to assume roles and access EC2, CloudFormation and ECR services.

LANGUAGE: json
CODE:
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ec2:*",
                "cloudformation:*",
                "ecr:*"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Action": "sts:AssumeRole",
            "Resource": [
                "arn:aws:iam::200000000002:role/spinnakerManaged",
                "arn:aws:iam::300000000003:role/spinnakerManaged"
            ],
            "Effect": "Allow"
        }
    ]
}

----------------------------------------

TITLE: Dual Task Repository Migration Configuration
DESCRIPTION: Configuration for maintaining task repository availability during migration from Redis to SQL using dual task repository setup.

LANGUAGE: yaml
CODE:
redis:
  enabled: true
  connection: redis://your.redis
  cache:
    enabled: false
  scheduler:
    enabled: false
  taskRepository:
    enabled: true

dualTaskRepository:
  enabled: true
  primaryClass: com.netflix.spinnaker.clouddriver.sql.SqlTaskRepository
  previousClass: com.netflix.spinnaker.clouddriver.data.task.jedis.RedisTaskRepository

----------------------------------------

TITLE: Configuring API Rate Limiting in gate.yml
DESCRIPTION: This YAML snippet shows how to enable and configure API rate limiting in the gate.yml file. It includes settings for Redis, rate limits, capacity, principal-specific overrides, and enforcement lists.

LANGUAGE: yaml
CODE:
rateLimit:
  enabled: true
  learning: true
  redis:
    enabled: true
  # The rate (in seconds) that the bucket will be replenished
  rateSeconds: 10
  # The number of allowed requests in the window of rateSeconds
  capacity: 500
  # Specific principals can be given different capacities
  capacityByPrincipal:
  - principal: anonymous
    override: 1000
  # Similarly, rateSeconds can be overridden per-principal
  rateSecondsByPrincipal:
  - principal: anonymous
    override: 5
  # A list of principals that are being enforced. Handy for cases where you want
  # to incrementally enable the rate limiter
  enforcing:
  - example@example.com
  # A list of principals that are in learning mode. This can be useful if you
  # want to give some principals unlimited power. Reconsider doing this :)
  ignoring:
  - unmetered-example@example.com

----------------------------------------

TITLE: Halyard X.509 Configuration Commands
DESCRIPTION: Halyard commands for configuring X.509 authentication settings in Spinnaker.

LANGUAGE: bash
CODE:
hal config security authn x509 edit --role-oid 1.2.840.10070.8.1

LANGUAGE: bash
CODE:
hal config security api ssl edit --client-auth

LANGUAGE: bash
CODE:
hal config security authn x509 enable

LANGUAGE: bash
CODE:
hal config security authn x509 edit --subject-principal-regex "EMAILADDRESS=(.*?)(?:,|$)"

----------------------------------------

TITLE: Configuring Embedded Base64 Artifact in Spinnaker
DESCRIPTION: Example configuration for embedding an artifact's contents using base64 encoding. The artifact type must be 'embedded/base64', with the base64-encoded content in the reference field and an optional name identifier.

LANGUAGE: json
CODE:
{
  "type": "embedded/base64",
  "reference": "dmFsdWU6IDEKZm9vOiBiYXIK",
  "name": "my-properties-file",
}

----------------------------------------

TITLE: Enabling CSRF Protection for Jenkins in Spinnaker
DESCRIPTION: Halyard command to enable CSRF protection for a Jenkins master in Spinnaker's configuration.

LANGUAGE: bash
CODE:
hal config ci jenkins master edit MASTER --csrf true

----------------------------------------

TITLE: Implementing Custom Kubernetes CRD Handler in Java
DESCRIPTION: Base implementation of a custom handler for Kubernetes CRDs that defines the relationship between Spinnaker and a specific Kubernetes kind. Includes methods for handling versioning, status checking, and caching.

LANGUAGE: java
CODE:
@Component
public class MyCRDHandler extends KubernetesHandler {

  public MyCRDHandler() {
    // Hook point for registering a custom `ArtifactReplacer`
    // for your CRD. During a deploy operation,
    // if an artifact of the type specified in the replacer is present,
    // the artifact will be inserted into the manifest using the
    // strategy described in the replacer.
  }

  @Override
  public KubernetesKind kind() {
    return KubernetesKind.from("MyCRDKind");
  }

  @Override
  public boolean versioned() {
    // If the CRD resource should be versioned - i.e., assigned a sequence
    // v001, v002, etc.
    return false;
  }

  @Override
  public SpinnakerKind spinnakerKind() {
    // The Spinnaker kind that the resource will be represented as in Spinnaker's API and UI.
    return SpinnakerKind.SERVER_GROUPS;
  }

  @Override
  public Status status(KubernetesManifest manifest) {
    // Includes logic for determining whether your CRD manifest is stable.
    // A deploy manifest operation, for example, will block until this
    // method returns a stable status.
  }

  @Override
  public KubernetesV2CachingAgentFactory cachingAgentFactory() {
    return KubernetesCoreCachingAgent::new;
  }
}

----------------------------------------

TITLE: Restoring Spinnaker Configuration from Backup
DESCRIPTION: Restores a previously created Spinnaker configuration backup by expanding and replacing the existing ~/.hal directory. The --backup-path parameter specifies the location of the backup tar file.

LANGUAGE: bash
CODE:
hal backup restore --backup-path <backup-name>.tar

----------------------------------------

TITLE: Exporting Front50 Data Script
DESCRIPTION: Shell script to export existing applications, pipelines, strategies, notifications and projects from Front50

LANGUAGE: bash
CODE:
#!/bin/sh

rm applications.json
curl http://FRONT50_HOSTNAME:FRONT50_PORT/v2/applications | json_pp > applications.json

rm pipelines.json
curl http://FRONT50_HOSTNAME:FRONT50_PORT/pipelines | json_pp > pipelines.json

rm strategies.json
curl http://FRONT50_HOSTNAME:FRONT50_PORT/strategies | json_pp > strategies.json

rm notifications.json
curl http://FRONT50_HOSTNAME:FRONT50_PORT/notifications | json_pp > notifications.json

rm projects.json
curl http://FRONT50_HOSTNAME:FRONT50_PORT/v2/projects | json_pp > projects.json

----------------------------------------

TITLE: Setting Artifact Account Variables
DESCRIPTION: Definition of environment variables needed for GCS artifact account configuration.

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_DEST=~/.gcp/gcs-artifacts-account.json

ARTIFACT_ACCOUNT_NAME=my-gcs-artifact-account

----------------------------------------

TITLE: Configuring AWS Launch Template Features in Deck
DESCRIPTION: JavaScript configuration for enabling launch template features in the Spinnaker UI (Deck), including IPv6, IMDSv2, and CPU credits support.

LANGUAGE: javascript
CODE:
providers: {
  aws: {
    serverGroups: {
      enableLaunchTemplates: true,
      enableIPv6: true,
      enableIMDSv2: true,
      enableCpuCredits: true,
    }
  }
}

----------------------------------------

TITLE: Specifying Patch Content for Kubernetes Manifest in YAML
DESCRIPTION: Example of static YAML patch content to add a new label to a Kubernetes resource. This demonstrates how to structure a simple patch for use in Spinnaker's patch manifest stage.

LANGUAGE: yaml
CODE:
metadata:
  labels:
    foo: bar

----------------------------------------

TITLE: Enabling Bitbucket Artifact Provider in Spinnaker using Halyard
DESCRIPTION: This command enables the Bitbucket artifact provider in Spinnaker using the Halyard command-line interface.

LANGUAGE: bash
CODE:
hal config artifact bitbucket enable

----------------------------------------

TITLE: Executing a Spinnaker Pipeline with Spin CLI in Bash
DESCRIPTION: Shows how to start a pipeline execution using the 'spin pipeline execute' command, including options for passing parameters.

LANGUAGE: bash
CODE:
spin pipeline execute --name my-pipeline --application my-app

Pipeline execution started

----------------------------------------

TITLE: Installing Spin CLI on Linux
DESCRIPTION: Commands to download, make executable, and install the Spin CLI on a Linux system.

LANGUAGE: bash
CODE:
curl -LO https://storage.googleapis.com/spinnaker-artifacts/spin/$(curl -s https://storage.googleapis.com/spinnaker-artifacts/spin/latest)/linux/amd64/spin

chmod +x spin

sudo mv spin /usr/local/bin/spin

----------------------------------------

TITLE: Enabling/Disabling a Spinnaker Pipeline with Spin CLI in Bash
DESCRIPTION: Shows how to enable or disable a specific pipeline using the 'spin pipeline update' command with the --enabled or --disabled flag.

LANGUAGE: bash
CODE:
spin pipeline update --application my-app --name my-pipeline --enabled

# Returns the following message if the pipeline gets updated successfully.
Pipeline updated

LANGUAGE: bash
CODE:
spin pipeline update --application my-app --name my-pipeline --disabled

# Returns the following message if the pipeline gets updated successfully.
Pipeline updated

----------------------------------------

TITLE: Applying Spinnaker Configuration Changes
DESCRIPTION: Command to apply changes made to Spinnaker's configuration using Halyard.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Retrieving User Permissions from Redis in Fiat
DESCRIPTION: Example of retrieving user permissions for applications from Redis using the HGETALL command. This shows the structure of how permissions are stored for the unrestricted user.

LANGUAGE: redis
CODE:
HGETALL spinnaker:fiat:permissions:__unrestricted_user__:applications
1) "app1" 
2) "{\n  \"name\" : \"app1\",\n  \"permissions\" : { }\n}"
3) "ncecs"
4) "{\n  \"name\" : \"app2\",\n  \"permissions\" : { }\n}"
5) "cam"
6) "{\n  \"name\" : \"app3\",\n  \"permissions\" : { }\n}"

----------------------------------------

TITLE: Adding Azure Account to Spinnaker
DESCRIPTION: Command to add Azure account configuration to Spinnaker using Halyard

LANGUAGE: bash
CODE:
hal config provider azure account add my-azure-account \
  --client-id $APP_ID \
  --tenant-id $TENANT_ID \
  --subscription-id $SUBSCRIPTION_ID \
  --default-key-vault $VAULT_NAME \
  --default-resource-group $RESOURCE_GROUP \
  --packer-resource-group $RESOURCE_GROUP \
  --app-key

----------------------------------------

TITLE: Downloading Jenkins Job Configuration
DESCRIPTION: Command to download the raw Jenkins job XML configuration file required for script stage setup.

LANGUAGE: bash
CODE:
curl -X GET \
    -o "scriptJobConfig.xml" \
    "https://storage.googleapis.com/jenkins-script-stage-config/scriptJobConfig.xml"

----------------------------------------

TITLE: Installing Datadog Server Agent
DESCRIPTION: This command runs a script to install the Datadog server agent for more detailed metrics about the Spinnaker instance.

LANGUAGE: bash
CODE:
/opt/spinnaker-monitoring/third_party/datadog/install.sh --server_only

----------------------------------------

TITLE: Querying Webhook-Triggered Pipelines using Bash and cURL
DESCRIPTION: Bash script showing how to query for pipeline executions triggered by a specific webhook call. It uses cURL to make an API call to Gate with application name, trigger type, and the eventId returned by the webhook call.

LANGUAGE: bash
CODE:
APPLICATION=<application-name>  # This will narrow down results to only contain pipeline executions within a given application. You may supply '*' here to search across all applications.
TRIGGER_TYPE=webhook  # This will narrow down results to only contain pipelines executions triggered by a webhook call
EVENT_ID=c581dc8c-af6d-4ef0-8d84-27a64764b2f3  # eventId value returned by webhook call

# Example call to Gate
curl localhost:8084/applications/$APPLICATION/executions/search?triggerTypes=$TRIGGER_TYPE&eventId=$EVENT_ID

----------------------------------------

TITLE: Defining GCS Object Artifact in JSON
DESCRIPTION: This example shows how to define a Google Cloud Storage (GCS) object artifact in Spinnaker's artifact format. It includes the type, reference, name, version, and location of the GCS object.

LANGUAGE: json
CODE:
{
  "type": "gcs/object",
  "reference": "gs://bucket/file.json#135028134000",
  "name": "gs://bucket/file.json",
  "version": "135028134000"
  "location": "us-central1"
}

----------------------------------------

TITLE: Configuring Spinnaker-wide Redis in YAML
DESCRIPTION: YAML configuration for setting up a Spinnaker-wide external Redis endpoint. This snippet defines the Redis endpoint and disables lifecycle management for the Redis service.

LANGUAGE: yaml
CODE:
overrideBaseUrl: $REDIS_ENDPOINT
skipLifeCycleManagement: true

----------------------------------------

TITLE: Setting Docker Registry Address for DockerHub
DESCRIPTION: Sets the DockerHub registry address to a bash variable for later use in configuration.

LANGUAGE: bash
CODE:
ADDRESS=index.docker.io

----------------------------------------

TITLE: Overriding Container Image in Kubernetes Manifest Patch
DESCRIPTION: Example of a YAML patch to update a container image in a Kubernetes manifest. This patch can be used in Spinnaker's patch manifest stage, allowing for dynamic image updates based on pipeline triggers.

LANGUAGE: yaml
CODE:
spec:
  template:
    spec:
      containers:
        - name: my-container
          image: gcr.io/my-project/my-image

----------------------------------------

TITLE: Setting SAML Service Address URL
DESCRIPTION: Halyard command to configure the service address URL for SAML authentication.

LANGUAGE: bash
CODE:
hal config security authn saml edit --service-address-url https://my-real-gate-address.com:8084

----------------------------------------

TITLE: Example of Configuring Oracle Object Storage in Spinnaker
DESCRIPTION: This is an example of the Halyard command to configure Oracle Object Storage, showing specific values for each parameter. It includes actual IDs, fingerprints, and file paths as examples.

LANGUAGE: bash
CODE:
hal config storage oracle edit \
   --bucket-name spinnaker \
   --compartment-id ocid1.compartment.oc1..aaaaaaaatjuwhxwkspkxhumqke \
   --fingerprint 8f:05:f4:94:f3:5f:e3:30:ec:35:8e:77:3e:40:34:10 \
   --namespace oracle-cloud-tenancy \
   --region us-phoenix-1 \
   --ssh-private-key-file-path /Users/.oci/oci_api_key.pem \
   --tenancy-id ocid1.tenancy.oc1..aaaaaaaa225wmphohitdve3d2qmq4a \
   --user-id ocid1.user.oc1..aaaaaaaagosdr3zsh3clobgeqqawsq

----------------------------------------

TITLE: Tomcat SSL Proxy Configuration
DESCRIPTION: YAML configuration for Gate to handle SSL proxy headers when using external proxies.

LANGUAGE: yaml
CODE:
server:
  tomcat:
    protocolHeader: X-Forwarded-Proto
    remoteIpHeader: X-Forwarded-For
    internalProxies: .*
    httpsServerPort: X-Forwarded-Port

----------------------------------------

TITLE: Installing Monitoring Package on VM
DESCRIPTION: Commands to install Spinnaker monitoring third-party package on Debian-based systems

LANGUAGE: bash
CODE:
sudo apt-get update -y
sudo apt-get install spinnaker-monitoring-third-party

----------------------------------------

TITLE: New Relic Deployment Webhook Configuration
DESCRIPTION: Complete example of a custom webhook stage for creating New Relic deployments, including headers, payload, and parameter definitions.

LANGUAGE: yaml
CODE:
label: New Relic - Create Deployment
type: newRelicDeployment
enabled: true
description: Create a Deployment in New Relic
method: POST
customHeaders:
  X-Api-Key:
    - my-api-key
  Content-Type:
    - application/json
url: https://api.newrelic.com/v2/applications/${parameterValues['appId']}/deployments.json
payload: |-
  {
    "deployment": {
      "revision": "${parameterValues['revision']}",
      "user": "${parameterValues['user']}",
      "description": "${parameterValues['description']}"  
    }
  }
parameters:
  - label: Application ID
    name: appId
    description: New Relic Application ID
    type: string
  - label: Revision
    name: revision
    type: string
  - label: User
    name: user
    type: string
  - label: Description
    name: description
    type: string

----------------------------------------

TITLE: Running Retrospective Analysis on Canary Config in Spinnaker CLI
DESCRIPTION: This command demonstrates how to run a retrospective analysis on a canary config using the 'retro' subcommand. It requires specifying the canary config file, control and experiment group details, and the analysis time window.

LANGUAGE: bash
CODE:
$ spin canary canary-configs retro \
  -f <path to canary config json> \
  --control-group app-control-v001 --control-location us-central1 \
  --experiment-group app-experiment-v001 --experiment-location us-central1 \
  --start 2019-09-17T16:27:19.867Z \
  --end 2019-09-17T17:27:19.867Z

Initiating canary execution for supplied canary config
Spawned canary execution with id 01DR9BEP8XTJQDPVFJ41C9MBJ6, polling for completion...
Retrospective canary execution finished, judgement = PASS

----------------------------------------

TITLE: Configuring Spinnaker for CodeBuild Integration
DESCRIPTION: Halyard commands to configure AWS CodeBuild account, enable the integration, and deploy changes to Spinnaker.

LANGUAGE: bash
CODE:
hal config ci codebuild account add $ACCOUNT_NAME \
  --account-id $ACCOUNT_ID \
  --assume-role $ASSUME_ROLE \
  --region $REGION

hal config ci codebuild enable

hal deploy apply

----------------------------------------

TITLE: Configuring Travis CI Master in Halyard
DESCRIPTION: Command line configuration for adding a Travis CI master to Spinnaker using Halyard. Includes settings for API endpoints, GitHub token authentication, and job polling parameters.

LANGUAGE: bash
CODE:
hal config ci travis master add my-travis-master \
--address https://api.travis-ci.org \
--base-url https://travis-ci.org \
--github-token <token> \
--number-of-jobs

----------------------------------------

TITLE: Adding ECR Account to Spinnaker
DESCRIPTION: Adds an Amazon ECR account to Spinnaker using Halyard, including a password command to retrieve ECR authentication tokens.

LANGUAGE: bash
CODE:
hal config provider docker-registry account add my-ecr-registry \
 --address $ADDRESS \
 --username AWS \
 --password-command "aws --region $REGION ecr get-authorization-token --output text --query 'authorizationData[].authorizationToken' | base64 -d | sed 's/^AWS://'"

----------------------------------------

TITLE: Configuring X.509 Authentication for Spin CLI
DESCRIPTION: YAML configuration for setting up X.509 certificate authentication in the Spin CLI config file.

LANGUAGE: yaml
CODE:
auth:
  enabled: true
  x509:
    certPath: <cert file path>
    keyPath: <key file path>

LANGUAGE: yaml
CODE:
auth:
  enabled: true
  x509:
    # Pipes for multi-line strings in yaml.
    # Cert and key contents are 64 encoded pem values.
    cert: |
    <cert>
    key: |
    <key>

----------------------------------------

TITLE: Halyard AWS Provider Configuration Commands
DESCRIPTION: Commands for configuring AWS accounts and enabling the AWS provider in Spinnaker using Halyard CLI.

LANGUAGE: bash
CODE:
export AWS_ACCOUNT_NAME="<Name of the managing account. The example uses spinnakerManaging>"
export ACCOUNT_ID="100000000001"

hal config provider aws account add $AWS_ACCOUNT_NAME \
    --account-id ${ACCOUNT_ID} \
    --assume-role role/spinnakerManaged \
    --regions us-east-1, us-west-2

----------------------------------------

TITLE: Configuring GitHub File Artifact in JSON for Spinnaker
DESCRIPTION: This JSON snippet demonstrates how to configure a GitHub file artifact in Spinnaker. It includes the required fields such as type, reference, name, and version. This configuration is typically used in stages that read configuration from text files, like a Deploy Manifest stage.

LANGUAGE: json
CODE:
{
  "type": "github/file",
  "reference": "https://api.github.com/repos/baxterthehacker/public-repo/contents/path/to/file.yml",
  "name": "path/to/file.yml",
  "version": "aec855f4e0e11"
}

----------------------------------------

TITLE: Annotating Kubernetes Pod for Spinnaker UI Display
DESCRIPTION: This snippet demonstrates how to add a 'Pod Info' section to the details panel for a Kubernetes pod in Spinnaker's UI using kubectl. The annotation includes HTML content with a templated value for the pod name.

LANGUAGE: bash
CODE:
kubectl annotate pod my-prod-pod-v000 \
  pod-info.details.html.spinnaker.io="<a href='https://internal-elk.net/{{ name }}'>Internal Logs Service</a>"

----------------------------------------

TITLE: Configuring Spinnaker to Use Custom Trust Store with Halyard
DESCRIPTION: These Halyard commands configure Spinnaker to use the custom trust store for webhooks. The first command sets the trust store path and prompts for the password. The second command enables the custom trust configuration.

LANGUAGE: bash
CODE:
hal config webhook trust edit --trustStore <path-to-trust-store> --trustStorePassword
hal config webhook trust enable

----------------------------------------

TITLE: S3 Secret Reference Formats
DESCRIPTION: Format patterns for referencing encrypted secrets and files stored in S3 buckets. Shows syntax for both literal values and file references.

LANGUAGE: plaintext
CODE:
encrypted:s3!r:<region>!b:<bucket>!f:<path to file>!k:<optional yaml key>

LANGUAGE: plaintext
CODE:
encryptedFile:s3!b:<bucket>!f:<path to file>

LANGUAGE: plaintext
CODE:
encrypted:s3!b:mybucket!f:spinnaker-secrets.yml!r:us-west-2!k:github.password

LANGUAGE: plaintext
CODE:
encryptedFile:s3!r:us-west-2!b:mybucket!f:mykubeconfig

----------------------------------------

TITLE: Saving Canary Configs in Spinnaker CLI
DESCRIPTION: This command demonstrates how to create or update a canary config using the 'save' subcommand. It requires specifying a JSON file containing the canary configuration.

LANGUAGE: bash
CODE:
$ spin canary canary-configs save --file <path to canary config json>

----------------------------------------

TITLE: Enabling Cloud Foundry Provider in Spinnaker
DESCRIPTION: This command enables the Cloud Foundry provider in Spinnaker using Halyard.

LANGUAGE: bash
CODE:
hal config provider cloudfoundry enable

----------------------------------------

TITLE: Excluding Inherited Elements in Spinnaker Pipeline JSON
DESCRIPTION: This JSON snippet demonstrates how to exclude specific elements (triggers and notifications) from being inherited from a pipeline template. It uses the 'exclude' array to list the elements to opt out of.

LANGUAGE: json
CODE:
"exclude": ["triggers", "notifications"]

----------------------------------------

TITLE: Configuring Spinnaker S3 Versioning for Minio
DESCRIPTION: YAML configuration to disable S3 versioning in Spinnaker since Minio doesn't support object versioning. This configuration should be added to the front50-local.yml profile file.

LANGUAGE: yaml
CODE:
spinnaker.s3.versioning: false

----------------------------------------

TITLE: Configuring kubectl for ACK Cluster
DESCRIPTION: Commands to set up kubectl configuration by creating the .kube directory and copying the configuration file from the master node to the hal node.

LANGUAGE: bash
CODE:
mkdir $HOME/.kube
scp root@$MASTER:/etc/kubernetes/kube.conf $HOME/.kube/config

----------------------------------------

TITLE: Enabling Microsoft Teams Notifications
DESCRIPTION: YAML configuration for enabling Microsoft Teams notifications in Spinnaker.

LANGUAGE: yaml
CODE:
microsoftteams:
  enabled: true

----------------------------------------

TITLE: Defining Docker Image Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This JSON snippet demonstrates how to define a Docker image artifact in a Spinnaker pipeline definition. It includes the type, reference, name, and version fields for the Docker image.

LANGUAGE: json
CODE:
{
  "type": "docker/image",
  "reference": "gcr.io/project/my-image@sha256:28f82eba",
  "name": "gcr.io/project/my-image",
  "version": "sha256:28f82eba"
}

----------------------------------------

TITLE: Installing Stackdriver Dashboards in Bash
DESCRIPTION: This script installs the Spinnaker monitoring daemon and uploads Stackdriver dashboards. It requires a Stackdriver API key.

LANGUAGE: bash
CODE:
export STACKDRIVER_API_KEY=<your api key>
sudo apt-get update -y
sudo apt-get install spinnaker-monitoring-daemon -y
sudo apt-get install spinnaker-monitoring-third-party -y
/opt/spinnaker-monitoring/third_party/stackdriver/install.sh --dashboards_only

----------------------------------------

TITLE: Creating a new Spinnaker application with spin CLI in Bash
DESCRIPTION: Demonstrates how to use the spin application save command to create a new Spinnaker application. It specifies the application name, owner email, and cloud providers.

LANGUAGE: bash
CODE:
$ spin application save --application-name my-app --owner-email someone@example.com --cloud-providers "gce, kubernetes"

Application save succeeded

----------------------------------------

TITLE: Setting Spinnaker Version with Halyard
DESCRIPTION: Command to configure the desired version of Spinnaker for deployment using Halyard. The $VERSION variable should be replaced with the specific version number.

LANGUAGE: bash
CODE:
hal config version edit --version $VERSION

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.13.0 Changelog
DESCRIPTION: This HTML snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.13.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e71d2c5e2f6016b6956970eccc550848.js"/>

----------------------------------------

TITLE: SAML Identity Provider Metadata Configuration in XML
DESCRIPTION: Example XML metadata configuration file from a SAML Identity Provider containing entity description, key descriptors, and single sign-on service endpoints.

LANGUAGE: xml
CODE:
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<md:EntityDescriptor 
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"    
    entityID="https://accounts.google.com/o/saml2?idpid=SomeValueHere" 
    validUntil="2021-05-16T15:17:27.000Z">
  <md:IDPSSODescriptor 
      WantAuthnRequestsSigned="false" 
      protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
    <md:KeyDescriptor use="signing">
      <ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        <ds:X509Data>
          <ds:X509Certificate>
MIIDdDCCAlygAwIBAgIGAVS/Sw5yMA0GCSqGSIb3DQEBCwUAMHsxFDASBgNVBAoTC0dvb2dsZSBJ
bmMuMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MQ8wDQYDVQQDEwZHb29nbGUxGDAWBgNVBAsTD0dv
b2dsZSBGb3IgV29yazELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWEwHhcNMTYwNTE3
MTUxNzI3WhcNMjEwNTE2MTUxNzI3WjB7MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEWMBQGA1UEBxMN
TW91bnRhaW4gVmlldzEPMA0GA1UEAxMGR29vZ2xlMRgwFgYDVQQLEw9Hb29nbGUgRm9yIFdvcmsx
CzAJBgNVBAYTblVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMIIBIjANBgkqhkiG9w0BAQEF46OCAQ8A
MIIBCgKCAQEA4JsnpS0ZBzb7DtlU7Zop7l+Kgr7NzusKWcEC6MOsFa4Dlt7jxv4ScKZ/61M5WKxd
5YX0ol1rPokpNztj+Zk7OXrG8lDic0DpeDutc9pcq0+9/NYFF7WR7TDjh4B7Txnq7SerSB78fT8d
4rK7Bd+cu/cBIyAAyZ5tLeLbmTnHAk093Y9vF3mdWQnfAhx4ldOfstF6G/d2ev7I5xjSKzQuH6Ew
3bb3HLcM4uEVevOfNAlh1KoV4vQr+qzbc9UEFcPRwzuTwGa6QjfspWW7NgXKbHHC+X6a+gqJrke/
6l2VvHaQBJ7oIyt4PCdel2cnUkvuxvzHPYedh1AgrIiSP1brSQIDAQABMA0GCSqGSI34DQEBCwUA
A4IBAQCPqMAIau+pRDs2NZG1nGfyEMDfs0qop6FBa/wTNis75tLvay9MUlxXkTxm9aVxgggjEyc6
XtDjpV0onrH0jBnSc+vRI1GFQ48EO3owy3uBIeR1aMy13ZwAA+KVizeoOrXBJbvIUZHo0yfKRzIu
gtM58j58BdAFeYo+X9ds/ysvZ8FIGTLqMl/A3oO/yBNDjXR9Izoqgm7RX0JJXGL9Y1AgmEjxyqo9
MhxZAGxOHm9HZWWfVMcoe8p62mRJ2zf4lkNPBnDHrQ8MDPSsXewAuiSnRBDLxhdBgyThT/KW7Q06
rGa6Dp0rntKWzZE3hGQS0AdsnuFY/OXbmkNG9WUrUg5x
          </ds:X509Certificate>
        </ds:X509Data>
      </ds:KeyInfo>
    </md:KeyDescriptor>
    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>
    <md:SingleSignOnService 
        Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" 
        Location="https://accounts.google.com/o/saml2/idp?idpid=SomeValueHere"/>
    <md:SingleSignOnService 
        Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" 
        Location="https://accounts.google.com/o/saml2/idp?idpid=SomeValueHere"/>
  </md:IDPSSODescriptor>
</md:EntityDescriptor>

----------------------------------------

TITLE: Installing Spinnaker Monitoring Third-Party Package
DESCRIPTION: These commands update the package list and install the Spinnaker monitoring third-party package.

LANGUAGE: bash
CODE:
sudo apt-get update -y
sudo apt-get install spinnaker-monitoring-third-party

----------------------------------------

TITLE: Setting MySQL Transaction Isolation in SQL
DESCRIPTION: Sets the MySQL server variable tx_isolation to READ-COMMITTED, which is essential for Orca's SQL integration.

LANGUAGE: sql
CODE:
set tx_isolation = 'READ-COMMITTED';

----------------------------------------

TITLE: Deleting a Spinnaker application with spin CLI in Bash
DESCRIPTION: Shows how to use the spin application delete command to remove a Spinnaker application. This command deletes the specified application from Spinnaker.

LANGUAGE: bash
CODE:
spin application delete my-app

----------------------------------------

TITLE: Enabling Slack Feature Flag in Deck
DESCRIPTION: JavaScript configuration to enable the Slack integration feature flag in Deck's settings file.

LANGUAGE: javascript
CODE:
feature: {
  slack: true,
  ...otherFeatures
}

----------------------------------------

TITLE: Task IAM Role Trust Policy
DESCRIPTION: JSON configuration for task IAM role trust policy enabling ECS tasks to assume specific roles.

LANGUAGE: json
CODE:
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "",
      "Effect": "Allow",
      "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}

----------------------------------------

TITLE: Enabling Google Cloud Build API
DESCRIPTION: Command to enable the Cloud Build API in a Google Cloud Platform project

LANGUAGE: bash
CODE:
gcloud services enable cloudbuild.googleapis.com

----------------------------------------

TITLE: SSH Tunneling for Dashboard Installation
DESCRIPTION: This command establishes an SSH tunnel, forwarding ports 3000 and 9090 for dashboard installation.

LANGUAGE: bash
CODE:
ssh <host> -L 9090:localhost:9090 -L 3000:localhost:3000

----------------------------------------

TITLE: Adding HTTP Artifact Account in Spinnaker using Halyard
DESCRIPTION: This command adds an HTTP artifact account to Spinnaker using the Halyard CLI tool. It specifies the account name and the file containing the username and password.

LANGUAGE: bash
CODE:
hal config artifact http account add my-http-account \
    --username-password-file $USERNAME_PASSWORD_FILE

----------------------------------------

TITLE: Enabling Maven Artifact Provider in Spinnaker
DESCRIPTION: Command to enable the Maven artifact provider in Spinnaker using Halyard CLI.

LANGUAGE: bash
CODE:
hal config artifact maven enable

----------------------------------------

TITLE: Configuring Execute Fallback in Fiat YAML
DESCRIPTION: This YAML configuration snippet shows how to set the executeFallback property in the fiat-local.yml file. This setting changes the default behavior to only grant WRITE users implicit EXECUTE access across all applications.

LANGUAGE: yaml
CODE:
fiat:
  executeFallback: 'WRITE'

----------------------------------------

TITLE: Adding Kubernetes Account
DESCRIPTION: Halyard command to add a new Kubernetes account with associated Docker registry.

LANGUAGE: bash
CODE:
hal config provider kubernetes account add my-k8s-account \
    --docker-registries my-docker-registry

----------------------------------------

TITLE: Saving Spinnaker Projects
DESCRIPTION: Demonstrates how to create and update projects using the save command with a JSON file input.

LANGUAGE: bash
CODE:
$ spin project save --file <path to project json>

Project save succeeded

----------------------------------------

TITLE: Configuring Halyard for Spinnaker Deployment
DESCRIPTION: Halyard commands to configure storage, version, deployment type, and cloud providers for Spinnaker deployment on AWS.

LANGUAGE: bash
CODE:
hal config storage s3 edit --region $AWS_REGION
hal config storage edit --type s3
hal config version edit --version 1.21.0
hal deploy apply

sudo service apache2 stop
sudo systemctl disable apache2

echo > ~/.hal/default/profiles/settings-local.js

hal config deploy edit --type localgit --git-origin-user={your github username}
hal config version edit --version branch:master

hal config provider aws account add my-aws-devel-acct \
    --account-id 123456789012 \
    --assume-role role/SpinnakerManaged
hal config provider aws account edit my-aws-devel-acct --regions $AWS_REGIONS
hal config provider aws enable

hal config provider docker-registry enable

hal config provider docker-registry account add my-dockerhub-devel-acct \
    --address index.docker.io \
    --repositories {your dockerhub username}/{your dockerhub repository} \
    --username {your dockerhub username} \
    --password \
    --track-digests true

hal config provider docker-registry account add my-us-west-2-devel-registry \
 --address 123456789012.dkr.ecr.us-west-2.amazonaws.com \
 --username AWS \
 --password-command "aws --region us-west-2 ecr get-authorization-token --output text --query 'authorizationData[].authorizationToken' | base64 -d | sed 's/^AWS://'" \
 --track-digests true

----------------------------------------

TITLE: Adding a Plugin in Halyard
DESCRIPTION: This bash command demonstrates how to add a specific plugin to Spinnaker using Halyard. It includes the plugin ID, version, and enables the plugin.

LANGUAGE: bash
CODE:
hal plugins add Armory.RandomWaitPlugin  \
--version=1.1.4 --enabled=true

----------------------------------------

TITLE: Task Execution IAM Role Trust Policy
DESCRIPTION: JSON configuration for task execution IAM role trust policy allowing ECS tasks to assume the role.

LANGUAGE: json
CODE:
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
                "Service": [
                  "ecs-tasks.amazonaws.com"
                ]
      },
      "Action": "sts:AssumeRole"
    }
  ]
}

----------------------------------------

TITLE: Listing Supported Spinnaker Versions with Halyard
DESCRIPTION: This command displays a list of Spinnaker versions supported by Halyard. It allows users to view available options before upgrading.

LANGUAGE: bash
CODE:
hal version list

----------------------------------------

TITLE: Setting Oracle Object Storage as Spinnaker's Storage Source
DESCRIPTION: This Halyard command sets Oracle Object Storage as the storage type for Spinnaker. It should be run after configuring the Oracle Object Storage settings.

LANGUAGE: bash
CODE:
hal config storage edit --type oracle

----------------------------------------

TITLE: Configuring Spinnaker Public URLs
DESCRIPTION: Halyard commands to configure the base URLs for Spinnaker's UI and API servers to use custom domains.

LANGUAGE: bash
CODE:
hal config security ui edit \
    --override-base-url http://spinnaker.$DOMAIN

hal config security api edit \
    --override-base-url http://spinnaker-api.$DOMAIN

----------------------------------------

TITLE: Enabling Git Repo Artifacts in Spinnaker using Halyard
DESCRIPTION: Command to enable Git repository artifact provider using Halyard CLI.

LANGUAGE: bash
CODE:
hal config artifact gitrepo enable

----------------------------------------

TITLE: Halyard ECS Account Configuration
DESCRIPTION: Halyard command to add an ECS account and enable the ECS provider in Spinnaker.

LANGUAGE: bash
CODE:
hal config provider ecs account add ecs-account-name --aws-account aws-account-name
hal config provider ecs enable

----------------------------------------

TITLE: Job Output JSON Configuration Example
DESCRIPTION: Example showing how to use SPINNAKER_CONFIG_JSON marker in job logs to output structured JSON data for pipeline consumption.

LANGUAGE: json
CODE:
{
    "RELEASE": "1.1.1",
    "URL": "https://github.com/spinnaker/spinnaker/releases/tag/1.1.1"
}

----------------------------------------

TITLE: Listing Spinnaker applications with spin CLI in Bash
DESCRIPTION: Shows how to use the spin application list command to retrieve a list of all Spinnaker applications. The output includes details such as accounts, cloud providers, creation timestamp, and other application attributes.

LANGUAGE: bash
CODE:
spin application list
[
...
{
  "accounts": "my-account",
  "cloudProviders": "gce,kubernetes",
  "createTs": "1529349914747",
  "email": "jacobkiefer@google.com",
  "instancePort": 80,
  "lastModifiedBy": "anonymous",
  "name": "my-app",
  "platformHealthOnly": true,
  "providerSettings": {
    "gce": {
    "associatePublicIpAddress": true
    }
},
"updateTs": "1529349915014",
"user": "anonymous"
}
...
]

----------------------------------------

TITLE: Verifying Kubernetes Credentials with kubectl
DESCRIPTION: Command to verify Kubernetes cluster credentials by listing available namespaces using kubectl.

LANGUAGE: bash
CODE:
kubectl get namespaces

----------------------------------------

TITLE: Setting Gate Redirect URI for SSL Configuration
DESCRIPTION: Command to set the pre-established redirect URI for Gate when using SSL with authentication workflows.

LANGUAGE: bash
CODE:
hal config security authn <authtype> edit --pre-established-redirect-uri https://my-real-gate-address.com:8084/login

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.20.1 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.1 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md"></script>

----------------------------------------

TITLE: Implementing ChapStage Class in Java
DESCRIPTION: A stage class that implements StageDefinitionBuilder and CancellableStage interfaces for integrating with the Chaos Automation Platform (ChAP). Defines task graph with beginChap and monitorChap tasks.

LANGUAGE: java
CODE:
package com.netflix.spinnaker.orca.pipeline;

import com.google.common.collect.ImmutableMap;
import com.netflix.spinnaker.orca.CancellableStage;
import com.netflix.spinnaker.orca.chap.ChapService;
import com.netflix.spinnaker.orca.chap.Run;
import com.netflix.spinnaker.orca.chap.tasks.BeginChapTask;
import com.netflix.spinnaker.orca.chap.tasks.MonitorChapTask;
import com.netflix.spinnaker.orca.pipeline.model.Execution;
import com.netflix.spinnaker.orca.pipeline.model.Stage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class ChapStage implements StageDefinitionBuilder, CancellableStage {

  @Autowired
  public ChapService chapService;

  @Override
  public <T extends Execution<T>> void taskGraph(Stage<T> stage, TaskNode.Builder builder {
    builder
      .withTask("beginChap", BeginChapTask.class)
      .withTask("monitorChap", MonitorChapTask.class);
  }

  @Override
  public CancellableStage.Result cancel(Stage stage) {
    Run run = (Run) stage.getContext().get("run");
    if (run != null) {
      Run latestDetails = chapService.cancelChap(run.id.toString(), "");
      return new CancellableStage.Result(stage, ImmutableMap.of("run", latestDetails));
    }

    return null;
  }
}

----------------------------------------

TITLE: Configuring OAuth2 Authentication with Access and Refresh Tokens for Spin CLI
DESCRIPTION: YAML configuration for setting up OAuth2 authentication using access and refresh tokens in the Spin CLI config file.

LANGUAGE: yaml
CODE:
auth:
  enabled: true
  oauth2:
    authUrl: # OAuth2 provider auth url
    tokenUrl: # OAuth2 provider token url
    # no clientId or clientSecret
    scopes: # Scopes requested for the token
    - scope1
    - scope2
    cachedToken:
      access_token: ${ACCESS_TOKEN} # Note the key capitalization
      refresh_token: ${REFRESH_TOKEN} # Note the key capitalization

----------------------------------------

TITLE: Saving or Updating a Spinnaker Pipeline with Spin CLI in Bash
DESCRIPTION: Demonstrates how to save or update a Spinnaker pipeline using the 'spin pipeline save' command. It requires a JSON file containing the pipeline configuration.

LANGUAGE: bash
CODE:
$ spin pipeline save --file <path to pipeline json>

Parsed submitted pipeline: <...>

# Returns the following message if the pipeline gets updated successfully.
Pipeline save succeeded

----------------------------------------

TITLE: Adding a Plugin Repository in Halyard
DESCRIPTION: This snippet demonstrates how to add a plugin repository to Spinnaker using the Halyard command-line interface. It specifies a unique repository name and the URL to the plugins.json file.

LANGUAGE: bash
CODE:
hal plugins repository add spinnaker-plugin-examples \
    --url=https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json

----------------------------------------

TITLE: Upserting Tags via POST /tasks API
DESCRIPTION: Curl command example for upserting tags using the POST /tasks API endpoint, which provides backwards compatibility with traditional Spinnaker tasks.

LANGUAGE: bash
CODE:
curl -X "POST" "http://gate/tasks" \
     -H "Content-Type: application/json" \
     -d $'{
  "application": "spinnaker",
  "job": [
    {
      "type": "upsertEntityTags",
      "tags": [
        {
          "name": "spinnaker_ui_alert:autoscaling:ec2_instance_launch_error",
          "namespace": "my_namespace",
          "value": {
            "message": "Insufficient capacity. Launching EC2 instance failed.",
            "type": "alert"
          },
          "valueType": "object"
        }
      ],
      "entityRef": {
        "cloudProvider": "aws",
        "entityType": "servergroup",
        "entityId": "myservergroup-v001",
        "region": "us-west-2",
        "account": "production",
        "application": "app"            
      }
    }
  ],
  "description": "Updating tags"
}'

----------------------------------------

TITLE: Echo Configuration for AWS Pub/Sub
DESCRIPTION: YAML configuration for enabling AWS Pub/Sub in Spinnaker's Echo service

LANGUAGE: yaml
CODE:
pubsub:
  enabled: true
  amazon:
    enabled: true
    subscriptions:
    - name: aws-pubsub-test-subscription
      topicARN: arn:aws:sns:us-east-1:1234567890:aws-pubsub-test-topic
      queueARN: arn:aws:sqs:us-east-1:1234567890:aws-pubsub-test-queue
      messageFormat: S3

----------------------------------------

TITLE: Enabling Travis CI Feature in Deck Settings (JavaScript)
DESCRIPTION: Configuration snippet for enabling Travis CI feature in Spinnaker's Deck UI for version 1.19 or earlier. This needs to be added to the Deck custom profile.

LANGUAGE: javascript
CODE:
window.spinnakerSettings.feature.travis = true;

----------------------------------------

TITLE: Enabling GitHub Artifact Provider in Spinnaker using Halyard
DESCRIPTION: This command enables the GitHub artifact provider in Spinnaker using Halyard.

LANGUAGE: bash
CODE:
hal config artifact github enable

----------------------------------------

TITLE: Configuring Default Metrics Store and Accounts in Spinnaker
DESCRIPTION: These commands set the default metrics store, metrics account, and storage account for canary analysis in Spinnaker.

LANGUAGE: bash
CODE:
hal config canary edit --default-metrics-store STORE
hal config canary edit --default-metrics-account ACCOUNT
hal config canary edit --default-storage-account ACCOUNT

----------------------------------------

TITLE: Setting up SQS Queue in AWS CLI
DESCRIPTION: Series of commands to create and configure an SQS queue, set permissions, and subscribe it to an SNS topic

LANGUAGE: bash
CODE:
export AWS_QUEUE_NAME=aws-pubsub-test-queue
aws sqs create-queue --queue-name ${AWS_QUEUE_NAME}
aws sqs add-permission --queue-url <QUEUE_URL> --aws-account-ids 1234567890 --label spinnaker-pubsub --actions SendMessage
aws sqs get-queue-attributes --queue-url <QUEUE_URL> --attribute-names QueueArn
aws sns subscribe --topic-arn arn:aws:sns:us-east-1:12345467890:aws-pubsub-test-topic --protocol sqs --notification-endpoint arn:aws:sqs:us-east-1:1234567890:aws-pubsub-test-queue

----------------------------------------

TITLE: Configuring Pub/Sub in Halyard for Spinnaker in Bash
DESCRIPTION: Commands to enable Google Pub/Sub support and add a subscription in Halyard for Spinnaker configuration.

LANGUAGE: bash
CODE:
hal config pubsub google enable

hal config pubsub google subscription add $PUBSUB_NAME \
    --subscription-name $SUBSCRIPTION \
    --json-path $SERVICE_ACCOUNT_DEST \
    --project $PROJECT \
    --message-format $MESSAGE_FORMAT

----------------------------------------

TITLE: Configuring Per-Service Redis Endpoint in YAML
DESCRIPTION: YAML configuration for setting up a Redis endpoint for a specific Spinnaker service. This allows different services to use different Redis instances if needed.

LANGUAGE: yaml
CODE:
services.redis.baseUrl: $REDIS_ENDPOINT

----------------------------------------

TITLE: Triggering Spinnaker Pipeline with Curl
DESCRIPTION: This command sends a POST request to trigger a Spinnaker pipeline using curl. It uses an empty JSON payload and sets the content type to application/json.

LANGUAGE: bash
CODE:
curl $ENDPOINT -X POST -H "content-type: application/json" -d "{ }"

----------------------------------------

TITLE: Resolved User Data Template Example
DESCRIPTION: Example showing how the token-based template resolves with actual values during deployment

LANGUAGE: bash
CODE:
CLOUD_ACCOUNT="main"
CLOUD_ACCOUNT_TYPE="streaming"
CLOUD_ENVIRONMENT="prod"
CLOUD_SERVER_GROUP="udf-example-cluster-v001"
CLOUD_CLUSTER="udf-example-cluster"
CLOUD_STACK="example"
CLOUD_DETAIL="cluster"
CLOUD_REGION="east"

----------------------------------------

TITLE: Installing and Configuring Aptly
DESCRIPTION: Commands to install Aptly package management tool and create a repository.

LANGUAGE: bash
CODE:
sudo su - jenkins
cd ~
wget https://dl.bintray.com/smira/aptly/0.9.5/debian-squeeze-x64/aptly
chmod +x aptly
./aptly repo create hello
./aptly publish repo -architectures="amd64" -component=main -distribution=trusty -skip-signing=true hello

----------------------------------------

TITLE: Configuring Azure Storage for Front50
DESCRIPTION: YAML configuration for enabling Azure Storage as the storage backend in spinnaker-local.yml

LANGUAGE: yaml
CODE:
services:
  front50:
    azs:
      enabled: true
      storageAccountName: YOUR_STORAGE_ACCOUNT_NAME
      storageAccountKey: YOUR_STORAGE_ACCOUNT_KEY
      storageContainerName: front50

----------------------------------------

TITLE: Listing Cloud Foundry Accounts in Spinnaker
DESCRIPTION: This command lists all configured Cloud Foundry accounts in Spinnaker.

LANGUAGE: bash
CODE:
hal config provider cloudfoundry account list

----------------------------------------

TITLE: Uploading Application Artifact to Google Cloud Storage
DESCRIPTION: Upload the application JAR file to the GCS bucket to trigger the Spinnaker pipeline. Uses the gsutil command-line tool.

LANGUAGE: bash
CODE:
$ gsutil cp application.jar $BUCKET

----------------------------------------

TITLE: Adding S3 Artifact Account in Spinnaker
DESCRIPTION: Halyard command to add a new S3 artifact account with endpoint and region configuration. The API endpoint and region parameters are optional and only required for S3 clones like Minio.

LANGUAGE: bash
CODE:
hal config artifact s3 account add my-s3-account \
    --api-endpoint $API_ENDPOINT \
    --api-region $API_REGION \
    --region $REGION

----------------------------------------

TITLE: Installing Jenkins on Ubuntu
DESCRIPTION: Bash commands to install Jenkins, Java, and Git on an Ubuntu system.

LANGUAGE: bash
CODE:
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install openjdk-8-jdk
wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update
sudo apt-get install jenkins git

----------------------------------------

TITLE: Enabling Pipeline Templates via Halyard
DESCRIPTION: Commands to enable pipeline templates feature in Spinnaker using Halyard. The first command modifies the features configuration to enable pipeline templates, followed by applying the changes with deploy command.

LANGUAGE: bash
CODE:
hal config features edit --pipeline-templates true
hal deploy apply

----------------------------------------

TITLE: Enabling GitLab Artifact Provider in Halyard
DESCRIPTION: This command enables the GitLab artifact provider in Spinnaker using Halyard. It is a prerequisite for adding a GitLab artifact account.

LANGUAGE: bash
CODE:
hal config artifact gitlab enable

----------------------------------------

TITLE: Creating Pub/Sub Topic and Subscription in Bash
DESCRIPTION: Commands to create a Pub/Sub topic and subscription for custom messages.

LANGUAGE: bash
CODE:
gcloud beta pubsub topics create $TOPIC
gcloud beta pubsub subscriptions create $SUBSCRIPTION --topic $TOPIC

----------------------------------------

TITLE: Configuring Email Notifications with Hotmail SMTP
DESCRIPTION: YAML configuration for setting up email notifications in Spinnaker using Hotmail SMTP server. Includes mail server settings and authentication details.

LANGUAGE: yaml
CODE:
mail:
  enabled: true
  from: <myemail>@hotmail.com
spring:
  mail:
    host: smtp.live.com
    username: <myemail>@hotmail.com
    password: hunter2
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
        transport:
          protocol: smtp

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.11.3 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.11.3. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Configuring Launch Templates in Clouddriver YAML
DESCRIPTION: Basic configuration for enabling AWS launch templates in Clouddriver for all applications.

LANGUAGE: yaml
CODE:
aws.features.launch-templates.enabled: true
aws.features.launch-templates.all-applications.enabled: true

----------------------------------------

TITLE: Configuring Kubernetes Liveness Probes for Spinnaker Services
DESCRIPTION: Optional command to enable and configure Kubernetes liveness probes for Spinnaker services, setting the initial delay to match the longest service startup time.

LANGUAGE: bash
CODE:
hal config deploy edit --liveness-probe-enabled true --liveness-probe-initial-delay-seconds $LONGEST_SERVICE_STARTUP_TIME

----------------------------------------

TITLE: Configuring Spinnaker for GCS Artifacts and Pub/Sub in Bash
DESCRIPTION: Uses Halyard commands to enable and configure GCS artifact provider and Google Pub/Sub subscription in Spinnaker.

LANGUAGE: bash
CODE:
hal config artifact gcs enable
hal config artifact gcs account add --json-path $SERVICE_ACCOUNT_DEST my-artifact-account
hal config pubsub google enable
hal config pubsub google subscription add --project $PROJECT_ID --json-path $SERVICE_ACCOUNT_DEST --subscription-name $SUBSCRIPTION_NAME --message-format GCS my-gcs-subscription

----------------------------------------

TITLE: Enabling Redis Configuration in Front50
DESCRIPTION: YAML configuration to enable Redis storage backend in Front50

LANGUAGE: yaml
CODE:
spinnaker:\n  redis:\n    enabled: true

----------------------------------------

TITLE: Security Group Moniker Configuration
DESCRIPTION: YAML configuration example showing how to set the moniker section for naming a security group.

LANGUAGE: yaml
CODE:
moniker:
  app: keeldemo
  stack: md

----------------------------------------

TITLE: Marking Artifact as Bad via Spinnaker API (JSON)
DESCRIPTION: This snippet demonstrates the JSON body structure for a POST request to mark an artifact version as bad in a Spinnaker environment. It includes the target environment, artifact reference, and version to be marked as bad.

LANGUAGE: json
CODE:
{
  "targetEnvironment": "test",
  "reference" : "my-artifact",
  "version" : "master-h10.62bbbd6"
}

----------------------------------------

TITLE: Defining Page Layout in Jekyll Markdown
DESCRIPTION: Jekyll front matter configuration that defines the page layout and navigation settings for the trigger setup documentation.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Set Up Triggers"
sidebar:
  nav: setup
---

----------------------------------------

TITLE: Storing GitHub Access Token in Bash
DESCRIPTION: This snippet shows how to store a GitHub access token in a file readable by Halyard. The token should have the 'repo' scope.

LANGUAGE: bash
CODE:
echo $TOKEN > $TOKEN_FILE

----------------------------------------

TITLE: Enabling Oracle Object Storage Artifact Support
DESCRIPTION: Halyard command to enable Oracle Object Storage artifact support in Spinnaker.

LANGUAGE: bash
CODE:
hal config artifact oracle enable

----------------------------------------

TITLE: Installing gcloud CLI on Linux/macOS
DESCRIPTION: Installs the Google Cloud SDK command-line interface using a bash script.

LANGUAGE: bash
CODE:
curl https://sdk.cloud.google.com | bash

----------------------------------------

TITLE: Configuring Basic Authentication for Spin CLI
DESCRIPTION: YAML configuration for setting up basic authentication in the Spin CLI config file.

LANGUAGE: yaml
CODE:
auth:
  enabled: true
  basic:
    username: < username >
    password: < password >

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.0 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.0 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Configuring Namespace Parameter in Kubernetes Manifest
DESCRIPTION: Example of how to parameterize the namespace in a Kubernetes manifest using Spinnaker pipeline parameters. The namespace value is dynamically set using the expression syntax.

LANGUAGE: yaml
CODE:
# ... other keys
metadata:
  namespace: '${ parameters.namespace }'
# other keys ...

----------------------------------------

TITLE: Configuring S3 Storage for Front50
DESCRIPTION: YAML configuration for enabling AWS S3 as the storage backend in spinnaker-local.yml

LANGUAGE: yaml
CODE:
services:
  front50:
    storage_bucket: YOUR_S3_BUCKET_NAME
    bucket_root: YOUR_S3_FOLDER_NAME
    s3:
      enabled: true

----------------------------------------

TITLE: Defining Pipeline Constraint in Spinnaker Delivery Config YAML
DESCRIPTION: This snippet shows how to define a 'pipeline' constraint in a Spinnaker Delivery Config. It specifies a pipeline to run, with retry settings and custom parameters.

LANGUAGE: yaml
CODE:
  constraints:
  - type: pipeline
    pipelineId: fn0rd5d1-6217-4fcf-aa3d-ce7f59af9cac
    retries: 1
    parameters:
      foo: bar

----------------------------------------

TITLE: Installing Halyard on VM
DESCRIPTION: Downloads and installs Halyard on the GCE VM instance.

LANGUAGE: bash
CODE:
curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/stable/InstallHalyard.sh

sudo bash InstallHalyard.sh

. ~/.bashrc

----------------------------------------

TITLE: Creating GCS Service Account and Credentials
DESCRIPTION: Script to create a service account with storage admin role and generate JSON key credentials for GCS artifact access in Spinnaker.

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_NAME=spin-gcs-artifacts-account
SERVICE_ACCOUNT_DEST=~/.gcp/gcs-artifacts-account.json

gcloud iam service-accounts create \
    $SERVICE_ACCOUNT_NAME \
    --display-name $SERVICE_ACCOUNT_NAME

SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

PROJECT=$(gcloud config get-value project)

gcloud projects add-iam-policy-binding $PROJECT \
    --role roles/storage.admin --member serviceAccount:$SA_EMAIL

mkdir -p $(dirname $SERVICE_ACCOUNT_DEST)

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \
    --iam-account $SA_EMAIL

----------------------------------------

TITLE: Defining Kubernetes Object Artifact in JSON
DESCRIPTION: Example of a JSON artifact representation for a deployed Kubernetes ConfigMap object. This shows the structure Spinnaker uses to represent Kubernetes objects as artifacts after deployment.

LANGUAGE: json
CODE:
{
     "type": "kubernetes/configMap",
     "name": "frontend-configs",
     "location": "prod",
     "version": "v001"
}

----------------------------------------

TITLE: Configuring S3 Bucket Notifications
DESCRIPTION: Commands to create an S3 bucket and configure SNS notifications for object creation events

LANGUAGE: bash
CODE:
export AWS_TOPIC_ARN=<INSERT TOPIC ARN HERE>
export AWS_PUBSUB_BUCKET=spin-pubsub-test-bucket
aws s3 mb s3://${AWS_PUBSUB_BUCKET}/
aws sns set-topic-attributes --topic-arn ${AWS_TOPIC_ARN} --attribute-name Policy --attribute-value "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"s3Publish\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:Publish\"],\"Resource\":\"${AWS_TOPIC_ARN}\",\"Condition\":{\"ArnLike\":{\"aws:SourceArn\":\"arn:aws:s3:::${AWS_PUBSUB_BUCKET}\"}}}]}"

----------------------------------------

TITLE: Defining S3 Object Artifact in JSON
DESCRIPTION: This example demonstrates how to define an Amazon S3 object artifact in Spinnaker's artifact format. It includes the type, name, and location of the S3 object.

LANGUAGE: json
CODE:
{
  "type": "s3/object",
  "name": "s3://bucket/file.json",
  "location": "us-east-1"
}

----------------------------------------

TITLE: Initializing Pipeline Template Instance JSON
DESCRIPTION: Basic JSON structure for creating a new pipeline instance from a template, including schema version, application name, template reference, and variable definitions.

LANGUAGE: json
CODE:
{
  "schema": "v2",
  "application": "myApp",
  "name": "<pipeline name>",
  "template": {
    "artifactAccount": "front50ArtifactCredentials",
    "reference": "spinnaker://newSpelTemplate",
    "type": "front50/pipelineTemplate"
  },
  "variables": {
    "timeToWait": 4
  },
  "exclude": [],
  "triggers": [],
  "parameters": [],
  "notifications": [],
  "description": "",
  "stages": []
}

----------------------------------------

TITLE: Creating Service Account for GCR Authentication
DESCRIPTION: Creates a Google Cloud service account with necessary permissions for authenticating with GCR and downloads the credentials file.

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_NAME=spinnaker-gcr-account
SERVICE_ACCOUNT_DEST=~/.gcp/gcr-account.json

gcloud iam service-accounts create \
    $SERVICE_ACCOUNT_NAME \
    --display-name $SERVICE_ACCOUNT_NAME

SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

PROJECT=$(gcloud config get-value project)

gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/browser

gcloud projects add-iam-policy-binding $PROJECT \
    --member serviceAccount:$SA_EMAIL \
    --role roles/storage.objectViewer

mkdir -p $(dirname $SERVICE_ACCOUNT_DEST)

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \
    --iam-account $SA_EMAIL

----------------------------------------

TITLE: Configuring OAuth2 Authentication for Spin CLI
DESCRIPTION: YAML configuration for setting up OAuth2 authentication with client ID and secret in the Spin CLI config file.

LANGUAGE: yaml
CODE:
auth:
  enabled: true
  oauth2:
    authUrl: # OAuth2 provider auth url
    tokenUrl: # OAuth2 provider token url
    clientId: # OAuth2 client id
    clientSecret: # OAuth2 client secret
    scopes: # Scopes requested for the token
    - scope1
    - scope2

----------------------------------------

TITLE: Creating Google App Engine Application
DESCRIPTION: Command to create a new App Engine application in a specified region

LANGUAGE: bash
CODE:
gcloud app create --region <e.g., us-central>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.10.0

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5d4302d6ce01688de07a9977b210dbfc.js"/>

----------------------------------------

TITLE: Defining S3 Object Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This snippet shows the JSON representation of an S3 object artifact as it would appear in a Spinnaker pipeline definition. It includes fields for type, name, reference, and location.

LANGUAGE: json
CODE:
{
  "type": "s3/object",
  "name": "s3://bucket/file.json",
  "reference": "s3://bucket/file.json",
  "location": "us-east-1"
}

----------------------------------------

TITLE: Pipeline Expression Testing with cURL
DESCRIPTION: Command for testing pipeline expressions using Spinnaker's API endpoint.

LANGUAGE: bash
CODE:
PIPELINE_ID=[your_pipeline_id]
curl http://api.my.spinnaker/pipelines/$PIPELINE_ID/evaluateExpression \
       -H "Content-Type: text/plain" \
       --data '${ #stage("Deploy").status.toString() }'

----------------------------------------

TITLE: Configuring Clouddriver Read-only Shards in Orca
DESCRIPTION: Comprehensive configuration for Clouddriver read-only shards with multiple routing strategies including execution type, application pattern, origin, and authenticated user selectors.

LANGUAGE: yaml
CODE:
clouddriver:
  readonly:
    baseUrls:
    - baseUrl: https://clouddriver-readonly-orca-1.example.com
      priority: 10
      config:
        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByExecutionTypeServiceSelector
        executionTypes:
          - orchestration
    - baseUrl: https://clouddriver-readonly-orca-2.example.com
      priority: 20
      config:
        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByApplicationServiceSelector
        applicationPattern: app1|.*app2.*
    - baseUrl: https://clouddriver-readonly-orca-3.example.com
      priority: 30
      config:
        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByOriginServiceSelector
        origin: deck
        executionTypes:
          - orchestration
    - baseUrl: https://clouddriver-readonly-orca-4.example.com
      priority: 50
      config:
        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByAuthenticatedUserServiceSelector
        users:
          - horseman.*
          - bojack.*
    - baseUrl: https://clouddriver-readonly-orca-5.example.com

----------------------------------------

TITLE: Kill Single Zombie Execution API Endpoint
DESCRIPTION: REST API endpoint for canceling a specific zombie execution via Orca's admin API.

LANGUAGE: http
CODE:
POST /admin/queue/zombies/{executionId}:kill

----------------------------------------

TITLE: Listing Docker Registry Accounts in Spinnaker
DESCRIPTION: Command to verify configured Docker registry accounts in Spinnaker using Halyard

LANGUAGE: bash
CODE:
hal config provider docker-registry account list

----------------------------------------

TITLE: Defining Artifact Format in JSON
DESCRIPTION: This snippet shows the standard format for defining an artifact in Spinnaker. It includes fields for type, reference, account, name, version, provenance, metadata, location, and UUID.

LANGUAGE: json
CODE:
{
  "type":       // How this artifact is classified. Allows for easy distinction
                // between docker images and debian packages, for example.

  "reference":  // The URI.

  "artifactAccount": // The account configured within Spinnaker that has
                // permission to download this resource.

  "name":       // (Optional) A human-readable name that makes matching
                // artifacts simpler.

  "version":    // (Optional) The version of this artifact. By convention, the
                // "version" should be compared against other artifacts with
                // the same "type" and "name".

  "provenance": // (Optional) A link to whatever produced this artifact. This
                // is used for deep-linking into other systems from Spinnaker.

  "metadata":   // (Optional) Arbitrary k/v metadata useful for scripting
                // within stages.

  "location":   // (Optional) The region/zone/namespace this artifact can be
                // found in. This doesn't add information to the URI, but makes
                // multi-regional deployments easier to configure.

  "uuid":       // (Assigned by Spinnaker) Used for tracing artifacts within
                // Spinnaker.
}

----------------------------------------

TITLE: Secret Reference Format for Literals
DESCRIPTION: Format for referencing secret literal values like passwords and tokens in Spinnaker configurations using encrypted syntax.

LANGUAGE: text
CODE:
encrypted:<secret engine>!<key1>:<value1>!<key2>:<value2>!...

----------------------------------------

TITLE: Java Method Naming with Units Example
DESCRIPTION: Example showing proper method naming conventions for timeout values with explicit unit suffixes to avoid ambiguity in Java interfaces.

LANGUAGE: java
CODE:
public long getTimeoutMillis();
public long getTimeoutSeconds();

----------------------------------------

TITLE: Implementing Pipeline Instance JSON with Template in Spinnaker
DESCRIPTION: This snippet demonstrates the JSON structure for creating a pipeline instance that implements a pipeline template in Spinnaker. It includes fields for schema version, application name, pipeline name, template reference, variables, and optional configurations.

LANGUAGE: json
CODE:
{
  "schema": "v2",
  "application": "<appName>",     # Set this to the app you want to create the pipeline in.
  "name": "New Pipeline Name",    # The name of your pipeline.
  "template": {
    "type": "front50/pipelineTemplate",
    "artifactAccount": "front50ArtifactCredentials",
    "reference": "spinnaker://<templateName>"
  },
  "variables": {
    "<varName>": <value>,         # Value for the template variable.
    "someOtherVar": <value>
  },
  "inherit": [],
  "triggers": [],
  "parameters": [],
  "notifications": [],
  "description": "",
  "stages": []
}

----------------------------------------

TITLE: Enabling Amazon Pub/Sub in UI Settings
DESCRIPTION: JavaScript configuration to enable Amazon as a pubsub provider in Spinnaker's UI

LANGUAGE: javascript
CODE:
pubsubProviders: ['google','amazon']

----------------------------------------

TITLE: Configuring AWS S3 Backend for Spring Cloud Config in YAML
DESCRIPTION: This snippet shows how to configure an AWS S3 backend for Spring Cloud Config in YAML. It specifies the AWS region and S3 bucket name.

LANGUAGE: yaml
CODE:
spring:
  profiles:
    active: awss3
  cloud:
    config:
      server:
        awss3:
          region: us-west-2
          bucket: my-bucket

----------------------------------------

TITLE: Configuring Halyard for G Suite OAuth via CLI
DESCRIPTION: These Bash commands use the Halyard CLI to configure OAuth2 authentication for Spinnaker with G Suite. It sets the provider to Google and configures the client ID and secret.

LANGUAGE: bash
CODE:
hal config security authn oauth2 edit --provider google \
  --client-id (client ID from above) \
  --client-secret (client secret from above)

hal config security authn oauth2 enable

----------------------------------------

TITLE: Including External Changelog Gist Script
DESCRIPTION: Embeds an external GitHub gist containing the changelog content using a script tag. The gist ID references the specific changelog for Spinnaker version 1.11.2.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Entity Tag JSON Structure Example
DESCRIPTION: Demonstrates the JSON structure for an entity tag, including identifier, tags, metadata, and entity reference.

LANGUAGE: json
CODE:
{
  "id": "aws:servergroup:myservergroup-v001:100000000001:us-west-2",
  "tags": [
    {
      "name": "spinnaker_ui_alert:autoscaling:ec2_instance_launch_error",
      "namespace": "my_namespace",
      "value": {
        "message": "Insufficient capacity. Launching EC2 instance failed.",
        "type": "alert"
      },
      "valueType": "object"
    }
  ],
  "tagsMetadata": [
    {
      "name": "spinnaker_ui_alert:autoscaling:ec2_instance_launch_error",
      "lastModified": 1484162291500,
      "lastModifiedBy": "unknown",
      "created": 1484161809699,
      "createdBy": "unknown"
    }
  ],
  "entityRef": {
    "cloudProvider": "aws",
    "accountId": "100000000001",
    "region": "us-west-2",
    "entityType": "servergroup",
    "entityId": "myservergroup-v001",
    "application": "app"
  }
}

----------------------------------------

TITLE: Orca Queue Processor Log Example
DESCRIPTION: Example log output from Orca's QueueProcessor class showing a running task execution.

LANGUAGE: text
CODE:
Received message RunTask(executionType=pipeline, executionId=01CT1ST3MBJ9ECPH5JM5HVJARE, application=myapplication, stageId=01CT1ST4P79Y3MPW6FC4H38N3A, taskId=8, taskType=class com.netflix.spinnaker.orca.clouddriver.tasks.instance.WaitForUpInstancesTask)

----------------------------------------

TITLE: Generating SAML Keystore for Spinnaker
DESCRIPTION: Command to generate a new Java keystore for SAML authentication with RSA key pair.

LANGUAGE: bash
CODE:
keytool -genkey -v -keystore saml.jks -alias saml -keyalg RSA -keysize 2048 -validity 10000

----------------------------------------

TITLE: Configuring LDAP/Active Directory Authentication for Spin CLI
DESCRIPTION: YAML configuration for setting up LDAP authentication in the Spin CLI config file.

LANGUAGE: yaml
CODE:
auth:
  enabled: true
  ldap:
    username: < username >
    password: < password >

----------------------------------------

TITLE: Committing and Pushing Changes
DESCRIPTION: These commands stage changes, create a commit, and push the working branch to the remote fork.

LANGUAGE: bash
CODE:
git status
git add <path/your-file-name>
git commit -a -m "<your-commit-subject>" -m "<your-commit-description>"
git push origin <your-working-branch>

----------------------------------------

TITLE: Webhook Payload with Pipeline Parameters
DESCRIPTION: This JSON payload shows how to pass parameters to a Spinnaker pipeline through a webhook. It includes a 'parameters' object with a 'stack' value set to 'prod'.

LANGUAGE: json
CODE:
{
  "parameters": {
    "stack": "prod"
  }
}

----------------------------------------

TITLE: Setting Slack Base URL in Gate
DESCRIPTION: Configuration for setting the Slack API base URL in Gate's YAML config. This URL is used for making API calls to Slack.

LANGUAGE: yaml
CODE:
slack:
  baseUrl: https://slack.com/api

----------------------------------------

TITLE: Setting up Maven Artifact Provider
DESCRIPTION: Commands to enable and configure Maven artifact provider in Spinnaker using Halyard

LANGUAGE: bash
CODE:
$ hal config artifact maven enable

$ hal config artifact maven account add spring-artifactory-maven --repository-url https://my.repo.example.com

----------------------------------------

TITLE: Displaying Canary Config Commands in Spinnaker CLI
DESCRIPTION: This snippet shows the available commands for managing canary configs using the 'spin canary canary-configs' command. It lists subcommands for operations like delete, get, list, retro, and save, along with global flags for configuration.

LANGUAGE: bash
CODE:
$ spin canary canary-configs
Usage:
   canary canary-config [command]

Aliases:
  canary-config, canary-configs, cc

Available Commands:
  delete      Delete the provided canary config
  get         Get the canary config with the provided id
  list        List the canary configs
  retro       Retro the provided canary config
  save        Save the provided canary config

Flags:
  -h, --help   help for canary-config

Global Flags:
      --config string            path to config file (default $HOME/.spin/config)
      --default-headers string   configure default headers for gate client as comma separated list (e.g. key1=value1,key2=value2)
      --gate-endpoint string     Gate (API server) endpoint (default http://localhost:8084)
  -k, --insecure                 ignore certificate errors
      --no-color                 disable color (default true)
      --output string            configure output formatting
  -q, --quiet                    squelch non-essential output

Use " canary canary-config [command] --help" for more information about a command.

----------------------------------------

TITLE: Configuring Kubernetes API Service
DESCRIPTION: YAML configuration for exposing the Spinnaker API service (spin-gate) with a public load balancer IP.

LANGUAGE: yaml
CODE:
apiVersion: v1
kind: Service
metadata:
  name: spin-gate
  namespace: spinnaker
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8084
  selector:
    load-balancer-spin-gate: "true"
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: $API_ADDRESS

----------------------------------------

TITLE: Verifying gcloud Installation and Authentication
DESCRIPTION: Command to check if gcloud is installed and authenticated correctly.

LANGUAGE: bash
CODE:
gcloud info

----------------------------------------

TITLE: Defining Environment Constraints in Spinnaker Delivery Config
DESCRIPTION: This snippet demonstrates how to add constraints to an environment in a Spinnaker delivery config. It shows a depends-on constraint type.

LANGUAGE: yaml
CODE:
environments:
- name: staging
  resources: # omitted for brevity
  notifications: # omitted for brevity
  constraints: 
  - type: depends-on
    environment: testing

----------------------------------------

TITLE: Example Pub/Sub Message Payload with Accepted Constraints
DESCRIPTION: Sample JSON payload that meets the configured payload constraints where foo=bar and bing matches b.*p pattern.

LANGUAGE: json
CODE:
{
  "foo": "bar",
  "bing": "boooop",
  "x": ["1", "2", "3"]
}

----------------------------------------

TITLE: Exposing Spinnaker services with Load Balancers
DESCRIPTION: This snippet exposes the Spinnaker API (Gate) and UI (Deck) using Elastic Load Balancers. It creates public services and configures Halyard with the new URLs.

LANGUAGE: bash
CODE:
export NAMESPACE=spinnaker
# Expose Gate and Deck
kubectl -n ${NAMESPACE} expose service spin-gate --type LoadBalancer \
  --port 80 --target-port 8084 --name spin-gate-public 

kubectl -n ${NAMESPACE} expose service spin-deck --type LoadBalancer \
  --port 80 --target-port 9000 --name spin-deck-public  
  
export API_URL=$(kubectl -n $NAMESPACE get svc spin-gate-public \
 -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
 
export UI_URL=$(kubectl -n $NAMESPACE get svc spin-deck-public \
 -o jsonpath='{.status.loadBalancer.ingress[0].hostname}') 

# Configure the URL for Gate
hal config security api edit --override-base-url http://${API_URL} 

# Configure the URL for Deck
hal config security ui edit --override-base-url http://${UI_URL}

# Apply your changes to Spinnaker
hal deploy apply

----------------------------------------

TITLE: Installing Spinnaker Release Candidate using Halyard CLI
DESCRIPTION: Commands to configure and deploy a Spinnaker release candidate using the Halyard CLI. The version string follows the format 'release-M.N.x-latest-unvalidated' where M.N represents the version number.

LANGUAGE: bash
CODE:
# this would be version 'release-1.6.x-latest-unvalidated' for 1.6
hal config version edit --version release-M.N.x-latest-unvalidated

hal deploy apply

----------------------------------------

TITLE: Accessing Pipeline Parameters with Split
DESCRIPTION: Example showing how to process a comma-separated parameter value using Java's String split() function.

LANGUAGE: java
CODE:
${parameters.regions.split(",")}

----------------------------------------

TITLE: Configuring Default OCI Bakery Settings in Spinnaker
DESCRIPTION: This command sets the default instance shape, availability domain, and subnet ID for the VM used in baking images in Oracle Cloud Infrastructure. These settings are configured using the Halyard CLI.

LANGUAGE: bash
CODE:
hal config provider oracle bakery edit \
    --instance-shape $INSTANCE_SHAPE \
    --availability-domain $AVAILABILITY_DOMAIN \
    --subnet-id $SUBNET_ID

----------------------------------------

TITLE: Saving Pipeline Configuration in Spinnaker
DESCRIPTION: Demonstrates how to save a previewed pipeline configuration as an actual pipeline in Spinnaker using the spin pipeline save command.

LANGUAGE: bash
CODE:
spin pipeline save --file <path to pipeline config>

----------------------------------------

TITLE: Creating a Google Cloud Storage Bucket
DESCRIPTION: Create a GCS bucket for artifact storage using gsutil. Requires specifying the project ID and desired bucket name.

LANGUAGE: bash
CODE:
$ PROJECT_ID=<Insert Project ID>
$ BUCKET=gs://<Insert Bucket Name>
$ gsutil mb -p $PROJECT_ID $BUCKET

----------------------------------------

TITLE: Jekyll Frontmatter Configuration for 404 Page
DESCRIPTION: YAML frontmatter configuration for a Jekyll 404 page, setting the title, excerpt, sitemap exclusion and permalink.

LANGUAGE: yaml
CODE:
---
title: "Page Not Found"
excerpt: "Page not found. Your pixels are in another canvas."
sitemap: false
permalink: /404.html
---

----------------------------------------

TITLE: Spinnaker Plugin Installation Configuration
DESCRIPTION: YAML configuration snippet for installing a custom Spinnaker plugin, including enabling the plugin and configuring the plugin repository.

LANGUAGE: yaml
CODE:
profiles:
  spinnaker:
    spinnaker:
      extensibility:
        plugins:
          # The plugin id you defined in your build.gradle
          My.Plugin.Id:
            enabled: true
            # This must be a SemVer-compatible string
            # (i.e. do not include a `v` in front of the version string)
            version: "0.1.0"
  gate:
    spinnaker:
      extensibility:
        # This snippet is necessary so that Gate can serve your plugin code to Deck
        deck-proxy:
          enabled: true
          plugins:
            My.Plugin.Id:
              enabled: true
        repositories:
          myPluginRepo:
            enabled: true
            url: https://raw.githubusercontent.com/my-organization/my-plugin-repo/master/repositories.json

----------------------------------------

TITLE: Configuring Oracle Object Storage in Spinnaker using Halyard
DESCRIPTION: This command uses Halyard to configure Oracle Object Storage settings for Spinnaker. It sets various parameters such as bucket name, compartment ID, API key fingerprint, namespace, region, SSH private key file path, tenancy ID, and user ID.

LANGUAGE: bash
CODE:
hal config storage oracle edit \
    --bucket-name $BUCKET_NAME \
    --compartment-id $COMPARTMENT_OCID \
    --fingerprint $API_KEY_FINGERPRINT \
    --namespace $TENANCY_NAME \
    --region $REGION \
    --ssh-private-key-file-path  $PRIVATE_KEY_FILE \
    --tenancy-id $TENANCY_OCID \
    --user-id $USER_OCID

----------------------------------------

TITLE: Base Halyard Command
DESCRIPTION: The base hal command with global parameters

LANGUAGE: bash
CODE:
hal [parameters] [subcommands]

----------------------------------------

TITLE: AWS UDF Configuration
DESCRIPTION: YAML configuration for AWS user data file root directory and legacy behavior settings

LANGUAGE: yaml
CODE:
udf:
  udfRoot: /apps/nflx-udf
  defaultLegacyUdf: true

----------------------------------------

TITLE: Configuring a Plugin in Halconfig YAML
DESCRIPTION: This YAML snippet shows how to configure a plugin in the Halconfig file, including enabling the plugin, specifying its version, and setting custom configuration parameters.

LANGUAGE: yaml
CODE:
spinnaker:
  extensibility:
    plugins:
      Armory.RandomWaitPlugin:
        enabled: true
        version: 1.1.17
        config:
          defaultMaxWaitTime: 60

----------------------------------------

TITLE: Configuring a Plugin in Halconfig YAML
DESCRIPTION: This YAML snippet shows how to configure a plugin in the Halconfig file, including enabling the plugin, specifying its version, and setting custom configuration parameters.

LANGUAGE: yaml
CODE:
spinnaker:
  extensibility:
    plugins:
      Armory.RandomWaitPlugin:
        enabled: true
        version: 1.1.17
        config:
          defaultMaxWaitTime: 60

----------------------------------------

TITLE: Registering Multiple Stages in Spinnaker Plugin
DESCRIPTION: Demonstrates how to register multiple stage components in a Spinnaker frontend plugin.

LANGUAGE: javascript
CODE:
import { IDeckPlugin } from '@spinnaker/core';
import { widgetizeStage } from './WidgetizeStage';

export const plugin: IDeckPlugin = {
  stages: [widgetizeStage],
};

----------------------------------------

TITLE: Adding Custom Base Image for GCE Bakery in Spinnaker
DESCRIPTION: This Halyard command adds a custom base image for the Google Compute Engine bakery. It specifies the base image name, source image, descriptions, and package type. This configuration is used to populate the bake stage UI in Spinnaker.

LANGUAGE: bash
CODE:
hal config provider google bakery base-image add $BASE_IMAGE \
    --source-image $GCE_VM_IMAGE_NAME \
    --short-description this-is-my-image \
    --detailed-description 'There are many like it, but this one is mine.' \
    --package-type deb

----------------------------------------

TITLE: Uninstalling Halyard Deployment
DESCRIPTION: Commands to clean up Spinnaker deployment and uninstall Halyard from the system.

LANGUAGE: bash
CODE:
hal deploy clean
sudo ~/.hal/uninstall.sh

----------------------------------------

TITLE: Syncing Upstream Changes to Local Repositories
DESCRIPTION: Bash function to sync local Spinnaker repositories with upstream changes, keeping forks up to date.

LANGUAGE: bash
CODE:
sync-from-upstream() {
    for i in ./*; do
        (cd $i && echo $i && git checkout master && git pull --rebase upstream master && git push origin upstream/master:master)
    done
}

----------------------------------------

TITLE: Enabling DC/OS Provider in Halyard
DESCRIPTION: This Bash script demonstrates how to enable and configure the DC/OS provider in Spinnaker using Halyard commands.

LANGUAGE: bash
CODE:
hal config provider dcos enable

hal config provider dcos cluster add codelab-cluster \
    --dcos-url $CLUSTER_URL \
    --skip-tls-verify # For simplicity we won't worry about the
    # certificate for the cluster but this would not be recommended
    # for a real deployment

hal config provider dcos account add codelab \
    --cluster codelab-cluster \
    --docker-registries my-docker-registry \
    --uid $DCOS_USER \
    --password $DCOS_PASSWORD

sudo hal deploy apply

----------------------------------------

TITLE: Configuring Jekyll Redirects for Spinnaker Blog
DESCRIPTION: This YAML configuration sets up a permalink for the blog page and redirects various old blog post URLs to the new Spinnaker blog domain. It uses Jekyll's redirect_to and redirect_from features to manage these redirects.

LANGUAGE: yaml
CODE:
---
permalink: /blog.html
redirect_to: https://blog.spinnaker.io
redirect_from:
- /blog/google-source-to-prod-codelab-videos
- /blog/q4-roadmap-published
- /blog/announcing-gcp-https-support-in-spinnaker
- /blog/scaling-spinnaker-at-netflix-the-basics
- /blog/deploy-to-kubernetes-using-spinnaker
---

----------------------------------------

TITLE: Defining Docker Image Artifact in JSON
DESCRIPTION: This example demonstrates how to define a Docker image artifact in Spinnaker's artifact format. It includes the type, reference, name, and version of the Docker image.

LANGUAGE: json
CODE:
{
  "type": "docker/image",
  "reference": "gcr.io/project/image@sha256:29fee8e284",
  "name": "gcr.io/project/image",
  "version": "sha256:29fee8e284"
}

----------------------------------------

TITLE: Configuring Minio Storage for Ubuntu Installation
DESCRIPTION: Bash commands to configure Spinnaker to use Minio as an S3-compatible storage backend in an Ubuntu environment. These commands set up the access credentials and endpoint configuration.

LANGUAGE: bash
CODE:
echo $MINIO_SECRET_KEY | hal config storage s3 edit --endpoint $ENDPOINT \
    --access-key-id $MINIO_ACCESS_KEY \
    --secret-access-key

hal config storage edit --type s3

----------------------------------------

TITLE: Installing Halyard and Dependencies on EC2 Instance
DESCRIPTION: Commands to install nvm, Node.js, yarn, and Halyard on the EC2 instance for Spinnaker development.

LANGUAGE: bash
CODE:
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
source ~/.bashrc
nvm install stable
npm install -g yarn

curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh
sudo bash InstallHalyard.sh
source ~/.bashrc
hal -v

----------------------------------------

TITLE: Enabling Jenkins CI in Spinnaker Configuration
DESCRIPTION: Command to enable Jenkins CI in Spinnaker's Halyard configuration.

LANGUAGE: bash
CODE:
hal config ci jenkins enable

----------------------------------------

TITLE: Spinnaker Manual Judgment Expression
DESCRIPTION: Conditional expression used to control pipeline flow based on manual judgment input selection.

LANGUAGE: expression
CODE:
${ #judgment("Manual Judgment").equals("rollback")}

----------------------------------------

TITLE: Configuring SSH Key Authentication for Git Repo Account
DESCRIPTION: Command to add a new artifact account using SSH key authentication.

LANGUAGE: bash
CODE:
hal config artifact gitrepo account add $ARTIFACT_ACCOUNT_NAME \
    --ssh-private-key-file-path $SSH_KEY_FILE \
    --ssh-private-key-passphrase \
    --ssh-known-hosts-file-path $KNOWN_HOSTS_FILE

----------------------------------------

TITLE: Creating Spinnaker Configuration Backup with Halyard
DESCRIPTION: Creates a tar file backup of all Spinnaker configuration files and linked local files with modified halconfig paths. The backup includes all secrets and credentials supplied to Halyard.

LANGUAGE: bash
CODE:
hal backup create

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.21.3 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist script containing the changelog for Spinnaker version 1.21.3. It uses a script tag to load the external JavaScript file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.3.md"></script>

----------------------------------------

TITLE: Applying Spinnaker Configuration Changes
DESCRIPTION: This command applies the configuration changes made to Spinnaker.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Job Output Properties Format Example
DESCRIPTION: Example of using SPINNAKER_PROPERTY markers in job logs to output key-value pairs that can be consumed by downstream stages.

LANGUAGE: json
CODE:
{
    "RELEASE": "1.1.1",
    "URL": "https://github.com/spinnaker/spinnaker/releases/tag/1.1.1"
}

----------------------------------------

TITLE: Providing Artifacts with Spinnaker CLI in JSON
DESCRIPTION: This example shows the format for providing artifacts when executing a pipeline using the Spinnaker CLI (spin). It demonstrates how to structure the JSON file containing multiple artifact definitions.

LANGUAGE: json
CODE:
{
  "artifacts" : [
    {
      "type": "s3/object",
      "name": "s3://bucket/file.json",
      "location": "us-east-1"
    },
    {
      "type": "s3/object",
      "name": "s3://bucket/file2.json",
      "location": "us-east-1"
    }
  ]
}

----------------------------------------

TITLE: Configuring Redis Endpoints for HA Clouddriver
DESCRIPTION: This command configures Redis endpoints for the high availability Clouddriver setup. It sets the master endpoint and two slave endpoints for optimal performance and read distribution.

LANGUAGE: bash
CODE:
hal config deploy ha clouddriver edit --redis-master-endpoint $REDIS_MASTER_ENDPOINT --redis-slave-endpoint $REDIS_SLAVE_ENDPOINT --redis-slave-deck-endpoint $REDIS_SLAVE_DECK_ENDPOINT

----------------------------------------

TITLE: Enabling S3 Artifact Provider in Spinnaker
DESCRIPTION: Command to enable the S3 artifact provider using Halyard CLI.

LANGUAGE: bash
CODE:
hal config artifact s3 enable

----------------------------------------

TITLE: Defining Kubernetes Deployment Manifest in YAML
DESCRIPTION: Example of a Kubernetes Deployment manifest in YAML format. This manifest includes references to a Docker image and a ConfigMap, which can be replaced by artifacts during deployment.

LANGUAGE: yaml
CODE:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: gcr.io/my-images/nginx # possible artifact
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /opt/config
              name: my-config-map
      volumes:
        - configMap:
            name: configmap             # possible artifact
          name: my-config-map

----------------------------------------

TITLE: Configuring Deck Proxy in Gate YAML
DESCRIPTION: This YAML snippet shows how to configure the Deck proxy in Gate's configuration file (gate-local.yml) to enable frontend plugins in Spinnaker.

LANGUAGE: yaml
CODE:
spinnaker:
   extensibility:
     deck-proxy:
       enabled: true
       plugins:
         <unique-plugin-id>:
           enabled: true
           version: <version>
     repositories:
       <unique-repo-name>:
         url: <url-to-repositories.json-or-plugins.json>

----------------------------------------

TITLE: Configuring JAVA_OPTS in Spinnaker Service Settings
DESCRIPTION: This YAML snippet shows how to override the default JAVA_OPTS for a Spinnaker service using the 'env' key in service-settings. It sets custom heap size values based on the memory requests and limits.

LANGUAGE: yaml
CODE:
env:
   JAVA_OPTS: "-Xms410m -Xmx819m"

----------------------------------------

TITLE: Configuring Minio Storage for Docker Installation
DESCRIPTION: Bash commands for setting up Minio storage in a Docker container environment, including SELinux context configuration and storage settings.

LANGUAGE: bash
CODE:
chcon -R --reference /root/.bashrc /root/.hal/
ls -lZa /root

echo $MINIO_SECRET_KEY | hal config storage s3 edit --endpoint $ENDPOINT \
    --access-key-id $MINIO_ACCESS_KEY \
    --secret-access-key

hal config storage edit --type s3

----------------------------------------

TITLE: Retrieving Service Accounts from Front50 in Bash
DESCRIPTION: This snippet shows how to retrieve the list of service accounts from Spinnaker's Front50 service using a curl command.

LANGUAGE: bash
CODE:
curl $FRONT50/serviceAccounts

----------------------------------------

TITLE: Spinnaker Kubernetes Common Labels
DESCRIPTION: Standard Kubernetes labels that Spinnaker applies to resources it manages, following Kubernetes' recommendations on common labels.

LANGUAGE: yaml
CODE:
app.kubernetes.io/name: "application-name"
app.kubernetes.io/managed-by: "spinnaker"

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.24.1 Changelog
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.24.1 using a script tag.

LANGUAGE: javascript
CODE:
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.1.md"></script>

----------------------------------------

TITLE: Enabling Azure Provider in Halyard
DESCRIPTION: Command to enable Azure provider in Spinnaker via Halyard

LANGUAGE: bash
CODE:
hal config provider azure enable

----------------------------------------

TITLE: Configuring Redis Connection Settings
DESCRIPTION: YAML configuration for Redis service specifying secure connection details.

LANGUAGE: yaml
CODE:
overrideBaseUrl: redis://someuser:somepassword@localhost:6379

----------------------------------------

TITLE: Saving Pipeline JSON to File using Spin CLI in Bash
DESCRIPTION: This command retrieves the pipeline JSON using Spin CLI and saves it to a file named 'new_template.txt'. It uses the 'tee' command to both display the output and save it to a file.

LANGUAGE: bash
CODE:
spin pipeline get --name <pipelineName> --application <appName> | tee new_template.txt

----------------------------------------

TITLE: Configuring S3 Object Artifact in Spinnaker
DESCRIPTION: Example JSON configuration for an S3 object artifact in Spinnaker. Defines required fields including type, name, reference, and location for accessing objects in S3 buckets. Used in stages that read configuration from text files like Deploy Manifest or AWS Deploy.

LANGUAGE: javascript
CODE:
{
  "type": "s3/object",
  "name": "s3://bucket/file.json",
  "reference": "s3://bucket/file.json",
  "location": "us-east-1"
}

----------------------------------------

TITLE: Configuring Canary Constraint in Spinnaker Delivery Config YAML
DESCRIPTION: This example demonstrates how to configure a 'canary' constraint for automated canary analysis. It includes various parameters such as analysis intervals, scores, and multi-region settings.

LANGUAGE: yaml
CODE:
  constraints:
  - type: canary
    canaryConfigId: fn0rd5d1-6217-4fcf-aa3d-ce7f59af9cac
    beginAnalysisAfter: PT3M
    canaryAnalysisInterval: PT10M
    lifetime: PT90M
    marginalScore: 75
    passScore: 90
    capacity: 2
    source:
      account: appaccount
      cloudProvider: aws
      cluster: app-prod
    regions:
      - us-east-1
      - us-west-2
      - eu-west-1
    minSuccessfulRegions: 2

----------------------------------------

TITLE: Secret Reference Formats
DESCRIPTION: Examples showing the format for referencing encrypted values and files stored in GCS buckets within Spinnaker configuration.

LANGUAGE: plaintext
CODE:
encrypted:gcs!b:<bucket>!f:<path to file>!k:<optional yaml key>

LANGUAGE: plaintext
CODE:
encryptedFile:gcs!b:<bucket>!f:<path to file>

LANGUAGE: plaintext
CODE:
encrypted:gcs!b:mybucket!f:spinnaker-secrets.yml!k:github.password

LANGUAGE: plaintext
CODE:
encryptedFile:gcs!b:mybucket!f:mykubeconfig

----------------------------------------

TITLE: Retrieving Pipeline Template in Spinnaker CLI
DESCRIPTION: This command uses the Spinnaker CLI to retrieve a pipeline template by its ID. It allows you to examine the contents of the 'pipeline' element to determine what to use in your pipeline.

LANGUAGE: bash
CODE:
spin pipeline-template get --id <templateName>

----------------------------------------

TITLE: Installing Halyard for Spinnaker Configuration
DESCRIPTION: Commands to download and install Halyard, the configuration tool for Spinnaker.

LANGUAGE: bash
CODE:
curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh
sudo bash InstallHalyard.sh -y

----------------------------------------

TITLE: Configuring Email Notifications in Deck Settings
DESCRIPTION: JavaScript configuration for enabling email notifications in Spinnaker's Deck UI component.

LANGUAGE: javascript
CODE:
window.spinnakerSettings = window.spinnakerSettings || {};
window.spinnakerSettings.notifications = window.spinnakerSettings.notifications || {};
window.spinnakerSettings.notifications.email = window.spinnakerSettings.notifications.email || {};
window.spinnakerSettings.notifications.email.enabled = true;

----------------------------------------

TITLE: Deploying Updated Configuration
DESCRIPTION: Command to apply the configuration changes and deploy Spinnaker with the new plugin.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Setting S3 Configuration Variables in Bash
DESCRIPTION: Defines the required environment variables for S3 artifact configuration including API endpoint, regions, and account name.

LANGUAGE: bash
CODE:
API_ENDPOINT=
API_REGION=
REGION=
ARTIFACT_ACCOUNT_NAME=my-s3-account

----------------------------------------

TITLE: Configuring Oracle Object Storage Reference in JSON
DESCRIPTION: Example configuration for referencing an Oracle Object Storage artifact. Shows the required type field set to 'oracle/object' and the reference field using the oci:// prefix to specify the bucket and file path.

LANGUAGE: json
CODE:
{
  "type": "oracle/object",
  "reference": "oci://bucket/file.json"
}

----------------------------------------

TITLE: Clouddriver Kubernetes Proxy Configuration
DESCRIPTION: YAML configuration for setting up proxy settings for Kubernetes provider in Clouddriver service.

LANGUAGE: yaml
CODE:
env:
  HTTP_PROXY: "proxyaddress:proxyport"
  HTTPS_PROXY: "proxyaddress:proxyport"
  NO_PROXY: "localhost,127.0.0.1,*.spinnaker"

----------------------------------------

TITLE: Configuring Allowed Times Constraint in Spinnaker Delivery Config YAML
DESCRIPTION: This example shows how to configure an 'allowed-times' constraint with multiple time windows. It allows deployments on specific days and hours of the week.

LANGUAGE: yaml
CODE:
  constraints:
  - type: allowed-times
    windows:
      - days: Monday-Wednesday,Friday
        hours: 8-16
      - days: Thursday
        hours: 14-16

----------------------------------------

TITLE: Configuring ECS Naming Strategy in Spinnaker YAML
DESCRIPTION: YAML configuration example showing how to set up ECS naming strategies either as default across all accounts or per specific account. Demonstrates both the default Frigga naming and tag-based naming options.

LANGUAGE: yaml
CODE:
ecs:
  enabled: true
  defaultNamingStrategy: "default"   <--- 'default' naming used by default (field absent) or if specified
  accounts:
    - name: "ecs-moniker-acct"
      awsAccount: "ec2-aws-acct"
      namingStrategy: "tags"         <--- 'tags' specified for specific account

----------------------------------------

TITLE: Generating Sequence Diagram for Spinnaker Deployment Lifecycle using Mermaid
DESCRIPTION: This Mermaid code generates a sequence diagram that visualizes the lifecycle of a deployment in Spinnaker. It shows the communication flow between different components and the key stages of the deployment process.

LANGUAGE: mermaid
CODE:
sequenceDiagram

Title: Life of a Deployment

participant Deck
participant Gate
participant Orca
participant Clouddriver
participant Redis
participant Cloud

Deck->>+Gate: Initiate Deploy orchestration
Gate->>+Orca: Initiate Deploy orchestration
Orca->>Redis: Persist new execution
Orca-->>-Gate: Reply with orchestration id
Gate-->>-Deck: Reply with orchestration id

Note right of Orca: In worker thread
Orca->>+Clouddriver: Initiate Deploy operation
Clouddriver->>Redis: Persist new task
Clouddriver-->>-Orca: Reply with task id

Clouddriver-xCloud: Mutating calls
activate Clouddriver
Clouddriver->>Redis: Mark task completed
deactivate Clouddriver

Loop In worker thread
  Orca->>Clouddriver: Poll until task completion
  Clouddriver->>Redis: Query task status
  Orca->>Redis: Update execution state
end

Loop In worker thread
  Orca->>Clouddriver: Poll until instances are up
  Clouddriver->>Redis: Query server group/instance state from cache
  Orca->>Redis: Mark execution completed
end

Loop In background thread
  Deck->>Gate: Poll until orchestration completion
  Gate->>Orca: Query orchestration status
  Orca->>Redis: Query execution status
end

----------------------------------------

TITLE: Implementing MonitorChapTask Class in Java
DESCRIPTION: A task class that implements RetryableTask interface to monitor the status of a ChAP run. Polls the ChAP service and handles different execution states.

LANGUAGE: java
CODE:
package com.netflix.spinnaker.orca.chap.tasks;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.netflix.spinnaker.orca.DefaultTaskResult;
import com.netflix.spinnaker.orca.ExecutionStatus;
import com.netflix.spinnaker.orca.RetryableTask;
import com.netflix.spinnaker.orca.TaskResult;
import com.netflix.spinnaker.orca.chap.ChapService;
import com.netflix.spinnaker.orca.chap.Run;
import com.netflix.spinnaker.orca.pipeline.model.Stage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;

@Component
public class MonitorChapTask implements RetryableTask {

  @Autowired
  private ObjectMapper objectMapper;

  @Autowired
  public ChapService chapService;

  @Override
  public TaskResult execute(Stage stage) {
    Map<String, Object> ctx = stage.getContext();

    Run run = objectMapper.convertValue(ctx.get("run"), Run.class);

    if (run == null) {
      throw new RuntimeException("Cannot monitor Chap task without a valid Run in the context.");
    }

    Run latestDetails = chapService.getChap(run.id.toString());

    Map<String, Object> map = new HashMap<>();
    map.put("run", latestDetails);

    if(latestDetails.outcome == Run.Outcome.PASSED){
      return new DefaultTaskResult(ExecutionStatus.SUCCEEDED, map);
    }

    ExecutionStatus status;

    switch (latestDetails.state) {
      case COMPLETED:
        //workflow is complete, but the outcome didnt pass, consider this a failure.
      case FAILED:
        throw new RuntimeException("ChAP experiment failed.");
      case CANCELLED:
        status = ExecutionStatus.CANCELED;
        break;
      default:
        status = ExecutionStatus.RUNNING;
        break;
    }


    return new DefaultTaskResult(status, map);
  }

  public ChapService getChapService() {
    return chapService;
  }

  public void setChapService(ChapService chapService) {
    this.chapService = chapService;
  }

  @Override
  public long getBackoffPeriod() {
    return TimeUnit.MINUTES.toMillis(1);
  }

  @Override
  public long getTimeout() {
    return TimeUnit.DAYS.toMillis(1);
  }

  public ObjectMapper getObjectMapper() {
    return objectMapper;
  }

  public void setObjectMapper(ObjectMapper objectMapper) {
    this.objectMapper = objectMapper;
  }
}

----------------------------------------

TITLE: Verifying gcloud Installation in Bash
DESCRIPTION: Command to check if gcloud is installed and authenticated correctly.

LANGUAGE: bash
CODE:
gcloud info

----------------------------------------

TITLE: Resource View API in Spinnaker
DESCRIPTION: Endpoint to retrieve details of a specific managed resource. Returns the resource definition and current state.

LANGUAGE: bash
CODE:
GET /managed/resources/{name}

----------------------------------------

TITLE: Configuring Gate Local YAML Profile
DESCRIPTION: Example YAML configuration for overriding Gate service properties in Halyard deployment.

LANGUAGE: yaml
CODE:
example:
  property: value

----------------------------------------

TITLE: Disabling Cassandra Configuration in Spinnaker
DESCRIPTION: YAML configuration to disable Cassandra storage in spinnaker-local.yml

LANGUAGE: yaml
CODE:
services:
  front50:
    cassandra:
      enabled: false

----------------------------------------

TITLE: Configuring Spinnaker for DC/OS in YAML
DESCRIPTION: This YAML configuration enables DC/OS support in Spinnaker's clouddriver service, sets up a DC/OS cluster, and configures Docker registry access.

LANGUAGE: yaml
CODE:
dcos:
  enabled: true
  clusters:
    - name: codelab-cluster
      dcosUrl: https://dcos.example.com
      insecureSkipTlsVerify: true
  accounts:
    - name: codelab-dcos-account
      dockerRegistries:
        - accountName: my-docker-registry
      clusters:  
        - name: codelab-cluster
          uid: ${DCOS_USER}
          password: ${DCOS_PASSWORD}
dockerRegistry:
  enabled: true
  accounts:
  - name: my-docker-registry
    address: https://index.docker.io
    repositories:
    - lwander/spin-kub-demo
    username: ${DOCKER_USER}
    password: ${DOCKER_PASSWORD}

----------------------------------------

TITLE: Disabling Spinnaker Stats Collection
DESCRIPTION: Command to disable telemetry data collection in Spinnaker using Halyard CLI. Applicable for version 1.19.0+ where telemetry is enabled by default. Requires redeployment after execution.

LANGUAGE: bash
CODE:
hal config stats disable

----------------------------------------

TITLE: Example of Adding Oracle Cloud Account in Spinnaker
DESCRIPTION: This is an example of the Halyard command to add an Oracle Cloud account, demonstrating the use of actual values for the required parameters.

LANGUAGE: bash
CODE:
hal config provider oracle account edit my-oci-acct \
    --compartment-id ocid1.compartment.oc1..aaaaaaaatjuwhxwkspkxhumqke4o73b2b \
    --fingerprint 8f:05:f4:94:f3:5f:e3:30:ec:35 \
    --region us-phoenix-1 \
    --ssh-private-key-file-path /home/user/.oci/oci_api_key.pem \
    --tenancyId ocid1.tenancy.oc1..aaaaaaaa225wmphohi3iiyxxxjruo \
    --user-id ocid1.user.oc1..aaaaaaaagosdr3zsh67tvgpnmw42ywqc

----------------------------------------

TITLE: Representing a Manifest Artifact in JSON
DESCRIPTION: JSON structure representing a manifest stored as text in GitHub. This artifact would be consumed by a deploy stage.

LANGUAGE: json
CODE:
{
     "type": "github/file",
     "name": "manifests/frontend-configs.yml",
     "reference": "https://api.github.com/repos/your-application/..."
}

----------------------------------------

TITLE: Retrieving Cloud Foundry Account Details in Spinnaker
DESCRIPTION: This command retrieves details of a specific Cloud Foundry account in Spinnaker.

LANGUAGE: bash
CODE:
hal config provider cloudfoundry account get [account-name]

----------------------------------------

TITLE: Configuring Local Debian Installation with Halyard
DESCRIPTION: Command to configure Halyard for a local Debian package installation of Spinnaker on the same machine as Halyard.

LANGUAGE: bash
CODE:
hal config deploy edit --type localdebian

----------------------------------------

TITLE: Defining Kubernetes Service Manifest
DESCRIPTION: Basic Kubernetes Service manifest configuration that defines a TCP service on port 80 with app selector.

LANGUAGE: yaml
CODE:
kind: Service
apiVersion: v1
metadata:
  name: my-service
spec:
  selector:
    app: myapp
  ports:
  - protocol: TCP
    port: 80

----------------------------------------

TITLE: Enabling High Availability for Echo in Spinnaker
DESCRIPTION: This command enables high availability for the Echo service in Spinnaker, splitting it into two logical services: echo-scheduler and echo-worker.

LANGUAGE: bash
CODE:
hal config deploy ha echo enable

----------------------------------------

TITLE: Setting GCR Password File
DESCRIPTION: Sets the path to the GCR service account credentials file as a password for Spinnaker authentication.

LANGUAGE: bash
CODE:
PASSWORD_FILE=$SERVICE_ACCOUNT_DEST

----------------------------------------

TITLE: Mounting Kubernetes Config in Docker for Halyard Installation
DESCRIPTION: Docker command to run Halyard container with mounted .kube directory for persisting Kubernetes config changes.

LANGUAGE: bash
CODE:
docker run -p 8084:8084 -p 9000:9000 \
  --name halyard --rm \
  -v ~/.hal:/home/spinnaker/.hal \
  -v ~/.kube:/home/spinnaker/.kube \
  -it \
  us-docker.pkg.dev/spinnaker-community/docker/halyard:stable

----------------------------------------

TITLE: Enabling Entity Tags in Deck UI
DESCRIPTION: JavaScript configuration snippet for enabling entity tags feature in Spinnaker's Deck UI service.

LANGUAGE: javascript
CODE:
window.spinnakerSettings.entityTags = {};
window.spinnakerSettings.feature.entityTags=true;

----------------------------------------

TITLE: Enabling Spinnaker Stats Collection
DESCRIPTION: Command to enable telemetry data collection in Spinnaker using Halyard CLI. This is opt-in for version 1.18.x and requires redeployment after execution.

LANGUAGE: bash
CODE:
hal config stats enable

----------------------------------------

TITLE: Deploying DevOps Environment on Azure
DESCRIPTION: Command to deploy the 'Continuous Delivery to Kubernetes' Quickstart Template in Azure. This script installs Azure CLI 2.0 and sets up Jenkins, ACR, Spinnaker, and Kubernetes infrastructure.

LANGUAGE: bash
CODE:
bash <(curl -sL https://aka.ms/DeployDevOps)

----------------------------------------

TITLE: Enabling Oracle Cloud Provider in Spinnaker
DESCRIPTION: This Halyard command enables the Oracle Cloud provider in Spinnaker after adding the account.

LANGUAGE: bash
CODE:
hal config provider oracle enable

----------------------------------------

TITLE: Loading Spinnaker 1.22.2 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.22.2 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.2.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.20.7 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.7 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.7.md"></script>

----------------------------------------

TITLE: Defining a Debian Artifact in YAML for Spinnaker
DESCRIPTION: This snippet shows how to define a debian artifact in a Spinnaker delivery config. It includes optional fields for specifying artifact statuses and a human-readable reference.

LANGUAGE: yaml
CODE:
artifacts:
- name: keeldemo
  type: deb
  statuses: ["RELEASE"] # This is optional
  reference: my-debian-artifact # optional human-readable reference to be used elsewhere in the config, defaults to artifact name

----------------------------------------

TITLE: Setting Amazon ECR Registry Address
DESCRIPTION: Sets the registry address and region for Amazon Elastic Container Registry (ECR).

LANGUAGE: bash
CODE:
ADDRESS=012345678910.dkr.ecr.us-east-1.amazonaws.com
REGION=us-east-1

----------------------------------------

TITLE: Cloning and Configuring Spinnaker Documentation Repository
DESCRIPTION: These commands clone the forked Spinnaker documentation repository and set up the upstream remote for synchronization.

LANGUAGE: bash
CODE:
git clone git@github.com:<github-username>/spinnaker.github.io.git
cd spinnaker.github.io
git remote add upstream https://github.com/spinnaker/spinnaker.github.io.git
git remote -v

----------------------------------------

TITLE: Configuring Persistent Storage for Spinnaker in YAML
DESCRIPTION: YAML configuration snippet for setting up persistent storage using S3 for Spinnaker's Front50 service.

LANGUAGE: yaml
CODE:
...
spinnakerConfig:
  config:
    persistentStorage:
      persistentStoreType: s3
      s3:
        bucket: mybucket
        rootFolder: front50
    version: 2.18.0
...

----------------------------------------

TITLE: Adding Server Group Alert via POST /tags API
DESCRIPTION: Curl command example for adding a server group alert using the POST /tags API endpoint in Spinnaker's Gate service.

LANGUAGE: bash
CODE:
curl -X "POST" "http://gate/tags?entityId=spintest-v003&entityType=servergroup&account=test&region=us-west-2&cloudProvider=aws&application=app" \
     -H "Content-Type: application/json" \
     -d $'[
  {
    "name": "spinnaker_ui_alert:autoscaling:ec2_instance_launch_error",
    "namespace": "my_namespace",
    "value": {
      "message": "You have exceeded the number of VPC security groups allowed per instance. Launching EC2 instance failed.",
      "type": "alert"
    },
    "valueType": "object"
  }
]'

----------------------------------------

TITLE: Spinnaker Expression Condition for Rollback
DESCRIPTION: Expression used in a Check Preconditions stage to evaluate pipeline parameters and determine execution path.

LANGUAGE: expression
CODE:
${ parameters["Pipeline Successful"].equals("true") }

----------------------------------------

TITLE: Enabling HTTP Artifact Provider in Spinnaker using Halyard
DESCRIPTION: This command enables the HTTP artifact provider in Spinnaker using the Halyard CLI tool.

LANGUAGE: bash
CODE:
hal config artifact http enable

----------------------------------------

TITLE: Enabling Docker Registry Provider in Halyard
DESCRIPTION: Enables the Docker Registry provider in Spinnaker using Halyard.

LANGUAGE: bash
CODE:
hal config provider docker-registry enable

----------------------------------------

TITLE: Configuring Primary Storage Service Reads
DESCRIPTION: YAML configuration for enabling primary storage reads with optional fallback to previous storage.

LANGUAGE: yaml
CODE:
spinnaker:
  migration:
    compositeStorageService:
      reads:
        primary: true
        previous: true

----------------------------------------

TITLE: Provisioning a VM for Spinnaker Installation
DESCRIPTION: Create a new virtual machine instance to install Spinnaker, with necessary scopes and tags.

LANGUAGE: bash
CODE:
gcloud compute instances create $USER-spinnaker \
    --scopes="https://www.googleapis.com/auth/cloud-platform" \
    --machine-type="n1-highmem-4" \
    --image-family="ubuntu-1404-lts" \
    --image-project="ubuntu-os-cloud" \
    --zone="us-central1-f" \
    --tags="allow-github-webhook"

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.9.4. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/f206117b252a6d6b2d1f67a69bce8141.js"/>

----------------------------------------

TITLE: Loading Spinnaker 1.19.0 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.19.0 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Configuring Spinnaker Version for Nightly Builds
DESCRIPTION: Command to configure Halyard to use the master-latest-unvalidated version of Spinnaker for accessing the latest unvalidated nightly builds.

LANGUAGE: bash
CODE:
hal config version edit --version master-latest-unvalidated

----------------------------------------

TITLE: Enabling In-Memory Backend in Echo Configuration (YAML)
DESCRIPTION: Configuration snippet to enable the in-memory backend in echo.yml. This replaces Cassandra as the storage backend for Echo.

LANGUAGE: yaml
CODE:
spinnaker:
  inMemory:
    enabled: true

----------------------------------------

TITLE: Importing Front50 Data Script
DESCRIPTION: Shell script to import applications, pipelines, strategies, notifications and projects into Front50

LANGUAGE: bash
CODE:
#!/bin/sh

curl -X POST -H "Content-type: application/json" --data-binary @"notifications.json" http://FRONT50_HOSTNAME:FRONT50_PORT/notifications/batchUpdate
curl -X POST -H "Content-type: application/json" --data-binary @"strategies.json" http://FRONT50_HOSTNAME:FRONT50_PORT/strategies/batchUpdate
curl -X POST -H "Content-type: application/json" --data-binary @"pipelines.json" http://FRONT50_HOSTNAME:FRONT50_PORT/pipelines/batchUpdate
curl -X POST -H "Content-type: application/json" --data-binary @"applications.json" http://FRONT50_HOSTNAME:FRONT50_PORT/v2/applications/batch/applications
curl -X POST -H "Content-type: application/json" --data-binary @"projects.json" http://FRONT50_HOSTNAME:FRONT50_PORT/v2/projects/batchUpdate

----------------------------------------

TITLE: Applying Halyard Configuration Changes
DESCRIPTION: Apply the Halyard configuration changes to update Spinnaker with the new settings.

LANGUAGE: bash
CODE:
$ hal deploy apply

----------------------------------------

TITLE: Overriding Existing Spinnaker Components
DESCRIPTION: Shows how to override an existing Spinnaker component (Application configuration view) in a plugin.

LANGUAGE: javascript
CODE:
import { IDeckPlugin, overrideRegistrationQueue } from '@spinnaker/core';
import { InvisibleConfig } from './InvisibleConfig';

export const plugin: IDeckPlugin = {
  initialize: () => {
    overrideRegistrationQueue.register(InvisibleConfig, 'applicationConfigView')
  }
};

----------------------------------------

TITLE: Adding Google Account to Spinnaker
DESCRIPTION: Commands to configure a Google Cloud account in Spinnaker using Halyard, including project selection and service account credentials.

LANGUAGE: bash
CODE:
PROJECT=$(gcloud config get-value project)
SERVICE_ACCOUNT_DEST=# see Prerequisites section above

ACCOUNT=my-gce-account
hal config provider google account add $ACCOUNT --project $PROJECT \
    --json-path $SERVICE_ACCOUNT_DEST

----------------------------------------

TITLE: Embedding PollTab Voting System in HTML
DESCRIPTION: This snippet embeds a PollTab voting system for the workshop, including the poll and a link to view results.

LANGUAGE: html
CODE:
<div style="text-align:center; display: flex; justify-content: center; flex-direction: column; align-items: center;">
  <iframe src="https://www.polltab.com/embed/E4wlYRTTMW" style="width:85%; min-height: 800px; border:0; "></iframe>
  <a href="https://www.polltab.com/embed/E4wlYRTTMW/results" target="_blank">See Results</a>
</div>

----------------------------------------

TITLE: Configuring GCS Pub/Sub Notification and Subscription in Bash
DESCRIPTION: Creates a Pub/Sub topic, sets up GCS notification, and creates a pull subscription for the topic.

LANGUAGE: bash
CODE:
TOPIC_NAME=<topic>
SUBSCRIPTION_NAME=<subscription>
gsutil notification create -t $TOPIC_NAME -f json $BUCKET_NAME
gsutil notification list $BUCKET_NAME
gcloud pubsub subscriptions create $SUBSCRIPTION_NAME --topic $TOPIC_NAME

----------------------------------------

TITLE: Echo Service Proxy Configuration
DESCRIPTION: YAML configuration for setting up HTTP proxy settings for the Echo service in Spinnaker.

LANGUAGE: yaml
CODE:
env:
  JAVA_OPTS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2
              -Dhttp.proxyHost=<proxy host> -Dhttp.proxyPort=<proxy port> -Dhttps.proxyHost=<proxy host>
              -Dhttps.proxyPort=<proxy port> -Dhttp.nonProxyHosts='localhost|127.*|[::1]|*.spinnaker'"

----------------------------------------

TITLE: Enabling Google Cloud APIs for App Engine and Compute Engine
DESCRIPTION: Enable the App Engine Admin and Compute Engine APIs for your GCP project using gcloud commands.

LANGUAGE: bash
CODE:
gcloud services enable appengine.googleapis.com
gcloud services enable compute.googleapis.com

----------------------------------------

TITLE: Token-based User Data Template Configuration
DESCRIPTION: Example template file using Spinnaker's replacement tokens for dynamic values

LANGUAGE: bash
CODE:
CLOUD_ACCOUNT="%%account%%"
CLOUD_ACCOUNT_TYPE="%%accounttype%%"
CLOUD_ENVIRONMENT="%%env%%"
CLOUD_SERVER_GROUP="%%group%%"
CLOUD_CLUSTER="%%cluster%%"
CLOUD_STACK="%%stack%%"
CLOUD_DETAIL="%%detail%%"
CLOUD_REGION="%%region%%"

----------------------------------------

TITLE: Example GCS Location Payload
DESCRIPTION: Sample JSON payload containing a GCS artifact location.

LANGUAGE: json
CODE:
{
  "location": "gs://jtk54-artifacts/manifest.yml"
}

----------------------------------------

TITLE: Embedding GitHub Gist Script for Release Notes
DESCRIPTION: HTML script tag embedding a GitHub gist containing the changelog details for Spinnaker version 1.9.1.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/9323c90ab2088d89e68ce2a7ef7e5809.js"/>

----------------------------------------

TITLE: Configuring Custom Trust Store in Spinnaker's orca-local.yml
DESCRIPTION: This YAML configuration can be added to orca-local.yml to enable custom trust store support for webhooks without using Halyard. It specifies the path to the trust store, its password, and enables the custom trust configuration.

LANGUAGE: yaml
CODE:
webhook:
  trust:
    enabled: true
    trustStore: <path to trust store in jks format>
    trustStorePassword: <password for trustStore>

----------------------------------------

TITLE: Defining Environments in Spinnaker Delivery Config
DESCRIPTION: This snippet demonstrates how to define environments in a Spinnaker delivery config. It includes the environment name and a list of resources.

LANGUAGE: yaml
CODE:
environments:
- name: testing
  resources: 
  - <full resource definition>
  - <another resource definition>

----------------------------------------

TITLE: Pushing Git Tag for Docker Build Trigger
DESCRIPTION: Git commands to create and push a new tag, triggering a Docker build in the configured CI/CD pipeline.

LANGUAGE: bash
CODE:
git tag release-1.0
git push origin release-1.0

----------------------------------------

TITLE: Enabling Wercker CI Integration in Spinnaker using Halyard
DESCRIPTION: This command enables the Wercker CI integration in Spinnaker's Halyard configuration.

LANGUAGE: bash
CODE:
hal config ci wercker enable

----------------------------------------

TITLE: App Engine Application Configuration
DESCRIPTION: Example app.yaml configuration for an App Engine application used in the deployment pipeline.

LANGUAGE: yaml
CODE:
# Implied from context, not explicitly shown in the content

----------------------------------------

TITLE: Configuring UI-extension build.gradle for Spinnaker Plugin
DESCRIPTION: Simple Gradle configuration for building UI extensions in Spinnaker plugins.

LANGUAGE: gradle
CODE:
apply plugin: "io.spinnaker.plugin.ui-extension"

----------------------------------------

TITLE: Modifying Server Group to Use Mixed Instances Policy in Spinnaker
DESCRIPTION: This curl command shows how to update a server group to use mixed instances policy with multiple instance types and capacity weighting.

LANGUAGE: bash
CODE:
curl -H 'Content-Type: application/json' -d '{ "job": [ 
  {
    "type": "updateLaunchTemplate",
    "cloudProvider": "aws",
    "account": "my_aws_account",
    "application": "myAwsApp",
    "stack": "myStack",
    "credentials": "my_aws_account",
    "region": "eu-central-1",
    "asgName": "myAwsApp-myStack-v005",
    "launchTemplateOverridesForInstanceType": [
      {"instanceType":"t2.large","weightedCapacity":"1"},
      {"instanceType":"t3.large","weightedCapacity":"1"},
      {"instanceType":"t2.xlarge","weightedCapacity":"2"},
      {"instanceType":"t3.xlarge","weightedCapacity":"2"}] 
  }], "application": "myAwsApp", "description": "Modify Server Group in cluster myAwsApp"}' -X POST http://localhost:8084/tasks

----------------------------------------

TITLE: Adding a Wercker Master to Spinnaker using Halyard
DESCRIPTION: This Halyard command adds a Wercker master (connection) to Spinnaker, specifying the Wercker URL, user ID, and prompting for an authentication token.

LANGUAGE: bash
CODE:
hal config ci wercker master add mywercker1 \
    --address https://app.wercker.com/ \
    --user myuserid \
    --token

----------------------------------------

TITLE: Halyard Local Version Configuration
DESCRIPTION: Command to configure Halyard to use a local BOM version instead of fetching from GCS.

LANGUAGE: bash
CODE:
hal config version edit --version local:${VERSION}

----------------------------------------

TITLE: Orca Plugin Configuration
DESCRIPTION: YAML configuration for enabling and configuring the RandomWait plugin in Orca

LANGUAGE: yaml
CODE:
spinnaker:
  extensibility:
    plugins:
      Armory.RandomWaitPlugin:
        enabled: true
        version: 1.1.14
        extensions:
          armory.randomWaitStage:
            enabled: true
            config:
              defaultMaxWaitTime: 20

----------------------------------------

TITLE: Data Export Script for Front50
DESCRIPTION: Shell script to export all Front50 data (applications, pipelines, strategies, notifications, and projects) from the existing installation to JSON files

LANGUAGE: bash
CODE:
#!/bin/sh\n\nrm applications.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/global/applications | json_pp > applications.json\n\nrm pipelines.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/pipelines | json_pp > pipelines.json\n\nrm strategies.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/strategies | json_pp > strategies.json\n\nrm notifications.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/notifications | json_pp > notifications.json\n\nrm projects.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/v2/projects | json_pp | jq '._embedded.projects' > projects.json

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.8.6 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.8.6 using a script tag. The Gist ID is 0844fadacaf2299d214a82e88217d97c.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/0844fadacaf2299d214a82e88217d97c.js"/>

----------------------------------------

TITLE: Configuring Kubernetes Contexts for Spinnaker
DESCRIPTION: Commands to view Kubernetes contexts and add them as Spinnaker accounts for staging and production environments.

LANGUAGE: bash
CODE:
kubectl config get-contexts

hal config provider kubernetes account add prod-demo \
  --context $PROD_CONTEXT

hal config provider kubernetes account add staging-demo \
  --context $STAGING_CONTEXT

----------------------------------------

TITLE: Configuring External Log URL Template in Kubernetes Job Manifest
DESCRIPTION: Example showing how to add an annotation to a Kubernetes Job manifest for linking to external logging systems. Uses template variables to reference job metadata.

LANGUAGE: yaml
CODE:
job.spinnaker.io/logs: 'https://internal-logging/jobs/{{ manifest.metadata.name }}'

----------------------------------------

TITLE: Adding GCS Artifact Account to Spinnaker
DESCRIPTION: Configure a GCS artifact account in Spinnaker using Halyard. Requires specifying the path to the service account JSON key file and an account name.

LANGUAGE: bash
CODE:
$ ACCOUNT=<Insert Account Name>
$ hal config artifact gcs account add --json-path $JSON_SA_KEY $ACCOUNT

----------------------------------------

TITLE: Defining ChapService Interface in Java
DESCRIPTION: A Retrofit-based interface for making REST API calls to the ChAP service. Defines endpoints for starting, monitoring, and canceling ChAP experiments.

LANGUAGE: java
CODE:
package com.netflix.spinnaker.orca.chap;

import retrofit.http.Body;
import retrofit.http.GET;
import retrofit.http.POST;
import retrofit.http.Path;

import java.util.Map;

public interface ChapService {
  @POST("/v1/runs")
  Run startChap(@Body Map params);

  @GET("/v1/runs/{id}")
  Run getChap(@Path("id") String id);

  @POST("/v1/runs/{id}/stop")
  Run cancelChap(@Path("id") String id, @Body String body);
}

----------------------------------------

TITLE: Adding Server Group Notice via POST /tags API
DESCRIPTION: Curl command example for adding a server group notice using the POST /tags API endpoint in Spinnaker's Gate service.

LANGUAGE: bash
CODE:
curl -X "POST" "http://gate/tags?entityId=spintest-v003&entityType=servergroup&account=test&region=us-west-2&cloudProvider=aws&application=app" \
     -H "Content-Type: application/json" \
     -d $'[
  {
    "name": "spinnaker_ui_notice:my_favorite_notice",
    "namespace": "my_namespace",
    "value": {
      "message": "This is an example notice!",
      "type": "notice"
    },
    "valueType": "object"
  }
]'

----------------------------------------

TITLE: Setting Default Network for GCE Bakery in Spinnaker
DESCRIPTION: This command uses Halyard to set the default network for the Google Compute Engine bakery in Spinnaker. It requires specifying the desired network as a parameter.

LANGUAGE: bash
CODE:
hal config provider google bakery edit --network $YOUR_NETWORK

----------------------------------------

TITLE: Kill All Zombie Executions API Endpoint
DESCRIPTION: REST API endpoint for canceling all zombie executions with a specified minimum activity duration.

LANGUAGE: http
CODE:
POST /admin/queue/zombies:kill?minimumActivity=PT1H

----------------------------------------

TITLE: Configuring Jenkins Account with External Secret in YAML
DESCRIPTION: This snippet shows how to configure a Jenkins account in YAML, using a placeholder for the password that will be loaded from an external source.

LANGUAGE: yaml
CODE:
jenkins:
  enabled: true
  masters:
  - name: my-jenkins-master
    permissions: {}
    address: http://my-jenkins.ci.example.com
    username: myuser
    password: ${ci.my-jenkins.password}

----------------------------------------

TITLE: Configuring OAuth2 Security Settings in Halyard YAML
DESCRIPTION: YAML configuration for setting up Azure OAuth2 authentication in Spinnaker's Halyard configuration. Includes client authentication settings, token URIs, and user info mapping.

LANGUAGE: yaml
CODE:
security:
  authn:
    oauth2:
      enabled: true
      client:
        clientId: # client ID from above
        clientSecret: # client secret from above
        accessTokenUri: https://login.microsoftonline.com/${azureTenantId}/oauth2/token
        userAuthorizationUri: https://login.microsoftonline.com/${azureTenantId}/oauth2/authorize?resource=https://graph.windows.net
        clientAuthenticationScheme: query
        scope: profile
      userInfoRequirements: {}
      resource:
        userInfoUri: https://graph.windows.net/me?api-version=1.6
      userInfoMapping:
        email: userPrincipalName
        firstName: givenName
        lastName: surname
      provider: AZURE

----------------------------------------

TITLE: Creating Plugin Project Structure using NPX
DESCRIPTION: Uses the @spinnaker/pluginsdk NPM package to scaffold a new frontend plugin project structure.

LANGUAGE: shell
CODE:
mkdir my-plugin
npx -p @spinnaker/pluginsdk scaffold

----------------------------------------

TITLE: Creating Plugin Project Structure using NPX
DESCRIPTION: Uses the @spinnaker/pluginsdk NPM package to scaffold a new frontend plugin project structure.

LANGUAGE: shell
CODE:
mkdir my-plugin
npx -p @spinnaker/pluginsdk scaffold

----------------------------------------

TITLE: Creating GCR Pub/Sub Topic and Subscription in Bash
DESCRIPTION: Commands to create a Pub/Sub topic for Google Container Registry and a subscription to listen for changes.

LANGUAGE: bash
CODE:
gcloud beta pubsub topics create projects/${PROJECT}/topics/gcr
gcloud beta pubsub subscriptions create $SUBSCRIPTION \
  --topic projects/${PROJECT}/topics/gcr

----------------------------------------

TITLE: Defining GCS Object Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This JSON snippet demonstrates how to define a GCS object artifact in a Spinnaker pipeline definition. It includes the required fields such as type, reference, name, and version.

LANGUAGE: json
CODE:
{
  "type": "gcs/object",
  "reference": "gs://bucket/file.yml#1360383693620000",
  "name": "gs://bucket/file.yml",
  "version": "1360383693620000"
}

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.10 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.10 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.10.md"></script>

----------------------------------------

TITLE: SSH Connection to EC2 Instance with Port Forwarding
DESCRIPTION: Command to SSH into the EC2 instance with port forwarding for Spinnaker services. Forwards ports 9000, 8084, and 8087.

LANGUAGE: bash
CODE:
ssh -A -L 9000:localhost:9000 -L 8084:localhost:8084 -L 8087:localhost:8087 ubuntu@$SPINNAKER_INSTANCE_DNS -i /path/to/my-key-pair.pem

----------------------------------------

TITLE: Data Import Script for Front50
DESCRIPTION: Shell script to import all previously exported Front50 data into the new Redis backend using batch update endpoints

LANGUAGE: bash
CODE:
#!/bin/sh\n\ncurl -X POST -H "Content-type: application/json" --data-binary @"notifications.json" http://FRONT50_HOSTNAME:FRONT50_PORT/notifications/batchUpdate\ncurl -X POST -H "Content-type: application/json" --data-binary @"strategies.json" http://FRONT50_HOSTNAME:FRONT50_PORT/strategies/batchUpdate\ncurl -X POST -H "Content-type: application/json" --data-binary @"pipelines.json" http://FRONT50_HOSTNAME:FRONT50_PORT/pipelines/batchUpdate\ncurl -X POST -H "Content-type: application/json" --data-binary @"applications.json" http://FRONT50_HOSTNAME:FRONT50_PORT/global/applications/batchUpdate\ncurl -X POST -H "Content-type: application/json" --data-binary @"projects.json" http://FRONT50_HOSTNAME:FRONT50_PORT/v2/projects/batchUpdate

----------------------------------------

TITLE: Updating source code to trigger Jenkins build
DESCRIPTION: Demonstrates how to make a change to the source code repository to trigger a new Jenkins build, which will propagate through the Spinnaker pipeline.

LANGUAGE: bash
CODE:
sudo su jenkins
cd /var/lib/jenkins/hello-karyon-rxnetty
vi build.gradle
git commit -a -m "Bump release number"

----------------------------------------

TITLE: Loading Spinnaker 1.19.1 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.19.1 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>

----------------------------------------

TITLE: Spinnaker Bill of Materials (BOM) Structure
DESCRIPTION: Example YAML configuration showing the Bill of Materials structure that defines validated versions of Spinnaker microservices and dependencies.

LANGUAGE: yaml
CODE:
dependencies:
  consul:
    version: 0.7.5
  redis:
    version: 2:2.8.4-2
  vault:
    version: 0.7.0
services:
  clouddriver:
    version: 0.4.0-393
  deck:
    version: 1.2.0-393
  echo:
    version: 0.2.1-393
  fiat:
    version: 0.2.0-393
  front50:
    version: 0.3.1-393
  gate:
    version: 0.4.0-393
  igor:
    version: 0.3.0-393
  monitoring-daemon:
    version: 0.1.0-393
  monitoring-third-party:
    version: 0.1.0-393
  orca:
    version: 0.4.0-393
  rosco:
    version: 0.3.0-393
  spinnaker:
    version: 0.4.0-393
timestamp: '2017-05-26 11:30:46'
version: master-2017-05-26-393

----------------------------------------

TITLE: Decrypted Token for Legacy Clouddriver
DESCRIPTION: Example showing how token appears in plain text for older Clouddriver versions that don't support decryption.

LANGUAGE: yaml
CODE:
...
  github:
    enabled: true
    accounts:
    - name: github
      token: <TOKEN>
...

----------------------------------------

TITLE: Sample Java Extension Point Interface
DESCRIPTION: Example showing the SecretEngine interface declaration pattern used in Spinnaker for plugin extension points.

LANGUAGE: java
CODE:
SecretEngine.java

----------------------------------------

TITLE: Specifying Custom Packer Template in Spinnaker UI
DESCRIPTION: This snippet shows how to reference a custom Packer template in the Spinnaker UI. Users can enter the template file name in the 'Template File Name' field under 'Advanced Options' in the bake stage UI.

LANGUAGE: markdown
CODE:
![](bake_ui_template.png)

----------------------------------------

TITLE: Configuring Spinnaker's Rosco for Deb Repository
DESCRIPTION: YAML configuration for Spinnaker's Rosco to use the deb repository during image baking.

LANGUAGE: yaml
CODE:
debianRepository: http://BUCKET-NAME.s3-website-REGION-NAME.amazonaws.com trusty main

----------------------------------------

TITLE: Testing Component Changes
DESCRIPTION: Command to test component after updating dependencies.

LANGUAGE: bash
CODE:
$ ./gradlew test

----------------------------------------

TITLE: Loading GitHub Gist Changelog Scripts
DESCRIPTION: HTML script tags that load changelog content from GitHub gists for Spinnaker versions 1.24.0 through 1.24.2

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.0 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.0 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Configuring Spinnaker's API Gateway for External Requests
DESCRIPTION: Allow Spinnaker's API gateway to accept external requests by modifying the gate.yml configuration file.

LANGUAGE: bash
CODE:
mkdir -p ~/.hal/default/service-settings
echo "host: 0.0.0.0" | tee ~/.hal/default/service-settings/gate.yml

----------------------------------------

TITLE: Loading Spinnaker 1.19.10 Changelog from GitHub Gist
DESCRIPTION: This snippet loads the changelog for Spinnaker version 1.19.10 from a GitHub Gist. It uses a script tag to embed the content of the specified file from the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.10.md"></script>

----------------------------------------

TITLE: Disabling Cassandra in Echo Configuration (YAML)
DESCRIPTION: Configuration snippet to disable Cassandra in echo.yml. This is the first step in migrating from Cassandra to in-memory backend.

LANGUAGE: yaml
CODE:
spinnaker:
  cassandra:
    enabled: false

----------------------------------------

TITLE: Defining HTTP File Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This snippet demonstrates how to define an HTTP file artifact in a Spinnaker pipeline JSON definition. It includes the required fields such as type, reference, and an optional name for future reference.

LANGUAGE: json
CODE:
{
  "type": "http/file",
  "reference": "https://raw.githubusercontent.com/....",
  "name": "My manifest stored in GitHub"
}

----------------------------------------

TITLE: Cleaning Git Workspace in Bash
DESCRIPTION: Commands to clean the Git workspace while preserving IntelliJ project files. This is useful for repairing a broken IntelliJ project.

LANGUAGE: bash
CODE:
git clean -dnxf -e '*.iml' -e '*.ipr' -e '*.iws'

LANGUAGE: bash
CODE:
git clean -dxf -e '*.iml' -e '*.ipr' -e '*.iws'

----------------------------------------

TITLE: Creating Pub/Sub Subscription for Cloud Build
DESCRIPTION: Commands to create a Pub/Sub subscription for receiving Cloud Build notifications

LANGUAGE: bash
CODE:
    PROJECT_ID=
    SUBSCRIPTION_NAME=spinnaker-cloud-build

    gcloud pubsub subscriptions create $SUBSCRIPTION_NAME \
      --topic projects/$PROJECT_ID/topics/cloud-builds \
      --project $PROJECT_ID

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.12.7. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d888a8550835b5527abef90d8b72e760.js"/>

----------------------------------------

TITLE: Configuring Top-level build.gradle for Spinnaker Plugin
DESCRIPTION: Main Gradle build configuration that sets up plugin bundling, versioning, and project metadata for Spinnaker plugins.

LANGUAGE: gradle
CODE:
buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id("com.moowork.node").version("1.3.1").apply(false)
  id("io.spinnaker.plugin.bundler").version("$spinnakerGradleVersion")
  id("com.palantir.git-version").version("0.12.2")
}

apply plugin: "io.spinnaker.plugin.bundler"
spinnakerBundle {
  pluginId = "Armory.RandomWaitPlugin"
  description = "An example of a PF4J based plugin, that provides a new stage."
  provider = "https://github.com/spinnaker-plugin-examples"
  version = rootProject.version
}

version = normalizedVersion()

subprojects {
  group = "io.armory.plugin.manifest"
  version = rootProject.version
}

String normalizedVersion() {
  String fullVersion = gitVersion()
  String normalized = fullVersion.split("-").first()
  if (fullVersion.contains("dirty")) {
    return "$normalized-SNAPSHOT"
  } else {
    return normalized
  }
}

----------------------------------------

TITLE: Creating a Java KeyStore Trust Store for Custom CAs in Bash
DESCRIPTION: This command creates a Java KeyStore (JKS) format trust store, importing a CA certificate. It prompts for a password to secure the keystore. Additional CAs can be added by repeating the command with different certificates and aliases.

LANGUAGE: bash
CODE:
keytool -import -file <path-to-ca-certificate> -alias <name-of-first-ca> -keystore <name-for-keystore>.jks

----------------------------------------

TITLE: Adding Maven Local Repository to Component
DESCRIPTION: Gradle configuration to add local Maven repository to component's build file.

LANGUAGE: groovy
CODE:
repositories {
  mavenLocal()
}

----------------------------------------

TITLE: Creating SNS Topic in AWS CLI
DESCRIPTION: Commands to create an SNS topic using AWS CLI that will receive messages for Spinnaker

LANGUAGE: bash
CODE:
export AWS_TOPIC_NAME=aws-pubsub-test-topic
aws sns create-topic --name ${AWS_TOPIC_NAME}

----------------------------------------

TITLE: Configuring Front50 Automatic Migration in YAML
DESCRIPTION: Configuration in front50-local.yml to enable automatic migration from Fiat service accounts to pipeline permissions

LANGUAGE: yaml
CODE:
migrations:
  migrateToManagedServiceAccounts: true

----------------------------------------

TITLE: Loading Spinnaker 1.20.3 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.3 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.3.md"></script>

----------------------------------------

TITLE: Configuring Docker Image Artifact in JSON for Spinnaker
DESCRIPTION: This JSON snippet demonstrates how to structure a Docker image artifact in Spinnaker. It includes the type, reference, name, and version fields, which are essential for identifying and using the Docker image in Spinnaker pipelines.

LANGUAGE: json
CODE:
{
  "type": "docker/image",
  "reference": "gcr.io/project/my-image@sha256:28f82eba",
  "name": "gcr.io/project/my-image",
  "version": "sha256:28f82eba"
}

----------------------------------------

TITLE: Example Pub/Sub Message Payload with GCS Location
DESCRIPTION: Sample JSON structure of a Pub/Sub message payload containing a Google Cloud Storage (GCS) artifact location.

LANGUAGE: json
CODE:
{
  ...
  "location": "gs://jtk54-artifacts/manifest.yml"
  ...
}

----------------------------------------

TITLE: Configuring Spinnaker for App Engine Deployment
DESCRIPTION: Use Halyard commands to configure Spinnaker for deploying to App Engine and set up GCS storage.

LANGUAGE: bash
CODE:
hal config version edit --version $(hal version latest -q)

hal config provider appengine enable

hal config provider appengine account add my-appengine-account --project $GCP-PROJECT-ID

hal config storage gcs edit --project $GCP-PROJECT-ID

hal config storage edit --type gcs

----------------------------------------

TITLE: Including Changelog Gist Script in HTML
DESCRIPTION: Loads an external GitHub gist containing the detailed changelog for Spinnaker version 1.7.4 via script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e2ba64e21c1a05e890df8a25cc2bf036.js"/>

----------------------------------------

TITLE: Displaying Slack Channel Names in HTML
DESCRIPTION: This snippet demonstrates how to display Slack channel names using HTML code tags within a Markdown file. It's used to highlight specific channels in the support policy document.

LANGUAGE: HTML
CODE:
<code>#general</code>

LANGUAGE: HTML
CODE:
<code>#dev</code>

----------------------------------------

TITLE: Visualizing Bake Process with Mermaid Sequence Diagram in Spinnaker
DESCRIPTION: This Mermaid sequence diagram illustrates the step-by-step process of baking in Spinnaker, from triggering a build to publishing a machine image. It shows the interactions between various Spinnaker components and external services.

LANGUAGE: mermaid
CODE:
sequenceDiagram

Title: Life of a Bake

participant Igor
participant Jenkins
participant ArtifactRepo
participant Echo
participant Front50
participant Orca
participant Rosco
participant Packer
participant Redis
participant Cloud

Echo->>Front50: Build cache of pipeline triggers

Jenkins->>ArtifactRepo: Publish newly-produced deployable asset (e.g. .deb/.rpm/.jar)
Note right of Jenkins: Archive artifacts

Igor->>Jenkins: Poll Jenkins for completed builds
Igor->>Echo: Publish completed build info to eventing bus

Echo->>+Orca: Initiate pipeline execution based on matched trigger
Orca->>Redis: Persist new execution
Note right of Orca: Orca uses the artifact details from the trigger to decorate the package name with version information
Orca->>-Rosco: Request bake, passing package with exact version to install

Rosco->>Redis: Persist new bake
Rosco->>Packer: Initiate bake job, passing repo address (from config) and package/version

Packer->>ArtifactRepo: Pull deployable asset from repo
Packer->>Cloud: Publish machine image

Loop In background thread
  Rosco->>Packer: Poll until job completion
  Rosco->>Redis: Mark bake completed
end

Loop In worker thread
  Orca->>Rosco: Poll until task completion
  Rosco->>Redis: Query bake status
  Orca->>Redis: Update execution state
end

----------------------------------------

TITLE: Pipeline Templates Command Overview in Spin CLI
DESCRIPTION: Shows the main pipeline-templates command and its available subcommands in the spin CLI tool. Includes usage information and global flags for configuration.

LANGUAGE: bash
CODE:
$ spin pipeline-templates

Usage:
   pipeline-template [command]

Aliases:
  pipeline-template, pipeline-templates, pt

Available Commands:
  delete      Delete the provided pipeline template
  get         Get the pipeline template with the provided ID
  list        List the pipeline templates for the provided scopes
  plan        Plan the provided pipeline template config
  save        Save the provided pipeline

Flags:
  -h, --help   help for pipeline-template

Global Flags:
      --config string          path to config file (default $HOME/.spin/config)
      --gate-endpoint string   Gate (API server) endpoint (default http://localhost:8084)
  -k, --insecure               ignore certificate errors
      --no-color               disable color (default true)
      --output string          configure output formatting
  -q, --quiet                  squelch non-essential output

Use " pipeline-template [command] --help" for more information about a command.

----------------------------------------

TITLE: Configuring Gitlab File Artifact in JSON
DESCRIPTION: Example JSON configuration for referencing a Gitlab file artifact in Spinnaker. Shows how to specify the file type, reference URL, file path, and version.

LANGUAGE: json
CODE:
{
  "type": "gitlab/file",
  "reference": "https://gitlab.example.com/api/v4/projects/13083/repository/files/manifests%2Fconfig%2Eyaml/raw",
  "name": "manifests/config.yaml",
  "version": "master"
}

----------------------------------------

TITLE: Creating In-Process Extension Point Interface
DESCRIPTION: Demonstrates how to create a basic in-process extension point by implementing the SpinnakerExtensionPoint interface. This is the foundational step for enabling plugin support in a service.

LANGUAGE: kotlin
CODE:
import com.netflix.spinnaker.kork.plugins.api.internal.SpinnakerExtensionPoint

interface CoolExtensionPoint : SpinnakerExtensionPoint

----------------------------------------

TITLE: Resource History API in Spinnaker
DESCRIPTION: Endpoint to fetch the action history of a managed resource. Shows a chronological list of actions taken to maintain the desired state.

LANGUAGE: bash
CODE:
GET /history/{name}

----------------------------------------

TITLE: Applying Spinnaker Configuration Changes with Halyard
DESCRIPTION: This command applies configuration changes to your Spinnaker installation using Halyard. It should be run after making any configuration changes to ensure they are applied to the system.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Applying Spinnaker Configuration Changes with Halyard
DESCRIPTION: This command applies configuration changes to your Spinnaker installation using Halyard. It should be run after making any configuration changes to ensure they are applied to the system.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Loading GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: A series of script tags that embed GitHub gist content containing changelog information for Spinnaker versions 1.19.0 through 1.19.9. Each script loads a separate markdown file containing the release notes for a specific version.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.9.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Creating Firewall Rule for GitHub Webhooks
DESCRIPTION: Create a new firewall rule to allow incoming traffic from GitHub's webhook IP ranges to port 8084.

LANGUAGE: bash
CODE:
gcloud compute firewall-rules create allow-github-webhook \
    --allow="tcp:8084" \ 
    --source-ranges=$(curl -s https://api.github.com/meta | python -c "import sys, json; print ','.join(json.load(sys.stdin)['hooks'])") \
    --target-tags="allow-github-webhook"

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.12.1 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub gist containing the changelog for Spinnaker version 1.12.1. The gist is loaded using a script tag with the source URL pointing to the specific gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/349d826502e0bc0a3e4a7ec247b9e8b4.js"/>

----------------------------------------

TITLE: Legacy Pub/Sub Configuration (Pre-1.14)
DESCRIPTION: Halyard commands for configuring direct Pub/Sub subscription for Cloud Build integration in Spinnaker versions before 1.14

LANGUAGE: bash
CODE:
    hal config pubsub google subscription add $PUBSUB_SUBSCRIPTION_NAME \
      --project $PROJECT_ID \
      --subscription-name $SUBSCRIPTION_NAME \
      --message-format GCB

    hal config pubsub google enable

    hal deploy apply

----------------------------------------

TITLE: Google Cloud Storage Artifact Format Example (JavaScript)
DESCRIPTION: Example of a Spinnaker artifact format for an object stored in Google Cloud Storage (GCS). Includes type, reference, name, version, and location fields.

LANGUAGE: javascript
CODE:
{
  "type": "gcs/object",
  "reference": "gs://bucket/file.json#135028134000",
  "name": "gs://bucket/file.json",
  "version": "135028134000"
  "location": "us-central1"
}

----------------------------------------

TITLE: Retrieving Pipeline Templates in Spinnaker
DESCRIPTION: Demonstrates how to retrieve a single pipeline template by its ID using the get command.

LANGUAGE: bash
CODE:
spin pipeline-templates get --id myPipelineTemplate
{
  "id": "myPipelineTemplate"
  "pipeline": {...}
}

----------------------------------------

TITLE: Configuring Git Repo Artifact with SSH Authentication in Spinnaker
DESCRIPTION: This snippet demonstrates how to configure a Git Repo artifact using SSH authentication. It specifies the artifact type, repository URL, and branch version.

LANGUAGE: json
CODE:
{
    "type": "git/repo",
    "reference": "git@github.com:spinnaker/spinnaker.github.io",
    "version": "feat-123"
}

----------------------------------------

TITLE: Loading GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: HTML script tags that load changelog content from GitHub gists for different Spinnaker 1.19.x versions. Each script loads a separate markdown file containing version-specific release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Configuring Selective Launch Template Rollout in Clouddriver
DESCRIPTION: Advanced configuration for rolling out launch templates to specific applications and accounts in Clouddriver.

LANGUAGE: yaml
CODE:
aws.features.launch-templates.enabled: true
aws.features.launch-templates.allowed-applications: "myapp:prod:us-east-1,anotherapp:prod:us-east-1"
aws.features.launch-templates.allowed-accounts: "test"
aws.features.launch-templates.excluded-applications: "dangerousapp"

----------------------------------------

TITLE: Configuring Tomcat for External Proxy in YAML
DESCRIPTION: This YAML configuration for Gate's local settings enables Spinnaker to work with external proxy instances. It should be added to the gate-local.yml file in Halyard's custom profile.

LANGUAGE: yaml
CODE:
server:
  tomcat:
    protocolHeader: X-Forwarded-Proto
    remoteIpHeader: X-Forwarded-For
    internalProxies: .*

----------------------------------------

TITLE: Resource Validation API in Spinnaker
DESCRIPTION: POST endpoint to validate resource configuration and compare desired state against current reality. Returns validation status and configuration differences.

LANGUAGE: bash
CODE:
POST /managed/resources/diff -d "{YOUR_RESOURCE_CONFIG}"

----------------------------------------

TITLE: Example Spinnaker plugins.json File
DESCRIPTION: Demonstrates the structure of a plugins.json file used to define plugin metadata and releases for Spinnaker.

LANGUAGE: json
CODE:
[
  {
    "id": "My.Plugin.Id",
    "description": "This a sample plugin.",
    "provider": "https://github.com/my-organization",
    "releases": [
      {
        "version": "0.1.0",
        "date": "2021-03-09T17:30:00.948341Z",
        "requires": "deck>=0.0.0",
        "sha512sum": "a91cb7d412a25ca5e1b2d72e14ab499986d5773ae8016721fbefd0adf430e33b75e8e61bac92244bbbe4811f118724ec6e2bb568fdd8181a9e11327a96b45da9",
        "url": "https://github.com/my-organization/my-plugin/blob/master/my-plugin-v0.1.0.zip?raw=true"
      }
    ]
  }
]

----------------------------------------

TITLE: Removing a Specific Environment Pin in Spinnaker via API
DESCRIPTION: This snippet shows the JSON payload required to remove a specific pin from an environment using a DELETE request to the Spinnaker API. It includes targetEnvironment, reference, and version fields.

LANGUAGE: json
CODE:
{
  "targetEnvironment": "test",
  "reference" : "my-artifact",
  "version" : "master-h10.62bbbd6"
}

----------------------------------------

TITLE: Loading Spinnaker Changelog Gists
DESCRIPTION: A series of script tags that embed GitHub gist content showing changelog information for different Spinnaker 1.18.x releases. Each script loads a separate markdown file containing release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Embedding Spinnaker 1.26.6 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag embeds the changelog for Spinnaker version 1.26.6 from a GitHub Gist. It references a specific file within the Gist containing the changelog information.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.6.md"></script>

----------------------------------------

TITLE: Setting Current Deployment in Halyard
DESCRIPTION: Command to switch to or create a new Halyard deployment configuration. The deployment name is specified as a parameter.

LANGUAGE: bash
CODE:
hal config --set-current-deployment $DEPLOYMENT

----------------------------------------

TITLE: Configuring Spinnaker Halyard for GCS Artifacts
DESCRIPTION: Enable GCS artifact provider in Spinnaker using Halyard. This allows Spinnaker to work with artifacts stored in Google Cloud Storage.

LANGUAGE: bash
CODE:
$ hal config artifact gcs enable

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.8.7. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/ebb5e45e84de5b4381b422e3c8679b5a.js"/>

----------------------------------------

TITLE: Defining Maven Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This snippet shows the JSON representation of a Maven artifact as it would appear in a Spinnaker pipeline definition. It includes the 'type' field set to 'maven/file' and the 'reference' field containing the Maven coordinates.

LANGUAGE: json
CODE:
{
	"reference": "io.pivotal.spinnaker:multifoundationmetrics:.*",
	"type": "maven/file"
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist scripts to display changelog information for Spinnaker version 1.25. It includes separate scripts for versions 1.25.3, 1.25.2, 1.25.1, and 1.25.0.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md"></script>

----------------------------------------

TITLE: Deploy Spinnaker
DESCRIPTION: Command to deploy Spinnaker

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Exporting Properties for Spinnaker-supplied JAR Template
DESCRIPTION: Example of exporting properties from a CI job to use Spinnaker's built-in JAR template for artifact extraction.

LANGUAGE: sh
CODE:
messageFormat=JAR

----------------------------------------

TITLE: Exporting Security Group API Endpoint in Spinnaker
DESCRIPTION: Base URL endpoint for exporting an existing security group configuration to YAML format.

LANGUAGE: plaintext
CODE:
/managed/resources/export/aws/AWS_ACCOUNT_NAME/securitygroup/APP_NAME_OR_SG_NAME?serviceAccount=SERVICE_ACCOUNT

----------------------------------------

TITLE: Listing Spinnaker Pipelines for an Application with Spin CLI in Bash
DESCRIPTION: Shows how to list all pipelines for a specific Spinnaker application using the 'spin pipeline list' command.

LANGUAGE: bash
CODE:
spin pipeline list --application my-app

[
...
{
  "application": "my-app"
  ...
}
...
]

----------------------------------------

TITLE: Configuring Slack Token in Gate
DESCRIPTION: Configuration for adding encrypted Slack API token in Gate's config file. This token is required for accessing the Slack conversations API.

LANGUAGE: yaml
CODE:
slack:
  token: YOUR_TOKEN_HERE

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: These HTML script tags embed GitHub Gist content containing changelog information for different versions of Spinnaker 1.18. Each script tag references a specific file within the same Gist, corresponding to a particular patch version.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Kubernetes Namespace Definition in Helm Chart
DESCRIPTION: Example of how to define namespace in Helm chart manifests using template variables

LANGUAGE: yaml
CODE:
metadata:
  namespace: {{ .Release.Namespace }}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.22.1 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.22.1 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.1.md"></script>

----------------------------------------

TITLE: Configuring Scheduler Compensation Job in Echo (YAML)
DESCRIPTION: Configuration snippet to enable and configure the scheduler compensation job in echo.yml. This allows Echo to retroactively execute missed triggers on startup or redeploy.

LANGUAGE: yaml
CODE:
scheduler:
  compensationJob:
    enabled: true
    windowMs: 1800000 # optional

----------------------------------------

TITLE: Loading Spinnaker 1.25.2 Changelog via GitHub Gist
DESCRIPTION: Script tag to embed the changelog content for version 1.25.2 from a GitHub gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md"></script>

----------------------------------------

TITLE: Implementing Spinnaker Homepage HTML Structure
DESCRIPTION: HTML template structure for the Spinnaker homepage, including header section with navigation, feature sections, cloud provider logos, and case studies. Uses Liquid templating to insert content from the YAML configuration.

LANGUAGE: html
CODE:
<div class="spin_header">
  <img class="spin_header__swoosh" src="{{ "assets/images/top-right-swoosh.svg" | absolute_url }}" alt="Spinnaker Swoosh"/>
  <div class="spin_header__inner_wrap">
    {% include masthead.html %}
    <div class="spin_header__text">
      <h1>Cloud Native Continuous Delivery</h1>
      <h2>Fast, safe, repeatable deployments for every Enterprise</h2>
    </div>
    <!-- ... additional HTML ... -->
  </div>
</div>

----------------------------------------

TITLE: Configuring Custom Artifact Templates with Halyard
DESCRIPTION: Command to add a custom artifact template using Halyard CLI. This allows users to define their own templates for artifact extraction.

LANGUAGE: sh
CODE:
hal config artifact templates add <name of template> --template-path <path to the template>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing changelog information for Spinnaker version 1.19.0 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Cleaning Up Spinnaker Deployment
DESCRIPTION: Halyard command to remove the Spinnaker deployment and associated resources.

LANGUAGE: bash
CODE:
hal deploy clean

----------------------------------------

TITLE: Configuring Gradle Dependencies for Spinnaker Plugin Testing
DESCRIPTION: This snippet shows how to set up Gradle dependencies for a Spinnaker plugin's subproject build file. It demonstrates the use of Spinnaker's exported Gradle platforms for testing.

LANGUAGE: groovy
CODE:
dependencies {
  // ...
  testImplementation("com.netflix.spinnaker.orca:orca-bom:<orca-version>")
  testImplementation("com.netflix.spinnaker.orca:orca-api-tck") // Don't specify a version here - it will be resolved by `orca-bom` above.
}

----------------------------------------

TITLE: Deleting a Canary Config in Spinnaker CLI
DESCRIPTION: This snippet shows how to delete a canary config using the 'delete' subcommand. It requires specifying the ID of the canary config to be deleted.

LANGUAGE: bash
CODE:
$ spin canary canary-config delete canaryConfigId

----------------------------------------

TITLE: Checking Azure CLI Version
DESCRIPTION: Command to verify Azure CLI installation and version

LANGUAGE: bash
CODE:
az --version

----------------------------------------

TITLE: Installing Dependencies on EC2 Instance
DESCRIPTION: Bash script to install dependencies for a local Git deployment of Spinnaker on an EC2 instance. Installs git, curl, netcat, redis-server, OpenJDK 8, emacs, AWS CLI, Python 2.7, and pip.

LANGUAGE: bash
CODE:
#!/bin/bash
set -ex

# Install dependencies for localgit installation
add-apt-repository ppa:openjdk-r/ppa
apt-get update
apt-get -y install git curl netcat redis-server openjdk-8-jdk emacs awscli python2.7 python-pip

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.6 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.6 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet demonstrates how to embed a GitHub Gist containing changelog information for Spinnaker versions. It uses the script tag with a src attribute pointing to the Gist URL, specifying the file for each version.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.6.md"></script>

----------------------------------------

TITLE: Configuring Jekyll Page Layout for Spinnaker Runbooks
DESCRIPTION: This snippet sets up the Jekyll front matter for a documentation page about Spinnaker runbooks. It specifies a single-column layout, sets the page title, and configures the sidebar navigation.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Runbooks"
sidebar:
  nav: guides
---

----------------------------------------

TITLE: Defining Artifacts in Spinnaker Delivery Config
DESCRIPTION: This snippet shows how to define artifacts in a Spinnaker delivery config. It includes the artifact name, type, reference, and VM options for Debian artifacts.

LANGUAGE: yaml
CODE:
artifacts:
- name: keeldemo
  type: deb
  reference: my-artifact   # optional human-readable reference to be used elsewhere in the config, defaults to artifact name
  vmOptions:               # only required for Debian artifacts, this information is used to determine how to bake a virtual machine image
    baseOs: bionic-classic # the base operating system for the virtual machine image
    regions:               # the regions to bake the image in (this should at least correspond to the regions you will deploy to)
    - us-west-2
    - us-east-1
    baseLabel: RELEASE     # the operating system label, optional and defaults to "RELEASE"
    storeType: EBS         # the storage type for the virtual machine image, optional and defaults to "EBS"

----------------------------------------

TITLE: Loading Spinnaker 1.13.7 Release Notes from GitHub Gist
DESCRIPTION: Embeds a script tag to load the changelog content for Spinnaker version 1.13.7 from a GitHub gist. The gist likely contains detailed release notes and change information.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/6588f03010bea59df5c4852bc1e1bba9.js"/>

----------------------------------------

TITLE: Defining Pipeline Variables
DESCRIPTION: Example of how to specify variable values in a pipeline configuration that override template defaults.

LANGUAGE: json
CODE:
"variables": {
  "varName": <value>,
  "otherVarName": <its_value>
}

----------------------------------------

TITLE: Loading Spinnaker 1.22.1 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.22.1 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.1.md"></script>

----------------------------------------

TITLE: Including Table of Contents in Spinnaker Documentation
DESCRIPTION: This Liquid template snippet includes a table of contents for the Spinnaker runbooks documentation page. It uses a predefined include file to generate the TOC.

LANGUAGE: liquid
CODE:
{% include toc %}

----------------------------------------

TITLE: Configuring Pod Labels for Spinnaker Server Groups in Kubernetes
DESCRIPTION: This YAML snippet shows how Spinnaker sets labels on Kubernetes Pods when creating a Server Group. It includes the server group name as a label.

LANGUAGE: yaml
CODE:
template:
  metadata:
    labels:
      ${SERVER-GROUP}: true

----------------------------------------

TITLE: ObjectProvider Extension Point Integration
DESCRIPTION: Shows how to inject extension points using Spring's ObjectProvider for lazy resolution of dependencies. This pattern is useful when extensions may be registered after service startup.

LANGUAGE: kotlin
CODE:
@Component
class MyServiceComponent(
  val extensions: ObjectProvider<List<MyExtensionPoint>>
) {

  fun doingSomeBusiness() {
    extensions.stream().peek { it.doStuff() }
  }
}

----------------------------------------

TITLE: Example Spinnaker 1.10.1 BOM Configuration
DESCRIPTION: A complete example of a Spinnaker BOM file for version 1.10.1, showing all microservice versions, dependencies, and artifact sources.

LANGUAGE: yaml
CODE:
version: 1.10.1
timestamp: '2018-10-24 15:31:30'
services:
  echo:
    version: 2.1.0-20181003100130
    commit: d20259cd47acd432670dcbddd8191eabbdbf7a4e
  clouddriver:
    version: 4.0.1-20181024113115
    commit: ad521d622193bd36b90f7c8b3fb453044222cd72
  deck:
    version: 2.5.1-20181018042808
    commit: 9a096f216be8bf36da14f2f5faa15e94e0a407c5
  fiat:
    version: 1.1.0-20181012042808
    commit: b1fd0b386534dd170f61c845ee8cda9a5865de82
  front50:
    version: 0.13.0-20181005212906
    commit: 62da4dc86c663230d897dc8da5ffbbb2c7793bbe
  gate:
    version: 1.2.0-20181016042808
    commit: 0b204b7b4e36819b2f469dd3850dc89b45a50bf8
  igor:
    version: 0.13.0-20181003100130
    commit: a4fd89756144d4b0722dc43ee679b9ae51a75171
  kayenta:
    version: 0.4.0-20180928152808
    commit: 788433f454505e7848d185868ed78d73ac0ef4cd
  orca:
    version: 1.1.0-20181003100130
    commit: bde9d946c68b8305e7ecd48c045a52eaa9b63cbc
  rosco:
    version: 0.8.0-20181003100130
    commit: 2f1a4f856b04971fe0fa04c7d402ee8f03827f61
  defaultArtifact: {}
  monitoring-third-party:
    version: 0.9.0-20180913172809
    commit: 1559f0a03c2c1d88bf07a164e1c9c21a7c5e6af4
  monitoring-daemon:
    version: 0.9.0-20180913172809
    commit: 1559f0a03c2c1d88bf07a164e1c9c21a7c5e6af4
dependencies:
  redis:
    version: 2:2.8.4-2
  consul:
    version: 0.7.5
  vault:
    version: 0.7.0
artifactSources:
  debianRepository: https://dl.bintray.com/spinnaker-releases/debians
  dockerRegistry: us-docker.pkg.dev/spinnaker-community/docker
  gitPrefix: https://github.com/spinnaker

----------------------------------------

TITLE: Deleting a Spinnaker Pipeline with Spin CLI in Bash
DESCRIPTION: Demonstrates how to delete a specific pipeline for a given application using the 'spin pipeline delete' command.

LANGUAGE: bash
CODE:
spin pipeline delete --name my-pipeline --application my-app

Pipeline deleted

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.4 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.4 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>

----------------------------------------

TITLE: Creating MySQL Database and User Grants for Clouddriver
DESCRIPTION: SQL commands to create the Clouddriver database and set up required user permissions for both service and migration users.

LANGUAGE: sql
CODE:
CREATE DATABASE `clouddriver` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

GRANT
  SELECT, INSERT, UPDATE, DELETE, CREATE, EXECUTE, SHOW VIEW
ON `clouddriver`.*
TO 'clouddriver_service'@'%';

GRANT
  SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, LOCK TABLES, EXECUTE, SHOW VIEW
ON `clouddriver`.*
TO 'clouddriver_migrate'@'%';

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.22.2 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.22.2 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.2.md"></script>

----------------------------------------

TITLE: Github Commit Status Webhook Configuration
DESCRIPTION: Complete example of a custom webhook stage for updating Github commit statuses, including headers, payload, and parameter definitions.

LANGUAGE: yaml
CODE:
label: Github - Github Commit Status
type: githubStatus
enabled: true
description: Update a Github Commit Status
method: POST
customHeaders:
  Authorization:
    - token MY_API_TOKEN
url: https://api.github.com/repos/ethanfrogers/spinnaker/statuses/${parameterValues['gitCommit']}
payload: |-
  {
    "state": "${parameterValues['status']}",
    "target_url": "${parameterValues['targetUrl']}",
    "context": "${parameterValues['context']}"
  }
parameters:
  - label: Git Commit
    name: gitCommit
    description: The Git Commit to create a status for
    type: string
  - label: Status
    name: status
    type: string
  - label: Target URL
    name: targetUrl
    type: string
  - label: Context
    name: context
    type: string

----------------------------------------

TITLE: Loading Spinnaker 1.22.4 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.22.4 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.4.md"></script>

----------------------------------------

TITLE: Executing Kubernetes Commands
DESCRIPTION: Example showing proper formatting for Kubernetes commands and their output

LANGUAGE: bash
CODE:
kubectl get pods --output=wide

----------------------------------------

TITLE: Configuring Kubernetes Deployment Labels for Spinnaker Clusters
DESCRIPTION: This YAML snippet shows how Spinnaker sets labels on Kubernetes Deployments when creating a Cluster. It includes labels for the cluster name, version, and server group name.

LANGUAGE: yaml
CODE:
kind: Deployment
metadata:
  name: ${CLUSTER-NAME}
spec:
  selector:
    matchLabels:
      ${CLUSTER-NAME}: true
  template:
    metadata:
      labels:
        ${CLUSTER-NAME}: true
        version: ${SEQUENCE-NUMBER} # used to distinguish the replica set
        ${SERVER-GROUP-NAME}: true  # used to distinguish the replica set

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker v1.17.1 Changelog
DESCRIPTION: HTML script tag that loads the changelog content for Spinnaker version 1.17.1 from a GitHub gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>

----------------------------------------

TITLE: Oracle OCI Packer Bake Template
DESCRIPTION: Custom Packer template for baking images on Oracle Cloud Infrastructure with HTTP access enabled and package installation configuration

LANGUAGE: json
CODE:
{
  "variables": {
    "oracle_availability_domain": null,
    "oracle_region": null,
    "oracle_base_image_id": null,
    "oracle_compartment_id": null,
    "oracle_image_name": null,
    "oracle_instance_shape": null,
    "oracle_ssh_user_name": null,
    "oracle_subnet_id": null,
    "oracle_tenancy_id": null,
    "oracle_user_id": null,
    "oracle_fingerprint": null,
    "oracle_ssh_private_key_file_path": null,
    "oracle_pass_phrase": "",

    "appversion": "",
    "build_host": "",
    "build_info_url": "",
    "repository": "",
    "package_type": "",
    "packages": "",
    "upgrade": "",
    "configDir": null
  },
  "builders": [
    {
      "type": "oracle-oci",
      "availability_domain": "{{user `oracle_availability_domain`}}",
      "region": "{{user `oracle_region`}}",
      "base_image_ocid": "{{user `oracle_base_image_id`}}",
      "compartment_ocid": "{{user `oracle_compartment_id`}}",
      "image_name": "{{user `oracle_image_name`}}",
      "shape": "{{user `oracle_instance_shape`}}",
      "ssh_username": "{{user `oracle_ssh_user_name`}}",
      "subnet_ocid": "{{user `oracle_subnet_id`}}",
      "tenancy_ocid": "{{user `oracle_tenancy_id`}}",
      "user_ocid": "{{user `oracle_user_id`}}",
      "fingerprint": "{{user `oracle_fingerprint`}}",
      "key_file": "{{user `oracle_ssh_private_key_file_path`}}",
      "pass_phrase": "{{user `oracle_pass_phrase`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "script": "{{user `configDir`}}/install_packages.sh",
      "environment_vars": [
        "repository={{user `repository`}}",
        "package_type={{user `package_type`}}",
        "packages={{user `packages`}}",
        "upgrade={{user `upgrade`}}"
      ],
      "pause_before": "30s"
    },
    {
      "type": "shell",
      "inline": [
       "sudo iptables -I INPUT 1 -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT",
       "sudo netfilter-persistent save",
       "sudo systemctl restart netfilter-persistent.service"
      ]
    }
  ]
}

----------------------------------------

TITLE: Extension Registry Pattern
DESCRIPTION: Shows how to implement a custom registry for managing extension points. Includes both the registry implementation and example plugin usage code.

LANGUAGE: kotlin
CODE:
@Component
class MyExtensionPointRegistry {
  internal val extensionPoints: MutableList<MyExtensionPoint>

  fun register(extension: MyExtensionPoint) {
    extensionPoints.add(extension)
  }
}

class MyServiceComponent(
  private val registry: MyExtensionPointRegistry
) {

  fun doingSomeBusiness() {
    registry.extensions.forEach { it.doStuff() }
  }
}

LANGUAGE: kotlin
CODE:
@SpinnakerExtension
class MyExtension(
  private val registry: MyExtensionPointRegistry
) : MyExtensionPoint {
  init {
    registry.register(this)
  }
}

----------------------------------------

TITLE: Handling Merge Conflicts and Rebasing
DESCRIPTION: These commands fetch updates, rebase the working branch, and force-push changes to resolve merge conflicts.

LANGUAGE: bash
CODE:
git fetch origin
git rebase origin/<your-working-branch>
git push --force-with-lease origin <your-working-branch>
git fetch upstream
git rebase upstream/master
git status
git add <filename>
git rebase --continue
git push --force-with-lease origin <your-working-branch>

----------------------------------------

TITLE: Azure Login and Subscription Setup
DESCRIPTION: Commands to login to Azure and set the active subscription

LANGUAGE: bash
CODE:
az login
az account list
SUBSCRIPTION_ID=<Insert Subscription ID>
az account set --subscription $SUBSCRIPTION_ID

----------------------------------------

TITLE: Loading Spinnaker 1.25.1 Changelog via GitHub Gist
DESCRIPTION: Script tag to embed the changelog content for version 1.25.1 from a GitHub gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Changelog Scripts for Spinnaker 1.18
DESCRIPTION: A series of script tags that load changelog content from GitHub gists for different Spinnaker 1.18.x releases. Each script loads a markdown file containing release notes for a specific version.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.10.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.9.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.20.1 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.1 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md"></script>

----------------------------------------

TITLE: Querying Spinnaker Component Versions using Halyard
DESCRIPTION: Command to display the commit hash and version tag for each Spinnaker subcomponent within a specific version using the Halyard CLI tool.

LANGUAGE: bash
CODE:
hal version bom <version>

----------------------------------------

TITLE: Creating Orca Schema and Users in MySQL
DESCRIPTION: SQL commands to create the Orca schema and set up service and migration users with appropriate permissions.

LANGUAGE: sql
CODE:
CREATE SCHEMA `orca` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

GRANT 
  SELECT, INSERT, UPDATE, DELETE, CREATE, EXECUTE, SHOW VIEW
ON `orca`.* 
TO 'orca_service'@'%';

GRANT 
  SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, LOCK TABLES, EXECUTE, SHOW VIEW 
ON `orca`.* 
TO 'orca_migrate'@'%';

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.0 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Killing Background Jobs in Fish Shell
DESCRIPTION: Fish shell function to kill all background jobs, useful for tearing down port-forwards.

LANGUAGE: bash
CODE:
function kill-background
  jobs | tail -n"+1" | awk -F\  '{print $2}' | xargs -I"{}" kill "{}"
end

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet demonstrates how to embed GitHub Gist content containing changelog information for different Spinnaker releases. Each script tag references a specific file within the same Gist, corresponding to a particular version.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md"></script>

----------------------------------------

TITLE: Configuring Jekyll Front Matter for Documentation Page
DESCRIPTION: Jekyll front matter configuration block that defines the page layout and navigation settings for a Spinnaker documentation page. Uses single layout template and includes a guides navigation sidebar.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "User How-Tos"
sidebar:
  nav: guides
---

----------------------------------------

TITLE: Configuring Kubernetes ReplicaSet with Traffic Management
DESCRIPTION: ReplicaSet manifest with Spinnaker traffic management annotations for load balancer association.

LANGUAGE: yaml
CODE:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: frontend
  labels:
    tier: frontend
  annotations:
    traffic.spinnaker.io/load-balancers: '["service my-service"]'
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: gcr.io/google_samples/gb-frontend:v3

----------------------------------------

TITLE: Enabling GCS Artifact Support
DESCRIPTION: Command to enable GCS artifact support in Spinnaker.

LANGUAGE: bash
CODE:
hal config artifact gcs enable

----------------------------------------

TITLE: Running Spinnaker Docs with Docker
DESCRIPTION: Commands to build and run the Spinnaker documentation website locally using Docker. Mounts the current directory and exposes port 4000 for local preview.

LANGUAGE: sh
CODE:
docker build --tag spinnaker/spinnaker.github.io-test .
docker run -it --rm --mount "type=bind,source=$(pwd),target=/code" \
    -p 4000:4000 spinnaker/spinnaker.github.io-test --incremental

----------------------------------------

TITLE: Exporting Properties for Custom JAR Template
DESCRIPTION: Example of exporting properties from a CI job to use with a custom JAR artifact template, including group, artifact, and version information.

LANGUAGE: sh
CODE:
group=test.group
artifact=test-artifact
version=123
messageFormat=custom-jar
customFormat=true

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for a specific Spinnaker version. It uses a script tag with a src attribute pointing to the Gist URL, including the file parameter to specify the exact markdown file to display.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.9.md"></script>

----------------------------------------

TITLE: Installing kubectl and Halyard
DESCRIPTION: Installs kubectl and Halyard on the host VM.

LANGUAGE: bash
CODE:
KUBECTL_LATEST=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)

curl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_LATEST/bin/linux/amd64/kubectl

chmod +x kubectl

sudo mv kubectl /usr/local/bin/kubectl

curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh

sudo bash InstallHalyard.sh

. ~/.bashrc

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.23.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.23.0. The Gist is loaded using a script tag with a specific URL.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md"></script>

----------------------------------------

TITLE: Enabling Kubernetes Provider in Spinnaker using Halyard
DESCRIPTION: This command enables the Kubernetes provider in Spinnaker using Halyard. This is necessary to use Kubernetes accounts and deploy to Kubernetes clusters.

LANGUAGE: bash
CODE:
hal config provider kubernetes enable

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.20.1 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.1 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md"></script>

----------------------------------------

TITLE: YAML Configuration for Spinnaker Services and Branches
DESCRIPTION: YAML front matter defining the core and supporting services of Spinnaker, along with the branches to monitor for build status.

LANGUAGE: yaml
CODE:
services:
  core:
  - clouddriver
  - deck
  # - deck-kayenta
  - echo
  - fiat
  - front50
  - gate
  - igor
  - kayenta
  - kork
  - orca
  - rosco
  - spinnaker-monitoring
  supporting:
  - halyard
  - keel
  - keiko
  - spin
  - spinnaker.github.io
  - spinnaker-gradle-project
  - swabbie

branches:
- master
- release-1.26.x
- release-1.25.x
- release-1.24.x

----------------------------------------

TITLE: Kubernetes Container Manifest Example
DESCRIPTION: YAML configuration showing a basic Kubernetes container specification that can be used in a manifest deployment.

LANGUAGE: yaml
CODE:
# ... rest of manifest
  containers:
  - name: my-container
    image: gcr.io/my-project/my-image
# rest of manifest ...

----------------------------------------

TITLE: Embedding GitHub Gist Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.14.6. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/3eeb3e0cd59152a17be97ad0c808d225.js"/>

----------------------------------------

TITLE: Configuring OAuth 2.0 Redirect URI in YAML
DESCRIPTION: This snippet shows how to manually set the redirect URI for OAuth 2.0 authentication in Spinnaker's configuration YAML file. It's useful when the auto-generated URI is incorrect due to network components like SSL-terminating load balancers.

LANGUAGE: yaml
CODE:
security:
  authn:
    oauth2:
      client:
        preEstablishedRedirectUri: https://my-real-gate-address.com:8084/login

----------------------------------------

TITLE: Adding DC/OS Cluster Configuration
DESCRIPTION: Command to add a DC/OS cluster configuration to Spinnaker using Halyard. Includes cluster URL and TLS verification settings.

LANGUAGE: bash
CODE:
hal config provider dcos cluster add my-dcos-cluster \
    --dcos-url $CLUSTER_URL \
    --skip-tls-verify

----------------------------------------

TITLE: Specifying Log Location for LocalDebian Deployments Markdown
DESCRIPTION: This snippet indicates the default log location for Spinnaker in LocalDebian deployments using inline code formatting in markdown.

LANGUAGE: markdown
CODE:
`/var/log/spinnaker`

----------------------------------------

TITLE: Configuring GCS Storage for Front50
DESCRIPTION: YAML configuration for enabling Google Cloud Storage as the storage backend in spinnaker-local.yml

LANGUAGE: yaml
CODE:
services:
  front50:
    storage_bucket: YOUR_GCS_BUCKET_NAME
    bucket_root: YOUR_GCS_FOLDER_NAME
    gcs:
      enabled: true
      project: SEE NOTE
      jsonPath: SEE NOTE

----------------------------------------

TITLE: Applying Halyard Configuration Changes for GitHub Artifacts in Spinnaker
DESCRIPTION: After making artifact configuration changes using Halyard, this command applies the changes to the Spinnaker deployment.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing changelog information for different versions of Spinnaker 1.17. It uses script tags to load and display the content from specific files within a Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.2 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.2 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>

----------------------------------------

TITLE: Configuring Jekyll Page Layout for Spinnaker Setup How-Tos
DESCRIPTION: This snippet defines the Jekyll front matter for a documentation page about Spinnaker setup how-tos. It specifies the layout, title, and sidebar navigation configuration.

LANGUAGE: liquid
CODE:
---
layout: single
title:  "Setup How-Tos"
sidebar:
  nav: guides
---

----------------------------------------

TITLE: Configuring kubectl and downloading GCS credentials
DESCRIPTION: Configures kubectl for the GKE cluster and downloads the GCS service account credentials.

LANGUAGE: bash
CODE:
GKE_CLUSTER_NAME={YOUR_GKE_CLUSTER_NAME}
GKE_CLUSTER_ZONE={YOUR_GKE_CLUSTER_ZONE}

gcloud config set container/use_client_certificate true

gcloud container clusters get-credentials $GKE_CLUSTER_NAME \
    --zone=$GKE_CLUSTER_ZONE

GCS_SA=gcs-service-account
GCS_SA_DEST=~/.gcp/gcp.json

mkdir -p $(dirname $GCS_SA_DEST)

GCS_SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$GCS_SA" \
    --format='value(email)')

gcloud iam service-accounts keys create $GCS_SA_DEST \
    --iam-account $GCS_SA_EMAIL

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.11.8. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Configuring Custom Template Path
DESCRIPTION: Halyard command to specify a custom Jinja template path for Pub/Sub message translation.

LANGUAGE: bash
CODE:
hal config pubsub google subscription edit my-gcs-subscription \
  --template-path /path/to/jinja/template

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.8 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.8 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.8.md"></script>

----------------------------------------

TITLE: Creating MailChimp Newsletter Signup Form in HTML
DESCRIPTION: This HTML snippet creates a newsletter signup form integrated with MailChimp. It includes an email input field, a hidden field for bot prevention, and a submit button.

LANGUAGE: HTML
CODE:
<div class="mc-field-group">
<form action="https://spinnaker.us3.list-manage.com/subscribe/post?u=337682949220da87810dfa7a7&amp;id=aae9b6cff0" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="wj-contact-form validate" target="_blank" novalidate>
	<input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL" placeholder="foo@foo.fo">
<!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_337682949220da87810dfa7a7_aae9b6cff0" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe Now" name="subscribe" id="mc-embedded-subscribe" class="heart"></div>
</form>
</div>

----------------------------------------

TITLE: Configuring Pipeline Stage for Kubernetes Manifest Deployment
DESCRIPTION: JSON configuration for a Spinnaker pipeline stage that deploys a Kubernetes manifest. Defines the stage name, type, target account, and cloud provider.

LANGUAGE: json
CODE:
{
  "name": "Deploy my manifest",   // human-readable name
  "type": "deployManifest",       // tells orchestration engine what to run
  "account": "nudge",             // account (k8s cluster) to deploy to
  "cloudProvider": "kubernetes",
  "source": "text",
  "manifest": {
                                  // manifest contents go here
  }
}

----------------------------------------

TITLE: Complete Spinnaker Delivery Config Structure
DESCRIPTION: This snippet provides an overview of the complete structure of a Spinnaker delivery config file (spinnaker.yml). It includes sections for name, application, artifacts, and multiple environments with their respective configurations.

LANGUAGE: yaml
CODE:
name: sample-delivery-config
application: keeldemo
artifacts:
- name: keeldemo 
  type: deb
  reference: my-artifact
  vmOptions: # details omitted for brevity
environments:
- name: testing
  notifications: # omitted for brevity
  constraints: []
  resources: # details omitted for brevity
  - kind: ec2/cluster@v1
    # details
  - kind: ec2/classic-load-balancer@v1
    # details
- name: staging
  notifications: # omitted for brevity
  constraints: 
  - type: depends-on
    environment: testing
  resources: # details omitted for brevity
  - kind: ec2/cluster@v1
    # details
  - kind: ec2/classic-load-balancer@v1
    # details 

----------------------------------------

TITLE: Complete Spinnaker Delivery Config Structure
DESCRIPTION: This snippet provides an overview of the complete structure of a Spinnaker delivery config file (spinnaker.yml). It includes sections for name, application, artifacts, and multiple environments with their respective configurations.

LANGUAGE: yaml
CODE:
name: sample-delivery-config
application: keeldemo
artifacts:
- name: keeldemo 
  type: deb
  reference: my-artifact
  vmOptions: # details omitted for brevity
environments:
- name: testing
  notifications: # omitted for brevity
  constraints: []
  resources: # details omitted for brevity
  - kind: ec2/cluster@v1
    # details
  - kind: ec2/classic-load-balancer@v1
    # details
- name: staging
  notifications: # omitted for brevity
  constraints: 
  - type: depends-on
    environment: testing
  resources: # details omitted for brevity
  - kind: ec2/cluster@v1
    # details
  - kind: ec2/classic-load-balancer@v1
    # details 

----------------------------------------

TITLE: Enabling DC/OS Provider in Spinnaker
DESCRIPTION: Command to enable the DC/OS provider in Spinnaker configuration using Halyard

LANGUAGE: bash
CODE:
hal config provider dcos enable

----------------------------------------

TITLE: Enabling Kubernetes Provider
DESCRIPTION: Halyard command to enable the Kubernetes provider in Spinnaker.

LANGUAGE: bash
CODE:
hal config provider kubernetes enable

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.16.7 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.16.7. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/170d178708b56e83b0289452cb83f347.js"/>

----------------------------------------

TITLE: Setting JVM Proxy Configuration in Halyard
DESCRIPTION: Configuration for running Halyard behind a proxy by setting JVM proxy options.

LANGUAGE: bash
CODE:
DEFAULT_JVM_OPTS=-Dhttp.proxyHost=my.proxy.domain.com -Dhttp.proxyPort=3128

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.15.3.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/bed366b82e09498dbb536c098ac11f14.js"/>

----------------------------------------

TITLE: Embedding YouTube Video in HTML
DESCRIPTION: This snippet embeds a YouTube video related to the Spinnaker Product Box Design Workshop using an iframe.

LANGUAGE: html
CODE:
<iframe width="560" height="315" src="https://www.youtube.com/embed/dwdVwE52KkU" frameborder="0" allowfullscreen></iframe>

----------------------------------------

TITLE: Loading Spinnaker 1.19.1 Changelog from GitHub Gist
DESCRIPTION: Embeds a JavaScript file from GitHub Gist to display the changelog for Spinnaker version 1.19.1.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>

----------------------------------------

TITLE: Configuring Launch Template Features in Window Settings
DESCRIPTION: JavaScript configuration for enabling launch template features in browser window settings.

LANGUAGE: javascript
CODE:
window.spinnakerSettings.providers.aws.serverGroups.enableLaunchTemplates = true;

window.spinnakerSettings.providers.aws.serverGroups.enableIPv6 = true;
window.spinnakerSettings.providers.aws.serverGroups.enableIMDSv2 = true;
window.spinnakerSettings.providers.aws.serverGroups.enableCpuCredits = true;

----------------------------------------

TITLE: Webhook Payload with Parameters
DESCRIPTION: Example of passing pipeline parameters through a webhook payload

LANGUAGE: json
CODE:
{
  "parameters": {
    "stack": "prod"
  }
}

----------------------------------------

TITLE: Loading Spinnaker 1.22.3 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.22.3 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.3.md"></script>

----------------------------------------

TITLE: Retrieving a Single Spinnaker Pipeline with Spin CLI in Bash
DESCRIPTION: Demonstrates how to retrieve a specific pipeline for a given application using the 'spin pipeline get' command.

LANGUAGE: bash
CODE:
spin pipeline get --name my-pipeline --application my-app
{
  "application": "my-app"
  "stages": [...]
}

----------------------------------------

TITLE: Exporting Properties for Custom Artifact Template
DESCRIPTION: This snippet demonstrates how to export properties from a CI job to use a custom artifact template in Spinnaker.

LANGUAGE: sh
CODE:
messageFormat=<name of template>
customFormat=true

----------------------------------------

TITLE: Creating Azure Resource Group
DESCRIPTION: Commands to list available locations and create a resource group

LANGUAGE: bash
CODE:
az account list-locations --query [].name
RESOURCE_GROUP="Spinnaker"
az group create --name $RESOURCE_GROUP --location <Insert Location>

----------------------------------------

TITLE: Configuring Environment Notifications in Spinnaker Delivery Config
DESCRIPTION: This snippet shows how to add notifications to an environment in a Spinnaker delivery config. It includes the notification type, address, and frequency.

LANGUAGE: yaml
CODE:
environments:
- name: testing
  resources: # omitted for brevity
  notifications:
  - type: slack
    address: "#managed-delivery"
    frequency: verbose

----------------------------------------

TITLE: Previewing Pipeline Template with Spin CLI
DESCRIPTION: Shows how to use the spin pipeline-templates plan command to generate a preview of a hydrated pipeline configuration. The command outputs JSON containing the evaluated pipeline configuration based on template values.

LANGUAGE: bash
CODE:
spin pipeline-templates plan --file <path to pipeline config>

{
  "application": "my-spinnaker-app"
  "stages": [...] # Evaluated pipeline config based on template config values.
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This HTML snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.16.4. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/69c7292b0c93d410602cd538839cac57.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing changelog information for Spinnaker version 1.19.2 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>

----------------------------------------

TITLE: Embedding Spinnaker 1.26.3 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag embeds the changelog for Spinnaker version 1.26.3 from a GitHub Gist. It references a specific file within the Gist containing the changelog information.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.3.md"></script>

----------------------------------------

TITLE: Verifying Google Cloud SDK Installation
DESCRIPTION: Command to verify gcloud CLI installation and authentication status

LANGUAGE: bash
CODE:
gcloud info

----------------------------------------

TITLE: Loading Spinnaker 1.23.0 Changelog Gist
DESCRIPTION: Embeds the changelog content for Spinnaker version 1.23.0 from a GitHub gist using JavaScript.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md"></script>

----------------------------------------

TITLE: Defining Cloud Foundry Route Format in YAML
DESCRIPTION: Example format for specifying a Cloud Foundry route, which includes host, domain, port, and path components.

LANGUAGE: yaml
CODE:
<host>.<domain>:<port>/<path>

----------------------------------------

TITLE: Loading GitHub Gist Changelog Scripts for Spinnaker 1.19.x
DESCRIPTION: HTML script tags that load GitHub Gist content containing changelog information for Spinnaker versions 1.19.0, 1.19.1, and 1.19.2

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for a specific Spinnaker version. It uses a script tag with the Gist URL and specifies the file to display.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.7.md"></script>

----------------------------------------

TITLE: Basic Webhook Trigger using cURL
DESCRIPTION: Example of triggering a Spinnaker webhook endpoint using cURL with an empty JSON payload

LANGUAGE: bash
CODE:
curl $ENDPOINT -X POST -H "content-type: application/json" -d "{ }"

----------------------------------------

TITLE: Example Docker Artifact Event Structure in Keel
DESCRIPTION: Shows the structure of a Docker artifact published event as tracked by Keel, including metadata fields like buildNumber and commitId used for querying CI providers.

LANGUAGE: kotlin
CODE:
Received artifact published event: ArtifactPublishedEvent(artifacts=[PublishedArtifact(name=mce/agent, type=DOCKER,
  reference=dockerRegistry:v2:testregistry:mce/agent, version=h2012.2626f5f, customKind=false, location=testregistry, artifactAccount=null, provenance=null, uuid=null, metadata={date=1607111907158, registry=testregistry, fullname=mce/agent, tag=tag, commitId=2626f5f, buildNumber=2012, branch=tags/v1.2.0^0}

----------------------------------------

TITLE: Jekyll Page Front Matter Configuration
DESCRIPTION: Jekyll front matter configuration for the artifacts documentation page, defining the layout, title and sidebar navigation.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Configure Artifacts"
sidebar:
  nav: setup
---

----------------------------------------

TITLE: Creating Basic Auth Credentials File for HTTP Artifacts in Bash
DESCRIPTION: This snippet demonstrates how to create a file containing basic auth credentials for HTTP artifacts. It uses environment variables for the username and password.

LANGUAGE: bash
CODE:
echo ${USERNAME}:${PASSWORD} > $USERNAME_PASSWORD_FILE

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.15.2 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.15.2. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e72cc8015d544738d07d57a183cb5404.js"/>

----------------------------------------

TITLE: Legacy IAM Role Trust Policy Configuration
DESCRIPTION: JSON configuration for IAM role trust policy allowing ECS and Application Auto Scaling to assume the role.

LANGUAGE: json
CODE:
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
                "Service": [
                  "ecs.amazonaws.com",
                  "application-autoscaling.amazonaws.com"
                ]
      },
      "Action": "sts:AssumeRole"
    }
  ]
}

----------------------------------------

TITLE: Loading Spinnaker 1.23.1 Changelog Gist
DESCRIPTION: Embeds the changelog content for Spinnaker version 1.23.1 from a GitHub gist using JavaScript.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md"></script>

----------------------------------------

TITLE: Configuring Jekyll Front Matter for Spinnaker Release Preview
DESCRIPTION: Sets up the Jekyll front matter for the Spinnaker release preview page, including layout, title, and sidebar navigation configuration.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Next Release Preview"
sidebar:
  nav: community
---

----------------------------------------

TITLE: Embedding Spinnaker 1.18 Changelog Gists in HTML
DESCRIPTION: This snippet demonstrates how to embed GitHub Gist content containing Spinnaker changelog information using HTML script tags. Each script tag loads a specific version's changelog from 1.18.12 down to 1.18.0.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.12.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.11.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.10.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.9.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing the changelog for Spinnaker version 1.25.0 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md"></script>

----------------------------------------

TITLE: Querying Pub/Sub Triggered Pipelines using Bash and cURL
DESCRIPTION: Bash script demonstrating how to query for pipeline executions triggered by a specific Pub/Sub message. It uses cURL to make an API call to Gate with application name, trigger type, and base64-encoded trigger payload.

LANGUAGE: bash
CODE:
APPLICATION=<application-name>  # This will narrow down results to only contain pipeline executions within a given application. You may supply '*' here to search across all applications.
TRIGGER_TYPE=pubsub  # This will narrow down results to only contain pipelines executions triggered by a Pub/Sub message
TRIGGER=$(echo '{ "id": "9c3036f6-3791-47eb-bb69-30983acb00be" }' | base64)  # This will narrow down results to only contain pipeline executions triggered with a payload that includes this key/value. We base64-encode this so that it can be passed as a query parameter to the API.

# Example call to Gate
curl localhost:8084/applications/$APPLICATION/executions/search?triggerTypes=$TRIGGER_TYPE&trigger=$TRIGGER

----------------------------------------

TITLE: Embedding GitHub Gist Changelogs for Spinnaker v1.21 in HTML
DESCRIPTION: This code snippet embeds multiple GitHub Gist snippets containing changelog information for Spinnaker version 1.21 patch releases. Each script tag loads a specific version's changelog from a shared Gist file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.0.md"></script>

----------------------------------------

TITLE: Enabling Pipeline Templates UI Feature Flag
DESCRIPTION: Halyard command to enable the managed pipeline templates v2 UI feature in Spinnaker.

LANGUAGE: shell
CODE:
hal config features edit --managed-pipeline-templates-v2-ui true

----------------------------------------

TITLE: Deleting Spinnaker Projects
DESCRIPTION: Demonstrates how to delete a project using the delete command with the project name.

LANGUAGE: bash
CODE:
spin project delete --name <project name>

Project deleted

----------------------------------------

TITLE: Saving Pipeline Template using Spin CLI in Bash
DESCRIPTION: This command saves the created pipeline template using the Spin CLI. It takes a file containing the template JSON as an input.

LANGUAGE: bash
CODE:
spin pipeline-templates save --file my_template.txt

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Version 1.26.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub gist containing the changelog for Spinnaker version 1.26.0 using a script tag. The gist is referenced by its unique identifier and specifies the file to be displayed.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.15.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.15.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/046111a35f700d963893ea0067b7f4b9.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.5 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.5 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing the changelog for Spinnaker version 1.25.3 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md"></script>

----------------------------------------

TITLE: Defining Docker Repositories for DockerHub
DESCRIPTION: Specifies the Docker repositories to be indexed and deployed from DockerHub, including both public and private images.

LANGUAGE: bash
CODE:
REPOSITORIES=library/nginx yourusername/app

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.16.2. The gist ID is e3c8e375fdee0d7d1bd63a8fd9777255.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e3c8e375fdee0d7d1bd63a8fd9777255.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.9 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.9 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.9.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog v1.25.1 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.1 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md"></script>

----------------------------------------

TITLE: Example JSON Response for Resource Status Query
DESCRIPTION: This snippet shows an example JSON response from Spinnaker's API when querying a resource's status. In this case, the status is 'HAPPY', indicating that the resource's actual state matches its desired state.

LANGUAGE: json
CODE:
{ "status": "HAPPY" }

----------------------------------------

TITLE: Configure Provider Example
DESCRIPTION: Example of configuring a cloud provider account

LANGUAGE: bash
CODE:
hal config provider aws account add my-aws-account \
    --account-id 123456789012 \
    --assume-role role/spinnaker-managed \
    --regions us-east-1,us-west-2

----------------------------------------

TITLE: Configuring Git Repo Artifact with Sub-path Specification in Spinnaker
DESCRIPTION: This configuration demonstrates how to set up a Git Repo artifact with a specific sub-path within the repository, allowing for targeted file retrieval.

LANGUAGE: json
CODE:
{
    "type": "git/repo",
    "reference": "https://github.com/spinnaker/spinnaker.github.io",
    "version": "feat-123",
    "metadata" : {
        "subPath": "reference/artifacts/types"
    }
}

----------------------------------------

TITLE: Configuring Hidden Stages in Spinnaker Deck
DESCRIPTION: Configuration snippet showing how to hide specific stages like Gremlin and Travis from appearing in Spinnaker's UI. This setting is applied through Deck's custom profile in settings-local.js file.

LANGUAGE: javascript
CODE:
window.spinnakerSettings.hiddenStages = ['gremlin', 'travis'];

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker v1.14.5 in HTML
DESCRIPTION: This HTML code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.14.5. The Gist is loaded using a script tag with the source URL pointing to the specific Gist file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/2f1dfa347f42a06a9ad1cece024dd020.js"/>

----------------------------------------

TITLE: Configuring DC/OS User Account Authentication
DESCRIPTION: Command to add a Spinnaker account using DC/OS user account credentials with associated Docker registry

LANGUAGE: bash
CODE:
hal config provider dcos account add my-dcos-account \
    --cluster my-dcos-cluster \
    --docker-registries my-docker-registry \
    --uid $DCOS_USER \
    --password $DCOS_PASSWORD

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.5.1. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e884c78db5dead1a72c3f6b52c05738b.js"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.18.1 Release Notes from GitHub Gist
DESCRIPTION: Embeds a script to load Markdown content for Spinnaker version 1.18.1 release notes from a GitHub Gist. The script references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>

----------------------------------------

TITLE: Loading Spinnaker Changelog via GitHub Gist
DESCRIPTION: Script tag that embeds a GitHub Gist containing the changelog content for Spinnaker version 1.25.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md"></script>

----------------------------------------

TITLE: Upserting Tags via POST /tags API
DESCRIPTION: Curl command example for upserting tags using the POST /tags API endpoint in Spinnaker's Gate service.

LANGUAGE: bash
CODE:
curl -X "POST" "http://gate/tags?entityId=myservergroup-v001&entityType=servergroup&account=production&region=us-west-2&cloudProvider=aws&application=app" \
     -H "Content-Type: application/json" \
     -d $'[
  {
    "name": "spinnaker_ui_alert:autoscaling:ec2_instance_launch_error",
    "namespace": "my_namespace",
    "value": {
      "message": "Insufficient capacity. Launching EC2 instance failed.",
      "type": "alert"
    },
    "valueType": "object"
  }
]'

----------------------------------------

TITLE: Loading Spinnaker 1.19 Changelog Gists in HTML
DESCRIPTION: These HTML script tags load GitHub Gist content for each point release of Spinnaker version 1.19. Each script tag references a specific file within the same Gist, corresponding to a particular release version.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.14.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.13.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.12.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.11.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.10.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.9.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: QoS Flow Sequence Diagram
DESCRIPTION: Mermaid sequence diagram showing the interaction flow between QoS components including ExecutionPersister, BufferActuator, BufferPolicy, Promoter, and ExecutionLauncher.

LANGUAGE: mermaid
CODE:
sequenceDiagram
    participant ExecutionPersister
    participant ExecutionBufferActuator
    participant BufferPolicy
    participant ExecutionPromoter
    participant PromotionPolicy
    participant ExecutionLauncher
    ExecutionPersister->>ExecutionBufferActuator: BeforeExecutionPersistEvent
    ExecutionBufferActuator->>BufferPolicy: Execution
    loop Buffer Chain
        BufferPolicy->BufferPolicy: Evaluate if BUFFERED or ENQUEUED
    end
    alt ENQUEUED
        BufferPolicy->>ExecutionLauncher: Start Execution
    else BUFFERED
        Note over BufferPolicy: Set BUFFERED status
    end
    note right of ExecutionPromoter: Every n seconds
    ExecutionPromoter->>PromotionPolicy: All BUFFERED executions "candidates"
    loop PromoteCycle
        PromotionPolicy->PromotionPolicy: Reduce candidates
    end
    PromotionPolicy->>ExecutionPromoter: Final promotion candidates
    loop Promote Executions
        note over ExecutionPromoter: For each promoted execution
        ExecutionPromoter->>ExecutionPersister: Update Execution status to NOT_STARTED
        ExecutionPromoter->>ExecutionLauncher: Start Execution
    end

----------------------------------------

TITLE: Transforming GCR Notification to Spinnaker Artifact Format
DESCRIPTION: Jinja template that converts Google Container Registry (GCR) notification format into Spinnaker's artifact format. The template extracts image digest information and structures it as a docker image artifact.

LANGUAGE: json
CODE:
[
  {
    {% set split = digest.split("@") %}
    "reference": "{{ digest }}",
    "name": "{{ split[0] }}",
    "version": "{{ split[1] }}",
    "type": "docker/image"
  }
]

----------------------------------------

TITLE: Saving Pipeline Templates in Spinnaker
DESCRIPTION: Demonstrates how to create and update pipeline templates using the save command with a JSON file input.

LANGUAGE: bash
CODE:
$ spin pipeline-templates save --file <path to pipeline json>

Pipeline template save succeeded

----------------------------------------

TITLE: Configuring Pipeline Cleanup Settings in Orca
DESCRIPTION: Settings for managing pipeline execution history and cleanup in the Orca service. Controls the retention of old pipeline executions and task history.

LANGUAGE: yaml
CODE:
pollers:
  oldPipelineCleanup:
    enabled: true                  # This enables old pipeline execution cleanup (default: false)
    intervalMs: 3600000            # How many milliseconds between pipeline cleanup runs (default: 1hr or 3600000)
    thresholdDays: 30              # How old a pipeline execution must be to be deleted (default: 30)
    minimumPipelineExecutions: 5   # How many executions to keep around (default: 5)

tasks:
  daysOfExecutionHistory: 180      # How many days to keep old task executions around.

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: Script tag to embed a GitHub Gist containing the changelog details for Spinnaker version 1.14.4 release.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e6e904fe6533b188d40fb82cad900ef0.js"/>

----------------------------------------

TITLE: Loading Spinnaker Changelog Gists with HTML Scripts
DESCRIPTION: Script tags that load changelog content from GitHub gists for different versions of Spinnaker 1.17. Each script references a specific version's changelog markdown file from the spinnaker-release repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.10.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.9.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: A series of script tags that load GitHub gist content containing changelog information for different Spinnaker 1.24.x releases. Each script references a specific markdown file within gist ID 25abcd046795c6f34bb2d8d4977f0415.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md"></script>

----------------------------------------

TITLE: Setting Azure Tenant ID in Gate Service Settings
DESCRIPTION: YAML configuration for setting the Azure Tenant ID as an environment variable in Spinnaker's Gate service settings.

LANGUAGE: yaml
CODE:
env:
  azureTenantId: (your tenant id)

----------------------------------------

TITLE: Custom Jinja Template for JAR Artifact
DESCRIPTION: This Jinja template shows how to create a custom template for extracting JAR artifact information from CI build properties.

LANGUAGE: jinja2
CODE:
  {
    "reference": "{{ properties.group }}-{{ properties.artifact }}-{{ properties.version }}",
    "name": "{{ properties.artifact }}-{{ properties.version }}",
    "version": "{{ properties.version }}",
    "type": "maven/file"
  }

----------------------------------------

TITLE: Embedding GitHub Gist Changelog Scripts
DESCRIPTION: HTML script tags that embed GitHub gist content containing changelog information for different Spinnaker 1.17.x versions. The gists are loaded from the spinnaker-release repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.23.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.23.0 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md"></script>

----------------------------------------

TITLE: Deleting Tags via DELETE /tags API
DESCRIPTION: Curl command example for deleting tags using the DELETE /tags/:id/:tagName API endpoint in Spinnaker's Gate service.

LANGUAGE: bash
CODE:
curl -X "DELETE" "http://gate/tags/myservergroup-v001:100000000001:us-west-2/spinnaker_ui_alert:autoscaling:ec2_instance_launch_error" \
     -H "Content-Type: application/json" \
     -d $'{}'

----------------------------------------

TITLE: Advanced Docker Artifact Configuration with Custom Regex in YAML
DESCRIPTION: This snippet shows how to configure a docker artifact with a custom regex for capturing version information from tags. It uses a capture group to extract the version number and specifies an increasing-tag strategy.

LANGUAGE: yaml
CODE:
artifacts:
- name: emburns/spin-titus-demo
  type: docker
  reference: my-docker-artifact # optional human-readable reference to be used elsewhere in the config, defaults to artifact name
  tagVersionStrategy: increasing-tag
  captureGroupRegex: ^master-h(\d+).*$

----------------------------------------

TITLE: Exporting Properties for Custom Template Usage
DESCRIPTION: Example of exporting properties from a CI job to use a custom-defined artifact template in Spinnaker.

LANGUAGE: sh
CODE:
messageFormat=<name of template>
customFormat=true

----------------------------------------

TITLE: Configuring a Basic Docker Artifact in YAML for Spinnaker
DESCRIPTION: This snippet demonstrates the basic structure for defining a docker artifact in a Spinnaker delivery config. It includes the required fields and shows how to specify a tag version strategy.

LANGUAGE: yaml
CODE:
artifacts:
- name: emburns/spin-titus-demo
  type: docker
  reference: my-docker-artifact # optional human-readable reference to be used elsewhere in the config, defaults to artifact name
  tagVersionStrategy: branch-job-commit-by-job

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Release Notes
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog for Spinnaker version 1.8.3

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/ce8fff410c1cc1ac0ad6fba074b5e70c.js"/>

----------------------------------------

TITLE: Configuring Halyard for Oracle Cloud OAuth 2.0 in YAML
DESCRIPTION: This YAML configuration sets up OAuth 2.0 authentication for Spinnaker using Oracle Cloud. It includes settings for the client ID, client secret, access token URI, user authorization URI, scope, and user info mapping.

LANGUAGE: yaml
CODE:
security:
  authn:
    oauth2:
      enabled: true
      client:
        clientId: # client ID from above
        clientSecret: # client secret from above
        accessTokenUri: https://idcs-${idcsTenantId}.identity.oraclecloud.com/oauth2/v1/token
        userAuthorizationUri: https://idcs-${idcsTenantId}.identity.oraclecloud.com/oauth2/v1/authorize
        scope: openid urn:opc:idm:__myscopes__
      resource:
        userInfoUri: https://idcs-${idcsTenantId}.identity.oraclecloud.com/oauth2/v1/userinfo
      # You may want to restrict access to your Spinnaker by adding
      # userInfoRequirements to further restrict access beyond simply requiring
      # that users have a valid account.
      userInfoRequirements: {}
      userInfoMapping:
        email: ''
        firstName: given_name
        lastName: family_name
        username: preferred_username
      provider: ORACLE

----------------------------------------

TITLE: Custom Jinja Template for JAR Artifact Extraction
DESCRIPTION: Example of a custom Jinja template that extracts information to create a Maven artifact representation for a JAR file.

LANGUAGE: jinja
CODE:
  {
    "reference": "{{ properties.group }}-{{ properties.artifact }}-{{ properties.version }}",
    "name": "{{ properties.artifact }}-{{ properties.version }}",
    "version": "{{ properties.version }}",
    "type": "maven/file"
  }

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist scripts to display changelog information for Spinnaker version 1.17. It includes separate scripts for versions 1.17.4, 1.17.3, 1.17.2, 1.17.1, and 1.17.0.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.23.0 Changelog
DESCRIPTION: Script tag to embed GitHub gist containing release notes for Spinnaker version 1.23.0

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md"></script>

----------------------------------------

TITLE: Launching Multipass VM
DESCRIPTION: Command to launch a Multipass VM with specified resources for running Spinnaker

LANGUAGE: bash
CODE:
multipass launch -c 2 -m 10G -d 30G

----------------------------------------

TITLE: Exporting Properties for Spinnaker-supplied JAR Template
DESCRIPTION: This snippet shows how to export properties from a CI job to use Spinnaker's built-in JAR template for artifact extraction.

LANGUAGE: sh
CODE:
messageFormat=JAR

----------------------------------------

TITLE: Creating a Google Cloud Pub/Sub Subscription
DESCRIPTION: Create a pull subscription for the Pub/Sub topic. Requires specifying a subscription name and the topic name.

LANGUAGE: bash
CODE:
$ GCP_SUB_NAME=<Insert Subscription Name>
$ gcloud beta pubsub subscriptions create $GCP_SUB_NAME --topic $TOPIC

----------------------------------------

TITLE: Retrieving Pipeline JSON using Spin CLI in Bash
DESCRIPTION: This command uses the Spin CLI to get the JSON representation of an existing pipeline in Spinnaker. It requires the pipeline name and application name as parameters.

LANGUAGE: bash
CODE:
spin pipeline get --name <pipelineName> --application <appName>

----------------------------------------

TITLE: Zombie Execution Log Example
DESCRIPTION: Example log output when a zombie execution is detected by Orca's monitoring system.

LANGUAGE: text
CODE:
Found zombie executionType=pipeline application=myapplication executionName=myexample executionId=01CS076X85RX6MWBTQ0VGBF8VX

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: A script tag that embeds a GitHub Gist containing the changelog details for Spinnaker version 1.7.7

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/8fa68517da00675a028dbd62c72d6748.js"/>

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker v1.17.0 Changelog
DESCRIPTION: HTML script tag that loads the changelog content for Spinnaker version 1.17.0 from a GitHub gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.22.0 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.22.0 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md"></script>

----------------------------------------

TITLE: Configuring Custom Pub/Sub Message Translation Template in Halyard
DESCRIPTION: Halyard command to specify a custom Jinja template for translating Pub/Sub message payloads into Spinnaker artifacts for non-GCR subscriptions.

LANGUAGE: bash
CODE:
hal config pubsub google subscription edit my-gcs-subscription \
  --template-path /path/to/jinja/template

----------------------------------------

TITLE: Kubernetes Container Manifest with SHA
DESCRIPTION: YAML configuration demonstrating how Spinnaker automatically injects the Docker image SHA into the manifest when triggered by a Docker registry webhook.

LANGUAGE: yaml
CODE:
# ... rest of manifest
  containers:
  - name: my-container
    image: gcr.io/my-project/my-image@:sha256:c81e41ef5e...
# rest of manifest ...

----------------------------------------

TITLE: Kubernetes Container Manifest with SHA
DESCRIPTION: YAML configuration demonstrating how Spinnaker automatically injects the Docker image SHA into the manifest when triggered by a Docker registry webhook.

LANGUAGE: yaml
CODE:
# ... rest of manifest
  containers:
  - name: my-container
    image: gcr.io/my-project/my-image@:sha256:c81e41ef5e...
# rest of manifest ...

----------------------------------------

TITLE: Kubernetes Container Manifest with SHA
DESCRIPTION: YAML configuration demonstrating how Spinnaker automatically injects the Docker image SHA into the manifest when triggered by a Docker registry webhook.

LANGUAGE: yaml
CODE:
# ... rest of manifest
  containers:
  - name: my-container
    image: gcr.io/my-project/my-image@:sha256:c81e41ef5e...
# rest of manifest ...

----------------------------------------

TITLE: Loading GitHub Gist for Spinnaker 1.16.1 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.16.1. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/21ff4522a9e46ba5f27c52f67da88dc9.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gists containing changelog information for different versions of Spinnaker 1.22. It uses the script tag to load external JavaScript files that render the changelog content.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md"></script>

----------------------------------------

TITLE: Updating Component Dependencies Version
DESCRIPTION: Gradle configuration to update component's Spinnaker dependencies version.

LANGUAGE: groovy
CODE:
spinnaker {
  dependenciesVersion = "0.34.0"
}

----------------------------------------

TITLE: Retrieving Single Spinnaker Project
DESCRIPTION: Demonstrates how to retrieve configuration details for a specific project using the get command.

LANGUAGE: bash
CODE:
spin project get <project name>
{
"config": {
 "applications": [...],
 "clusters": [...],
 "pipelineConfigs": [...]
  }
...
}

----------------------------------------

TITLE: Creating GCS Bucket for Artifact Storage in Bash
DESCRIPTION: Sets up environment variables and creates a Google Cloud Storage bucket to store artifacts using gsutil.

LANGUAGE: bash
CODE:
$ BUCKET_NAME=gs://<some_name> && PROJECT_ID=<project_id>
$ gcloud auth login
$ gsutil mb -p $PROJECT_ID $BUCKET_NAME

----------------------------------------

TITLE: Creating an Environment Pin in Spinnaker via API
DESCRIPTION: This snippet demonstrates how to create an environment pin using a POST request to the Spinnaker API. It includes the required JSON payload with targetEnvironment, reference, and version fields.

LANGUAGE: json
CODE:
{
  "targetEnvironment": "test",
  "reference" : "my-artifact",
  "version" : "master-h10.62bbbd6"
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.6.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.6.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/235774d2d17f3bd96d3ed6c446b065a4.js"></script>

----------------------------------------

TITLE: Webhook Payload with Artifacts
DESCRIPTION: Example of providing required artifacts in a webhook payload for pipeline execution

LANGUAGE: json
CODE:
{
  "artifacts": [
    {
      "type": "gcs/object",
      "name": "manifest.yml",
      "reference": "gs://lw-artifacts/manifest.yml"
    }
  ]
}

----------------------------------------

TITLE: Displaying spin application usage in Bash
DESCRIPTION: Shows the available commands and options for the spin application CLI tool. This includes commands for deleting, getting, listing, and saving applications, as well as global flags for configuration.

LANGUAGE: bash
CODE:
$ spin application

Usage:
   application [command]

Aliases:
  application, applications, app

Available Commands:
  delete      Delete the specified application
  get         Get the specified application
  list        List the all applications
  save        Save the provided application

Flags:
  -h, --help   help for application

Global Flags:
      --config string          path to config file (default $HOME/.spin/config)
      --gate-endpoint string   Gate (API server) endpoint (default http://localhost:8084)
  -k, --insecure               ignore certificate errors
      --no-color               disable color (default true)
      --output string          configure output formatting
  -q, --quiet                  squelch non-essential output

Use " application [command] --help" for more information about a command.

----------------------------------------

TITLE: Including GitHub Gist Script for Spinnaker Changelog HTML
DESCRIPTION: Script tag to embed an external GitHub gist containing the changelog details for Spinnaker version 1.15.7.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/8203c57d946e2fce8a79031716a9cb45.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.21.1 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist script containing the changelog for Spinnaker version 1.21.1. It uses a script tag to load the external JavaScript file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.1.md"></script>

----------------------------------------

TITLE: Gate SSL Configuration with Halyard
DESCRIPTION: Commands to configure SSL for Gate using Halyard with a Java keystore.

LANGUAGE: bash
CODE:
hal config security api ssl edit \
  --key-alias gate \
  --keystore ${KEYSTORE_PATH} \
  --keystore-password \
  --keystore-type jks \
  --truststore ${KEYSTORE_PATH} \
  --truststore-password \
  --truststore-type jks

hal config security api ssl enable

----------------------------------------

TITLE: Representing a Deployed Kubernetes Object Artifact in JSON
DESCRIPTION: JSON structure representing a deployed Kubernetes ConfigMap object. This artifact would be produced as output from a deploy stage.

LANGUAGE: json
CODE:
{
     "type": "kubernetes/configMap",
     "name": "frontend-configs",
     "location": "prod",
     "version": "v001"
}

----------------------------------------

TITLE: Getting Project Pipelines
DESCRIPTION: Shows how to retrieve pipeline configurations for a specific project using the get-pipelines command.

LANGUAGE: bash
CODE:
spin project get-pipelines <project name>

{
  "application": "my-app"
  "stages": [...]
}

----------------------------------------

TITLE: Configuring Spinnaker Deployment
DESCRIPTION: Commands to configure Spinnaker version and deploy it locally on Ubuntu

LANGUAGE: bash
CODE:
hal config version edit --version $SPINNAKER_VERSION
hal config deploy edit --type localdebian
sudo hal deploy apply
sudo systemctl daemon-reload

----------------------------------------

TITLE: Parameterizing Replica Count in Kubernetes Manifest
DESCRIPTION: Demonstrates how to parameterize non-string values like replica count in a Kubernetes manifest using type conversion functions. Uses the #toInt helper function to ensure proper type conversion.

LANGUAGE: yaml
CODE:
# ... other keys
spec:
  replicas: '${ #toInt( parameters.replicas ) }'
# other keys ...

----------------------------------------

TITLE: Creating a Deep Link to Manual Execution Dialog in Spinnaker
DESCRIPTION: Examples of how to create deep links to the Manual Execution dialog for a Spinnaker pipeline, including options to prepopulate parameter values.

LANGUAGE: markdown
CODE:
https://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=deploy-to-prod
https://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=12345

https://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=deploy-to-prod&region=us-central-1
https://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=12345&region=us-central-1

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog content for Spinnaker version 1.5.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d3d2ca93ebcc0fce546323723dee65ea.js"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.15.5 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.15.5. It uses a script tag to load and display the Gist content within the page.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/943c140906627dcc49c094f189901e28.js"/>

----------------------------------------

TITLE: Loading Spinnaker 1.20.4 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.4 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.4.md"></script>

----------------------------------------

TITLE: Failed Webhook Constraint Payload Example
DESCRIPTION: JSON payload example that would fail the webhook constraints due to missing required fields

LANGUAGE: json
CODE:
{
  "mykey": "myvalue",
  "x": ["1", "2", "3"]
}

----------------------------------------

TITLE: Resulting Bound Kubernetes Deployment Manifest in YAML
DESCRIPTION: Example of the final Kubernetes Deployment manifest after Spinnaker has bound the artifacts. The Docker image and ConfigMap references have been updated with the specific versions from the artifacts.

LANGUAGE: yaml
CODE:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: gcr.io/my-images/nginx@sha256:0cce25b9a55    # bound by spinnaker
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /opt/config
              name: my-config-map
      volumes:
        - configMap:
            name: configmap-v001                              # bound by spinnaker
          name: my-config-map

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.14.3. The gist ID referenced is d1c112bde46ec8d5de129b62e7617135.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d1c112bde46ec8d5de129b62e7617135.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.1 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.1 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>

----------------------------------------

TITLE: Configuring Admin Roles in Fiat for Spinnaker
DESCRIPTION: This YAML configuration snippet demonstrates how to define administrator roles in the Fiat config file for Spinnaker. It specifies which roles should be granted administrator privileges, removing READ/WRITE restrictions for users with these roles.

LANGUAGE: yaml
CODE:
fiat:
  admin:
    roles:
      - devops-admin

----------------------------------------

TITLE: Completing Spinnaker Installation
DESCRIPTION: Commands to finalize the Spinnaker installation process, including setting the deployment type and applying the configuration.

LANGUAGE: bash
CODE:
hal config deploy edit --type localdebian 
sudo hal deploy apply
sudo systemctl daemon-reload

----------------------------------------

TITLE: Installing Halyard on Ubuntu
DESCRIPTION: Commands to download and install the Halyard deployment tool for Spinnaker on Ubuntu

LANGUAGE: bash
CODE:
curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh
sudo bash InstallHalyard.sh -y

----------------------------------------

TITLE: Example Spinnaker repositories.json File
DESCRIPTION: Shows the structure of a repositories.json file used to register plugin repositories in Spinnaker.

LANGUAGE: json
CODE:
[
    {
      "id": "myPluginRepo",
      "url": "https://raw.githubusercontent.com/my-org/my-plugin-repo/master/plugins.json"
    }
]

----------------------------------------

TITLE: Loading GitHub Gist Script - HTML
DESCRIPTION: Embeds the Spinnaker v1.4.1 changelog content from GitHub Gist using an external script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/87ffcdd472d315d75877312de01bb05d.js"></script>

----------------------------------------

TITLE: Webhook Payload with Constraints Example
DESCRIPTION: JSON payload example that satisfies configured webhook constraints with specific key-value pairs

LANGUAGE: json
CODE:
{
  "mykey": "myvalue",
  "bing": "boooop",
  "x": ["1", "2", "3"]
}

----------------------------------------

TITLE: Configuring Default Instance Links in Spinnaker (JavaScript)
DESCRIPTION: This code snippet demonstrates how to configure default instance links in Spinnaker's settings.js file. It defines links for logs and Netflix configuration that will be available for all instances managed by Spinnaker.

LANGUAGE: javascript
CODE:
window.spinnakerSettings = {
  // ...
  defaultInstanceLinks: [
        {
            title: 'Logs',
            links: [
                { title: 'catalina.out', path: ':7000/Logs/catalina.out'},
                { title: 'Log File Archive', path: ':7000/Logs/all'},
                { title: 'Thread dumps', path: ':7000/Logs/threadDumps'},
                { title: 'Admin Proxy Info', path: ':7000/ProxyInfo'},
                { title: 'Admin Proxy Status', path: ':7000/ProxyStatus'},
                { title: 'GC Visualization', path: ':7000/GCVisualization'},
            ]
        },
        {
            title: 'Netflix Configuration',
            links: [
                { title: 'Properties Console', path: ':8088/props'},
                { title: 'Libraries Console', path: ':8088/libraries'},
                { title: 'Machine Readable Properties', path: ':8088/machineProperties'},
                { title: 'Manifest', path: '/manifest'},
            ]
        }
    ]
  // ...
};

----------------------------------------

TITLE: Configuring Default Instance Links in Spinnaker (JavaScript)
DESCRIPTION: This code snippet demonstrates how to configure default instance links in Spinnaker's settings.js file. It defines links for logs and Netflix configuration that will be available for all instances managed by Spinnaker.

LANGUAGE: javascript
CODE:
window.spinnakerSettings = {
  // ...
  defaultInstanceLinks: [
        {
            title: 'Logs',
            links: [
                { title: 'catalina.out', path: ':7000/Logs/catalina.out'},
                { title: 'Log File Archive', path: ':7000/Logs/all'},
                { title: 'Thread dumps', path: ':7000/Logs/threadDumps'},
                { title: 'Admin Proxy Info', path: ':7000/ProxyInfo'},
                { title: 'Admin Proxy Status', path: ':7000/ProxyStatus'},
                { title: 'GC Visualization', path: ':7000/GCVisualization'},
            ]
        },
        {
            title: 'Netflix Configuration',
            links: [
                { title: 'Properties Console', path: ':8088/props'},
                { title: 'Libraries Console', path: ':8088/libraries'},
                { title: 'Machine Readable Properties', path: ':8088/machineProperties'},
                { title: 'Manifest', path: '/manifest'},
            ]
        }
    ]
  // ...
};

----------------------------------------

TITLE: Embedding GitHub Gist Script
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the detailed changelog for Spinnaker version 1.14.2.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/a9c4858f87744addbca7ddc4976e454c.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: HTML script tags that embed GitHub gist content containing changelog information for different Spinnaker 1.19.x releases. Each script references a specific version's markdown file from the same gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Storing Pub/Sub Account Configuration in Vault using JSON
DESCRIPTION: This snippet shows how to format a Google Pub/Sub account configuration as JSON for storage in HashiCorp Vault. It includes subscription details and JSON key path.

LANGUAGE: json
CODE:
{
   "pubsub": {
      "enabled": true,
      "google": {
         "enabled": true,
         "pubsubType": "GOOGLE",
         "subscriptions": [
            {
               "name": "my-gcs",
               "project": "My-Project",
               "subscriptionName": "my-gcs-subscription",
               "jsonPath": "/home/spinnaker/.hal/default/staging/dependencies/my-gce-account.json",
               "ackDeadlineSeconds": 10,
               "messageFormat": "GCS"
            }
         ],
         "publishers": []
      }
   }
}

----------------------------------------

TITLE: Cleaning Up Orphaned Services During HA Deployment
DESCRIPTION: This command applies the Halyard configuration and includes a flag to delete orphaned services, which is useful when transitioning to or from an HA setup.

LANGUAGE: bash
CODE:
hal deploy apply --delete-orphaned-services

----------------------------------------

TITLE: Configuring Spinnaker Gate Service for External Access
DESCRIPTION: Kubernetes commands to edit the Spinnaker Gate service to use NodePort and retrieve the assigned port number.

LANGUAGE: bash
CODE:
kubectl edit svc spin-gate -n spinnaker --context $STAGING_CONTEXT

kubectl get svc spin-gate -n spinnaker --context $STAGING_CONTEXT

----------------------------------------

TITLE: IAM Trust Relationship Policy
DESCRIPTION: Trust relationship policy allowing Spinnaker auth role to assume the CodeBuild role.

LANGUAGE: json
CODE:
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "AWS": <Your Spinnaker Auth Role>
      },
      "Action": "sts:AssumeRole"
    }
  ]
}

----------------------------------------

TITLE: Enabling Google Cloud Pub/Sub in Spinnaker
DESCRIPTION: Enable Google Cloud Pub/Sub support in Spinnaker using Halyard. This allows Spinnaker to receive events from Pub/Sub.

LANGUAGE: bash
CODE:
$ hal config pubsub google enable

----------------------------------------

TITLE: Loading Spinnaker 1.23.2 Changelog Gist
DESCRIPTION: Embeds the changelog content for Spinnaker version 1.23.2 from a GitHub gist using JavaScript.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that loads a GitHub Gist containing the changelog content for Spinnaker version 1.8.5.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/19a850b9081d0fd00a9ac607dfc3d8e0.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.8 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.8 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.8.md"></script>

----------------------------------------

TITLE: Configuring Gate for Plugin UI Components
DESCRIPTION: Configuration for the gate-local.yml file to enable the plugin's deck component in Spinnaker's UI.

LANGUAGE: yaml
CODE:
spinnaker:
   extensibility:
     deck-proxy:
       enabled: true
       plugins:
         Armory.RandomWaitPlugin:
           enabled: true
           version: 1.1.17
     repositories:
       examplePluginsRepo:
         url: https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json

----------------------------------------

TITLE: Configuring Vault Backend for Spring Cloud Config in YAML
DESCRIPTION: This snippet demonstrates how to set up a HashiCorp Vault backend for Spring Cloud Config in YAML. It includes Vault server details, authentication token, and other configuration options.

LANGUAGE: yaml
CODE:
spring:
  profiles:
    include: vault
  cloud:
    config:
      server:
        vault:
          host: config-vault.example.com
          port: 8200
          backend: secret
          kvVersion: 2
          defaultKey: clouddriver
          token: [vault access token]

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that loads an external GitHub gist containing the changelog content for Spinnaker version 1.8.4.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/ad1c07a861e61c1d4777da7b5c6bda24.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: HTML script tags that embed GitHub gists containing changelog information for different versions of Spinnaker 1.18. Each script loads a separate markdown file containing release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Creating Username-Password File for Bitbucket Authentication in Bash
DESCRIPTION: This command creates a file containing the username and password for Bitbucket authentication. It uses environment variables for the username and password, and writes them to a specified file.

LANGUAGE: bash
CODE:
echo ${USERNAME}:${PASSWORD} > $USERNAME_PASSWORD_FILE

----------------------------------------

TITLE: Configuring Igor for Cloud Build
DESCRIPTION: YAML configuration for enabling locking in igor-local.yml

LANGUAGE: yaml
CODE:
locking:
  enabled: true

----------------------------------------

TITLE: Installing Ruby and deb-s3 on Jenkins Server
DESCRIPTION: Commands to install Ruby, Bundler, and the deb-s3 gem on the Jenkins server for package management.

LANGUAGE: bash
CODE:
sudo apt-get install software-properties-common
sudo apt-add-repository ppa:brightbox/ruby-ng
sudo apt-get update
sudo apt-get install build-essential ruby2.2 ruby2.2-dev zlib1g-dev liblzma-dev
sudo gem install bundler
sudo gem install deb-s3

----------------------------------------

TITLE: Configuring Spinnaker deployment and storage
DESCRIPTION: This snippet configures Spinnaker for distributed installation on Kubernetes and sets up AWS S3 for storage. It also selects the Spinnaker version to install.

LANGUAGE: bash
CODE:
# Enable artifact support
hal config features edit --artifacts true

# Configure distributed installation
hal config deploy edit --type distributed --account-name eks-spinnaker

# Configure AWS S3 storage
export YOUR_ACCESS_KEY_ID=<access-key>

hal config storage s3 edit --access-key-id $YOUR_ACCESS_KEY_ID \
 --secret-access-key --region us-west-2

hal config storage edit --type s3

# Set Spinnaker version
export VERSION=1.19.2
hal config version edit --version $VERSION

# Apply configuration
hal deploy apply

----------------------------------------

TITLE: Configuring Spinnaker deployment and storage
DESCRIPTION: This snippet configures Spinnaker for distributed installation on Kubernetes and sets up AWS S3 for storage. It also selects the Spinnaker version to install.

LANGUAGE: bash
CODE:
# Enable artifact support
hal config features edit --artifacts true

# Configure distributed installation
hal config deploy edit --type distributed --account-name eks-spinnaker

# Configure AWS S3 storage
export YOUR_ACCESS_KEY_ID=<access-key>

hal config storage s3 edit --access-key-id $YOUR_ACCESS_KEY_ID \
 --secret-access-key --region us-west-2

hal config storage edit --type s3

# Set Spinnaker version
export VERSION=1.19.2
hal config version edit --version $VERSION

# Apply configuration
hal deploy apply

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.23.1 Changelog
DESCRIPTION: Script tag to embed GitHub gist containing release notes for Spinnaker version 1.23.1

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md"></script>

----------------------------------------

TITLE: Configuring Spinnaker for Jenkins Integration
DESCRIPTION: YAML configuration for integrating Jenkins with Spinnaker, including server details and enabling Igor service.

LANGUAGE: yaml
CODE:
jenkins:
    defaultMaster:
      name: Jenkins # The display name for this server
      baseUrl: http://jenkins-server:5656
      username: jenkinsuser
      password: jenkinspassword

igor:
    enabled: true

----------------------------------------

TITLE: Configuring Instance Count for Deployment in Spinnaker
DESCRIPTION: This snippet demonstrates how to set the number of instances to be deployed in the Deploy stage of a Spinnaker pipeline. It's part of the server group configuration process.

LANGUAGE: plaintext
CODE:
2

----------------------------------------

TITLE: Loading Spinnaker 1.18.0 Release Notes from GitHub Gist
DESCRIPTION: Embeds a script to load Markdown content for Spinnaker version 1.18.0 release notes from a GitHub Gist. The script references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Setting Up Variables for GitHub Artifact Account in Bash
DESCRIPTION: This snippet defines variables for the token file path and the artifact account name, which are used in subsequent Halyard commands.

LANGUAGE: bash
CODE:
# See the prerequisites section above
TOKEN_FILE=

ARTIFACT_ACCOUNT_NAME=my-github-artifact-account

----------------------------------------

TITLE: Installing Halyard
DESCRIPTION: Commands for installing Halyard on a Debian-based system

LANGUAGE: bash
CODE:
curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh
sudo bash InstallHalyard.sh

----------------------------------------

TITLE: OpenSSL Configuration for Role Information
DESCRIPTION: OpenSSL configuration file that includes role information encoding using custom OID.

LANGUAGE: conf
CODE:
[ req ]
distinguished_name	= req_distinguished_name
attributes		= req_attributes
req_extensions = v3_req

[ req_distinguished_name ]
countryName			= Country Name (2 letter code)
countryName_min			= 2
countryName_max			= 2
stateOrProvinceName		= State or Province Name (full name)
localityName			= Locality Name (eg, city)
0.organizationName		= Organization Name (eg, company)
organizationalUnitName		= Organizational Unit Name (eg, section)
commonName			= Common Name (eg, fully qualified host name)
commonName_max			= 64
emailAddress			= Email Address
emailAddress_max		= 64

[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min		= 4
challengePassword_max		= 20

[ v3_req ]
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
1.2.840.10070.8.1 = ASN1:UTF8String:spinnaker-example0\nspinnaker-example1

----------------------------------------

TITLE: Configuring Jenkins HTTP Port
DESCRIPTION: Modifying the Jenkins configuration file to change the default HTTP port to 5656.

LANGUAGE: bash
CODE:
HTTP_PORT=5656

----------------------------------------

TITLE: Creating AWS CodeBuild Project using AWS CLI
DESCRIPTION: AWS CLI command to create a basic CodeBuild project that builds from a GitHub repository using a Linux container environment.

LANGUAGE: bash
CODE:
aws codebuild create-project \
  --name spinnaker-project \
  --source "type=GITHUB,location=https://github.com/aws-samples/aws-codebuild-samples.git" \
  --artifacts "type=NO_ARTIFACTS" \
  --environment "type=LINUX_CONTAINER,computeType=BUILD_GENERAL1_SMALL,image=aws/codebuild/standard:4.0" \
  --service-role <YOUR_SERVICE_ROLE> \
  --region <YOUR_AWS_REGION>

----------------------------------------

TITLE: Listing Docker Registry Accounts
DESCRIPTION: Halyard command to list configured Docker registry accounts in Spinnaker.

LANGUAGE: bash
CODE:
hal config provider docker-registry account list

----------------------------------------

TITLE: Loading Spinnaker v1.22.0 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog content for Spinnaker version 1.22.0 from a GitHub Gist. It references a specific file within the same Gist as the previous snippet.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.18.2 Release Notes from GitHub Gist
DESCRIPTION: Embeds a script to load Markdown content for Spinnaker version 1.18.2 release notes from a GitHub Gist. The script references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>

----------------------------------------

TITLE: Configuring Nginx for Aptly Deb Repository
DESCRIPTION: Nginx configuration to serve the Aptly deb repository on port 9999.

LANGUAGE: nginx
CODE:
server {
        listen 9999 default_server;
        listen [::]:9999 default_server ipv6only=on;
        root /var/lib/jenkins/.aptly/public;
        index index.html index.htm;
        server_name localhost;
        location / {
                try_files $uri $uri/ =404;
        }
}

----------------------------------------

TITLE: Creating Reference-Style Markdown Links
DESCRIPTION: Example of proper Markdown link formatting using reference-style hyperlinks for improved readability

LANGUAGE: markdown
CODE:
See the [Repository structure](https://github.com/pf4j/pf4j-update#repository-structure) section of the PF4J README for details.

----------------------------------------

TITLE: Loading Spinnaker 1.18.4 Release Notes from GitHub Gist
DESCRIPTION: Embeds a script to load Markdown content for Spinnaker version 1.18.4 release notes from a GitHub Gist. The script references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>

----------------------------------------

TITLE: Adding GitHub Artifact Account in Spinnaker using Halyard
DESCRIPTION: This command adds a GitHub artifact account to Spinnaker using Halyard. It uses the previously defined variables for the account name and token file.

LANGUAGE: bash
CODE:
hal config artifact github account add $ARTIFACT_ACCOUNT_NAME \
    --token-file $TOKEN_FILE

----------------------------------------

TITLE: Retrieving a Canary Config in Spinnaker CLI
DESCRIPTION: This command demonstrates how to retrieve a single canary config using the 'get' subcommand. It requires specifying the ID of the desired canary config.

LANGUAGE: bash
CODE:
$ spin canary canary-config get canaryConfigId

{
  "id": "myPipelineTemplate"
  ...
}

----------------------------------------

TITLE: Configuring Artifactory Repository in Spinnaker
DESCRIPTION: Commands to enable and configure Artifactory repository search in Spinnaker using Halyard

LANGUAGE: bash
CODE:
$ hal config repository artifactory enable

$ hal config repository artifactory search add spring-artifactory --base-url https://my.repo.example.com \
		--repo my-example-repo --groupId com.example.mygroup --username example --password mypassword

----------------------------------------

TITLE: Including External Gist Script - HTML
DESCRIPTION: HTML script tag to embed an external GitHub gist containing the release notes for Spinnaker version 1.11.5.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.21.2 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist script containing the changelog for Spinnaker version 1.21.2. It uses a script tag to load the external JavaScript file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.2.md"></script>

----------------------------------------

TITLE: Testing DC/OS Service Accessibility
DESCRIPTION: This Bash command tests the accessibility of a DC/OS service using curl with a custom Host header.

LANGUAGE: bash
CODE:
curl --header "Host: dev.example.com" http://$PUBLIC_AGENT

----------------------------------------

TITLE: Formatting JSON Code Blocks
DESCRIPTION: Example of properly formatted JSON code block with consistent indentation and structure

LANGUAGE: json
CODE:
{
  "firstName": "John",
  "lastName": "Smith",
  "age": 25
}

----------------------------------------

TITLE: Loading Spinnaker 1.18.0 Changelog from GitHub Gist
DESCRIPTION: This HTML snippet embeds a script that loads the changelog content for Spinnaker version 1.18.0 from a GitHub Gist. The Gist contains the detailed changelog information.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Storing GitHub Credentials in YAML
DESCRIPTION: Example YAML configuration for storing GitHub credentials in a GCS bucket. The file should be stored as 'spinnaker-secrets.yml' and contains password and token fields.

LANGUAGE: yaml
CODE:
github:
  password: <PASSWORD>
  token: <TOKEN>

----------------------------------------

TITLE: Configuring Jekyll Page Layout in Markdown
DESCRIPTION: Front matter configuration for a Jekyll documentation page, specifying the layout, title and navigation sidebar settings.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Triggering pipelines with Jenkins"
sidebar:
  nav: guides
---

----------------------------------------

TITLE: Configuring Canary Config Scope in Spinnaker
DESCRIPTION: This command sets the visibility of canary configurations to be limited to the Spinnaker application in which they were created.

LANGUAGE: bash
CODE:
hal config canary edit --show-all-configs-enabled false

----------------------------------------

TITLE: Configuring Clouddriver Read-only Endpoints in Gate
DESCRIPTION: Configuration for setting up Clouddriver read-only endpoints with special routing for Deck requests using dynamic endpoints.

LANGUAGE: yaml
CODE:
services:
  clouddriver:
    baseUrl: https://clouddriver-readonly.example.com
    config:
      dynamicEndpoints:
        deck: https://clouddriver-readonly-deck.example.com

----------------------------------------

TITLE: Build Object Structure in Keel
DESCRIPTION: Defines the structure of the Build object in Keel, which mirrors the GenericBuild object in Igor and contains CI build details like build number, timestamp, and SCM information.

LANGUAGE: kotlin
CODE:
data class Build(
  val building: Boolean = false,
  val fullDisplayName: String? = null,
  val name: String? = null,
  val number: Int = 0,
  val duration: Long? = null,
  /** String representation of time in nanoseconds since Unix epoch  */
  val timestamp: String? = null,

  val result: Result? = null,
  val url: String? = null, //url to get build details from the CI provider (like jenkins)
  val id: String? = null, //build uid

  val scm: List<GenericGitRevision>? = null,
  val properties: Map<String, Any?>? = null
)

----------------------------------------

TITLE: Loading GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.10.1 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/9a46f497a6e081e1ef8f12867b0ee3c6.js"/>

----------------------------------------

TITLE: Loading External Changelog Scripts in HTML
DESCRIPTION: HTML script tags that load external changelog content from GitHub Gist for Spinnaker versions 1.19.0 and 1.19.1.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog Scripts
DESCRIPTION: HTML script tags that embed GitHub gist content containing changelog information for different Spinnaker 1.17.x releases.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Displaying Spin Pipeline Command Usage in Bash
DESCRIPTION: Shows the usage information for the 'spin pipeline' command, including available subcommands and global flags.

LANGUAGE: bash
CODE:
$ spin pipeline

Usage:
   pipeline [command]

Aliases:
  pipeline, pipelines, pi

Available Commands:
  delete      Delete the provided pipeline
  execute     Execute the provided pipeline
  get         Get the pipeline with the provided name from the provided application
  list        List the pipelines for the provided application
  save        Save the provided pipeline

Flags:
  -h, --help   help for pipeline

Global Flags:
      --config string          path to config file (default $HOME/.spin/config)
      --gate-endpoint string   Gate (API server) endpoint (default http://localhost:8084)
  -k, --insecure               ignore certificate errors
      --no-color               disable color (default true)
      --output string          configure output formatting
  -q, --quiet                  squelch non-essential output

Use " pipeline [command] --help" for more information about a command.

----------------------------------------

TITLE: Markdown Layout Configuration
DESCRIPTION: YAML front matter configuration for the page layout and navigation settings

LANGUAGE: yaml
CODE:
---
layout: single
title:  "Hackathon Activities at Spinnaker Gardening Days #communityHack"
sidebar:
  nav: community
---

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.2 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>

----------------------------------------

TITLE: Enabling Chaos Monkey Feature in Deck UI
DESCRIPTION: Custom JavaScript configuration to enable the Chaos Monkey feature flag in Spinnaker's Deck UI service.

LANGUAGE: javascript
CODE:
window.spinnakerSettings.feature.chaosMonkey = true;

----------------------------------------

TITLE: Defining Kubernetes Deployment for Application
DESCRIPTION: YAML manifest for creating a Kubernetes Deployment with three replicas of a Tomcat 8 container, including readiness probe configuration.

LANGUAGE: yaml
CODE:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codelaboke-test-cluster
spec:
  replicas: 3
  selector:
    matchLabels:
      codelaboke-test-cluster: 'true'
  template:
    metadata:
      labels:
        codelaboke-test-cluster: 'true'
        load-balancer-codelaboke-test-lb: 'true'
    spec:
      containers:
        - image:  tomcat:8.0
          name: tomcat8
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080

----------------------------------------

TITLE: Syncing Code Changes to EC2 Instance
DESCRIPTION: Rsync command to sync local Spinnaker code changes to the EC2 development instance, excluding build artifacts and IDE-specific directories.

LANGUAGE: bash
CODE:
rsync --progress -a -e "ssh -i /path/to/my-key-pair.pem" --exclude='*/build/' --exclude='*/.idea/' --exclude='*/out/' --exclude='*/.gradle/' ~/code/spinnaker/ ubuntu@$SPINNAKER_INSTANCE_DNS:/home/ubuntu/dev/spinnaker

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist scripts to display changelog information for Spinnaker version 1.25 and its patch releases. Each script loads a separate Markdown file containing the changelog details for a specific version.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md"></script>

----------------------------------------

TITLE: Adding Google Cloud Pub/Sub Subscription to Spinnaker
DESCRIPTION: Configure Spinnaker to use the GCP Pub/Sub subscription. Requires specifying Spinnaker subscription name, GCP project name, GCP subscription name, and service account key path.

LANGUAGE: bash
CODE:
$ SPIN_SUB_NAME=<Insert Spinnaker Subscription Name>
$ PROJECT_NAME=<Insert GCP Project Name>
$ hal config pubsub google subscription add $SPIN_SUB_NAME \
--project $PROJECT_NAME \
--subscription-name $GCP_SUB_NAME \
--message-format GCS \
--json-path $JSON_SA_KEY

----------------------------------------

TITLE: Configuring Kubernetes UI Service
DESCRIPTION: YAML configuration for exposing the Spinnaker UI service (spin-deck) with a public load balancer IP.

LANGUAGE: yaml
CODE:
apiVersion: v1
kind: Service
metadata:
  name: spin-deck
  namespace: spinnaker
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9000
  selector:
    load-balancer-spin-deck: "true"
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: $UI_ADDRESS

----------------------------------------

TITLE: Installing Bundle and Dependencies
DESCRIPTION: Commands to install the Bundle gem and project dependencies for the documentation website.

LANGUAGE: bash
CODE:
cd spinnaker.github.io
gem install bundler
bundle install

----------------------------------------

TITLE: Including GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.15.6.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/df4cad348c7f1a6ea6ced84c6fca70b7.js"/>

----------------------------------------

TITLE: Kubernetes RBAC Configuration
DESCRIPTION: YAML configuration for setting up Kubernetes RBAC roles and service account for Spinnaker with minimum required permissions.

LANGUAGE: yaml
CODE:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
 name: spinnaker-role
rules:
- apiGroups: [""]
  resources: ["namespaces", "configmaps", "events", "replicationcontrollers", "serviceaccounts", "pods/logs"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods", "pods/portforward", "services", "services/proxy", "secrets"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["list", "get"]
- apiGroups: ["apps"]
  resources: ["controllerrevisions", "statefulsets"]
  verbs: ["list"]
- apiGroups: ["extensions", "app", "apps"]
  resources: ["deployments", "replicasets", "ingresses", "daemonsets"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
 name: spinnaker-role-binding
roleRef:
 apiGroup: rbac.authorization.k8s.io
 kind: ClusterRole
 name: spinnaker-role
subjects:
- namespace: default
  kind: ServiceAccount
  name: spinnaker-service-account
---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: spinnaker-service-account
 namespace: default

----------------------------------------

TITLE: Load Balancer Traffic Annotation Example
DESCRIPTION: Example of using the traffic.spinnaker.io/load-balancers annotation to specify which load balancers a workload should be attached to at deployment time.

LANGUAGE: yaml
CODE:
traffic.spinnaker.io/load-balancers: '["service my-service"]'

LANGUAGE: yaml
CODE:
traffic.spinnaker.io/load-balancers: '["service my-service", "service my-canary-service"]'

----------------------------------------

TITLE: Kubernetes Deployment Manifest with Bound Artifacts
DESCRIPTION: YAML manifest for a Kubernetes Deployment after Spinnaker has bound the Docker image and ConfigMap artifacts.

LANGUAGE: yaml
CODE:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: gcr.io/my-images/nginx@sha256:0cce25b9a55    # bound by spinnaker
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /opt/config
              name: my-config-map
      volumes:
        - configMap:
            name: configmap-v001                              # bound by spinnaker
          name: my-config-map

----------------------------------------

TITLE: Displaying Sponsor Logos in HTML
DESCRIPTION: This snippet creates a section to display sponsor logos for Capital Carbon Consulting and Armory, using flexbox for layout.

LANGUAGE: html
CODE:
<div style="display: flex; justify-content: center; flex-direction: column; align-items: center;">
  <div style="padding: 20px; text-align:center; display: flex; justify-content: center; flex-direction: column; align-items: center;">
    <img src="../ccc-logo.png" stlye="padding: 20px;" alt="Capital Carbon Consulting Logo" />
    Workshop Presented by Capital Carbon Consulting
  </div>
  <div style="padding: 20px;">
    <img src="../Armory_logo.png" stlye="padding: 20px;" alt="Armory logo" width="200px" />
  </div>
</div>

----------------------------------------

TITLE: Creating Front50 Database and User Permissions in MySQL
DESCRIPTION: SQL commands to create the front50 database and grant necessary permissions to service and migration users. The database uses utf8mb4 character set and unicode collation.

LANGUAGE: sql
CODE:
CREATE DATABASE `front50` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

GRANT
  SELECT, INSERT, UPDATE, DELETE, CREATE, EXECUTE, SHOW VIEW
ON `front50`.*
TO 'front50_service'@'%';

GRANT
  SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, LOCK TABLES, EXECUTE, SHOW VIEW
ON `front50`.*
TO 'front50_migrate'@'%';

----------------------------------------

TITLE: Encrypted GitHub Token Configuration
DESCRIPTION: Example of using encrypted syntax for GitHub token in Halyard configuration.

LANGUAGE: yaml
CODE:
...
  github:
    enabled: true
    accounts:
    - name: github
      token: encrypted:<secret engine>!<key1>:<value1>!<key2>:<value2>!...
...

----------------------------------------

TITLE: Creating a Google Cloud Pub/Sub Notification for GCS
DESCRIPTION: Set up a Pub/Sub notification for the GCS bucket to trigger on object changes. Requires specifying a topic name and the bucket name.

LANGUAGE: bash
CODE:
$ TOPIC=<Insert Topic Name>
$ gsutil notification create -t $TOPIC -f json $BUCKET

----------------------------------------

TITLE: Embedding GitHub Gist Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.15.4. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/2229c2172952e9a485d68788bd4560b0.js"/>

----------------------------------------

TITLE: Port-Forwarding Spinnaker Services in Fish Shell
DESCRIPTION: Fish shell function to port-forward all Spinnaker services from a Kubernetes cluster to the local machine.

LANGUAGE: bash
CODE:
function pf-spinnaker
  set -l services (string split , -- \
                  (kubectl get services -o json \
                    | jq -r '.items[] | [.metadata.name, .spec.ports[0].port] | @csv'))
  set -l service_length (count $services)
  set -l current_service 1
  while test $current_service -lt $service_length
    set -l service (string replace --all '"' '' -- $services[$current_service])
    set -l port $services[(math $current_service + 1)]
    command kubectl port-forward "service/$service" $port &
    set current_service (math "$current_service+2")
  end
end

----------------------------------------

TITLE: Jekyll Front Matter Configuration for Spinnaker Features Page
DESCRIPTION: YAML front matter block that configures the Jekyll page layout and sidebar navigation for a Spinnaker features documentation page.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Features"
sidebar:
  nav: setup
---

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.14.14 Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.14.14. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/ad1e0eb6b6547b296c9103eb21d9beec.js"/>

----------------------------------------

TITLE: Conventional Commit Message Format
DESCRIPTION: Template showing the standard format for commit messages in Spinnaker, following the 'conventional' commit message format used with clog automation tool.

LANGUAGE: text
CODE:
<type>(<scope>): <subject>\n<empty line>\n<body>\n<empty line>\n<footer>

----------------------------------------

TITLE: Configuring Embedded Base64 Artifact in Spinnaker Pipeline JSON
DESCRIPTION: Example JSON configuration for an embedded Base64 artifact in a Spinnaker pipeline definition. The artifact includes the required type field set to 'embedded/base64', the Base64-encoded content in the reference field, and an optional human-readable name.

LANGUAGE: json
CODE:
{
  "type": "embedded/base64",
  "reference": "dmFsdWU6IDEKbXlrZXk6IG15dmFsdWU=",
  "name": "my-properties-file"
}

----------------------------------------

TITLE: Embedding Spinnaker 1.26.1 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag embeds the changelog for Spinnaker version 1.26.1 from a GitHub Gist. It references a specific file within the Gist containing the changelog information.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md"></script>

----------------------------------------

TITLE: Creating and Configuring GCP Service Account for Spinnaker
DESCRIPTION: Series of commands to create a GCP service account with storage admin role, generate a JSON key, and save it to a local file. This service account will be used by Spinnaker to authenticate against GCP.

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_NAME=spinnaker-gcs-account
SERVICE_ACCOUNT_DEST=~/.gcp/gcs-account.json

gcloud iam service-accounts create \
    $SERVICE_ACCOUNT_NAME \
    --display-name $SERVICE_ACCOUNT_NAME

SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

PROJECT=$(gcloud config get-value project)

gcloud projects add-iam-policy-binding $PROJECT \
    --role roles/storage.admin --member serviceAccount:$SA_EMAIL

mkdir -p $(dirname $SERVICE_ACCOUNT_DEST)

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \
    --iam-account $SA_EMAIL

----------------------------------------

TITLE: Creating and Configuring GCP Service Account for Spinnaker
DESCRIPTION: Series of commands to create a GCP service account with storage admin role, generate a JSON key, and save it to a local file. This service account will be used by Spinnaker to authenticate against GCP.

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_NAME=spinnaker-gcs-account
SERVICE_ACCOUNT_DEST=~/.gcp/gcs-account.json

gcloud iam service-accounts create \
    $SERVICE_ACCOUNT_NAME \
    --display-name $SERVICE_ACCOUNT_NAME

SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

PROJECT=$(gcloud config get-value project)

gcloud projects add-iam-policy-binding $PROJECT \
    --role roles/storage.admin --member serviceAccount:$SA_EMAIL

mkdir -p $(dirname $SERVICE_ACCOUNT_DEST)

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \
    --iam-account $SA_EMAIL

----------------------------------------

TITLE: Setting up SSH tunnel for Spinnaker access
DESCRIPTION: Creates an SSH tunnel to securely access Spinnaker's web interface and API endpoints from a local machine.

LANGUAGE: bash
CODE:
gcloud compute ssh $INSTANCE_NAME \
    --project $MY_PROJECT \
    --zone $ZONE \
    --ssh-flag="-L 8084:localhost:8084" \
    --ssh-flag="-L 9000:localhost:9000" \
    --ssh-flag="-L 5656:localhost:5656"

----------------------------------------

TITLE: Including Table of Contents Using Liquid Template
DESCRIPTION: Liquid template include statement that adds a table of contents to the documentation page.

LANGUAGE: liquid
CODE:
{% include toc %}

----------------------------------------

TITLE: Configuring gcloud and Getting Kubernetes Credentials
DESCRIPTION: Sets up environment variables and retrieves credentials for the target Kubernetes cluster.

LANGUAGE: bash
CODE:
GCP_PROJECT=my-spinnaker-project
ZONE=us-central1-f
K8_TEST=my-test-cluster
GCP_TEST=my-test-project
gcloud container clusters get-credentials $K8_TEST --zone $ZONE --project $GCP_TEST

----------------------------------------

TITLE: Loading GitHub Gist Script - HTML
DESCRIPTION: HTML script tag to load an external GitHub gist containing the changelog content for Spinnaker version 1.14.13.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/b34693ccf20a58c5a63e58e046310dee.js"/>

----------------------------------------

TITLE: Formatting Pull Request Title in Spinnaker Documentation
DESCRIPTION: Demonstrates the correct format for a pull request title in Spinnaker repositories. The title should follow the '<type>(<scope>): <subject>' format, with a space after the colon.

LANGUAGE: markdown
CODE:
docs(plugins): add documentation for plugin creators

----------------------------------------

TITLE: Setting OAuth 2.0 Redirect URI with Halyard CLI
DESCRIPTION: This command demonstrates how to set the pre-established redirect URI for OAuth 2.0 using Halyard CLI. It's an alternative to modifying the YAML configuration directly.

LANGUAGE: bash
CODE:
hal config security authn oauth2 edit --pre-established-redirect-uri https://my-real-gate-address.com:8084/login

----------------------------------------

TITLE: Embedding Spinnaker 1.26.5 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag embeds the changelog for Spinnaker version 1.26.5 from a GitHub Gist. It references a specific file within the Gist containing the changelog information.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.5.md"></script>

----------------------------------------

TITLE: Creating Service Account using Front50 API in Bash
DESCRIPTION: This snippet demonstrates how to create a new service account in Spinnaker using a curl command to interact with the Front50 API. It sets up a service account with a specific name and roles.

LANGUAGE: bash
CODE:
FRONT50=http://front50.url:8080

curl -X POST \
  -H "Content-type: application/json" \
  -d '{ "name": "sekret-service-account@spinnaker-test.net", "memberOf": ["myApp-prod","myApp-qa"] }' \
  $FRONT50/serviceAccounts

----------------------------------------

TITLE: Configuring Git Backend for Spring Cloud Config in YAML
DESCRIPTION: This snippet shows how to configure a Git backend for Spring Cloud Config in a YAML file. It specifies the Git repository URL, local directory for cloning, and refresh rate.

LANGUAGE: yaml
CODE:
spring:
  profiles:
    include: git
  cloud:
    config:
      server:
        git:
          uri: https://github.com/example/spinnaker-config
          basedir: /tmp/config-repo
          refresh-rate: 10

----------------------------------------

TITLE: Authenticating gcloud CLI
DESCRIPTION: Authenticates the gcloud CLI with a user's Google account.

LANGUAGE: bash
CODE:
gcloud auth login <your email address>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.14.12 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.14.12. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/5e1472bb2679601121aa4d5097b3b08b.js"/>

----------------------------------------

TITLE: Defining Markdown Layout and Navigation for Spinnaker Tutorials Page
DESCRIPTION: This markdown snippet sets up the layout and navigation for a Spinnaker tutorials page. It specifies a single-column layout, sets the page title, and configures the sidebar navigation to use the 'guides' menu.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Tutorials"
sidebar:
  nav: guides
---

----------------------------------------

TITLE: Embedding GitHub Gist Script in HTML
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog content for Spinnaker v1.7.3.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/2574a5bbdf23a29108b74b0536c2326c.js"/>

----------------------------------------

TITLE: Markdown Page Front Matter
DESCRIPTION: YAML front matter configuration for the schedule page, defining the layout and navigation settings.

LANGUAGE: markdown
CODE:
---
layout: single
title: "Schedule"
sidebar:
  nav: community
---

----------------------------------------

TITLE: Updating Local Repository and Creating Working Branch
DESCRIPTION: These commands update the local repository with the latest changes and create a new working branch based on the upstream master.

LANGUAGE: bash
CODE:
git fetch origin
git fetch upstream
git branch
git checkout -b <your-working-branch> upstream/master

----------------------------------------

TITLE: Loading Changelog Gist Scripts
DESCRIPTION: HTML script tags that load GitHub gist content containing changelog information for different Spinnaker 1.26.x versions. The gists are loaded from the spinnaker-release repository.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing the changelog for Spinnaker version 1.25.2 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md"></script>

----------------------------------------

TITLE: SSH into Spinnaker VM with Port Forwarding
DESCRIPTION: Connect to the Spinnaker VM via SSH, forwarding ports for Spinnaker's UI and API servers.

LANGUAGE: bash
CODE:
gcloud compute ssh $USER-spinnaker --ssh-flag="-L 9000:localhost:9000" --ssh-flag="-L 8084:localhost:8084"

----------------------------------------

TITLE: Monitoring Metric Example JSON Structure
DESCRIPTION: Example of a controller.invocations metric from Front50 showing the tag structure and value format. Demonstrates how metrics are recorded with contextual tags and timestamped values.

LANGUAGE: json
CODE:
{
"tags": [
    {
        "key": "application",
        "value": "mysnazzyapp"
    },
    {
        "key": "controller",
        "value": "PipelineController"
    },
    {
        "key": "method",
        "value": "listByApplication"
    },
    {
        "key": "statistic",
        "value": "count"
    },
    {
        "key": "status",
        "value": "2xx"
    },
    {
        "key": "statusCode",
        "value": "200"
    },
    {
        "key": "success",
        "value": "true"
    }
],
"values": [
    {
        "t": 1500000000000,
        "v": 100.0
    }
]}

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds an external GitHub gist containing the changelog details for Spinnaker version 1.7.2

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/c4df80efb0852d53e14c5d845b86357a.js"/>

----------------------------------------

TITLE: Configuring Service Settings for Custom Docker Image in YAML
DESCRIPTION: YAML configuration for setting up a custom Docker image for a Spinnaker service, including image pull secrets.

LANGUAGE: yaml
CODE:
artifactId:
kubernetes:
  imagePullSecrets:
    - artifactory-creds

----------------------------------------

TITLE: Previewing Documentation Changes Locally with Docker
DESCRIPTION: This Docker command builds and runs a container to preview the documentation changes locally.

LANGUAGE: bash
CODE:
docker build --tag spinnaker/spinnaker.github.io-test .
docker run -it --rm --mount "type=bind,source=$(pwd),target=/code" \
    -p 4000:4000 spinnaker/spinnaker.github.io-test --incremental

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Version 1.26.1 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub gist containing the changelog for Spinnaker version 1.26.1 using a script tag. The gist is referenced by its unique identifier and specifies the file to be displayed.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md"></script>

----------------------------------------

TITLE: Setting Image Pull Secrets for Kubernetes Pods in Spinnaker
DESCRIPTION: This YAML snippet demonstrates how Spinnaker configures Image Pull Secrets for Kubernetes Pods based on the Docker Registry accounts associated with the Kubernetes account being deployed to.

LANGUAGE: yaml
CODE:
template:
  spec:
    imagePullSecrets:
      - name: ${DOCKER-REGISTRY}

----------------------------------------

TITLE: Provisioning Spinnaker and Jenkins on GCE
DESCRIPTION: Creates a Google Compute Engine instance with Spinnaker, Jenkins, and aptly pre-installed using a custom image.

LANGUAGE: bash
CODE:
MY_PROJECT=<your project>
INSTANCE_NAME=spinnaker-codelab
ZONE=us-east1-b

gcloud compute instances create $INSTANCE_NAME \
    --project $MY_PROJECT \
    --zone $ZONE \
    --image spinnaker-codelab \
    --image-project marketplace-spinnaker-release \
    --machine-type n1-highmem-4 \
    --scopes cloud-platform \
    --metadata startup-script=/var/spinnaker/startup/first_codelab_boot.sh,gce_account=my-google-account

----------------------------------------

TITLE: Deleting Pipeline Templates in Spinnaker
DESCRIPTION: Demonstrates how to delete a pipeline template using its ID with the delete command.

LANGUAGE: bash
CODE:
spin pipeline-template delete myPipelineTemplate

Pipeline template deleted

----------------------------------------

TITLE: Loading Spinnaker Changelog Gist
DESCRIPTION: Script tag loading an external GitHub gist containing the changelog details for Spinnaker version 1.6.1

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/f1cd6232151b70492ebdcbb557a209fc.js"/>

----------------------------------------

TITLE: Configuring Custom Component Sizing in Halyard YAML
DESCRIPTION: This YAML snippet demonstrates how to set custom CPU and memory limits and requests for Spinnaker components in the Halyard configuration file. It shows examples for both container-specific and service-wide configurations.

LANGUAGE: yaml
CODE:
deploymentEnvironment:
  customSizing:
    # This applies sizings to only the echo container and not to any sidecar 
    # containers running with echo. (Use spin-<service> to include sidecars)
    echo:
      limits:
        cpu: 250m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    # This applies sizings to the clouddriver container as well as any sidecar 
    # containers running with clouddriver. (Use without spin- to only include the clouddriver container)
    spin-clouddriver:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

----------------------------------------

TITLE: Minnaker Configuration YAML
DESCRIPTION: Configuration file for Spinnaker services showing baseUrl endpoints and host settings

LANGUAGE: yaml
CODE:
services:
  clouddriver:
    baseUrl: {my-workstation-ip}:7002
  redis:
    baseUrl: {my-workstation-ip}:6379
  front50:
    baseUrl: {my-workstation-ip}:8080
  orca:
    host: 0.0.0.0
  gate:
    baseUrl: {my-workstation-ip}:8084
  deck:
    host: 0.0.0.0
  echo:
    baseUrl: {my-workstation-ip}:8089
  rosco:
    baseUrl: {my-workstation-ip}:8087

----------------------------------------

TITLE: Loading GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: HTML script tags that load changelog content from GitHub gists for different Spinnaker 1.24.x versions. Each script loads a markdown file containing release notes and changes for a specific version.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md"></script>

----------------------------------------

TITLE: Installing Prometheus Dashboards
DESCRIPTION: Command to install Prometheus operational dashboards for Spinnaker monitoring

LANGUAGE: bash
CODE:
/opt/spinnaker-monitoring/third_party/prometheus/install.sh --dashboards_only

----------------------------------------

TITLE: Planning Pipeline Templates in Spinnaker
DESCRIPTION: Shows how to visualize a hydrated pipeline configuration using the plan command, which evaluates the template with provided config values.

LANGUAGE: bash
CODE:
spin pipeline-templates plan --file <path to pipeline config>

{
  "application": "my-spinnaker-app"
  "stages": [...] # Evaluated pipeline config based on template config values.
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.26.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.26.0. The Gist is loaded using a script tag, which will render the content of the specified file within the page.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md"></script>

----------------------------------------

TITLE: Creating Halyard Host VM on GCE
DESCRIPTION: Creates a GCE VM instance to host Halyard with the configured service account and required specifications.

LANGUAGE: bash
CODE:
HALYARD_HOST=$(echo $USER-halyard-`date +%m%d` | tr '_.' '-')

gcloud compute instances create $HALYARD_HOST \
    --project=$GCP_PROJECT \
    --zone=us-central1-f \
    --scopes=cloud-platform \
    --service-account=$HALYARD_SERVICE_ACCOUNT_EMAIL \
    --image-project=ubuntu-os-cloud \
    --image-family=ubuntu-1804-lts \
    --machine-type=n1-standard-4

----------------------------------------

TITLE: Adding Service Account to GCP Test Project
DESCRIPTION: Creates a service account in the GCP test project and assigns necessary IAM roles.

LANGUAGE: bash
CODE:
HALYARD_SA=halyard-service-account

HALYARD_SA_EMAIL=$(gcloud iam service-accounts list \
  --project=$GCP_PROJECT \
  --filter="displayName:$HALYARD_SA" \
  --format='value(email)')

gcloud projects add-iam-policy-binding $GCP_TEST \
  --role roles/iam.serviceAccountKeyAdmin \
  --member serviceAccount:$HALYARD_SA_EMAIL

gcloud projects add-iam-policy-binding $GCP_TEST \
  --role roles/container.admin \
  --member serviceAccount:$HALYARD_SA_EMAIL

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub gist containing changelog information for a specific Spinnaker version. It uses the script tag to load and display the gist content.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.7.md"></script>

----------------------------------------

TITLE: Creating Basic Auth Credentials File for Helm Artifact Account in Bash
DESCRIPTION: This snippet demonstrates how to create a file containing the basic auth credentials for a Helm artifact account. It uses environment variables for the username and password.

LANGUAGE: bash
CODE:
echo ${USERNAME}:${PASSWORD} > $USERNAME_PASSWORD_FILE

----------------------------------------

TITLE: Authenticating with Google Cloud Platform using gcloud CLI
DESCRIPTION: Log in to Google Cloud Platform using the gcloud command-line tool.

LANGUAGE: bash
CODE:
$ gcloud auth login

----------------------------------------

TITLE: Retrieving a single Spinnaker application with spin CLI in Bash
DESCRIPTION: Illustrates how to use the spin application get command to retrieve detailed information about a specific Spinnaker application. The output includes application attributes and associated clusters.

LANGUAGE: bash
CODE:
spin application get my-app
{
  "attributes": {
    "accounts": "my-account",
    "cloudProviders": "gce,kubernetes",
    "createTs": "1529349914747",
    "email": "jacobkiefer@google.com",
    "instancePort": 80,
    "lastModifiedBy": "anonymous",
    "name": "my-account",
    "platformHealthOnly": true,
    "providerSettings": {
      "gce": {
        "associatePublicIpAddress": true
      }
    },
    "updateTs": "1529349915014",
    "user": "anonymous"
  },
  "clusters": {
    "my-account-cluster": [
      {
        "loadBalancers": [],
        "name": "my-account-gce",
        "provider": "gce",
        "serverGroups": [
          "my-account-gce-v000",
          "my-account-gce-v001"
        ]
      }
    ]
  },
  "name": "my-account"
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing the changelog for Spinnaker version 1.25.1 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Scripts for Spinnaker Release Notes in HTML
DESCRIPTION: Script tags that load GitHub Gist content containing release notes for different Spinnaker 1.20.x versions. Each script references a specific version's markdown file from the same gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md"></script>

----------------------------------------

TITLE: Hybrid Redis-SQL Configuration for Agent Scheduling
DESCRIPTION: Configuration for using SQL for cache and task repository while keeping Redis for agent scheduling, recommended for non-Aurora databases.

LANGUAGE: yaml
CODE:
sql:
  scheduler:
    enabled: false

redis:
  enabled: true
  connection: redis://your.redis
  cache:
    enabled: false
  scheduler:
    enabled: true
  taskRepository:
    enabled: false

----------------------------------------

TITLE: Creating Jenkins Job
DESCRIPTION: cURL command to create a new Jenkins job using the downloaded configuration file. Requires Jenkins host URL, job name, username, and API token.

LANGUAGE: bash
CODE:
curl -s -XPOST "$JENKINS_HOST/createItem?name=$JOB_NAME" \
    -u $USER:$USER_API_TOKEN \
    --data-binary @scriptJobConfig.xml \
    -H "Content-Type:text/xml"

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.23.1 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.23.1 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md"></script>

----------------------------------------

TITLE: Jinja Template for Translating GCS Artifact Location
DESCRIPTION: Jinja template example for translating a GCS artifact location from a Pub/Sub message into the Spinnaker artifact format.

LANGUAGE: jinja
CODE:
[
  {
    "type": "gcs/object", # static type.
    "reference": "{{{{ location }}}}", # 'location' in the Pub/Sub payload.
  }
]

----------------------------------------

TITLE: Webhook Parameter Configuration in YAML
DESCRIPTION: Example of configuring parameters for a custom webhook stage, showing how to define user-configurable fields that appear in the UI.

LANGUAGE: yaml
CODE:
parameters:
- label: Git Commit
  name: gitCommit
  description: The Git commit of your application
  defaultValue: ''
  type: string

----------------------------------------

TITLE: Loading Spinnaker 1.25.0 Changelog via GitHub Gist
DESCRIPTION: Script tag to embed the changelog content for version 1.25.0 from a GitHub gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md"></script>

----------------------------------------

TITLE: Kubernetes Deployment Manifest with Potential Artifact Bindings
DESCRIPTION: YAML manifest for a Kubernetes Deployment, showing fields that could potentially be bound to artifacts (Docker image and ConfigMap).

LANGUAGE: yaml
CODE:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: gcr.io/my-images/nginx # possible artifact
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /opt/config
              name: my-config-map
      volumes:
        - configMap:
            name: configmap             # possible artifact
          name: my-config-map

----------------------------------------

TITLE: Defining Execution Context Artifacts in JSON
DESCRIPTION: Example of JSON representing artifacts in the execution context. These artifacts include a Docker image and a Kubernetes ConfigMap, which can be bound to the deployment manifest.

LANGUAGE: json
CODE:
[
  {
    "type": "docker/image",
    "name": "gcr.io/my-images/nginx",
    "reference": "gcr.io/my-images/nginx@sha256:0cce25b9a55"
  },
  {
    "type": "kubernetes/configMap",
    "name": "configmap",
    "version": "v001",
    "location": "default",
    "reference": "configmap-v001"
  }
]

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.21.0 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist script containing the changelog for Spinnaker version 1.21.0. It uses a script tag to load the external JavaScript file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.0.md"></script>

----------------------------------------

TITLE: Configuring Halyard for GCS Artifacts
DESCRIPTION: Commands to add GCS artifact account and enable GCS artifact support in Halyard configuration.

LANGUAGE: bash
CODE:
hal config artifact gcs account add $ARTIFACT_ACCOUNT_NAME \
    --json-path $SERVICE_ACCOUNT_DEST

----------------------------------------

TITLE: Adding and Configuring the Plugin
DESCRIPTION: Commands to add the RandomWaitPlugin and its configuration in the Halconfig YAML, including the defaultMaxWaitTime setting.

LANGUAGE: bash
CODE:
hal plugins add Armory.RandomWaitPlugin --version=1.1.14 \
   --enabled=true --extensions=armory.randomWaitStage

LANGUAGE: yaml
CODE:
spinnaker:
  extensibility:
    plugins:
      Armory.RandomWaitPlugin:
        id: Armory.RandomWaitPlugin
        enabled: true
        version: 1.1.17
        config:
          defaultMaxWaitTime: 60
    repositories:
      examplePluginsRepo:
        id: examplePluginsRepo
        url: https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json

----------------------------------------

TITLE: Creating and Configuring GCS Bucket using gsutil
DESCRIPTION: Commands to create a Google Cloud Storage bucket and enable versioning using gsutil tool

LANGUAGE: bash
CODE:
gsutil mb ${USER}-spinnaker
gsutil versioning set on ${USER}-spinnaker

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.24.0 Changelog
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.24.0 using a script tag.

LANGUAGE: javascript
CODE:
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md"></script>

----------------------------------------

TITLE: Cloning Spinnaker Documentation Repository
DESCRIPTION: Commands to clone the forked Spinnaker documentation repository using Git.

LANGUAGE: bash
CODE:
GITHUB_USER=$USER # or something else here
git clone https://github.com/$GITHUB_USER/spinnaker.github.io.git

----------------------------------------

TITLE: Logging Example for Google Infrastructure Provider
DESCRIPTION: Example log output from a Google Infrastructure Provider's caching agent showing the format of account, region, and resource type information.

LANGUAGE: text
CODE:
GoogleInfrastructureProvider:my-google-account/europe-west1/GoogleRegionalAddressCachingAgent completed in 0.111s

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.7 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.7 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md"></script>

----------------------------------------

TITLE: Running Plugin Locally with Yarn
DESCRIPTION: Starts the plugin development server using Yarn, connecting to a locally forwarded Spinnaker instance.

LANGUAGE: shell
CODE:
DEV_PROXY_HOST=http://localhost:9001 yarn develop

----------------------------------------

TITLE: Adding Plugin Repository to Halyard
DESCRIPTION: Command to add the example plugin repository to Halyard configuration and its resulting YAML configuration.

LANGUAGE: bash
CODE:
hal plugins repository add examplePluginsRepo \
  --url=https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json

LANGUAGE: yaml
CODE:
spinnaker:
  extensibility:
    plugins: {}
    repositories:
      examplePluginsRepo:
        id: examplePluginsRepo
        url: https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json

----------------------------------------

TITLE: Loading Spinnaker 1.23.3 Changelog Gist
DESCRIPTION: Embeds the changelog content for Spinnaker version 1.23.3 from a GitHub gist using JavaScript.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.3.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.20.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.0 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md"></script>

----------------------------------------

TITLE: Including Table of Contents in Spinnaker Release Preview
DESCRIPTION: Inserts a table of contents into the Spinnaker release preview document using a Jekyll include statement.

LANGUAGE: markdown
CODE:
{% include toc %}

----------------------------------------

TITLE: Switch to Jenkins User
DESCRIPTION: Command to switch to the jenkins user account where all processes run and important links are stored.

LANGUAGE: bash
CODE:
sudo su - jenkins

----------------------------------------

TITLE: Loading Spinnaker 1.19.3 Changelog from GitHub Gist
DESCRIPTION: Embeds a JavaScript file from GitHub Gist to display the changelog for Spinnaker version 1.19.3.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md"></script>

----------------------------------------

TITLE: Adding GitLab Artifact Account in Halyard
DESCRIPTION: This command adds a GitLab artifact account to Spinnaker using Halyard. It specifies the account name and the path to the file containing the GitLab access token.

LANGUAGE: bash
CODE:
hal config artifact gitlab account add $ARTIFACT_ACCOUNT_NAME \
    --token-file $TOKEN_FILE

----------------------------------------

TITLE: Markdown Layout Definition
DESCRIPTION: Jekyll front matter defining the page layout and navigation configuration for the Spinnaker releases documentation page.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "Releases"
sidebar:
  nav: community
---

----------------------------------------

TITLE: Stage Status Comparison
DESCRIPTION: Example showing how to compare a stage's status enum value by converting it to string first.

LANGUAGE: java
CODE:
${#stage("Deploy")["status"].toString() == "SUCCEEDED"}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist scripts to display the changelog content for Spinnaker versions 1.21.2, 1.21.1, and 1.21.0. Each script references a specific file within the same Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.0.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Changelog Scripts for Spinnaker 1.24
DESCRIPTION: HTML script tags that load changelog content from GitHub gists for different point releases of Spinnaker 1.24.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet demonstrates how to embed GitHub Gist content using HTML script tags. It includes four separate script tags, each loading a different version of the Spinnaker 1.26 changelog from a GitHub Gist source.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md"></script>

----------------------------------------

TITLE: Loading External Changelog Gist - HTML Script Tag
DESCRIPTION: HTML script tag to load an external GitHub gist containing the changelog content for Spinnaker version 1.14.11.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/76e14bf88350b9b84d6e8d5904647cb0.js"/>

----------------------------------------

TITLE: Loading Spinnaker 1.19.4 Changelog from GitHub Gist
DESCRIPTION: Embeds a JavaScript file from GitHub Gist to display the changelog for Spinnaker version 1.19.4.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md"></script>

----------------------------------------

TITLE: Verifying GCloud Installation
DESCRIPTION: Command to verify that Google Cloud SDK is installed and authenticated properly.

LANGUAGE: bash
CODE:
gcloud info

----------------------------------------

TITLE: Loading Spinnaker 1.21.0 Changelog via GitHub Gist
DESCRIPTION: Embeds the changelog content for Spinnaker version 1.21.0 using a GitHub gist script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog Scripts in HTML
DESCRIPTION: A series of script tags that embed GitHub gist content showing the changelog entries for Spinnaker versions 1.23.0 through 1.23.5.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: HTML script tags that embed GitHub gist content containing changelog markdown files for different Spinnaker 1.23.x releases. The gists are loaded from the spinnaker-release repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.14.10.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/6bc45a1a71d21316a8816d67e0cd8648.js"/>

----------------------------------------

TITLE: Defining Kubernetes Object Structure in JSON
DESCRIPTION: Example JSON structure showing the required fields for a Kubernetes Object artifact representing a deployed Deployment resource. Demonstrates how to specify the type, reference, name, namespace and artifact account.

LANGUAGE: json
CODE:
{
  "type": "kubernetes/deployment",
  "reference": "frontend",
  "name": "frontend",
  "namespace": "staging",
  "artifactAccount": "gke-us-central1-xnat"
}

----------------------------------------

TITLE: Verifying GCloud Installation
DESCRIPTION: Command to verify that Google Cloud SDK is properly installed and authenticated.

LANGUAGE: bash
CODE:
gcloud info

----------------------------------------

TITLE: Loading Spinnaker 1.21.1 Changelog via GitHub Gist
DESCRIPTION: Embeds the changelog content for Spinnaker version 1.21.1 using a GitHub gist script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.1.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.20.6 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.6 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.6.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.22.2 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.22.2 using a script tag. It references an external JavaScript file hosted on GitHub Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.2.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.22.3 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.22.3 using a script tag. It references an external JavaScript file hosted on GitHub Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.3.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script in HTML
DESCRIPTION: Script tag to embed a GitHub Gist containing Spinnaker release notes and changelog information for version 1.14.1

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/4b4bb42d4e3b6073fbd5f89fa7c3e060.js"/>

----------------------------------------

TITLE: Retrieving Kubernetes Node Information
DESCRIPTION: Commands to list Kubernetes nodes and get detailed information about a specific node for configuring external access.

LANGUAGE: bash
CODE:
kubectl get nodes

kubectl describe node $NODE_NAME

----------------------------------------

TITLE: Reverting to Legacy Artifacts UI in Spinnaker 1.20 (JavaScript)
DESCRIPTION: Configuration to revert to the legacy artifacts UI in Spinnaker 1.20. This setting should be added to the settings-local.js file.

LANGUAGE: javascript
CODE:
window.spinnakerSettings.feature.legacyArtifactsEnabled = true;

----------------------------------------

TITLE: Embedding GitHub Gist Changelog Scripts
DESCRIPTION: HTML script tags embedding GitHub gist content for each version's changelog markdown file

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.22.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.22.0 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.12 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.12 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.12.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Script - HTML
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog content for Spinnaker version 1.13.11.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5a0199c148826b688ffad5949e050654.js"/>

----------------------------------------

TITLE: Applying Kubernetes Service Account and Setting Permissions
DESCRIPTION: Applies the service account and sets up necessary permissions in the Kubernetes cluster.

LANGUAGE: bash
CODE:
kubectl apply -f ./spinnaker-service-account.yaml

kubectl create clusterrolebinding \
  --user system:serviceaccount:default:spinnaker-service-account \
  spinnaker \
  --clusterrole edit

----------------------------------------

TITLE: Spinnaker Project CLI Command Overview
DESCRIPTION: Shows the main command structure and available options for the 'spin project' command, including global flags and subcommands for project management.

LANGUAGE: bash
CODE:
$ spin project
Usage:
   project [command]

Aliases:
  project, prj

Available Commands:
  delete        Delete the provided project
  get           Get the config for the specified project
  get-pipelines Get the pipelines for the specified project
  list          List the all projects
  save          Save the provided project

Flags:
  -h, --help   help for project

Global Flags:
      --config string            path to config file (default $HOME/.spin/config)
      --default-headers string   configure default headers for Gate client as comma separated list (e.g. key1=value1,key2=value2)
      --gate-endpoint string     Gate (API server) endpoint (default http://localhost:8084)
  -k, --insecure                 ignore certificate errors
      --no-color                 disable color (default true)
  -o, --output string           configure output formatting
  -q, --quiet                    squelch non-essential output

Use " project [command] --help" for more information about a command.

----------------------------------------

TITLE: Docker Image Artifact Format Example (JavaScript)
DESCRIPTION: Example of a Spinnaker artifact format for a Docker image. Includes type, reference, name, and version fields.

LANGUAGE: javascript
CODE:
{
  "type": "docker/image",
  "reference": "gcr.io/project/image@sha256:29fee8e284",
  "name": "gcr.io/project/image",
  "version": "sha256:29fee8e284"
}

----------------------------------------

TITLE: Loading Spinnaker 1.20.0 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.0 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.11 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.11 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.11.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.4 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.4 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.13.10.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/3056119e8dd52f5d24041fdf0a42fe3e.js"/>

----------------------------------------

TITLE: Resource Export API in Spinnaker
DESCRIPTION: Endpoint to export an existing cloud resource to YAML configuration format. Requires cloud provider, account, resource type, name and service account parameters.

LANGUAGE: bash
CODE:
GET /managed/resources/export/{cloudProvider}/{account}/{type}/{name}?serviceAccount=yourServiceAccount@company.com

----------------------------------------

TITLE: Verifying Azure CLI Installation
DESCRIPTION: Command to check the installed version of Azure CLI

LANGUAGE: bash
CODE:
az --version

----------------------------------------

TITLE: Loading Spinnaker 1.20.2 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.2 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.9 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.9 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.9.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.19.9 Changelog from GitHub Gist
DESCRIPTION: This snippet loads the changelog for Spinnaker version 1.19.9 from a GitHub Gist. It uses a script tag to embed the content of the specified file from the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.9.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.19.3 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.19.3 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog content for Spinnaker version 1.13.8. The gist ID references the specific changelog document.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/04e08d4c3fd30e0c65393b6199dfb41b.js"/>

----------------------------------------

TITLE: Defining Kubernetes Service for Load Balancer
DESCRIPTION: YAML manifest for creating a Kubernetes Service of type LoadBalancer with specific annotations for Oracle Cloud Infrastructure.

LANGUAGE: yaml
CODE:
kind: Service
apiVersion: v1
metadata:
  name: codelaboke-test-lb
  annotations:
    service.beta.kubernetes.io/oci-load-balancer-shape: 400Mbps
spec:
  type: LoadBalancer
  selector:
    load-balancer-codelaboke-test-lb: 'true'
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080

----------------------------------------

TITLE: Configuring GCR Message Format
DESCRIPTION: Halyard command to configure Google Container Registry message format for a Pub/Sub subscription.

LANGUAGE: bash
CODE:
hal config pubsub google subscription edit my-gcr-subscription \
  --message-format GCR

----------------------------------------

TITLE: Azure Login and Subscription Setup
DESCRIPTION: Commands to log into Azure CLI and set the active subscription

LANGUAGE: bash
CODE:
az login
az account list
az account set --subscription <Insert Subscription ID>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.20.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.0 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Release Notes in HTML
DESCRIPTION: This code embeds GitHub Gist snippets containing release notes for Spinnaker versions 1.18.0 through 1.18.5. Each script tag loads a specific file from the same Gist, corresponding to a particular patch release.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Script - HTML
DESCRIPTION: Embedded script tag that loads changelog content from a GitHub Gist containing Spinnaker v1.13.3 release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/aba784ce73cfe97ec502e12ee0f532f3.js"/>

----------------------------------------

TITLE: Querying Igor for Artifact Metadata in Keel
DESCRIPTION: Kotlin code showing the structure of the GET request to Igor's /ci/builds endpoint for fetching artifact metadata, including parameters like commitId and buildNumber.

LANGUAGE: kotlin
CODE:
@GET("/ci/builds")
  @Headers("Accept: application/json")
  suspend fun getArtifactMetadata(
    @Query("commitId") commitId: String,
    @Query("buildNumber") buildNumber: String,
    @Query("projectKey") projectKey: String? = null,
    @Query("repoSlug") repoSlug: String? = null,
    @Query("completionStatus") completionStatus: String? = null
  ): List<Build>?

----------------------------------------

TITLE: Creating Azure Resource Group
DESCRIPTION: Commands to list available locations and create a resource group for storage

LANGUAGE: bash
CODE:
az account list-locations --query [].name
RESOURCE_GROUP="SpinnakerStorage"
az group create --name $RESOURCE_GROUP --location <Insert Location>

----------------------------------------

TITLE: Including GitHub Gist Script for Spinnaker Changelog HTML
DESCRIPTION: Embeds a GitHub gist containing the changelog markdown file for Spinnaker version 1.20.0 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing changelog information for Spinnaker version 1.19.3 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.18.1 Changelog
DESCRIPTION: HTML script tag that embeds the GitHub gist containing the changelog for Spinnaker version 1.18.1.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker Changelog in HTML
DESCRIPTION: Embeds an external GitHub gist containing the changelog content for Spinnaker version 1.13.1 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/fa0ac36aaf1a7daaa4320241beaf435d.js"/>

----------------------------------------

TITLE: Accessing Spinnaker Instance via SSH
DESCRIPTION: Command to SSH into the Spinnaker compute instance on Oracle Cloud Infrastructure.

LANGUAGE: bash
CODE:
ssh ubuntu@IP

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.7.0 Changelog
DESCRIPTION: HTML script tag that embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.7.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/78f2f3d55bc849c3a71939287e6b2cb4.js"/>

----------------------------------------

TITLE: Loading Spinnaker 1.19.0 Changelog from GitHub Gist
DESCRIPTION: Embeds a JavaScript file from GitHub Gist to display the changelog for Spinnaker version 1.19.0.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog Scripts for Spinnaker v1.18
DESCRIPTION: HTML script tags that embed GitHub Gist content containing changelog information for different Spinnaker 1.18.x releases. Each script references a specific version's changelog from the same gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.19.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.0 using a script tag. The Gist is hosted on the spinnaker-release account and specifically references the 1.19.0.md file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.18.0 Changelog
DESCRIPTION: HTML script tag that embeds the GitHub gist containing the changelog for Spinnaker version 1.18.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Loading External Changelog Script - HTML
DESCRIPTION: Script tag to load Spinnaker release changelog content from a GitHub gist. The gist contains the detailed changelog for version 1.12.11.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/add79934575d84ed525d231f71d84dd3.js"/>

----------------------------------------

TITLE: Creating Plugin Distribution with Gradle
DESCRIPTION: Uses Gradle to create a distribution package for the Spinnaker plugin.

LANGUAGE: shell
CODE:
./gradlew releaseBundle

----------------------------------------

TITLE: Configuring Clouddriver for Entity Tags
DESCRIPTION: YAML configuration snippet for enabling entity tags in Spinnaker's Clouddriver service, specifying Elasticsearch connection details.

LANGUAGE: yaml
CODE:
elasticSearch:
  activeIndex: "tags_v2"
  connection: http://my-elastic-search-cluster:port

----------------------------------------

TITLE: Loading Spinnaker 1.19.2 Changelog from GitHub Gist
DESCRIPTION: Embeds a JavaScript file from GitHub Gist to display the changelog for Spinnaker version 1.19.2.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog Scripts in HTML
DESCRIPTION: A series of script tags that embed GitHub gist content containing changelog information for different Spinnaker 1.18.x versions. Each script loads a separate markdown file containing version-specific changes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.9.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.17 Changelog Entries from GitHub Gists
DESCRIPTION: These HTML script tags load changelog entries for Spinnaker version 1.17 from GitHub gists. Each script tag corresponds to a specific minor release version, from 1.17.7 down to 1.17.0.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.12.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/349d826502e0bc0a3e4a7ec247b9e8b4.js"/>

----------------------------------------

TITLE: SSH Tunnel Configuration for DevOps VM Access
DESCRIPTION: Command to establish SSH tunnel for accessing Jenkins (8080), Spinnaker (9000), and related services (8084, 8087) on the deployed DevOps VM.

LANGUAGE: bash
CODE:
ssh -L 8080:localhost:8080 -L 9000:localhost:9000 -L 8084:localhost:8084 -L 8087:localhost:8087 username@fqdn_of_your_devops_vm

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: Embeds an external GitHub Gist containing the changelog content for Spinnaker version 1.11.10 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Configuring Custom Slack Workspace URL in Deck
DESCRIPTION: JavaScript configuration for setting custom Slack workspace base URL in Deck's settings when using a non-default Slack domain.

LANGUAGE: javascript
CODE:
  slack: {
    baseUrl: 'https://my-cool-workspace.slack.com',
  }

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.1 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.1 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.18.3 Release Notes from GitHub Gist
DESCRIPTION: Embeds a script to load Markdown content for Spinnaker version 1.18.3 release notes from a GitHub Gist. The script references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.1 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.11.11. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/12abde4a1f722164b50a2c77fb898cc0.js"/>

----------------------------------------

TITLE: Enabling Migration Service
DESCRIPTION: YAML configuration to enable the storage service migrator.

LANGUAGE: yaml
CODE:
spinnaker:
  migration:
    enabled: true

----------------------------------------

TITLE: Creating Azure Service Principal
DESCRIPTION: Command to create a service principal for Spinnaker authentication

LANGUAGE: bash
CODE:
az ad sp create-for-rbac --name "Spinnaker"
APP_ID=<Insert App Id>
TENANT_ID=<Insert Tenant Id>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.2 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.2 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script - HTML
DESCRIPTION: HTML script tag that embeds a GitHub gist containing Spinnaker v1.2.2 changelog content.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/84b75e3701652dfedb86e20b806cbc39.js"></script>

----------------------------------------

TITLE: Including External Changelog Gist Script - HTML
DESCRIPTION: HTML script tag that embeds an external GitHub gist containing the changelog content for Spinnaker version 1.16.5.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/12f98139a3cb3a126bfe3cfce44ebc69.js"/>

----------------------------------------

TITLE: Including External Changelog Gist Script - HTML
DESCRIPTION: HTML script tag that embeds an external GitHub gist containing the changelog details for Spinnaker version 1.16.6.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/b200688131077600c458b07e0ae88052.js"/>

----------------------------------------

TITLE: Including GitHub Gist Script for Spinnaker v1.11 Changelog
DESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog details for Spinnaker version 1.11.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/195474eb4aefa80673f25889a35a8954.js"/>

----------------------------------------

TITLE: Configuring GitHub Integration
DESCRIPTION: Commands to setup GitHub artifact integration in Spinnaker, including token configuration and account setup

LANGUAGE: bash
CODE:
$ TOKEN_FILE=<Insert Path to Token File>

$ hal config artifact github enable

$ GITHUB_ACCOUNT=<Insert GitHub Account Name>
$ hal config artifact github account add $GITHUB_ACCOUNT \
    --token-file $TOKEN_FILE

$ hal deploy apply

----------------------------------------

TITLE: Property File Example
DESCRIPTION: Example of a property file containing version information that can be used in Spinnaker pipelines.

LANGUAGE: properties
CODE:
version='0.1.0'

----------------------------------------

TITLE: Enabling App Engine Admin API
DESCRIPTION: Command to enable the App Engine Admin API for the project

LANGUAGE: bash
CODE:
gcloud services enable appengine.googleapis.com

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.3 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.3 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.16.3 Changelog
DESCRIPTION: This HTML snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.16.3. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/ed2aecde0852cd934867d1225fe3b9cd.js"/>

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker v1.16 Changelog
DESCRIPTION: Embedded script tag that loads changelog content from a GitHub gist containing Spinnaker version 1.16.0 release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/30e40f6278a7c1a1450c179a9a4bb92e.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This HTML snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.10.11. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js"/>

----------------------------------------

TITLE: Defining Multiple Plugin Repositories in JSON
DESCRIPTION: This JSON snippet shows the structure of a repositories.json file, which can be used to define multiple plugin repositories in a single configuration file for Spinnaker.

LANGUAGE: json
CODE:
[
  {
    "id": "spinnaker-plugin-examples",
    "url": "https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json"
  },
  {
    "id": "my-company-internal-plugins",
    "url": "https://<my-company-internal-github>/<repo-name>/plugins.json"
  },
  {
    "id": "my-plugins",
    "url": "https://github.com/aimeeu/pluginRepository/blob/master/plugins.json"
  }
]

----------------------------------------

TITLE: Creating Service Account for App Engine
DESCRIPTION: Series of commands to create and configure a service account with necessary App Engine permissions

LANGUAGE: bash
CODE:
SERVICE_ACCOUNT_NAME=spinnaker-appengine-account
SERVICE_ACCOUNT_DEST=~/.gcp/appengine-account.json

gcloud iam service-accounts create \
    $SERVICE_ACCOUNT_NAME \
    --display-name $SERVICE_ACCOUNT_NAME

SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SERVICE_ACCOUNT_NAME" \
    --format='value(email)')

PROJECT=$(gcloud config get-value project)

gcloud projects add-iam-policy-binding $PROJECT \
    --role roles/storage.admin \
    --member serviceAccount:$SA_EMAIL

gcloud projects add-iam-policy-binding $PROJECT \
    --role roles/appengine.appAdmin \
    --member serviceAccount:$SA_EMAIL

mkdir -p $(dirname $SERVICE_ACCOUNT_DEST)

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \
    --iam-account $SA_EMAIL

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.7 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.7 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog Script
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.14.7

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cf6b8a7290ba0d9277360e7a794e0b6b.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.15.1.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/df2ab364b23fdb90026315e48691d00e.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.10.3. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/1c8253e78f9f346e1550f9b85d92f810.js"/>

----------------------------------------

TITLE: Packaging and Uploading App to GCS in Bash
DESCRIPTION: Clones a sample Google App Engine application, packages it as a tarball, and uploads it to the GCS bucket.

LANGUAGE: bash
CODE:
git clone https://github.com/GoogleCloudPlatform/python-docs-samples.git
cd python-docs-samples/appengine/standard/hello_world; tar -cvf app.tar *
gsutil cp app.tar $BUCKET_NAME

----------------------------------------

TITLE: Loading Spinnaker 1.20.5 Changelog from GitHub Gist
DESCRIPTION: Embeds a script to load the changelog for Spinnaker version 1.20.5 from a GitHub gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.5.md"></script>

----------------------------------------

TITLE: Enabling App Engine Provider in Spinnaker
DESCRIPTION: Command to enable the App Engine provider in Spinnaker via Halyard

LANGUAGE: bash
CODE:
hal config provider appengine enable

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.10 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.10 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.10.md"></script>

----------------------------------------

TITLE: Loading External Changelog Gist - HTML Script Tag
DESCRIPTION: HTML script tag that loads an external GitHub gist containing the changelog content for Spinnaker version 1.13.6.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/8748354e0de3ead0e5871eb1d0b5bbc6.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.14.9 using a script tag. The Gist ID is 0413a52111be11041263b6801b53a917.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/0413a52111be11041263b6801b53a917.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Release Notes
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog content for Spinnaker version 1.10.2.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cf93cc68547ae25e3d6061c09a37f8c0.js"/>

----------------------------------------

TITLE: Configuring Kubernetes Pod Labels for Load Balancer Traffic Management
DESCRIPTION: These YAML snippets demonstrate how Spinnaker uses labels on Kubernetes Pods to manage traffic routing for Load Balancers. It shows examples for enabled and disabled pods, as well as pods receiving traffic from multiple sources.

LANGUAGE: yaml
CODE:
metadata:
  labels:
    load-balancer-${LOAD-BALANCER}: true
    ... # other labels

LANGUAGE: yaml
CODE:
metadata:
  labels:
    load-balancer-${LOAD-BALANCER}: false
    ... # other labels

LANGUAGE: yaml
CODE:
metadata:
  labels:
    load-balancer-${LOAD-BALANCER-1}: true
    load-balancer-${LOAD-BALANCER-2}: true
    load-balancer-${LOAD-BALANCER-3}: true
    ... # other labels

----------------------------------------

TITLE: Adding App Engine Account to Spinnaker
DESCRIPTION: Command to add an App Engine account configuration to Spinnaker using Halyard

LANGUAGE: bash
CODE:
hal config provider appengine account add my-appengine-account \
  --project $PROJECT \
  --json-path $SERVICE_ACCOUNT_DEST

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.18.11 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.11 using a script tag. It references a specific file within the Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.11.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.12.12 using the gist.github.com JavaScript embed.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/4a562df907add15f5188eb905fd1ed17.js"/>

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker Changelog in HTML
DESCRIPTION: Embeds a GitHub Gist containing the changelog content for Spinnaker version 1.14.8 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/f223e8c3790e2ded5cfde046965e658d.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.8.1 Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.8.1. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/7c2520843f0ceb3640c77ba1300d8083.js"/>

----------------------------------------

TITLE: Adding IAM Role to Service Account in Bash
DESCRIPTION: Adds the Pub/Sub subscriber role to the service account used for App Engine deployment.

LANGUAGE: bash
CODE:
gcloud projects add-iam-policy-binding $PROJECT \
    --role roles/pubsub.subscriber \
    --member serviceAccount:$SA_EMAIL # service account email from GAE setup.

----------------------------------------

TITLE: Setting Variables for GitLab Artifact Account Configuration in Bash
DESCRIPTION: This snippet sets up variables required for configuring the GitLab artifact account in Spinnaker. It includes the path to the token file and the name for the artifact account.

LANGUAGE: bash
CODE:
# See the prerequisites section above
TOKEN_FILE=

ARTIFACT_ACCOUNT_NAME=my-gitlab-artifact-account

----------------------------------------

TITLE: Configuring Custom Artifact Templates with Halyard
DESCRIPTION: This command demonstrates how to add a custom artifact template using the Halyard CLI tool.

LANGUAGE: sh
CODE:
hal config artifact templates add <name of template> --template-path <path to the template>

----------------------------------------

TITLE: Loading Changelog Content via GitHub Gist Embed
DESCRIPTION: HTML script tags that embed changelog content from GitHub Gists for Spinnaker versions 1.18.0 through 1.18.2.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.12.6 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.12.6 using a script tag. The Gist ID is 8f0d6e084c19bde32bb84ec810863a43.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/8f0d6e084c19bde32bb84ec810863a43.js"/>

----------------------------------------

TITLE: Manually Configuring Custom Artifact Templates in YAML
DESCRIPTION: This YAML configuration shows how to manually add custom artifact templates to the igor-local.yml file.

LANGUAGE: yaml
CODE:
artifacts:
  templates:
  - name: <name of template>
    templatePath: <path to the template>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.12.14.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/22b764cd8b65fa7953b989b6b8373ce5.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.7.8 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.7.8. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75f98544672a4fc490d451c14688318e.js"/>

----------------------------------------

TITLE: Installing Spin CLI on Windows
DESCRIPTION: PowerShell commands to download, unblock, and add Spin CLI to the PATH on a Windows system.

LANGUAGE: powershell
CODE:
New-Item -ItemType Directory $env:LOCALAPPDATA\spin -ErrorAction SilentlyContinue

Invoke-WebRequest -OutFile $env:LOCALAPPDATA\spin\spin.exe -UseBasicParsing "https://storage.googleapis.com/spinnaker-artifacts/spin/$([System.Text.Encoding]::ASCII.GetString((Invoke-WebRequest https://storage.googleapis.com/spinnaker-artifacts/spin/latest).Content))/windows/amd64/spin.exe"

Unblock-File $env:LOCALAPPDATA\spin\spin.exe

$path = [Environment]::GetEnvironmentVariable("PATH", [EnvironmentVariableTarget]::User) -split ";"
if ($path -inotcontains "$env:LOCALAPPDATA\spin") {
  $path += "$env:LOCALAPPDATA\spin"
  [Environment]::SetEnvironmentVariable("PATH", $path -join ";", [EnvironmentVariableTarget]::User)

  $env:PATH = (([Environment]::GetEnvironmentVariable("PATH", [EnvironmentVariableTarget]::Machine) -split ";") + $path) -join ";"
}

----------------------------------------

TITLE: Manually Configuring Custom Artifact Templates in YAML
DESCRIPTION: This YAML configuration shows how to manually add custom artifact templates to the igor-local.yml file.

LANGUAGE: yaml
CODE:
artifacts:
  templates:
  - name: <name of template>
    templatePath: <path to the template>

----------------------------------------

TITLE: Loading Spinnaker 1.17 Changelog Gists in HTML
DESCRIPTION: This snippet demonstrates how to embed GitHub Gist files containing changelog information for Spinnaker version 1.17 using HTML script tags. Each script tag loads a separate Gist file for a specific minor version of Spinnaker 1.17.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.8.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.7.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.6.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.11.9 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.11.9. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.12.9. The Gist is loaded using a script tag with the source URL pointing to the specific Gist file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/7fa9145349d6beb2f22163977a94629e.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Changelog
DESCRIPTION: Embeds an external GitHub Gist containing the changelog content for Spinnaker version 1.5.3 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cdcbfd25eaa81464a4932cbb1f7c70e8.js"></script>

----------------------------------------

TITLE: Pushing a New Version Tag in Git
DESCRIPTION: This Bash script demonstrates how to create and push a new version tag in Git, which can trigger a Spinnaker pipeline.

LANGUAGE: bash
CODE:
NEW_VERSION=v1.0.0
 git checkout -b $NEW_VERSION
 git push origin $NEW_VERSION

----------------------------------------

TITLE: Configuring Kubernetes Account in Halyard YAML
DESCRIPTION: YAML configuration for setting up a Kubernetes account in Halyard, including namespace and kubeconfig file location.

LANGUAGE: yaml
CODE:
...
kubernetes:
  enabled: true
  accounts:
    name: kubernetes
    requiredMembership: []
    permissions: []
    dockerRegistries: []
    configureImagePullSecrets: true
    cacheThreads: 1
    namespaces:
      - <namespace>
    omitNamespaces: []
    kinds: []
    omitKinds: []
    customResources: []
    cachingPolicies: []
    kubeconfigFile: </path/to/kubeconfig/>
    oAuthScopes: []
    onlySpinnakerManaged: false
  primaryAccount: kubernetes
  ...

----------------------------------------

TITLE: Defining GitLab File Artifact in Pipeline JSON
DESCRIPTION: JSON configuration example for defining a GitLab file artifact in a Spinnaker pipeline. Demonstrates required fields including type, reference URL, file name, and version specification.

LANGUAGE: json
CODE:
{
  "type": "gitlab/file",
  "reference": "https://gitlab.example.com/api/v4/projects/13083/repository/files/manifests%2Fconfig%2Eyaml/raw",
  "name": "manifests/config.yaml",
  "version": "master"
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.17.0 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.0. The Gist is referenced by its unique identifier and specifies the exact file to display.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.9.5 into an HTML page using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/d24a2c737db49dda644169cf5fe6d56e.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.12.5 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.12.5. The Gist is loaded using a script tag with the source URL pointing to the specific Gist file.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/18a18a3e45af2c0d24d114a76b352004.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog details for Spinnaker version 1.1.1.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d223113b2967deb1272b5f8bffa7645a.js"></script>

----------------------------------------

TITLE: Applying Halyard Configuration Changes in Spinnaker
DESCRIPTION: This command applies the Halyard configuration changes to update Spinnaker with the new Wercker integration settings.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Setting Replica Count for Spinnaker Components
DESCRIPTION: This YAML snippet demonstrates how to specify the number of desired replicas for a Spinnaker component in the customSizing section of the Halyard configuration.

LANGUAGE: yaml
CODE:
customSizing:
  spin-[component name]:
    replicas: 2

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.8.2 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.8.2 using a script tag. The Gist ID is 30caa31c9e5e02eb636c061a79a291f1.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/30caa31c9e5e02eb636c061a79a291f1.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.9.3 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.9.3. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/d8e153dc21ba12261980b91e2350303a.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.10.10 Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.10.10. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.0.1. It uses a script tag to load and render the Gist content directly on the page.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/b3515a47abbcdc86f0cfdc2bd6cb8a17.js"></script>

----------------------------------------

TITLE: Specifying Redis Package for Baking in Spinnaker Pipeline
DESCRIPTION: This snippet shows how to specify the Redis server package when configuring the Bake stage in a Spinnaker pipeline. It's a crucial step in preparing the VM image for deployment.

LANGUAGE: plaintext
CODE:
redis-server

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.1.0 using the gist.github.com embed script.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/1b02cdba17f78c3dc9f4210d09610ac8.js"></script>

----------------------------------------

TITLE: Structuring Pub/Sub Trigger Payload in JSON
DESCRIPTION: Example of how to structure a Pub/Sub message payload with an 'id' field for later searching. The 'id' field contains a randomly generated GUID string.

LANGUAGE: json
CODE:
{
  "id": "9c3036f6-3791-47eb-bb69-30983acb00be"
}

----------------------------------------

TITLE: Embedding GitHub Gist Changelog in HTML
DESCRIPTION: Script tag that embeds a GitHub Gist containing the changelog content for Spinnaker version 1.2.1 using the Gist JavaScript include functionality.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/512f9f19181c4c19b5d614c44aa9bcaf.js"></script>

----------------------------------------

TITLE: Loading GitHub Gist for Spinnaker v1.9.2 Changelog in HTML
DESCRIPTION: This HTML snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.9.2. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/9323c90ab2088d89e68ce2a7ef7e5809.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.10.6 Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.10.6. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js"/>

----------------------------------------

TITLE: Implementing Run Class in Java
DESCRIPTION: A model class for deserializing JSON responses from the ChAP service. Includes support for handling arbitrary properties using Jackson annotations.

LANGUAGE: java
CODE:
package com.netflix.spinnaker.orca.chap;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

@JsonIgnoreProperties(ignoreUnknown = true)
public class Run {

  public UUID id;
  // Other properties not shown
  // ...

  // Support arbitrary properties without needing to define them explicitly
  public Map<String, Object> properties = new HashMap<>();

  @JsonAnySetter
  public void set(String fieldName, Object value) {
    this.properties.put(fieldName, value);
  }

  @JsonAnyGetter
  public Object get(String fieldName) {
    return this.properties.get(fieldName);
  }
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.8.0 Changelog
DESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.8.0. The Gist is loaded via a script tag, which will render the content on the page.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/9b37ca56f2bfa676a60ecbd9a9ebffbd.js"/>

----------------------------------------

TITLE: Loading External Changelog Script
DESCRIPTION: Embedded GitHub gist script tag loading the changelog content for Spinnaker version 1.7.6.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5d3af465f07eaca64f4383167877897d.js"/>

----------------------------------------

TITLE: Configuring DualExecutionRepository in Orca YAML
DESCRIPTION: YAML configuration for enabling dual write mode to both Redis and SQL repositories during migration. Both repositories must be enabled for Orca to start properly.

LANGUAGE: yaml
CODE:
executionRepository:
  dual:
    enabled: true
    primaryName: sqlExecutionRepository
    previousName: redisExecutionRepository
  sql:
    enabled: true
  redis:
    enabled: true

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Release Notes
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog details for Spinnaker version 1.10.9.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js"/>

----------------------------------------

TITLE: Installing awscli for AWS management
DESCRIPTION: This snippet installs the AWS Command Line Interface (awscli) using apt and pip. It then verifies the installation by checking the version.

LANGUAGE: bash
CODE:
# Install the awscli
sudo apt install python-pip awscli

# Verify the installation
aws --version

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.4.2. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/c791562094c040e936776b501b42c7a6.js"></script>

----------------------------------------

TITLE: Loading Spinnaker Changelog Gists with HTML Script Tags
DESCRIPTION: HTML script tags that embed GitHub gist content containing changelog information for different Spinnaker 1.23.x versions. Each script loads a separate markdown file containing version-specific release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.4.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.3.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md"></script>
<script src="https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md"></script>

----------------------------------------

TITLE: Basic Environment Variable Setting in User Data Template
DESCRIPTION: Example showing how to set a Consul server address in the user data template file

LANGUAGE: bash
CODE:
CONSUL_SERVER_ADDRESS="consul.example.com"

----------------------------------------

TITLE: GCloud SSH Connection to Jenkins VM
DESCRIPTION: Command to establish SSH connection to the Jenkins VM with port forwarding for test-jenkins instance. This requires membership in the jenkins-debuggers@spinnaker.io group.

LANGUAGE: bash
CODE:
gcloud compute ssh --project spinnaker-community jenkins-transfer --zone us-central1-f --ssh-flag "-L 4040:test-jenkins:8080"

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog details for Spinnaker version 1.4.0

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/52f2f6660077125e05808583c5bf63ee.js"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.22.0 in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.22.0 using a script tag. It references an external JavaScript file hosted on GitHub Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md"></script>

----------------------------------------

TITLE: Configuring Service Extension build.gradle for Spinnaker Plugin
DESCRIPTION: Gradle configuration for service extensions including dependencies, compilation settings, and plugin metadata.

LANGUAGE: gradle
CODE:
apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  annotationProcessor("org.pf4j:pf4j:$pf4jVersion")

  compileOnly("com.netflix.spinnaker.kork:kork-plugins-api:$korkVersion")
  compileOnly("com.netflix.spinnaker.orca:orca-api:$orcaVersion")
}

spinnakerPlugin {
  serviceName = "orca"
  pluginClass = "io.armory.plugin.stage.wait.random.RandomWaitPlugin"
}

----------------------------------------

TITLE: Adding Pipeline Stages with Injection
DESCRIPTION: Example showing how to add new stages to a pipeline by injecting them after existing stages, including stage configuration and execution order.

LANGUAGE: json
CODE:
"stages": [
    {
        "refId": "wait2",
        "type": "wait",
        "config": {
            "waitTime": 67
        }
    },
    {
        "refId": "wait0",
        "inject": {
            "after": ["wait2"]
        },
        "type": "wait",
        "config": {
            "waitTime": 2
        }
    }
]

----------------------------------------

TITLE: Defining GitHub File Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This JSON snippet demonstrates how to define a GitHub file artifact in a Spinnaker pipeline configuration. It includes the type, reference URL, file name, and version (commit hash) of the artifact.

LANGUAGE: json
CODE:
{
  "type": "github/file",
  "reference": "https://api.github.com/repos/myorg/myrepo/contents/path/to/file.yml",
  "name": "path/to/file.yml",
  "version": "aec855f4e0e11"
}

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in JavaScript
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.21.4. It uses a script tag to load and display the Gist content on the page.

LANGUAGE: JavaScript
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.4.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Scripts for Version Documentation
DESCRIPTION: HTML script tags embedding GitHub gists containing changelog content for Spinnaker versions 1.26.1 and 1.26.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md"></script>

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md"></script>

----------------------------------------

TITLE: Port Forwarding Spinnaker Deck Service
DESCRIPTION: Uses kubectl to forward the Spinnaker Deck service to the local machine for development purposes.

LANGUAGE: shell
CODE:
kubectl port-forward service/spin-deck 90001:9000

----------------------------------------

TITLE: Embedding GitHub Gist Script in HTML
DESCRIPTION: Embeds a GitHub gist containing the changelog details for Spinnaker version 1.10.12 using a script tag.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js"/>

----------------------------------------

TITLE: Google 404 Widget Integration
DESCRIPTION: JavaScript code that integrates Google's 404 widget to help users find content. Sets the language to English and configures the site URL using Jekyll variables.

LANGUAGE: javascript
CODE:
var GOOG_FIXURL_LANG = 'en';
var GOOG_FIXURL_SITE = '{{ site.url }}'

LANGUAGE: html
CODE:
<script type="text/javascript"
  src="//linkhelp.clients.google.com/tbproxy/lh/wm/fixurl.js">
</script>

----------------------------------------

TITLE: Setting S3 as Spinnaker's Storage Type with Halyard in Bash
DESCRIPTION: This command uses Halyard to set S3 as the storage type for Spinnaker. It should be run after configuring the S3 storage settings.

LANGUAGE: bash
CODE:
hal config storage edit --type s3

----------------------------------------

TITLE: Setting S3 as Spinnaker's Storage Type with Halyard in Bash
DESCRIPTION: This command uses Halyard to set S3 as the storage type for Spinnaker. It should be run after configuring the S3 storage settings.

LANGUAGE: bash
CODE:
hal config storage edit --type s3

----------------------------------------

TITLE: Defining Jekyll Front Matter for Spinnaker Service Overviews Page
DESCRIPTION: This YAML snippet defines the Jekyll front matter for a page titled 'Service Overviews' in the Spinnaker documentation. It specifies a single-column layout and sets the sidebar navigation to 'guides'.

LANGUAGE: yaml
CODE:
---
layout: single
title:  "Service Overviews"
sidebar:
  nav: guides
---

----------------------------------------

TITLE: Calculating Future Date with LocalDate
DESCRIPTION: Example showing use of LocalDate to calculate a date 5 days in the future using static method call.

LANGUAGE: java
CODE:
${T(java.time.LocalDate).now().plusDays(5).toString()}

----------------------------------------

TITLE: Formatting Current Date with SimpleDateFormat
DESCRIPTION: Example demonstrating instantiation of SimpleDateFormat class to format current date in MM-dd-yyyy pattern.

LANGUAGE: java
CODE:
${new java.text.SimpleDateFormat("MM-dd-yyyy").format(new java.util.Date())}

----------------------------------------

TITLE: Storing GitHub Credentials in S3 YAML Configuration
DESCRIPTION: YAML structure for storing GitHub credentials in an S3 bucket. The file should be stored as 'spinnaker-secrets.yml' and contains password and token fields.

LANGUAGE: yaml
CODE:
github:
  password: <PASSWORD>
  token: <TOKEN>

----------------------------------------

TITLE: Defining Kubernetes Object Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This JSON snippet demonstrates how to define a Kubernetes object artifact within a Spinnaker pipeline. It includes fields for type, reference, name, namespace, and artifactAccount, representing a Kubernetes deployment named 'frontend' in the 'staging' namespace.

LANGUAGE: json
CODE:
{
  "type": "kubernetes/deployment",
  "reference": "frontend",
  "name": "frontend",
  "namespace": "staging",
  "artifactAccount": "gke-us-central1-xnat"
}

----------------------------------------

TITLE: Defining Bitbucket File Artifact in Spinnaker Pipeline JSON
DESCRIPTION: This JSON snippet demonstrates how to define a Bitbucket file artifact within a Spinnaker pipeline configuration. It specifies the artifact type, reference URL, and file name within the repository.

LANGUAGE: json
CODE:
{
  "type": "bitbucket/file",
  "reference": "https://api.bitbucket.org/2.0/repositories/org/repo/src/master/manifests/config.yaml",
  "name": "manifests/config.yaml"
}

----------------------------------------

TITLE: Exporting Properties for Custom JAR Template
DESCRIPTION: This snippet shows how to export specific properties from a CI job to use with a custom JAR artifact template.

LANGUAGE: sh
CODE:
group=test.group
artifact=test-artifact
version=123
messageFormat=custom-jar
customFormat=true

----------------------------------------

TITLE: Configuring Bitbucket File Artifact in JSON
DESCRIPTION: Example configuration for a Bitbucket file artifact that references a config file in a repository. Shows the required fields including type, reference URL, and file name path.

LANGUAGE: json
CODE:
{
  "type": "bitbucket/file",
  "reference": "https://api.bitbucket.org/2.0/repositories/org/repo/src/master/manifests/config.yaml",
  "name": "manifests/config.yaml"
}

----------------------------------------

TITLE: Spinnaker Calendar iCal URL
DESCRIPTION: iCal URL for subscribing to Spinnaker's release calendar containing important release dates and milestones.

LANGUAGE: text
CODE:
https://calendar.google.com/calendar/ical/spinnaker.io_p2n8segvlnel4cbo777em35b0c%40group.calendar.google.com/public/basic.ics

----------------------------------------

TITLE: Example Commit Messages for Spinnaker
DESCRIPTION: Sample commit messages demonstrating proper formatting for feature additions and bug fixes in different Spinnaker components.

LANGUAGE: text
CODE:
feat(provider/google): Updated forwarding rule schema.

LANGUAGE: text
CODE:
fix(authN): Fixed session authentication coherence.

LANGUAGE: text
CODE:
feat(provider/google): Added a very important and breaking feature.\n\nBREAKING CHANGE: More detail here if necessary.

----------------------------------------

TITLE: Jekyll Template Include Statement
DESCRIPTION: Liquid template syntax to include a table of contents in the Jekyll page.

LANGUAGE: markdown
CODE:
{% include toc %}

----------------------------------------

TITLE: Applying Halyard Configuration Changes
DESCRIPTION: Command to apply Pub/Sub and artifact configuration changes in Spinnaker using Halyard.

LANGUAGE: bash
CODE:
hal deploy apply

----------------------------------------

TITLE: Installing Ruby and Setting Global Version
DESCRIPTION: Commands to install Ruby 2.4.1 using rbenv and set it as the global version.

LANGUAGE: bash
CODE:
rbenv install 2.4.1
rbenv global 2.4.1

----------------------------------------

TITLE: Installing rbenv and Ruby Build Dependencies
DESCRIPTION: Shell commands for installing rbenv and required dependencies for building Ruby. Sets up the environment variables and installs necessary packages.

LANGUAGE: bash
CODE:
sudo apt update
sudo apt-get install -y git bzip2 build-essential libssl-dev libreadline-dev zlib1g-dev
git clone https://github.com/rbenv/rbenv.git ~/.rbenv
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
source ~/.bashrc

----------------------------------------

TITLE: Styling Newsletter Signup Form with CSS
DESCRIPTION: This CSS snippet styles the newsletter signup form, including input fields and submit button. It defines widths, colors, and hover effects for form elements.

LANGUAGE: CSS
CODE:
.wj-contact-form input {
    vertical-align: middle;
    margin-top: 0.25em;
    margin-bottom: 0.5em;
    padding: 0.75em;
    border:1px solid #444;
    outline-color: #2e83e6;
    border-radius: 3px;
    transition: box-shadow .2s ease;
    width: 55%;
}

.wj-contact-form input[type="submit"] {
    background-color: #139BB4;
    border: 1px solid #139BB4;;
    color: #eee;
    width: 22%;
}

----------------------------------------

TITLE: Markdown Newsletter Index Layout Configuration
DESCRIPTION: YAML front matter configuration for a single-page layout with newsletter navigation sidebar.

LANGUAGE: markdown
CODE:
---
layout: single
title:  "All Editions"
sidebar:
  nav: news
---

----------------------------------------

TITLE: Configuring Jekyll Front Matter for Spinnaker Homepage
DESCRIPTION: YAML configuration block defining content sections, images, and text for the Spinnaker homepage including feature descriptions, cloud provider logos, and case studies.

LANGUAGE: yaml
CODE:
---
layout: home
slack_row:
  title: Join Spinnaker Slack
  excerpt: "[Join us on Spinnaker Slack](https://join.slack.com/t/spinnakerteam/shared_invite/zt-7juwxmx0-nQ4Ud4pJcbuPykX3SXwQrg)"
  image_path: assets/images/slack_logo.png
  alt: "Join Spinnaker Slack"
# ... additional configuration ...
---

----------------------------------------

TITLE: Including Table of Contents in Spinnaker Documentation
DESCRIPTION: This snippet includes a table of contents for the Spinnaker setup how-tos page using a Liquid include tag.

LANGUAGE: liquid
CODE:
{% include toc %}

----------------------------------------

TITLE: Embedding Spinnaker 1.26.2 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag embeds the changelog for Spinnaker version 1.26.2 from a GitHub Gist. It references a specific file within the Gist containing the changelog information.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.2.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Version 1.26.2 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub gist containing the changelog for Spinnaker version 1.26.2 using a script tag. The gist is referenced by its unique identifier and specifies the file to be displayed.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.2.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker Release Notes
DESCRIPTION: Script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.24.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog contents for Spinnaker version 1.21.0. The gist is referenced by ID and specifically loads the 1.21.0.md file.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.0.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.20.2 Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.2 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.6 in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.6 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs
DESCRIPTION: Script tags that embed GitHub gist content containing changelog information for Spinnaker version 1.19 patch releases. Each script loads a separate markdown file containing release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.11.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist script that displays the changelog for a specific Spinnaker version. The script is repeated for each patch release from 1.19.0 to 1.19.7.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.19.5 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.19.5 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md"></script>

----------------------------------------

TITLE: Loading Spinnaker 1.19.5 Changelog from GitHub Gist
DESCRIPTION: This HTML script tag loads the changelog for Spinnaker version 1.19.5 from a GitHub Gist. It references a specific file within the Gist repository.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md"></script>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds GitHub Gist content containing changelog information for Spinnaker version 1.19.1 using a script tag.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md"></script>

----------------------------------------

TITLE: Loading GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: Embedded script tag that loads a GitHub gist containing the changelog content for Spinnaker version 1.13.12.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/9ee98b0cbed65e334cd498bc31676295.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker v1.13.9 Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.13.9.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/52fffe257a3d39bb1d44e775b0ac9efa.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.13.5. It uses a script tag to load and display the Gist content on the page.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/23af06bc73aa942c90f89b8e8c8bed3e.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script - HTML
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.13.4

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/22a5edc5b2dcb0621b1cb06cbe84a548.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog content.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/89e02b2d04aff5b5cab69c3963cbb157.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.12.10.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/09df518265e3c371a12c5eef7e946b56.js"/>

----------------------------------------

TITLE: Loading External GitHub Gist Script - HTML
DESCRIPTION: HTML script tag to load an external GitHub gist containing Spinnaker v1.12.8 changelog details.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/73fa0d0112cb49c8e58bf463a6cb5e3a.js"/>

----------------------------------------

TITLE: Including GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.12.4. The gist is referenced by its unique identifier.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/381d84f5da5242c4d371ad3fbaaafc53.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Release Notes
DESCRIPTION: HTML script tag to embed a GitHub gist containing the detailed changelog for Spinnaker version 1.12.3

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/349d826502e0bc0a3e4a7ec247b9e8b4.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag to embed the GitHub gist containing the changelog details for Spinnaker version 1.11.7. The gist ID referenced is 5cbb402297feb85f82482a73e9428967.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker Changelog
DESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog for Spinnaker version 1.11.1. The gist ID references the specific changelog content.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker 1.10.14 Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.10.14. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.

LANGUAGE: HTML
CODE:
<script src="https://gist.github.com/spinnaker-release/a47efe1884b4611f57f0966173bf4f51.js"/>

----------------------------------------

TITLE: Loading Spinnaker 1.10.8 Changelog from GitHub Gist
DESCRIPTION: This snippet embeds a JavaScript file from a GitHub gist containing the raw changelog for Spinnaker version 1.10.8. The script is loaded asynchronously and will inject the changelog content into the page.

LANGUAGE: html
CODE:
<script src="https://gist.githubusercontent.com/spinnaker-release/4f8cd09490870ae9ebf78be3be1763ee/raw/b311a828caab17fa3a02e6884905deb1ac06dd09/release-1.10.x-raw-changelog.md.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.10.4. The Gist is referenced by its unique identifier in the script's source URL.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/73dba039067da5fbae6ec0b97b97e2f4.js"/>

----------------------------------------

TITLE: Loading Spinnaker 1.6.2 Release Notes Gist
DESCRIPTION: HTML script tag that embeds release notes content from a GitHub Gist containing Spinnaker version 1.6.2 changelog.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/3fc52e64bae26f8ea1c68bcd8383d4b5.js"/>

----------------------------------------

TITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML
DESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.5.4 using a script tag. The Gist is sourced from the spinnaker-release GitHub account.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/6b9fd632caeaefd32246074998af8498.js"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Release Notes
DESCRIPTION: Script tag for embedding a GitHub gist containing Spinnaker v1.5.2 release notes.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/a2c02795c6239cc04118fa62de46d2ef.js"></script>

----------------------------------------

TITLE: Embedding GitHub Gist Script for Spinnaker v1.3.0 Changelog
DESCRIPTION: HTML script tag that embeds a GitHub gist containing the detailed changelog for Spinnaker version 1.3.0.

LANGUAGE: html
CODE:
<script src="https://gist.github.com/spinnaker-release/865084b13e404d756af452361beb3962.js"></script>